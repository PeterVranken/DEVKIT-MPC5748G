/*
** ###################################################################
**     Processor:           MPC5748G
**     Reference manual:    MPC5748G 12/2016
**     Version:             rev. 1.0, 2016-11-24
**     Build:               b170117
**
**     Abstract:
**         Peripheral Access Layer for MPC5748G
**
**     Copyright (c) 1997 - 2016 Freescale Semiconductor, Inc.
**     Copyright (c) 2017 - 2017 NXP
**     All rights reserved.
**
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
**
**     http:                 www.nxp.com
**     mail:                 support@nxp.com
**
**     Revisions:
**     - rev. 1.0 (2016-11-24) - Iulian Talpiga
**         Initial version.
**
** ###################################################################
*/

/*!
 * @file MPC5748G.h
 * @version 1.0
 * @date 2016-11-24
 * @brief Peripheral Access Layer for MPC5748G
 *
 * This file contains register definitions and macros for easy access to their
 * bit fields.
 *
 */

/**
* @page misra_violations MISRA-C:2012 violations
*
* @section [global]
* Violates MISRA 2012 Advisory Rule 2.3, local typedef not referenced
* The SoC header defines typedef for all modules.
*
* @section [global]
* Violates MISRA 2012 Advisory Rule 2.5, local macro not referenced
* The SoC header defines macros for all modules and registers.
*
* @section [global]
* Violates MISRA 2012 Advisory Directive 4.9, Function-like macro
* These are generated macros used for accessing the bit-fields from registers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.1, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.2, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.4, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 5.5, identifier clash
* The supported compilers use more than 31 significant characters for identifiers.
*
* @section [global]
* Violates MISRA 2012 Required Rule 21.1, defined macro '__I' is reserved to the compiler
* This type qualifier is needed to ensure correct I/O access and addressing.
*/

/* ----------------------------------------------------------------------------
   -- MCU activation
   ---------------------------------------------------------------------------- */

/* Prevention from multiple including the same memory map */
#if !defined(MPC5748G_H_)  /* Check if memory map has not been already included */
#define MPC5748G_H_
#define MCU_MPC5748G

/* Check if another memory map has not been also included */
#if (defined(MCU_ACTIVE))
  #error MPC5748G memory map: There is already included another memory map. Only one memory map can be included.
#endif /* (defined(MCU_ACTIVE)) */
#define MCU_ACTIVE

#include <stdint.h>

/** Memory map major version (memory maps with equal major version number are
 * compatible) */
#define MCU_MEM_MAP_VERSION 0x0100u
/** Memory map minor version */
#define MCU_MEM_MAP_VERSION_MINOR 0x0000u

/* ----------------------------------------------------------------------------
   -- Generic macros
   ---------------------------------------------------------------------------- */

/* IO definitions (access restrictions to peripheral registers) */
/**
*   IO Type Qualifiers are used
*   \li to specify the access to peripheral variables.
*   \li for automatic generation of peripheral register debug information.
*/
#ifndef __IO
#ifdef __cplusplus
  #define   __I     volatile             /*!< Defines 'read only' permissions                 */
#else
  #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
#endif
#define     __O     volatile             /*!< Defines 'write only' permissions                */
#define     __IO    volatile             /*!< Defines 'read / write' permissions              */
#endif


/**
* @brief 32 bits memory read macro.
*/
#if !defined(REG_READ32)
  #define REG_READ32(address)               (*(volatile uint32_t*)(address))
#endif

/**
* @brief 32 bits memory write macro.
*/
#if !defined(REG_WRITE32)
  #define REG_WRITE32(address, value)       ((*(volatile uint32_t*)(address))= (uint32_t)(value))
#endif

/**
* @brief 32 bits bits setting macro.
*/
#if !defined(REG_BIT_SET32)
  #define REG_BIT_SET32(address, mask)      ((*(volatile uint32_t*)(address))|= (uint32_t)(mask))
#endif

/**
* @brief 32 bits bits clearing macro.
*/
#if !defined(REG_BIT_CLEAR32)
  #define REG_BIT_CLEAR32(address, mask)    ((*(volatile uint32_t*)(address))&= ((uint32_t)~((uint32_t)(mask))))
#endif

/**
* @brief 32 bit clear bits and set with new value
* @note It is user's responsability to make sure that value has only "mask" bits set - (value&~mask)==0
*/
#if !defined(REG_RMW32)
  #define REG_RMW32(address, mask, value)   (REG_WRITE32((address), ((REG_READ32(address)& ((uint32_t)~((uint32_t)(mask))))| ((uint32_t)(value)))))
#endif


/* ----------------------------------------------------------------------------
   -- Interrupt vector numbers for MPC5748G
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Interrupt_vector_numbers_MPC5748G Interrupt vector numbers for MPC5748G
 * @{
 */

/** Interrupt Number Definitions */
#define NUMBER_OF_INT_VECTORS 85u                /**< Number of interrupts in the Vector table */

/**
 * @brief Defines the Interrupt Numbers definitions
 *
 * This enumeration is used to configure the interrupts.
 *
 * Implements : IRQn_Type_Class
 */
typedef enum
{
  /* Auxiliary constants */
  NotAvail_IRQn                = -128,             /**< Not available device specific interrupt */

  /* Work in progress - only part of the interrupts defined */

  /* Device specific interrupts */
  SS0_IRQn                     = 0u,               /**< Software settable interrupt 0 */
  SS1_IRQn                     = 1u,               /**< Software settable interrupt 1 */
  SS2_IRQn                     = 2u,               /**< Software settable interrupt 2 */
  SS3_IRQn                     = 3u,               /**< Software settable interrupt 3 */
  SS4_IRQn                     = 4u,               /**< Software settable interrupt 4 */
  SS5_IRQn                     = 5u,               /**< Software settable interrupt 5 */
  SS6_IRQn                     = 6u,               /**< Software settable interrupt 6 */
  SS7_IRQn                     = 7u,               /**< Software settable interrupt 7 */
  SS8_IRQn                     = 8u,               /**< Software settable interrupt 8 */
  SS9_IRQn                     = 9u,               /**< Software settable interrupt 9 */
  SS10_IRQn                    = 10u,              /**< Software settable interrupt 10 */
  SS11_IRQn                    = 11u,              /**< Software settable interrupt 11 */
  SS12_IRQn                    = 12u,              /**< Software settable interrupt 12 */
  SS13_IRQn                    = 13u,              /**< Software settable interrupt 13 */
  SS14_IRQn                    = 14u,              /**< Software settable interrupt 14 */
  SS15_IRQn                    = 15u,              /**< Software settable interrupt 15 */
  SS16_IRQn                    = 16u,              /**< Software settable interrupt 16 */
  SS17_IRQn                    = 17u,              /**< Software settable interrupt 17 */
  SS18_IRQn                    = 18u,              /**< Software settable interrupt 18 */
  SS19_IRQn                    = 19u,              /**< Software settable interrupt 19 */
  SS20_IRQn                    = 20u,              /**< Software settable interrupt 20 */
  SS21_IRQn                    = 21u,              /**< Software settable interrupt 21 */
  SS22_IRQn                    = 22u,              /**< Software settable interrupt 22 */
  SS23_IRQn                    = 23u,              /**< Software settable interrupt 23 */
  SWT0_IRQn                    = 32u,              /**< Platform watchdog timer0 SWT_0_IR[TIF] */
  SWT1_IRQn                    = 33u,              /**< Platform watchdog timer1 SWT_0_IR[TIF] */
  SWT2_IRQn                    = 34u,              /**< Platform watchdog timer2 SWT_0_IR[TIF] */
  STM0_Ch0_IRQn                = 36u,              /**< STM0 Channel 0 interrupt */
  STM0_Ch1_IRQn                = 37u,              /**< STM0 Channel 1 interrupt */
  STM0_Ch2_IRQn                = 38u,              /**< STM0 Channel 2 interrupt */
  STM0_Ch3_IRQn                = 39u,              /**< STM0 Channel 3 interrupt */
  STM1_Ch0_IRQn                = 40u,              /**< STM1 Channel 0 interrupt */
  STM1_Ch1_IRQn                = 41u,              /**< STM1 Channel 1 interrupt */
  STM1_Ch2_IRQn                = 42u,              /**< STM1 Channel 2 interrupt */
  STM1_Ch3_IRQn                = 43u,              /**< STM1 Channel 3 interrupt */
  STM2_Ch0_IRQn                = 44u,              /**< STM2 Channel 0 interrupt */
  STM2_Ch1_IRQn                = 45u,              /**< STM2 Channel 1 interrupt */
  STM2_Ch2_IRQn                = 46u,              /**< STM2 Channel 2 interrupt */
  STM2_Ch3_IRQn                = 47u,              /**< STM2 Channel 3 interrupt */
  DMA_Error_IRQn               = 52u,              /**< eDMA Combined Error eDMA Channel Error Flags 63-0 */
  DMA0_IRQn                    = 53u,              /**< eDMA Channel 0 DMA_INTL[INT0] */
  DMA1_IRQn                    = 54u,              /**< eDMA Channel 1 DMA_INTL[INT1] */
  DMA2_IRQn                    = 55u,              /**< eDMA Channel 2 DMA_INTL[INT2] */
  DMA3_IRQn                    = 56u,              /**< eDMA Channel 3 DMA_INTL[INT3] */
  DMA4_IRQn                    = 57u,              /**< eDMA Channel 4 DMA_INTL[INT4] */
  DMA5_IRQn                    = 58u,              /**< eDMA Channel 5 DMA_INTL[INT5] */
  DMA6_IRQn                    = 59u,              /**< eDMA Channel 6 DMA_INTL[INT6] */
  DMA7_IRQn                    = 60u,              /**< eDMA Channel 7 DMA_INTL[INT7] */
  DMA8_IRQn                    = 61u,              /**< eDMA Channel 8 DMA_INTL[INT8] */
  DMA9_IRQn                    = 62u,              /**< eDMA Channel 9 DMA_INTL[INT9] */
  DMA10_IRQn                   = 63u,              /**< eDMA Channel 10 DMA_INTL[INT10] */
  DMA11_IRQn                   = 64u,              /**< eDMA Channel 11 DMA_INTL[INT11] */
  DMA12_IRQn                   = 65u,              /**< eDMA Channel 12 DMA_INTL[INT12] */
  DMA13_IRQn                   = 66u,              /**< eDMA Channel 13 DMA_INTL[INT13] */
  DMA14_IRQn                   = 67u,              /**< eDMA Channel 14 DMA_INTL[INT14] */
  DMA15_IRQn                   = 68u,              /**< eDMA Channel 15 DMA_INTL[INT15] */
  DMA16_IRQn                   = 69u,              /**< eDMA Channel 16 DMA_INTL[INT16] */
  DMA17_IRQn                   = 70u,              /**< eDMA Channel 17 DMA_INTL[INT17] */
  DMA18_IRQn                   = 71u,              /**< eDMA Channel 18 DMA_INTL[INT18] */
  DMA19_IRQn                   = 72u,              /**< eDMA Channel 19 DMA_INTL[INT19] */
  DMA20_IRQn                   = 73u,              /**< eDMA Channel 20 DMA_INTL[INT20] */
  DMA21_IRQn                   = 74u,              /**< eDMA Channel 21 DMA_INTL[INT21] */
  DMA22_IRQn                   = 75u,              /**< eDMA Channel 22 DMA_INTL[INT22] */
  DMA23_IRQn                   = 76u,              /**< eDMA Channel 23 DMA_INTL[INT23] */
  DMA24_IRQn                   = 77u,              /**< eDMA Channel 24 DMA_INTL[INT24] */
  DMA25_IRQn                   = 78u,              /**< eDMA Channel 25 DMA_INTL[INT25] */
  DMA26_IRQn                   = 79u,              /**< eDMA Channel 26 DMA_INTL[INT26] */
  DMA27_IRQn                   = 80u,              /**< eDMA Channel 27 DMA_INTL[INT27] */
  DMA28_IRQn                   = 81u,              /**< eDMA Channel 28 DMA_INTL[INT28] */
  DMA29_IRQn                   = 82u,              /**< eDMA Channel 29 DMA_INTL[INT29] */
  DMA30_IRQn                   = 83u,              /**< eDMA Channel 30 DMA_INTL[INT30] */
  DMA31_IRQn                   = 84u,              /**< eDMA Channel 31 DMA_INTL[INT31] */
  ENET1_GROUP0_IRQn            = 201u,             /**< ENET 1 Interrupt Group0 */
  ENET1_GROUP1_IRQn            = 202u,             /**< ENET 1 Interrupt Group1 */
  ENET1_GROUP2_IRQn            = 203u,             /**< ENET 1 Interrupt Group2 */
  ENET1_GROUP3_IRQn            = 204u,             /**< ENET 1 Interrupt Group3 */
  ENET1_GROUP4_IRQn            = 205u,             /**< ENET 1 Interrupt Group4 */
  ENET1_GROUP5_IRQn            = 206u,             /**< ENET 1 Interrupt Group5 */
  ENET1_GROUP6_IRQn            = 207u,             /**< ENET 1 Interrupt Group6 */
  ENET1_GROUP7_IRQn            = 208u,             /**< ENET 1 Interrupt Group7 */
  ENET1_GROUP8_IRQn            = 209u,             /**< ENET 1 Interrupt Group8 */
  ENET0_GROUP0_IRQn            = 210u,             /**< ENET 0 Interrupt Group0 */
  ENET0_GROUP1_IRQn            = 211u,             /**< ENET 0 Interrupt Group1 */
  ENET0_GROUP2_IRQn            = 212u,             /**< ENET 0 Interrupt Group2 */
  ENET0_GROUP3_IRQn            = 213u,             /**< ENET 0 Interrupt Group3 */
  ENET0_GROUP4_IRQn            = 214u,             /**< ENET 0 Interrupt Group4 */
  ENET0_GROUP5_IRQn            = 214u,             /**< ENET 0 Interrupt Group5 */
  ENET0_GROUP6_IRQn            = 216u,             /**< ENET 0 Interrupt Group6 */
  ENET0_GROUP7_IRQn            = 217u,             /**< ENET 0 Interrupt Group7 */
  ENET0_GROUP8_IRQn            = 218u,             /**< ENET 0 Interrupt Group8 */
  RTC0_IRQn                    = 224u,             /**< RTC 0 interrupt                 */
  API0_IRQn                    = 225u,             /**< API 0 interrupt                 */
  PIT_Ch0_IRQn                 = 226u,             /**< PIT channel 0 overflow interrupt */
  PIT_Ch1_IRQn                 = 227u,             /**< PIT channel 1 overflow interrupt */
  PIT_Ch2_IRQn                 = 228u,             /**< PIT channel 2 overflow interrupt */
  PIT_Ch3_IRQn                 = 229u,             /**< PIT channel 3 overflow interrupt */
  PIT_Ch4_IRQn                 = 230u,             /**< PIT channel 4 overflow interrupt */
  PIT_Ch5_IRQn                 = 231u,             /**< PIT channel 5 overflow interrupt */
  PIT_Ch6_IRQn                 = 232u,             /**< PIT channel 6 overflow interrupt */
  PIT_Ch7_IRQn                 = 233u,             /**< PIT channel 7 overflow interrupt */
  PIT_Ch8_IRQn                 = 234u,             /**< PIT channel 8 overflow interrupt */
  PIT_Ch9_IRQn                 = 235u,             /**< PIT channel 9 overflow interrupt */
  PIT_Ch10_IRQn                = 236u,             /**< PIT channel 10 overflow interrupt */
  PIT_Ch11_IRQn                = 237u,             /**< PIT channel 11 overflow interrupt */
  PIT_Ch12_IRQn                = 238u,             /**< PIT channel 12 overflow interrupt */
  PIT_Ch13_IRQn                = 239u,             /**< PIT channel 13 overflow interrupt */
  PIT_Ch14_IRQn                = 240u,             /**< PIT channel 14 overflow interrupt */
  PIT_Ch15_IRQn                = 241u,             /**< PIT channel 15 overflow interrupt */
  PIT_RTI_IRQn                 = 242u,             /**< PIT RIT channel overflow interrupt */
  LINFLEXD0_RX_IRQn            = 376u,             /**< LINFlexD_0 rx */
  LINFLEXD0_TX_IRQn            = 377u,             /**< LINFlexD_0 tx */
  LINFLEXD0_ERR_IRQn           = 378u,             /**< LINFlexD_0 err */
  LINFLEXD1_RX_IRQn            = 379u,             /**< LINFlexD_1 rx */
  LINFLEXD1_TX_IRQn            = 380u,             /**< LINFlexD_1 tx */
  LINFLEXD1_ERR_IRQn           = 381u,             /**< LINFlexD_1 err */
  LINFLEXD2_RX_IRQn            = 382u,             /**< LINFlexD_2 rx */
  LINFLEXD2_TX_IRQn            = 383u,             /**< LINFlexD_2 tx */
  LINFLEXD2_ERR_IRQn           = 384u,             /**< LINFlexD_2 err */
  LINFLEXD3_RX_IRQn            = 385u,             /**< LINFlexD_3 rx */
  LINFLEXD3_TX_IRQn            = 386u,             /**< LINFlexD_3 tx */
  LINFLEXD3_ERR_IRQn           = 387u,             /**< LINFlexD_3 err */
  LINFLEXD4_RX_IRQn            = 388u,             /**< LINFlexD_4 rx */
  LINFLEXD4_TX_IRQn            = 389u,             /**< LINFlexD_4 tx */
  LINFLEXD4_ERR_IRQn           = 390u,             /**< LINFlexD_4 err */
  LINFLEXD5_RX_IRQn            = 391u,             /**< LINFlexD_5 rx */
  LINFLEXD5_TX_IRQn            = 392u,             /**< LINFlexD_5 tx */
  LINFLEXD5_ERR_IRQn           = 393u,             /**< LINFlexD_5 err */
  LINFLEXD6_RX_IRQn            = 394u,             /**< LINFlexD_6 rx */
  LINFLEXD6_TX_IRQn            = 395u,             /**< LINFlexD_6 tx */
  LINFLEXD6_ERR_IRQn           = 396u,             /**< LINFlexD_6 err */
  LINFLEXD7_RX_IRQn            = 397u,             /**< LINFlexD_7 rx */
  LINFLEXD7_TX_IRQn            = 398u,             /**< LINFlexD_7 tx */
  LINFLEXD7_ERR_IRQn           = 399u,             /**< LINFlexD_7 err */
  LINFLEXD8_RX_IRQn            = 400u,             /**< LINFlexD_8 rx */
  LINFLEXD8_TX_IRQn            = 401u,             /**< LINFlexD_8 tx */
  LINFLEXD8_ERR_IRQn           = 402u,             /**< LINFlexD_8 err */
  LINFLEXD9_RX_IRQn            = 403u,             /**< LINFlexD_9 rx */
  LINFLEXD9_TX_IRQn            = 404u,             /**< LINFlexD_9 tx */
  LINFLEXD9_ERR_IRQn           = 405u,             /**< LINFlexD_9 err */
  LINFLEXD10_RX_IRQn           = 406u,             /**< LINFlexD_10 rx */
  LINFLEXD10_TX_IRQn           = 407u,             /**< LINFlexD_10 tx */
  LINFLEXD10_ERR_IRQn          = 408u,             /**< LINFlexD_10 err */
  LINFLEXD11_RX_IRQn           = 409u,             /**< LINFlexD_11 rx */
  LINFLEXD11_TX_IRQn           = 410u,             /**< LINFlexD_11 tx */
  LINFLEXD11_ERR_IRQn          = 411u,             /**< LINFlexD_11 err */
  LINFLEXD12_RX_IRQn           = 412u,             /**< LINFlexD_12 rx */
  LINFLEXD12_TX_IRQn           = 413u,             /**< LINFlexD_12 tx */
  LINFLEXD12_ERR_IRQn          = 414u,             /**< LINFlexD_12 err */
  LINFLEXD13_RX_IRQn           = 415u,             /**< LINFlexD_13 rx */
  LINFLEXD13_TX_IRQn           = 416u,             /**< LINFlexD_13 tx */
  LINFLEXD13_ERR_IRQn          = 417u,             /**< LINFlexD_13 err */
  LINFLEXD14_RX_IRQn           = 418u,             /**< LINFlexD_14 rx */
  LINFLEXD14_TX_IRQn           = 419u,             /**< LINFlexD_14 tx */
  LINFLEXD14_ERR_IRQn          = 420u,             /**< LINFlexD_14 err */
  LINFLEXD15_RX_IRQn           = 421u,             /**< LINFlexD_15 rx */
  LINFLEXD15_TX_IRQn           = 422u,             /**< LINFlexD_15 tx */
  LINFLEXD15_ERR_IRQn          = 423u,             /**< LINFlexD_15 err */
  LINFLEXD16_RX_IRQn           = 424u,             /**< LINFlexD_16 rx */
  LINFLEXD16_TX_IRQn           = 425u,             /**< LINFlexD_16 tx */
  LINFLEXD16_ERR_IRQn          = 426u,             /**< LINFlexD_16 err */
  LINFLEXD17_RX_IRQn           = 427u,             /**< LINFlexD_17 rx */
  LINFLEXD17_TX_IRQn           = 428u,             /**< LINFlexD_17 tx */
  LINFLEXD17_ERR_IRQn          = 429u,             /**< LINFlexD_17 err */
  LPI2C0_IRQn                  = 440u,             /**< I2C_0_0 I2C0_SR[IBAL] | I2C0_SR[TCF] | I2C0_SR[IAAS]*/
  LPI2C1_IRQn                  = 442u,             /**< I2C_1_0 I2C1_SR[IBAL] | I2C1_SR[TCF] | I2C1_SR[IAAS]*/
  LPI2C2_IRQn                  = 444u,             /**< I2C_2_0 I2C2_SR[IBAL] | I2C2_SR[TCF] | I2C2_SR[IAAS]*/
  LPI2C3_IRQn                  = 446u,             /**< I2C_3_0 I2C3_SR[IBAL] | I2C3_SR[TCF] | I2C3_SR[IAAS]*/
  ADC0_EOC_IRQn                = 548u,             /**< ADC0 EOC, ECH, EOCTU, JEOC, and JECH interrupt lines */
  ADC0_ER_IRQn                 = 549u,             /**< ADC0 WDGxH and WDGxL */
  ADC0_WD_IRQn                 = 550u,             /**< ADC0 WDSERR, WDTERR, ERR_S0, ERR_S1, and ERR_S2 */
  ADC1_EOC_IRQn                = 554u,             /**< ADC1 EOC, ECH, EOCTU, JEOC, and JECH interrupt lines */
  ADC1_ER_IRQn                 = 555u,             /**< ADC1 WDGxH and WDGxL */
  ADC1_WD_IRQn                 = 556u,             /**< ADC1 WDSERR, WDTERR, ERR_S0, ERR_S1, and ERR_S2 */
  CAN0_Wake_Up_IRQn            = 565u,             /**< CAN0 Interrupt asserted when Pretended Networking operation is enabled, and a valid message matches the selected filter criteria during Low Power mode */
  CAN0_Error_IRQn              = 566u,             /**< CAN2 Interrupt indicating that errors were detected on the CAN bus */
  CAN0_ORed_IRQn               = 567u,             /**< CAN2 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN0_ORed_00_03_MB_IRQn      = 568u,             /**< CAN2 OR'ed Message buffer (0-3) */
  CAN0_ORed_04_07_MB_IRQn      = 569u,             /**< CAN2 OR'ed Message buffer (4-7) */
  CAN0_ORed_08_11_MB_IRQn      = 570u,             /**< CAN2 OR'ed Message buffer (8-11) */
  CAN0_ORed_12_15_MB_IRQn      = 571u,             /**< CAN1 OR'ed Message buffer (12-15) */
  CAN0_ORed_16_31_MB_IRQn      = 572u,             /**< CAN1 OR'ed Message buffer (16-31) */
  CAN0_ORed_32_63_MB_IRQn      = 573u,             /**< CAN1 OR'ed Message buffer (32-63) */
  CAN0_ORed_64_95_MB_IRQn      = 574u,             /**< CAN1 OR'ed Message buffer (64-95) */
  CAN1_Error_IRQn              = 578u,             /**< CAN2 Interrupt indicating that errors were detected on the CAN bus */
  CAN1_ORed_IRQn               = 579u,             /**< CAN2 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN1_ORed_00_03_MB_IRQn      = 580u,             /**< CAN2 OR'ed Message buffer (0-3) */
  CAN1_ORed_04_07_MB_IRQn      = 581u,             /**< CAN2 OR'ed Message buffer (4-7) */
  CAN1_ORed_08_11_MB_IRQn      = 582u,             /**< CAN2 OR'ed Message buffer (8-11) */
  CAN1_ORed_12_15_MB_IRQn      = 583u,             /**< CAN1 OR'ed Message buffer (12-15) */
  CAN1_ORed_16_31_MB_IRQn      = 584u,             /**< CAN1 OR'ed Message buffer (16-31) */
  CAN1_ORed_32_63_MB_IRQn      = 585u,             /**< CAN1 OR'ed Message buffer (32-63) */
  CAN1_ORed_64_95_MB_IRQn      = 586u,             /**< CAN1 OR'ed Message buffer (64-95) */
  CAN2_Error_IRQn              = 590u,             /**< CAN2 Interrupt indicating that errors were detected on the CAN bus */
  CAN2_ORed_IRQn               = 591u,             /**< CAN2 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN2_ORed_00_03_MB_IRQn      = 592u,             /**< CAN2 OR'ed Message buffer (0-3) */
  CAN2_ORed_04_07_MB_IRQn      = 593u,             /**< CAN2 OR'ed Message buffer (4-7) */
  CAN2_ORed_08_11_MB_IRQn      = 594u,             /**< CAN2 OR'ed Message buffer (8-11) */
  CAN2_ORed_12_15_MB_IRQn      = 595u,             /**< CAN2 OR'ed Message buffer (12-15) */
  CAN2_ORed_16_31_MB_IRQn      = 596u,             /**< CAN2 OR'ed Message buffer (16-31) */
  CAN2_ORed_32_63_MB_IRQn      = 597u,             /**< CAN2 OR'ed Message buffer (32-63) */
  CAN2_ORed_64_95_MB_IRQn      = 598u,             /**< CAN2 OR'ed Message buffer (64-95) */
  CAN3_Error_IRQn              = 602u,             /**< CAN3 Interrupt indicating that errors were detected on the CAN bus */
  CAN3_ORed_IRQn               = 603u,             /**< CAN3 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN3_ORed_00_03_MB_IRQn      = 604u,             /**< CAN3 OR'ed Message buffer (0-3) */
  CAN3_ORed_04_07_MB_IRQn      = 605u,             /**< CAN3 OR'ed Message buffer (4-7) */
  CAN3_ORed_08_11_MB_IRQn      = 606u,             /**< CAN3 OR'ed Message buffer (8-11) */
  CAN3_ORed_12_15_MB_IRQn      = 607u,             /**< CAN3 OR'ed Message buffer (12-15) */
  CAN3_ORed_16_31_MB_IRQn      = 608u,             /**< CAN3 OR'ed Message buffer (16-31) */
  CAN3_ORed_32_63_MB_IRQn      = 609u,             /**< CAN3 OR'ed Message buffer (32-63) */
  CAN3_ORed_64_95_MB_IRQn      = 610u,             /**< CAN3 OR'ed Message buffer (64-95) */
  CAN4_Error_IRQn              = 614u,             /**< CAN4 Interrupt indicating that errors were detected on the CAN bus */
  CAN4_ORed_IRQn               = 615u,             /**< CAN4 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN4_ORed_00_03_MB_IRQn      = 616u,             /**< CAN4 OR'ed Message buffer (0-3) */
  CAN4_ORed_04_07_MB_IRQn      = 617u,             /**< CAN4 OR'ed Message buffer (4-7) */
  CAN4_ORed_08_11_MB_IRQn      = 618u,             /**< CAN4 OR'ed Message buffer (8-11) */
  CAN4_ORed_12_15_MB_IRQn      = 619u,             /**< CAN4 OR'ed Message buffer (12-15) */
  CAN4_ORed_16_31_MB_IRQn      = 620u,             /**< CAN4 OR'ed Message buffer (16-31) */
  CAN4_ORed_32_63_MB_IRQn      = 621u,             /**< CAN4 OR'ed Message buffer (32-63) */
  CAN4_ORed_64_95_MB_IRQn      = 622u,             /**< CAN4 OR'ed Message buffer (64-95) */
  CAN5_Error_IRQn              = 626u,             /**< CAN5 Interrupt indicating that errors were detected on the CAN bus */
  CAN5_ORed_IRQn               = 627u,             /**< CAN5 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN5_ORed_00_03_MB_IRQn      = 628u,             /**< CAN5 OR'ed Message buffer (0-3) */
  CAN5_ORed_04_07_MB_IRQn      = 629u,             /**< CAN5 OR'ed Message buffer (4-7) */
  CAN5_ORed_08_11_MB_IRQn      = 630u,             /**< CAN5 OR'ed Message buffer (8-11) */
  CAN5_ORed_12_15_MB_IRQn      = 631u,             /**< CAN5 OR'ed Message buffer (12-15) */
  CAN5_ORed_16_31_MB_IRQn      = 632u,             /**< CAN5 OR'ed Message buffer (16-31) */
  CAN5_ORed_32_63_MB_IRQn      = 633u,             /**< CAN5 OR'ed Message buffer (32-63) */
  CAN5_ORed_64_95_MB_IRQn      = 634u,             /**< CAN5 OR'ed Message buffer (64-95) */
  CAN6_Error_IRQn              = 638u,             /**< CAN6 Interrupt indicating that errors were detected on the CAN bus */
  CAN6_ORed_IRQn               = 639u,             /**< CAN6 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN6_ORed_00_03_MB_IRQn      = 640u,             /**< CAN6 OR'ed Message buffer (0-3) */
  CAN6_ORed_04_07_MB_IRQn      = 641u,             /**< CAN6 OR'ed Message buffer (4-7) */
  CAN6_ORed_08_11_MB_IRQn      = 642u,             /**< CAN6 OR'ed Message buffer (8-11) */
  CAN6_ORed_12_15_MB_IRQn      = 643u,             /**< CAN6 OR'ed Message buffer (12-15) */
  CAN6_ORed_16_31_MB_IRQn      = 644u,             /**< CAN6 OR'ed Message buffer (16-31) */
  CAN6_ORed_32_63_MB_IRQn      = 645u,             /**< CAN6 OR'ed Message buffer (32-63) */
  CAN6_ORed_64_95_MB_IRQn      = 646u,             /**< CAN6 OR'ed Message buffer (64-95) */
  CAN7_Error_IRQn              = 650u,             /**< CAN7 Interrupt indicating that errors were detected on the CAN bus */
  CAN7_ORed_IRQn               = 651u,             /**< CAN7 OR'ed [Bus Off OR Transmit Warning OR Receive Warning] */
  CAN7_ORed_00_03_MB_IRQn      = 652u,             /**< CAN7 OR'ed Message buffer (0-3) */
  CAN7_ORed_04_07_MB_IRQn      = 653u,             /**< CAN7 OR'ed Message buffer (4-7) */
  CAN7_ORed_08_11_MB_IRQn      = 654u,             /**< CAN7 OR'ed Message buffer (8-11) */
  CAN7_ORed_12_15_MB_IRQn      = 655u,             /**< CAN7 OR'ed Message buffer (12-15) */
  CAN7_ORed_16_31_MB_IRQn      = 656u,             /**< CAN7 OR'ed Message buffer (16-31) */
  CAN7_ORed_32_63_MB_IRQn      = 657u,             /**< CAN7 OR'ed Message buffer (32-63) */
  CAN7_ORed_64_95_MB_IRQn      = 658u,             /**< CAN7 OR'ed Message buffer (64-95) */
  WKPU_07_00_IRQn              = 668u,             /**< WKUP_IRQ_0 (0-7) */
  WKPU_15_08_IRQn              = 669u,             /**< WKUP_IRQ_1 (8-15) */
  WKPU_23_16_IRQn              = 670u,             /**< WKUP_IRQ_2 (16-23) */
  WKPU_31_24_IRQn              = 671u,             /**< WKUP_IRQ_3 (24-31) */
} IRQn_Type;

/*!
 * @}
 */ /* end of group Interrupt_vector_numbers_MPC5748G */


/* ----------------------------------------------------------------------------
   -- Device Peripheral Access Layer for MPC5748G
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Peripheral_access_layer_MPC5748G Device Peripheral Access Layer for MPC5748G
 * @{
 */

/* @brief This module covers memory mapped registers available on SoC */

/* ----------------------------------------------------------------------------
   -- ADC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Peripheral_Access_Layer ADC Peripheral Access Layer
 * @{
 */


/** ADC - Size of Registers Arrays */
#define ADC_CEOCFR_COUNT                         3u
#define ADC_CIMR_COUNT                           3u
#define ADC_DMAR_COUNT                           3u
#define ADC_PSR_COUNT                            3u
#define ADC_CTR_COUNT                            3u
#define ADC_NCMR_COUNT                           3u
#define ADC_JCMR_COUNT                           3u
#define ADC_CDR_COUNT                            96u
#define ADC_CWSELR_COUNT                         12u
#define ADC_CWENR_COUNT                          3u
#define ADC_AWORR_COUNT                          3u

/** ADC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Main Configuration Register, offset: 0x0 */
  __I  uint32_t MSR;                               /**< Main Status register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  __IO uint32_t ISR;                               /**< Interrupt Status Register, offset: 0x10 */
  __IO uint32_t CEOCFR[ADC_CEOCFR_COUNT];          /**< Channel Pending register 0..Channel Pending register 2, array offset: 0x14, array step: 0x4 */
  __IO uint32_t IMR;                               /**< Interrupt Mask Register, offset: 0x20 */
  __IO uint32_t CIMR[ADC_CIMR_COUNT];              /**< Channel Interrupt Mask Register 0..Channel Interrupt Mask Register 2, array offset: 0x24, array step: 0x4 */
  __IO uint32_t WTISR;                             /**< Watchdog Threshold Interrupt Status Register, offset: 0x30 */
  __IO uint32_t WTIMR;                             /**< Watchdog Threshold Interrupt Mask Register, offset: 0x34 */
       uint8_t RESERVED_1[8];
  __IO uint32_t DMAE;                              /**< DMA Enable register, offset: 0x40 */
  __IO uint32_t DMAR[ADC_DMAR_COUNT];              /**< DMA Channel Select Register 0..DMA Channel Select Register 2, array offset: 0x44, array step: 0x4 */
       uint8_t RESERVED_2[16];
  __IO uint32_t THRHLR0;                           /**< Threshold Register, offset: 0x60 */
  __IO uint32_t THRHLR1;                           /**< Threshold Register, offset: 0x64 */
  __IO uint32_t THRHLR2;                           /**< Threshold Register, offset: 0x68 */
  __IO uint32_t THRHLR3;                           /**< Threshold Register, offset: 0x6C */
       uint8_t RESERVED_3[16];
  __IO uint32_t PSCR;                              /**< Presampling Control Register, offset: 0x80 */
  __IO uint32_t PSR[ADC_PSR_COUNT];                /**< Presampling register 0..Presampling register 2, array offset: 0x84, array step: 0x4 */
       uint8_t RESERVED_4[4];
  __IO uint32_t CTR[ADC_CTR_COUNT];                /**< Conversion Timing Register 0..Conversion Timing Register 2, array offset: 0x94, array step: 0x4 */
       uint8_t RESERVED_5[4];
  __IO uint32_t NCMR[ADC_NCMR_COUNT];              /**< Normal Conversion Mask Register 0..Normal Conversion Mask Register 2, array offset: 0xA4, array step: 0x4 */
       uint8_t RESERVED_6[4];
  __IO uint32_t JCMR[ADC_JCMR_COUNT];              /**< Injected Conversion Mask Register 0..Injected Conversion Mask Register 2, array offset: 0xB4, array step: 0x4 */
       uint8_t RESERVED_7[4];
  __IO uint32_t DSDR;                              /**< Decode Signals Delay Register, offset: 0xC4 */
  __IO uint32_t PDEDR;                             /**< Power Down Exit Delay Register, offset: 0xC8 */
       uint8_t RESERVED_8[52];
  __I  uint32_t CDR[ADC_CDR_COUNT];                /**< Channel Data Register n (Precision Channels)..Channel Data Register n (External Channels), array offset: 0x100, array step: 0x4 */
  __IO uint32_t THRHLR4;                           /**< Threshold Register, offset: 0x280 */
  __IO uint32_t THRHLR5;                           /**< Threshold Register, offset: 0x284 */
       uint8_t RESERVED_9[40];
  __IO uint32_t CWSELR[ADC_CWSELR_COUNT];          /**< Channel Watchdog Select Register 0..Channel Watchdog Select Register 11, array offset: 0x2B0, array step: 0x4 */
  __IO uint32_t CWENR[ADC_CWENR_COUNT];            /**< Channel Watchdog Enable Register 0..Channel Watchdog Enable Register 2, array offset: 0x2E0, array step: 0x4 */
       uint8_t RESERVED_10[4];
  __IO uint32_t AWORR[ADC_AWORR_COUNT];            /**< Analog Watchdog Out of Range Register 0..Analog Watchdog Out of Range Register 2, array offset: 0x2F0, array step: 0x4 */
       uint8_t RESERVED_11[164];
  __IO uint32_t CALBISTREG;                        /**< Calibration, BIST Control and status Register, offset: 0x3A0 */
       uint8_t RESERVED_12[4];
  __IO uint32_t OFSGNUSR;                          /**< Offset and Gain User Register, offset: 0x3A8 */
} ADC_Type, *ADC_MemMapPtr;

 /** Number of instances of the ADC module. */
#define ADC_INSTANCE_COUNT                       (2u)


/* ADC - Peripheral instance base addresses */
/** Peripheral ADC_0 base address */
#define ADC_0_BASE                               (0xFFE00000u)
/** Peripheral ADC_0 base pointer */
#define ADC_0                                    ((ADC_Type *)ADC_0_BASE)
/** Peripheral ADC_1 base address */
#define ADC_1_BASE                               (0xFBE00000u)
/** Peripheral ADC_1 base pointer */
#define ADC_1                                    ((ADC_Type *)ADC_1_BASE)
/** Array initializer of ADC peripheral base addresses */
#define ADC_BASE_ADDRS                           { ADC_0_BASE, ADC_1_BASE }
/** Array initializer of ADC peripheral base pointers */
#define ADC_BASE_PTRS                            { ADC_0, ADC_1 }

/* ----------------------------------------------------------------------------
   -- ADC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ADC_Register_Masks ADC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define ADC_MCR_PWDN_MASK                        0x1u
#define ADC_MCR_PWDN_SHIFT                       0u
#define ADC_MCR_PWDN_WIDTH                       1u
#define ADC_MCR_PWDN(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_PWDN_SHIFT))&ADC_MCR_PWDN_MASK)
#define ADC_MCR_REFSEL_MASK                      0x6u
#define ADC_MCR_REFSEL_SHIFT                     1u
#define ADC_MCR_REFSEL_WIDTH                     2u
#define ADC_MCR_REFSEL(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_REFSEL_SHIFT))&ADC_MCR_REFSEL_MASK)
#define ADC_MCR_ACKO_MASK                        0x20u
#define ADC_MCR_ACKO_SHIFT                       5u
#define ADC_MCR_ACKO_WIDTH                       1u
#define ADC_MCR_ACKO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ACKO_SHIFT))&ADC_MCR_ACKO_MASK)
#define ADC_MCR_ABORT_MASK                       0x40u
#define ADC_MCR_ABORT_SHIFT                      6u
#define ADC_MCR_ABORT_WIDTH                      1u
#define ADC_MCR_ABORT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ABORT_SHIFT))&ADC_MCR_ABORT_MASK)
#define ADC_MCR_ABORT_CHAIN_MASK                 0x80u
#define ADC_MCR_ABORT_CHAIN_SHIFT                7u
#define ADC_MCR_ABORT_CHAIN_WIDTH                1u
#define ADC_MCR_ABORT_CHAIN(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ABORT_CHAIN_SHIFT))&ADC_MCR_ABORT_CHAIN_MASK)
#define ADC_MCR_ADCLKSEL_MASK                    0x100u
#define ADC_MCR_ADCLKSEL_SHIFT                   8u
#define ADC_MCR_ADCLKSEL_WIDTH                   1u
#define ADC_MCR_ADCLKSEL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MCR_ADCLKSEL_SHIFT))&ADC_MCR_ADCLKSEL_MASK)
#define ADC_MCR_CTU_MODE_MASK                    0x10000u
#define ADC_MCR_CTU_MODE_SHIFT                   16u
#define ADC_MCR_CTU_MODE_WIDTH                   1u
#define ADC_MCR_CTU_MODE(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MCR_CTU_MODE_SHIFT))&ADC_MCR_CTU_MODE_MASK)
#define ADC_MCR_CTUEN_MASK                       0x20000u
#define ADC_MCR_CTUEN_SHIFT                      17u
#define ADC_MCR_CTUEN_WIDTH                      1u
#define ADC_MCR_CTUEN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_CTUEN_SHIFT))&ADC_MCR_CTUEN_MASK)
#define ADC_MCR_JSTART_MASK                      0x100000u
#define ADC_MCR_JSTART_SHIFT                     20u
#define ADC_MCR_JSTART_WIDTH                     1u
#define ADC_MCR_JSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_JSTART_SHIFT))&ADC_MCR_JSTART_MASK)
#define ADC_MCR_JEDGE_MASK                       0x200000u
#define ADC_MCR_JEDGE_SHIFT                      21u
#define ADC_MCR_JEDGE_WIDTH                      1u
#define ADC_MCR_JEDGE(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_JEDGE_SHIFT))&ADC_MCR_JEDGE_MASK)
#define ADC_MCR_JTRGEN_MASK                      0x400000u
#define ADC_MCR_JTRGEN_SHIFT                     22u
#define ADC_MCR_JTRGEN_WIDTH                     1u
#define ADC_MCR_JTRGEN(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_JTRGEN_SHIFT))&ADC_MCR_JTRGEN_MASK)
#define ADC_MCR_NSTART_MASK                      0x1000000u
#define ADC_MCR_NSTART_SHIFT                     24u
#define ADC_MCR_NSTART_WIDTH                     1u
#define ADC_MCR_NSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_NSTART_SHIFT))&ADC_MCR_NSTART_MASK)
#define ADC_MCR_MODE_MASK                        0x20000000u
#define ADC_MCR_MODE_SHIFT                       29u
#define ADC_MCR_MODE_WIDTH                       1u
#define ADC_MCR_MODE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MCR_MODE_SHIFT))&ADC_MCR_MODE_MASK)
#define ADC_MCR_WLSIDE_MASK                      0x40000000u
#define ADC_MCR_WLSIDE_SHIFT                     30u
#define ADC_MCR_WLSIDE_WIDTH                     1u
#define ADC_MCR_WLSIDE(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MCR_WLSIDE_SHIFT))&ADC_MCR_WLSIDE_MASK)
#define ADC_MCR_OWREN_MASK                       0x80000000u
#define ADC_MCR_OWREN_SHIFT                      31u
#define ADC_MCR_OWREN_WIDTH                      1u
#define ADC_MCR_OWREN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_MCR_OWREN_SHIFT))&ADC_MCR_OWREN_MASK)
/* MSR Bit Fields */
#define ADC_MSR_ADCSTATUS_MASK                   0x7u
#define ADC_MSR_ADCSTATUS_SHIFT                  0u
#define ADC_MSR_ADCSTATUS_WIDTH                  3u
#define ADC_MSR_ADCSTATUS(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_MSR_ADCSTATUS_SHIFT))&ADC_MSR_ADCSTATUS_MASK)
#define ADC_MSR_ACKO_MASK                        0x20u
#define ADC_MSR_ACKO_SHIFT                       5u
#define ADC_MSR_ACKO_WIDTH                       1u
#define ADC_MSR_ACKO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_MSR_ACKO_SHIFT))&ADC_MSR_ACKO_MASK)
#define ADC_MSR_CHADDR_MASK                      0xFE00u
#define ADC_MSR_CHADDR_SHIFT                     9u
#define ADC_MSR_CHADDR_WIDTH                     7u
#define ADC_MSR_CHADDR(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_CHADDR_SHIFT))&ADC_MSR_CHADDR_MASK)
#define ADC_MSR_CTUSTART_MASK                    0x10000u
#define ADC_MSR_CTUSTART_SHIFT                   16u
#define ADC_MSR_CTUSTART_WIDTH                   1u
#define ADC_MSR_CTUSTART(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MSR_CTUSTART_SHIFT))&ADC_MSR_CTUSTART_MASK)
#define ADC_MSR_JSTART_MASK                      0x100000u
#define ADC_MSR_JSTART_SHIFT                     20u
#define ADC_MSR_JSTART_WIDTH                     1u
#define ADC_MSR_JSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_JSTART_SHIFT))&ADC_MSR_JSTART_MASK)
#define ADC_MSR_JABORT_MASK                      0x800000u
#define ADC_MSR_JABORT_SHIFT                     23u
#define ADC_MSR_JABORT_WIDTH                     1u
#define ADC_MSR_JABORT(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_JABORT_SHIFT))&ADC_MSR_JABORT_MASK)
#define ADC_MSR_NSTART_MASK                      0x1000000u
#define ADC_MSR_NSTART_SHIFT                     24u
#define ADC_MSR_NSTART_WIDTH                     1u
#define ADC_MSR_NSTART(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_MSR_NSTART_SHIFT))&ADC_MSR_NSTART_MASK)
#define ADC_MSR_CALIBRTD_MASK                    0x80000000u
#define ADC_MSR_CALIBRTD_SHIFT                   31u
#define ADC_MSR_CALIBRTD_WIDTH                   1u
#define ADC_MSR_CALIBRTD(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_MSR_CALIBRTD_SHIFT))&ADC_MSR_CALIBRTD_MASK)
/* ISR Bit Fields */
#define ADC_ISR_ECH_MASK                         0x1u
#define ADC_ISR_ECH_SHIFT                        0u
#define ADC_ISR_ECH_WIDTH                        1u
#define ADC_ISR_ECH(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_ISR_ECH_SHIFT))&ADC_ISR_ECH_MASK)
#define ADC_ISR_EOC_MASK                         0x2u
#define ADC_ISR_EOC_SHIFT                        1u
#define ADC_ISR_EOC_WIDTH                        1u
#define ADC_ISR_EOC(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_ISR_EOC_SHIFT))&ADC_ISR_EOC_MASK)
#define ADC_ISR_JECH_MASK                        0x4u
#define ADC_ISR_JECH_SHIFT                       2u
#define ADC_ISR_JECH_WIDTH                       1u
#define ADC_ISR_JECH(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_ISR_JECH_SHIFT))&ADC_ISR_JECH_MASK)
#define ADC_ISR_JEOC_MASK                        0x8u
#define ADC_ISR_JEOC_SHIFT                       3u
#define ADC_ISR_JEOC_WIDTH                       1u
#define ADC_ISR_JEOC(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_ISR_JEOC_SHIFT))&ADC_ISR_JEOC_MASK)
#define ADC_ISR_EOCTU_MASK                       0x10u
#define ADC_ISR_EOCTU_SHIFT                      4u
#define ADC_ISR_EOCTU_WIDTH                      1u
#define ADC_ISR_EOCTU(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_ISR_EOCTU_SHIFT))&ADC_ISR_EOCTU_MASK)
/* CEOCFR Bit Fields */
#define ADC_CEOCFR_EOCCH0_MASK                   0x1u
#define ADC_CEOCFR_EOCCH0_SHIFT                  0u
#define ADC_CEOCFR_EOCCH0_WIDTH                  1u
#define ADC_CEOCFR_EOCCH0(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH0_SHIFT))&ADC_CEOCFR_EOCCH0_MASK)
#define ADC_CEOCFR_EOCCH64_MASK                  0x1u
#define ADC_CEOCFR_EOCCH64_SHIFT                 0u
#define ADC_CEOCFR_EOCCH64_WIDTH                 1u
#define ADC_CEOCFR_EOCCH64(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH64_SHIFT))&ADC_CEOCFR_EOCCH64_MASK)
#define ADC_CEOCFR_EOCCH32_MASK                  0x1u
#define ADC_CEOCFR_EOCCH32_SHIFT                 0u
#define ADC_CEOCFR_EOCCH32_WIDTH                 1u
#define ADC_CEOCFR_EOCCH32(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH32_SHIFT))&ADC_CEOCFR_EOCCH32_MASK)
#define ADC_CEOCFR_EOCCH65_MASK                  0x2u
#define ADC_CEOCFR_EOCCH65_SHIFT                 1u
#define ADC_CEOCFR_EOCCH65_WIDTH                 1u
#define ADC_CEOCFR_EOCCH65(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH65_SHIFT))&ADC_CEOCFR_EOCCH65_MASK)
#define ADC_CEOCFR_EOCCH33_MASK                  0x2u
#define ADC_CEOCFR_EOCCH33_SHIFT                 1u
#define ADC_CEOCFR_EOCCH33_WIDTH                 1u
#define ADC_CEOCFR_EOCCH33(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH33_SHIFT))&ADC_CEOCFR_EOCCH33_MASK)
#define ADC_CEOCFR_EOCCH1_MASK                   0x2u
#define ADC_CEOCFR_EOCCH1_SHIFT                  1u
#define ADC_CEOCFR_EOCCH1_WIDTH                  1u
#define ADC_CEOCFR_EOCCH1(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH1_SHIFT))&ADC_CEOCFR_EOCCH1_MASK)
#define ADC_CEOCFR_EOCCH34_MASK                  0x4u
#define ADC_CEOCFR_EOCCH34_SHIFT                 2u
#define ADC_CEOCFR_EOCCH34_WIDTH                 1u
#define ADC_CEOCFR_EOCCH34(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH34_SHIFT))&ADC_CEOCFR_EOCCH34_MASK)
#define ADC_CEOCFR_EOCCH2_MASK                   0x4u
#define ADC_CEOCFR_EOCCH2_SHIFT                  2u
#define ADC_CEOCFR_EOCCH2_WIDTH                  1u
#define ADC_CEOCFR_EOCCH2(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH2_SHIFT))&ADC_CEOCFR_EOCCH2_MASK)
#define ADC_CEOCFR_EOCCH66_MASK                  0x4u
#define ADC_CEOCFR_EOCCH66_SHIFT                 2u
#define ADC_CEOCFR_EOCCH66_WIDTH                 1u
#define ADC_CEOCFR_EOCCH66(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH66_SHIFT))&ADC_CEOCFR_EOCCH66_MASK)
#define ADC_CEOCFR_EOCCH67_MASK                  0x8u
#define ADC_CEOCFR_EOCCH67_SHIFT                 3u
#define ADC_CEOCFR_EOCCH67_WIDTH                 1u
#define ADC_CEOCFR_EOCCH67(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH67_SHIFT))&ADC_CEOCFR_EOCCH67_MASK)
#define ADC_CEOCFR_EOCCH3_MASK                   0x8u
#define ADC_CEOCFR_EOCCH3_SHIFT                  3u
#define ADC_CEOCFR_EOCCH3_WIDTH                  1u
#define ADC_CEOCFR_EOCCH3(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH3_SHIFT))&ADC_CEOCFR_EOCCH3_MASK)
#define ADC_CEOCFR_EOCCH35_MASK                  0x8u
#define ADC_CEOCFR_EOCCH35_SHIFT                 3u
#define ADC_CEOCFR_EOCCH35_WIDTH                 1u
#define ADC_CEOCFR_EOCCH35(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH35_SHIFT))&ADC_CEOCFR_EOCCH35_MASK)
#define ADC_CEOCFR_EOCCH4_MASK                   0x10u
#define ADC_CEOCFR_EOCCH4_SHIFT                  4u
#define ADC_CEOCFR_EOCCH4_WIDTH                  1u
#define ADC_CEOCFR_EOCCH4(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH4_SHIFT))&ADC_CEOCFR_EOCCH4_MASK)
#define ADC_CEOCFR_EOCCH36_MASK                  0x10u
#define ADC_CEOCFR_EOCCH36_SHIFT                 4u
#define ADC_CEOCFR_EOCCH36_WIDTH                 1u
#define ADC_CEOCFR_EOCCH36(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH36_SHIFT))&ADC_CEOCFR_EOCCH36_MASK)
#define ADC_CEOCFR_EOCCH68_MASK                  0x10u
#define ADC_CEOCFR_EOCCH68_SHIFT                 4u
#define ADC_CEOCFR_EOCCH68_WIDTH                 1u
#define ADC_CEOCFR_EOCCH68(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH68_SHIFT))&ADC_CEOCFR_EOCCH68_MASK)
#define ADC_CEOCFR_EOCCH69_MASK                  0x20u
#define ADC_CEOCFR_EOCCH69_SHIFT                 5u
#define ADC_CEOCFR_EOCCH69_WIDTH                 1u
#define ADC_CEOCFR_EOCCH69(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH69_SHIFT))&ADC_CEOCFR_EOCCH69_MASK)
#define ADC_CEOCFR_EOCCH37_MASK                  0x20u
#define ADC_CEOCFR_EOCCH37_SHIFT                 5u
#define ADC_CEOCFR_EOCCH37_WIDTH                 1u
#define ADC_CEOCFR_EOCCH37(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH37_SHIFT))&ADC_CEOCFR_EOCCH37_MASK)
#define ADC_CEOCFR_EOCCH5_MASK                   0x20u
#define ADC_CEOCFR_EOCCH5_SHIFT                  5u
#define ADC_CEOCFR_EOCCH5_WIDTH                  1u
#define ADC_CEOCFR_EOCCH5(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH5_SHIFT))&ADC_CEOCFR_EOCCH5_MASK)
#define ADC_CEOCFR_EOCCH70_MASK                  0x40u
#define ADC_CEOCFR_EOCCH70_SHIFT                 6u
#define ADC_CEOCFR_EOCCH70_WIDTH                 1u
#define ADC_CEOCFR_EOCCH70(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH70_SHIFT))&ADC_CEOCFR_EOCCH70_MASK)
#define ADC_CEOCFR_EOCCH38_MASK                  0x40u
#define ADC_CEOCFR_EOCCH38_SHIFT                 6u
#define ADC_CEOCFR_EOCCH38_WIDTH                 1u
#define ADC_CEOCFR_EOCCH38(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH38_SHIFT))&ADC_CEOCFR_EOCCH38_MASK)
#define ADC_CEOCFR_EOCCH6_MASK                   0x40u
#define ADC_CEOCFR_EOCCH6_SHIFT                  6u
#define ADC_CEOCFR_EOCCH6_WIDTH                  1u
#define ADC_CEOCFR_EOCCH6(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH6_SHIFT))&ADC_CEOCFR_EOCCH6_MASK)
#define ADC_CEOCFR_EOCCH7_MASK                   0x80u
#define ADC_CEOCFR_EOCCH7_SHIFT                  7u
#define ADC_CEOCFR_EOCCH7_WIDTH                  1u
#define ADC_CEOCFR_EOCCH7(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH7_SHIFT))&ADC_CEOCFR_EOCCH7_MASK)
#define ADC_CEOCFR_EOCCH39_MASK                  0x80u
#define ADC_CEOCFR_EOCCH39_SHIFT                 7u
#define ADC_CEOCFR_EOCCH39_WIDTH                 1u
#define ADC_CEOCFR_EOCCH39(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH39_SHIFT))&ADC_CEOCFR_EOCCH39_MASK)
#define ADC_CEOCFR_EOCCH71_MASK                  0x80u
#define ADC_CEOCFR_EOCCH71_SHIFT                 7u
#define ADC_CEOCFR_EOCCH71_WIDTH                 1u
#define ADC_CEOCFR_EOCCH71(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH71_SHIFT))&ADC_CEOCFR_EOCCH71_MASK)
#define ADC_CEOCFR_EOCCH8_MASK                   0x100u
#define ADC_CEOCFR_EOCCH8_SHIFT                  8u
#define ADC_CEOCFR_EOCCH8_WIDTH                  1u
#define ADC_CEOCFR_EOCCH8(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH8_SHIFT))&ADC_CEOCFR_EOCCH8_MASK)
#define ADC_CEOCFR_EOCCH40_MASK                  0x100u
#define ADC_CEOCFR_EOCCH40_SHIFT                 8u
#define ADC_CEOCFR_EOCCH40_WIDTH                 1u
#define ADC_CEOCFR_EOCCH40(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH40_SHIFT))&ADC_CEOCFR_EOCCH40_MASK)
#define ADC_CEOCFR_EOCCH72_MASK                  0x100u
#define ADC_CEOCFR_EOCCH72_SHIFT                 8u
#define ADC_CEOCFR_EOCCH72_WIDTH                 1u
#define ADC_CEOCFR_EOCCH72(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH72_SHIFT))&ADC_CEOCFR_EOCCH72_MASK)
#define ADC_CEOCFR_EOCCH73_MASK                  0x200u
#define ADC_CEOCFR_EOCCH73_SHIFT                 9u
#define ADC_CEOCFR_EOCCH73_WIDTH                 1u
#define ADC_CEOCFR_EOCCH73(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH73_SHIFT))&ADC_CEOCFR_EOCCH73_MASK)
#define ADC_CEOCFR_EOCCH41_MASK                  0x200u
#define ADC_CEOCFR_EOCCH41_SHIFT                 9u
#define ADC_CEOCFR_EOCCH41_WIDTH                 1u
#define ADC_CEOCFR_EOCCH41(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH41_SHIFT))&ADC_CEOCFR_EOCCH41_MASK)
#define ADC_CEOCFR_EOCCH9_MASK                   0x200u
#define ADC_CEOCFR_EOCCH9_SHIFT                  9u
#define ADC_CEOCFR_EOCCH9_WIDTH                  1u
#define ADC_CEOCFR_EOCCH9(x)                     (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH9_SHIFT))&ADC_CEOCFR_EOCCH9_MASK)
#define ADC_CEOCFR_EOCCH42_MASK                  0x400u
#define ADC_CEOCFR_EOCCH42_SHIFT                 10u
#define ADC_CEOCFR_EOCCH42_WIDTH                 1u
#define ADC_CEOCFR_EOCCH42(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH42_SHIFT))&ADC_CEOCFR_EOCCH42_MASK)
#define ADC_CEOCFR_EOCCH74_MASK                  0x400u
#define ADC_CEOCFR_EOCCH74_SHIFT                 10u
#define ADC_CEOCFR_EOCCH74_WIDTH                 1u
#define ADC_CEOCFR_EOCCH74(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH74_SHIFT))&ADC_CEOCFR_EOCCH74_MASK)
#define ADC_CEOCFR_EOCCH10_MASK                  0x400u
#define ADC_CEOCFR_EOCCH10_SHIFT                 10u
#define ADC_CEOCFR_EOCCH10_WIDTH                 1u
#define ADC_CEOCFR_EOCCH10(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH10_SHIFT))&ADC_CEOCFR_EOCCH10_MASK)
#define ADC_CEOCFR_EOCCH11_MASK                  0x800u
#define ADC_CEOCFR_EOCCH11_SHIFT                 11u
#define ADC_CEOCFR_EOCCH11_WIDTH                 1u
#define ADC_CEOCFR_EOCCH11(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH11_SHIFT))&ADC_CEOCFR_EOCCH11_MASK)
#define ADC_CEOCFR_EOCCH75_MASK                  0x800u
#define ADC_CEOCFR_EOCCH75_SHIFT                 11u
#define ADC_CEOCFR_EOCCH75_WIDTH                 1u
#define ADC_CEOCFR_EOCCH75(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH75_SHIFT))&ADC_CEOCFR_EOCCH75_MASK)
#define ADC_CEOCFR_EOCCH43_MASK                  0x800u
#define ADC_CEOCFR_EOCCH43_SHIFT                 11u
#define ADC_CEOCFR_EOCCH43_WIDTH                 1u
#define ADC_CEOCFR_EOCCH43(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH43_SHIFT))&ADC_CEOCFR_EOCCH43_MASK)
#define ADC_CEOCFR_EOCCH76_MASK                  0x1000u
#define ADC_CEOCFR_EOCCH76_SHIFT                 12u
#define ADC_CEOCFR_EOCCH76_WIDTH                 1u
#define ADC_CEOCFR_EOCCH76(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH76_SHIFT))&ADC_CEOCFR_EOCCH76_MASK)
#define ADC_CEOCFR_EOCCH12_MASK                  0x1000u
#define ADC_CEOCFR_EOCCH12_SHIFT                 12u
#define ADC_CEOCFR_EOCCH12_WIDTH                 1u
#define ADC_CEOCFR_EOCCH12(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH12_SHIFT))&ADC_CEOCFR_EOCCH12_MASK)
#define ADC_CEOCFR_EOCCH44_MASK                  0x1000u
#define ADC_CEOCFR_EOCCH44_SHIFT                 12u
#define ADC_CEOCFR_EOCCH44_WIDTH                 1u
#define ADC_CEOCFR_EOCCH44(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH44_SHIFT))&ADC_CEOCFR_EOCCH44_MASK)
#define ADC_CEOCFR_EOCCH45_MASK                  0x2000u
#define ADC_CEOCFR_EOCCH45_SHIFT                 13u
#define ADC_CEOCFR_EOCCH45_WIDTH                 1u
#define ADC_CEOCFR_EOCCH45(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH45_SHIFT))&ADC_CEOCFR_EOCCH45_MASK)
#define ADC_CEOCFR_EOCCH77_MASK                  0x2000u
#define ADC_CEOCFR_EOCCH77_SHIFT                 13u
#define ADC_CEOCFR_EOCCH77_WIDTH                 1u
#define ADC_CEOCFR_EOCCH77(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH77_SHIFT))&ADC_CEOCFR_EOCCH77_MASK)
#define ADC_CEOCFR_EOCCH13_MASK                  0x2000u
#define ADC_CEOCFR_EOCCH13_SHIFT                 13u
#define ADC_CEOCFR_EOCCH13_WIDTH                 1u
#define ADC_CEOCFR_EOCCH13(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH13_SHIFT))&ADC_CEOCFR_EOCCH13_MASK)
#define ADC_CEOCFR_EOCCH14_MASK                  0x4000u
#define ADC_CEOCFR_EOCCH14_SHIFT                 14u
#define ADC_CEOCFR_EOCCH14_WIDTH                 1u
#define ADC_CEOCFR_EOCCH14(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH14_SHIFT))&ADC_CEOCFR_EOCCH14_MASK)
#define ADC_CEOCFR_EOCCH46_MASK                  0x4000u
#define ADC_CEOCFR_EOCCH46_SHIFT                 14u
#define ADC_CEOCFR_EOCCH46_WIDTH                 1u
#define ADC_CEOCFR_EOCCH46(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH46_SHIFT))&ADC_CEOCFR_EOCCH46_MASK)
#define ADC_CEOCFR_EOCCH78_MASK                  0x4000u
#define ADC_CEOCFR_EOCCH78_SHIFT                 14u
#define ADC_CEOCFR_EOCCH78_WIDTH                 1u
#define ADC_CEOCFR_EOCCH78(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH78_SHIFT))&ADC_CEOCFR_EOCCH78_MASK)
#define ADC_CEOCFR_EOCCH47_MASK                  0x8000u
#define ADC_CEOCFR_EOCCH47_SHIFT                 15u
#define ADC_CEOCFR_EOCCH47_WIDTH                 1u
#define ADC_CEOCFR_EOCCH47(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH47_SHIFT))&ADC_CEOCFR_EOCCH47_MASK)
#define ADC_CEOCFR_EOCCH15_MASK                  0x8000u
#define ADC_CEOCFR_EOCCH15_SHIFT                 15u
#define ADC_CEOCFR_EOCCH15_WIDTH                 1u
#define ADC_CEOCFR_EOCCH15(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH15_SHIFT))&ADC_CEOCFR_EOCCH15_MASK)
#define ADC_CEOCFR_EOCCH79_MASK                  0x8000u
#define ADC_CEOCFR_EOCCH79_SHIFT                 15u
#define ADC_CEOCFR_EOCCH79_WIDTH                 1u
#define ADC_CEOCFR_EOCCH79(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH79_SHIFT))&ADC_CEOCFR_EOCCH79_MASK)
#define ADC_CEOCFR_EOCCH80_MASK                  0x10000u
#define ADC_CEOCFR_EOCCH80_SHIFT                 16u
#define ADC_CEOCFR_EOCCH80_WIDTH                 1u
#define ADC_CEOCFR_EOCCH80(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH80_SHIFT))&ADC_CEOCFR_EOCCH80_MASK)
#define ADC_CEOCFR_EOCCH48_MASK                  0x10000u
#define ADC_CEOCFR_EOCCH48_SHIFT                 16u
#define ADC_CEOCFR_EOCCH48_WIDTH                 1u
#define ADC_CEOCFR_EOCCH48(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH48_SHIFT))&ADC_CEOCFR_EOCCH48_MASK)
#define ADC_CEOCFR_EOCCH81_MASK                  0x20000u
#define ADC_CEOCFR_EOCCH81_SHIFT                 17u
#define ADC_CEOCFR_EOCCH81_WIDTH                 1u
#define ADC_CEOCFR_EOCCH81(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH81_SHIFT))&ADC_CEOCFR_EOCCH81_MASK)
#define ADC_CEOCFR_EOCCH49_MASK                  0x20000u
#define ADC_CEOCFR_EOCCH49_SHIFT                 17u
#define ADC_CEOCFR_EOCCH49_WIDTH                 1u
#define ADC_CEOCFR_EOCCH49(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH49_SHIFT))&ADC_CEOCFR_EOCCH49_MASK)
#define ADC_CEOCFR_EOCCH50_MASK                  0x40000u
#define ADC_CEOCFR_EOCCH50_SHIFT                 18u
#define ADC_CEOCFR_EOCCH50_WIDTH                 1u
#define ADC_CEOCFR_EOCCH50(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH50_SHIFT))&ADC_CEOCFR_EOCCH50_MASK)
#define ADC_CEOCFR_EOCCH82_MASK                  0x40000u
#define ADC_CEOCFR_EOCCH82_SHIFT                 18u
#define ADC_CEOCFR_EOCCH82_WIDTH                 1u
#define ADC_CEOCFR_EOCCH82(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH82_SHIFT))&ADC_CEOCFR_EOCCH82_MASK)
#define ADC_CEOCFR_EOCCH51_MASK                  0x80000u
#define ADC_CEOCFR_EOCCH51_SHIFT                 19u
#define ADC_CEOCFR_EOCCH51_WIDTH                 1u
#define ADC_CEOCFR_EOCCH51(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH51_SHIFT))&ADC_CEOCFR_EOCCH51_MASK)
#define ADC_CEOCFR_EOCCH83_MASK                  0x80000u
#define ADC_CEOCFR_EOCCH83_SHIFT                 19u
#define ADC_CEOCFR_EOCCH83_WIDTH                 1u
#define ADC_CEOCFR_EOCCH83(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH83_SHIFT))&ADC_CEOCFR_EOCCH83_MASK)
#define ADC_CEOCFR_EOCCH52_MASK                  0x100000u
#define ADC_CEOCFR_EOCCH52_SHIFT                 20u
#define ADC_CEOCFR_EOCCH52_WIDTH                 1u
#define ADC_CEOCFR_EOCCH52(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH52_SHIFT))&ADC_CEOCFR_EOCCH52_MASK)
#define ADC_CEOCFR_EOCCH84_MASK                  0x100000u
#define ADC_CEOCFR_EOCCH84_SHIFT                 20u
#define ADC_CEOCFR_EOCCH84_WIDTH                 1u
#define ADC_CEOCFR_EOCCH84(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH84_SHIFT))&ADC_CEOCFR_EOCCH84_MASK)
#define ADC_CEOCFR_EOCCH53_MASK                  0x200000u
#define ADC_CEOCFR_EOCCH53_SHIFT                 21u
#define ADC_CEOCFR_EOCCH53_WIDTH                 1u
#define ADC_CEOCFR_EOCCH53(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH53_SHIFT))&ADC_CEOCFR_EOCCH53_MASK)
#define ADC_CEOCFR_EOCCH85_MASK                  0x200000u
#define ADC_CEOCFR_EOCCH85_SHIFT                 21u
#define ADC_CEOCFR_EOCCH85_WIDTH                 1u
#define ADC_CEOCFR_EOCCH85(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH85_SHIFT))&ADC_CEOCFR_EOCCH85_MASK)
#define ADC_CEOCFR_EOCCH54_MASK                  0x400000u
#define ADC_CEOCFR_EOCCH54_SHIFT                 22u
#define ADC_CEOCFR_EOCCH54_WIDTH                 1u
#define ADC_CEOCFR_EOCCH54(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH54_SHIFT))&ADC_CEOCFR_EOCCH54_MASK)
#define ADC_CEOCFR_EOCCH86_MASK                  0x400000u
#define ADC_CEOCFR_EOCCH86_SHIFT                 22u
#define ADC_CEOCFR_EOCCH86_WIDTH                 1u
#define ADC_CEOCFR_EOCCH86(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH86_SHIFT))&ADC_CEOCFR_EOCCH86_MASK)
#define ADC_CEOCFR_EOCCH55_MASK                  0x800000u
#define ADC_CEOCFR_EOCCH55_SHIFT                 23u
#define ADC_CEOCFR_EOCCH55_WIDTH                 1u
#define ADC_CEOCFR_EOCCH55(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH55_SHIFT))&ADC_CEOCFR_EOCCH55_MASK)
#define ADC_CEOCFR_EOCCH87_MASK                  0x800000u
#define ADC_CEOCFR_EOCCH87_SHIFT                 23u
#define ADC_CEOCFR_EOCCH87_WIDTH                 1u
#define ADC_CEOCFR_EOCCH87(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH87_SHIFT))&ADC_CEOCFR_EOCCH87_MASK)
#define ADC_CEOCFR_EOCCH88_MASK                  0x1000000u
#define ADC_CEOCFR_EOCCH88_SHIFT                 24u
#define ADC_CEOCFR_EOCCH88_WIDTH                 1u
#define ADC_CEOCFR_EOCCH88(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH88_SHIFT))&ADC_CEOCFR_EOCCH88_MASK)
#define ADC_CEOCFR_EOCCH56_MASK                  0x1000000u
#define ADC_CEOCFR_EOCCH56_SHIFT                 24u
#define ADC_CEOCFR_EOCCH56_WIDTH                 1u
#define ADC_CEOCFR_EOCCH56(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH56_SHIFT))&ADC_CEOCFR_EOCCH56_MASK)
#define ADC_CEOCFR_EOCCH89_MASK                  0x2000000u
#define ADC_CEOCFR_EOCCH89_SHIFT                 25u
#define ADC_CEOCFR_EOCCH89_WIDTH                 1u
#define ADC_CEOCFR_EOCCH89(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH89_SHIFT))&ADC_CEOCFR_EOCCH89_MASK)
#define ADC_CEOCFR_EOCCH57_MASK                  0x2000000u
#define ADC_CEOCFR_EOCCH57_SHIFT                 25u
#define ADC_CEOCFR_EOCCH57_WIDTH                 1u
#define ADC_CEOCFR_EOCCH57(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH57_SHIFT))&ADC_CEOCFR_EOCCH57_MASK)
#define ADC_CEOCFR_EOCCH90_MASK                  0x4000000u
#define ADC_CEOCFR_EOCCH90_SHIFT                 26u
#define ADC_CEOCFR_EOCCH90_WIDTH                 1u
#define ADC_CEOCFR_EOCCH90(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH90_SHIFT))&ADC_CEOCFR_EOCCH90_MASK)
#define ADC_CEOCFR_EOCCH58_MASK                  0x4000000u
#define ADC_CEOCFR_EOCCH58_SHIFT                 26u
#define ADC_CEOCFR_EOCCH58_WIDTH                 1u
#define ADC_CEOCFR_EOCCH58(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH58_SHIFT))&ADC_CEOCFR_EOCCH58_MASK)
#define ADC_CEOCFR_EOCCH59_MASK                  0x8000000u
#define ADC_CEOCFR_EOCCH59_SHIFT                 27u
#define ADC_CEOCFR_EOCCH59_WIDTH                 1u
#define ADC_CEOCFR_EOCCH59(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH59_SHIFT))&ADC_CEOCFR_EOCCH59_MASK)
#define ADC_CEOCFR_EOCCH91_MASK                  0x8000000u
#define ADC_CEOCFR_EOCCH91_SHIFT                 27u
#define ADC_CEOCFR_EOCCH91_WIDTH                 1u
#define ADC_CEOCFR_EOCCH91(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH91_SHIFT))&ADC_CEOCFR_EOCCH91_MASK)
#define ADC_CEOCFR_EOCCH60_MASK                  0x10000000u
#define ADC_CEOCFR_EOCCH60_SHIFT                 28u
#define ADC_CEOCFR_EOCCH60_WIDTH                 1u
#define ADC_CEOCFR_EOCCH60(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH60_SHIFT))&ADC_CEOCFR_EOCCH60_MASK)
#define ADC_CEOCFR_EOCCH92_MASK                  0x10000000u
#define ADC_CEOCFR_EOCCH92_SHIFT                 28u
#define ADC_CEOCFR_EOCCH92_WIDTH                 1u
#define ADC_CEOCFR_EOCCH92(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH92_SHIFT))&ADC_CEOCFR_EOCCH92_MASK)
#define ADC_CEOCFR_EOCCH61_MASK                  0x20000000u
#define ADC_CEOCFR_EOCCH61_SHIFT                 29u
#define ADC_CEOCFR_EOCCH61_WIDTH                 1u
#define ADC_CEOCFR_EOCCH61(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH61_SHIFT))&ADC_CEOCFR_EOCCH61_MASK)
#define ADC_CEOCFR_EOCCH93_MASK                  0x20000000u
#define ADC_CEOCFR_EOCCH93_SHIFT                 29u
#define ADC_CEOCFR_EOCCH93_WIDTH                 1u
#define ADC_CEOCFR_EOCCH93(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH93_SHIFT))&ADC_CEOCFR_EOCCH93_MASK)
#define ADC_CEOCFR_EOCCH94_MASK                  0x40000000u
#define ADC_CEOCFR_EOCCH94_SHIFT                 30u
#define ADC_CEOCFR_EOCCH94_WIDTH                 1u
#define ADC_CEOCFR_EOCCH94(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH94_SHIFT))&ADC_CEOCFR_EOCCH94_MASK)
#define ADC_CEOCFR_EOCCH62_MASK                  0x40000000u
#define ADC_CEOCFR_EOCCH62_SHIFT                 30u
#define ADC_CEOCFR_EOCCH62_WIDTH                 1u
#define ADC_CEOCFR_EOCCH62(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH62_SHIFT))&ADC_CEOCFR_EOCCH62_MASK)
#define ADC_CEOCFR_EOCCH95_MASK                  0x80000000u
#define ADC_CEOCFR_EOCCH95_SHIFT                 31u
#define ADC_CEOCFR_EOCCH95_WIDTH                 1u
#define ADC_CEOCFR_EOCCH95(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH95_SHIFT))&ADC_CEOCFR_EOCCH95_MASK)
#define ADC_CEOCFR_EOCCH63_MASK                  0x80000000u
#define ADC_CEOCFR_EOCCH63_SHIFT                 31u
#define ADC_CEOCFR_EOCCH63_WIDTH                 1u
#define ADC_CEOCFR_EOCCH63(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_CEOCFR_EOCCH63_SHIFT))&ADC_CEOCFR_EOCCH63_MASK)
/* IMR Bit Fields */
#define ADC_IMR_MSKECH_MASK                      0x1u
#define ADC_IMR_MSKECH_SHIFT                     0u
#define ADC_IMR_MSKECH_WIDTH                     1u
#define ADC_IMR_MSKECH(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKECH_SHIFT))&ADC_IMR_MSKECH_MASK)
#define ADC_IMR_MSKEOC_MASK                      0x2u
#define ADC_IMR_MSKEOC_SHIFT                     1u
#define ADC_IMR_MSKEOC_WIDTH                     1u
#define ADC_IMR_MSKEOC(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKEOC_SHIFT))&ADC_IMR_MSKEOC_MASK)
#define ADC_IMR_MSKJECH_MASK                     0x4u
#define ADC_IMR_MSKJECH_SHIFT                    2u
#define ADC_IMR_MSKJECH_WIDTH                    1u
#define ADC_IMR_MSKJECH(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKJECH_SHIFT))&ADC_IMR_MSKJECH_MASK)
#define ADC_IMR_MSKJEOC_MASK                     0x8u
#define ADC_IMR_MSKJEOC_SHIFT                    3u
#define ADC_IMR_MSKJEOC_WIDTH                    1u
#define ADC_IMR_MSKJEOC(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKJEOC_SHIFT))&ADC_IMR_MSKJEOC_MASK)
#define ADC_IMR_MSKEOCTU_MASK                    0x10u
#define ADC_IMR_MSKEOCTU_SHIFT                   4u
#define ADC_IMR_MSKEOCTU_WIDTH                   1u
#define ADC_IMR_MSKEOCTU(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_IMR_MSKEOCTU_SHIFT))&ADC_IMR_MSKEOCTU_MASK)
/* CIMR Bit Fields */
#define ADC_CIMR_CIM0_MASK                       0x1u
#define ADC_CIMR_CIM0_SHIFT                      0u
#define ADC_CIMR_CIM0_WIDTH                      1u
#define ADC_CIMR_CIM0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM0_SHIFT))&ADC_CIMR_CIM0_MASK)
#define ADC_CIMR_CIM64_MASK                      0x1u
#define ADC_CIMR_CIM64_SHIFT                     0u
#define ADC_CIMR_CIM64_WIDTH                     1u
#define ADC_CIMR_CIM64(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM64_SHIFT))&ADC_CIMR_CIM64_MASK)
#define ADC_CIMR_CIM32_MASK                      0x1u
#define ADC_CIMR_CIM32_SHIFT                     0u
#define ADC_CIMR_CIM32_WIDTH                     1u
#define ADC_CIMR_CIM32(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM32_SHIFT))&ADC_CIMR_CIM32_MASK)
#define ADC_CIMR_CIM65_MASK                      0x2u
#define ADC_CIMR_CIM65_SHIFT                     1u
#define ADC_CIMR_CIM65_WIDTH                     1u
#define ADC_CIMR_CIM65(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM65_SHIFT))&ADC_CIMR_CIM65_MASK)
#define ADC_CIMR_CIM33_MASK                      0x2u
#define ADC_CIMR_CIM33_SHIFT                     1u
#define ADC_CIMR_CIM33_WIDTH                     1u
#define ADC_CIMR_CIM33(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM33_SHIFT))&ADC_CIMR_CIM33_MASK)
#define ADC_CIMR_CIM1_MASK                       0x2u
#define ADC_CIMR_CIM1_SHIFT                      1u
#define ADC_CIMR_CIM1_WIDTH                      1u
#define ADC_CIMR_CIM1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM1_SHIFT))&ADC_CIMR_CIM1_MASK)
#define ADC_CIMR_CIM34_MASK                      0x4u
#define ADC_CIMR_CIM34_SHIFT                     2u
#define ADC_CIMR_CIM34_WIDTH                     1u
#define ADC_CIMR_CIM34(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM34_SHIFT))&ADC_CIMR_CIM34_MASK)
#define ADC_CIMR_CIM2_MASK                       0x4u
#define ADC_CIMR_CIM2_SHIFT                      2u
#define ADC_CIMR_CIM2_WIDTH                      1u
#define ADC_CIMR_CIM2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM2_SHIFT))&ADC_CIMR_CIM2_MASK)
#define ADC_CIMR_CIM66_MASK                      0x4u
#define ADC_CIMR_CIM66_SHIFT                     2u
#define ADC_CIMR_CIM66_WIDTH                     1u
#define ADC_CIMR_CIM66(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM66_SHIFT))&ADC_CIMR_CIM66_MASK)
#define ADC_CIMR_CIM67_MASK                      0x8u
#define ADC_CIMR_CIM67_SHIFT                     3u
#define ADC_CIMR_CIM67_WIDTH                     1u
#define ADC_CIMR_CIM67(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM67_SHIFT))&ADC_CIMR_CIM67_MASK)
#define ADC_CIMR_CIM3_MASK                       0x8u
#define ADC_CIMR_CIM3_SHIFT                      3u
#define ADC_CIMR_CIM3_WIDTH                      1u
#define ADC_CIMR_CIM3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM3_SHIFT))&ADC_CIMR_CIM3_MASK)
#define ADC_CIMR_CIM35_MASK                      0x8u
#define ADC_CIMR_CIM35_SHIFT                     3u
#define ADC_CIMR_CIM35_WIDTH                     1u
#define ADC_CIMR_CIM35(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM35_SHIFT))&ADC_CIMR_CIM35_MASK)
#define ADC_CIMR_CIM4_MASK                       0x10u
#define ADC_CIMR_CIM4_SHIFT                      4u
#define ADC_CIMR_CIM4_WIDTH                      1u
#define ADC_CIMR_CIM4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM4_SHIFT))&ADC_CIMR_CIM4_MASK)
#define ADC_CIMR_CIM36_MASK                      0x10u
#define ADC_CIMR_CIM36_SHIFT                     4u
#define ADC_CIMR_CIM36_WIDTH                     1u
#define ADC_CIMR_CIM36(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM36_SHIFT))&ADC_CIMR_CIM36_MASK)
#define ADC_CIMR_CIM68_MASK                      0x10u
#define ADC_CIMR_CIM68_SHIFT                     4u
#define ADC_CIMR_CIM68_WIDTH                     1u
#define ADC_CIMR_CIM68(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM68_SHIFT))&ADC_CIMR_CIM68_MASK)
#define ADC_CIMR_CIM69_MASK                      0x20u
#define ADC_CIMR_CIM69_SHIFT                     5u
#define ADC_CIMR_CIM69_WIDTH                     1u
#define ADC_CIMR_CIM69(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM69_SHIFT))&ADC_CIMR_CIM69_MASK)
#define ADC_CIMR_CIM37_MASK                      0x20u
#define ADC_CIMR_CIM37_SHIFT                     5u
#define ADC_CIMR_CIM37_WIDTH                     1u
#define ADC_CIMR_CIM37(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM37_SHIFT))&ADC_CIMR_CIM37_MASK)
#define ADC_CIMR_CIM5_MASK                       0x20u
#define ADC_CIMR_CIM5_SHIFT                      5u
#define ADC_CIMR_CIM5_WIDTH                      1u
#define ADC_CIMR_CIM5(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM5_SHIFT))&ADC_CIMR_CIM5_MASK)
#define ADC_CIMR_CIM70_MASK                      0x40u
#define ADC_CIMR_CIM70_SHIFT                     6u
#define ADC_CIMR_CIM70_WIDTH                     1u
#define ADC_CIMR_CIM70(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM70_SHIFT))&ADC_CIMR_CIM70_MASK)
#define ADC_CIMR_CIM38_MASK                      0x40u
#define ADC_CIMR_CIM38_SHIFT                     6u
#define ADC_CIMR_CIM38_WIDTH                     1u
#define ADC_CIMR_CIM38(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM38_SHIFT))&ADC_CIMR_CIM38_MASK)
#define ADC_CIMR_CIM6_MASK                       0x40u
#define ADC_CIMR_CIM6_SHIFT                      6u
#define ADC_CIMR_CIM6_WIDTH                      1u
#define ADC_CIMR_CIM6(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM6_SHIFT))&ADC_CIMR_CIM6_MASK)
#define ADC_CIMR_CIM7_MASK                       0x80u
#define ADC_CIMR_CIM7_SHIFT                      7u
#define ADC_CIMR_CIM7_WIDTH                      1u
#define ADC_CIMR_CIM7(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM7_SHIFT))&ADC_CIMR_CIM7_MASK)
#define ADC_CIMR_CIM39_MASK                      0x80u
#define ADC_CIMR_CIM39_SHIFT                     7u
#define ADC_CIMR_CIM39_WIDTH                     1u
#define ADC_CIMR_CIM39(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM39_SHIFT))&ADC_CIMR_CIM39_MASK)
#define ADC_CIMR_CIM71_MASK                      0x80u
#define ADC_CIMR_CIM71_SHIFT                     7u
#define ADC_CIMR_CIM71_WIDTH                     1u
#define ADC_CIMR_CIM71(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM71_SHIFT))&ADC_CIMR_CIM71_MASK)
#define ADC_CIMR_CIM8_MASK                       0x100u
#define ADC_CIMR_CIM8_SHIFT                      8u
#define ADC_CIMR_CIM8_WIDTH                      1u
#define ADC_CIMR_CIM8(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM8_SHIFT))&ADC_CIMR_CIM8_MASK)
#define ADC_CIMR_CIM40_MASK                      0x100u
#define ADC_CIMR_CIM40_SHIFT                     8u
#define ADC_CIMR_CIM40_WIDTH                     1u
#define ADC_CIMR_CIM40(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM40_SHIFT))&ADC_CIMR_CIM40_MASK)
#define ADC_CIMR_CIM72_MASK                      0x100u
#define ADC_CIMR_CIM72_SHIFT                     8u
#define ADC_CIMR_CIM72_WIDTH                     1u
#define ADC_CIMR_CIM72(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM72_SHIFT))&ADC_CIMR_CIM72_MASK)
#define ADC_CIMR_CIM73_MASK                      0x200u
#define ADC_CIMR_CIM73_SHIFT                     9u
#define ADC_CIMR_CIM73_WIDTH                     1u
#define ADC_CIMR_CIM73(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM73_SHIFT))&ADC_CIMR_CIM73_MASK)
#define ADC_CIMR_CIM41_MASK                      0x200u
#define ADC_CIMR_CIM41_SHIFT                     9u
#define ADC_CIMR_CIM41_WIDTH                     1u
#define ADC_CIMR_CIM41(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM41_SHIFT))&ADC_CIMR_CIM41_MASK)
#define ADC_CIMR_CIM9_MASK                       0x200u
#define ADC_CIMR_CIM9_SHIFT                      9u
#define ADC_CIMR_CIM9_WIDTH                      1u
#define ADC_CIMR_CIM9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM9_SHIFT))&ADC_CIMR_CIM9_MASK)
#define ADC_CIMR_CIM42_MASK                      0x400u
#define ADC_CIMR_CIM42_SHIFT                     10u
#define ADC_CIMR_CIM42_WIDTH                     1u
#define ADC_CIMR_CIM42(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM42_SHIFT))&ADC_CIMR_CIM42_MASK)
#define ADC_CIMR_CIM74_MASK                      0x400u
#define ADC_CIMR_CIM74_SHIFT                     10u
#define ADC_CIMR_CIM74_WIDTH                     1u
#define ADC_CIMR_CIM74(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM74_SHIFT))&ADC_CIMR_CIM74_MASK)
#define ADC_CIMR_CIM10_MASK                      0x400u
#define ADC_CIMR_CIM10_SHIFT                     10u
#define ADC_CIMR_CIM10_WIDTH                     1u
#define ADC_CIMR_CIM10(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM10_SHIFT))&ADC_CIMR_CIM10_MASK)
#define ADC_CIMR_CIM11_MASK                      0x800u
#define ADC_CIMR_CIM11_SHIFT                     11u
#define ADC_CIMR_CIM11_WIDTH                     1u
#define ADC_CIMR_CIM11(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM11_SHIFT))&ADC_CIMR_CIM11_MASK)
#define ADC_CIMR_CIM75_MASK                      0x800u
#define ADC_CIMR_CIM75_SHIFT                     11u
#define ADC_CIMR_CIM75_WIDTH                     1u
#define ADC_CIMR_CIM75(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM75_SHIFT))&ADC_CIMR_CIM75_MASK)
#define ADC_CIMR_CIM43_MASK                      0x800u
#define ADC_CIMR_CIM43_SHIFT                     11u
#define ADC_CIMR_CIM43_WIDTH                     1u
#define ADC_CIMR_CIM43(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM43_SHIFT))&ADC_CIMR_CIM43_MASK)
#define ADC_CIMR_CIM76_MASK                      0x1000u
#define ADC_CIMR_CIM76_SHIFT                     12u
#define ADC_CIMR_CIM76_WIDTH                     1u
#define ADC_CIMR_CIM76(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM76_SHIFT))&ADC_CIMR_CIM76_MASK)
#define ADC_CIMR_CIM12_MASK                      0x1000u
#define ADC_CIMR_CIM12_SHIFT                     12u
#define ADC_CIMR_CIM12_WIDTH                     1u
#define ADC_CIMR_CIM12(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM12_SHIFT))&ADC_CIMR_CIM12_MASK)
#define ADC_CIMR_CIM44_MASK                      0x1000u
#define ADC_CIMR_CIM44_SHIFT                     12u
#define ADC_CIMR_CIM44_WIDTH                     1u
#define ADC_CIMR_CIM44(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM44_SHIFT))&ADC_CIMR_CIM44_MASK)
#define ADC_CIMR_CIM45_MASK                      0x2000u
#define ADC_CIMR_CIM45_SHIFT                     13u
#define ADC_CIMR_CIM45_WIDTH                     1u
#define ADC_CIMR_CIM45(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM45_SHIFT))&ADC_CIMR_CIM45_MASK)
#define ADC_CIMR_CIM77_MASK                      0x2000u
#define ADC_CIMR_CIM77_SHIFT                     13u
#define ADC_CIMR_CIM77_WIDTH                     1u
#define ADC_CIMR_CIM77(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM77_SHIFT))&ADC_CIMR_CIM77_MASK)
#define ADC_CIMR_CIM13_MASK                      0x2000u
#define ADC_CIMR_CIM13_SHIFT                     13u
#define ADC_CIMR_CIM13_WIDTH                     1u
#define ADC_CIMR_CIM13(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM13_SHIFT))&ADC_CIMR_CIM13_MASK)
#define ADC_CIMR_CIM14_MASK                      0x4000u
#define ADC_CIMR_CIM14_SHIFT                     14u
#define ADC_CIMR_CIM14_WIDTH                     1u
#define ADC_CIMR_CIM14(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM14_SHIFT))&ADC_CIMR_CIM14_MASK)
#define ADC_CIMR_CIM46_MASK                      0x4000u
#define ADC_CIMR_CIM46_SHIFT                     14u
#define ADC_CIMR_CIM46_WIDTH                     1u
#define ADC_CIMR_CIM46(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM46_SHIFT))&ADC_CIMR_CIM46_MASK)
#define ADC_CIMR_CIM78_MASK                      0x4000u
#define ADC_CIMR_CIM78_SHIFT                     14u
#define ADC_CIMR_CIM78_WIDTH                     1u
#define ADC_CIMR_CIM78(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM78_SHIFT))&ADC_CIMR_CIM78_MASK)
#define ADC_CIMR_CIM47_MASK                      0x8000u
#define ADC_CIMR_CIM47_SHIFT                     15u
#define ADC_CIMR_CIM47_WIDTH                     1u
#define ADC_CIMR_CIM47(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM47_SHIFT))&ADC_CIMR_CIM47_MASK)
#define ADC_CIMR_CIM15_MASK                      0x8000u
#define ADC_CIMR_CIM15_SHIFT                     15u
#define ADC_CIMR_CIM15_WIDTH                     1u
#define ADC_CIMR_CIM15(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM15_SHIFT))&ADC_CIMR_CIM15_MASK)
#define ADC_CIMR_CIM79_MASK                      0x8000u
#define ADC_CIMR_CIM79_SHIFT                     15u
#define ADC_CIMR_CIM79_WIDTH                     1u
#define ADC_CIMR_CIM79(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM79_SHIFT))&ADC_CIMR_CIM79_MASK)
#define ADC_CIMR_CIM80_MASK                      0x10000u
#define ADC_CIMR_CIM80_SHIFT                     16u
#define ADC_CIMR_CIM80_WIDTH                     1u
#define ADC_CIMR_CIM80(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM80_SHIFT))&ADC_CIMR_CIM80_MASK)
#define ADC_CIMR_CIM48_MASK                      0x10000u
#define ADC_CIMR_CIM48_SHIFT                     16u
#define ADC_CIMR_CIM48_WIDTH                     1u
#define ADC_CIMR_CIM48(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM48_SHIFT))&ADC_CIMR_CIM48_MASK)
#define ADC_CIMR_CIM81_MASK                      0x20000u
#define ADC_CIMR_CIM81_SHIFT                     17u
#define ADC_CIMR_CIM81_WIDTH                     1u
#define ADC_CIMR_CIM81(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM81_SHIFT))&ADC_CIMR_CIM81_MASK)
#define ADC_CIMR_CIM49_MASK                      0x20000u
#define ADC_CIMR_CIM49_SHIFT                     17u
#define ADC_CIMR_CIM49_WIDTH                     1u
#define ADC_CIMR_CIM49(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM49_SHIFT))&ADC_CIMR_CIM49_MASK)
#define ADC_CIMR_CIM50_MASK                      0x40000u
#define ADC_CIMR_CIM50_SHIFT                     18u
#define ADC_CIMR_CIM50_WIDTH                     1u
#define ADC_CIMR_CIM50(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM50_SHIFT))&ADC_CIMR_CIM50_MASK)
#define ADC_CIMR_CIM82_MASK                      0x40000u
#define ADC_CIMR_CIM82_SHIFT                     18u
#define ADC_CIMR_CIM82_WIDTH                     1u
#define ADC_CIMR_CIM82(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM82_SHIFT))&ADC_CIMR_CIM82_MASK)
#define ADC_CIMR_CIM51_MASK                      0x80000u
#define ADC_CIMR_CIM51_SHIFT                     19u
#define ADC_CIMR_CIM51_WIDTH                     1u
#define ADC_CIMR_CIM51(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM51_SHIFT))&ADC_CIMR_CIM51_MASK)
#define ADC_CIMR_CIM83_MASK                      0x80000u
#define ADC_CIMR_CIM83_SHIFT                     19u
#define ADC_CIMR_CIM83_WIDTH                     1u
#define ADC_CIMR_CIM83(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM83_SHIFT))&ADC_CIMR_CIM83_MASK)
#define ADC_CIMR_CIM52_MASK                      0x100000u
#define ADC_CIMR_CIM52_SHIFT                     20u
#define ADC_CIMR_CIM52_WIDTH                     1u
#define ADC_CIMR_CIM52(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM52_SHIFT))&ADC_CIMR_CIM52_MASK)
#define ADC_CIMR_CIM84_MASK                      0x100000u
#define ADC_CIMR_CIM84_SHIFT                     20u
#define ADC_CIMR_CIM84_WIDTH                     1u
#define ADC_CIMR_CIM84(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM84_SHIFT))&ADC_CIMR_CIM84_MASK)
#define ADC_CIMR_CIM53_MASK                      0x200000u
#define ADC_CIMR_CIM53_SHIFT                     21u
#define ADC_CIMR_CIM53_WIDTH                     1u
#define ADC_CIMR_CIM53(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM53_SHIFT))&ADC_CIMR_CIM53_MASK)
#define ADC_CIMR_CIM85_MASK                      0x200000u
#define ADC_CIMR_CIM85_SHIFT                     21u
#define ADC_CIMR_CIM85_WIDTH                     1u
#define ADC_CIMR_CIM85(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM85_SHIFT))&ADC_CIMR_CIM85_MASK)
#define ADC_CIMR_CIM54_MASK                      0x400000u
#define ADC_CIMR_CIM54_SHIFT                     22u
#define ADC_CIMR_CIM54_WIDTH                     1u
#define ADC_CIMR_CIM54(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM54_SHIFT))&ADC_CIMR_CIM54_MASK)
#define ADC_CIMR_CIM86_MASK                      0x400000u
#define ADC_CIMR_CIM86_SHIFT                     22u
#define ADC_CIMR_CIM86_WIDTH                     1u
#define ADC_CIMR_CIM86(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM86_SHIFT))&ADC_CIMR_CIM86_MASK)
#define ADC_CIMR_CIM55_MASK                      0x800000u
#define ADC_CIMR_CIM55_SHIFT                     23u
#define ADC_CIMR_CIM55_WIDTH                     1u
#define ADC_CIMR_CIM55(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM55_SHIFT))&ADC_CIMR_CIM55_MASK)
#define ADC_CIMR_CIM87_MASK                      0x800000u
#define ADC_CIMR_CIM87_SHIFT                     23u
#define ADC_CIMR_CIM87_WIDTH                     1u
#define ADC_CIMR_CIM87(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM87_SHIFT))&ADC_CIMR_CIM87_MASK)
#define ADC_CIMR_CIM88_MASK                      0x1000000u
#define ADC_CIMR_CIM88_SHIFT                     24u
#define ADC_CIMR_CIM88_WIDTH                     1u
#define ADC_CIMR_CIM88(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM88_SHIFT))&ADC_CIMR_CIM88_MASK)
#define ADC_CIMR_CIM56_MASK                      0x1000000u
#define ADC_CIMR_CIM56_SHIFT                     24u
#define ADC_CIMR_CIM56_WIDTH                     1u
#define ADC_CIMR_CIM56(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM56_SHIFT))&ADC_CIMR_CIM56_MASK)
#define ADC_CIMR_CIM89_MASK                      0x2000000u
#define ADC_CIMR_CIM89_SHIFT                     25u
#define ADC_CIMR_CIM89_WIDTH                     1u
#define ADC_CIMR_CIM89(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM89_SHIFT))&ADC_CIMR_CIM89_MASK)
#define ADC_CIMR_CIM57_MASK                      0x2000000u
#define ADC_CIMR_CIM57_SHIFT                     25u
#define ADC_CIMR_CIM57_WIDTH                     1u
#define ADC_CIMR_CIM57(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM57_SHIFT))&ADC_CIMR_CIM57_MASK)
#define ADC_CIMR_CIM90_MASK                      0x4000000u
#define ADC_CIMR_CIM90_SHIFT                     26u
#define ADC_CIMR_CIM90_WIDTH                     1u
#define ADC_CIMR_CIM90(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM90_SHIFT))&ADC_CIMR_CIM90_MASK)
#define ADC_CIMR_CIM58_MASK                      0x4000000u
#define ADC_CIMR_CIM58_SHIFT                     26u
#define ADC_CIMR_CIM58_WIDTH                     1u
#define ADC_CIMR_CIM58(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM58_SHIFT))&ADC_CIMR_CIM58_MASK)
#define ADC_CIMR_CIM59_MASK                      0x8000000u
#define ADC_CIMR_CIM59_SHIFT                     27u
#define ADC_CIMR_CIM59_WIDTH                     1u
#define ADC_CIMR_CIM59(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM59_SHIFT))&ADC_CIMR_CIM59_MASK)
#define ADC_CIMR_CIM91_MASK                      0x8000000u
#define ADC_CIMR_CIM91_SHIFT                     27u
#define ADC_CIMR_CIM91_WIDTH                     1u
#define ADC_CIMR_CIM91(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM91_SHIFT))&ADC_CIMR_CIM91_MASK)
#define ADC_CIMR_CIM60_MASK                      0x10000000u
#define ADC_CIMR_CIM60_SHIFT                     28u
#define ADC_CIMR_CIM60_WIDTH                     1u
#define ADC_CIMR_CIM60(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM60_SHIFT))&ADC_CIMR_CIM60_MASK)
#define ADC_CIMR_CIM92_MASK                      0x10000000u
#define ADC_CIMR_CIM92_SHIFT                     28u
#define ADC_CIMR_CIM92_WIDTH                     1u
#define ADC_CIMR_CIM92(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM92_SHIFT))&ADC_CIMR_CIM92_MASK)
#define ADC_CIMR_CIM61_MASK                      0x20000000u
#define ADC_CIMR_CIM61_SHIFT                     29u
#define ADC_CIMR_CIM61_WIDTH                     1u
#define ADC_CIMR_CIM61(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM61_SHIFT))&ADC_CIMR_CIM61_MASK)
#define ADC_CIMR_CIM93_MASK                      0x20000000u
#define ADC_CIMR_CIM93_SHIFT                     29u
#define ADC_CIMR_CIM93_WIDTH                     1u
#define ADC_CIMR_CIM93(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM93_SHIFT))&ADC_CIMR_CIM93_MASK)
#define ADC_CIMR_CIM94_MASK                      0x40000000u
#define ADC_CIMR_CIM94_SHIFT                     30u
#define ADC_CIMR_CIM94_WIDTH                     1u
#define ADC_CIMR_CIM94(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM94_SHIFT))&ADC_CIMR_CIM94_MASK)
#define ADC_CIMR_CIM62_MASK                      0x40000000u
#define ADC_CIMR_CIM62_SHIFT                     30u
#define ADC_CIMR_CIM62_WIDTH                     1u
#define ADC_CIMR_CIM62(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM62_SHIFT))&ADC_CIMR_CIM62_MASK)
#define ADC_CIMR_CIM95_MASK                      0x80000000u
#define ADC_CIMR_CIM95_SHIFT                     31u
#define ADC_CIMR_CIM95_WIDTH                     1u
#define ADC_CIMR_CIM95(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM95_SHIFT))&ADC_CIMR_CIM95_MASK)
#define ADC_CIMR_CIM63_MASK                      0x80000000u
#define ADC_CIMR_CIM63_SHIFT                     31u
#define ADC_CIMR_CIM63_WIDTH                     1u
#define ADC_CIMR_CIM63(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CIMR_CIM63_SHIFT))&ADC_CIMR_CIM63_MASK)
/* WTISR Bit Fields */
#define ADC_WTISR_WDG0L_MASK                     0x1u
#define ADC_WTISR_WDG0L_SHIFT                    0u
#define ADC_WTISR_WDG0L_WIDTH                    1u
#define ADC_WTISR_WDG0L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG0L_SHIFT))&ADC_WTISR_WDG0L_MASK)
#define ADC_WTISR_WDG0H_MASK                     0x2u
#define ADC_WTISR_WDG0H_SHIFT                    1u
#define ADC_WTISR_WDG0H_WIDTH                    1u
#define ADC_WTISR_WDG0H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG0H_SHIFT))&ADC_WTISR_WDG0H_MASK)
#define ADC_WTISR_WDG1L_MASK                     0x4u
#define ADC_WTISR_WDG1L_SHIFT                    2u
#define ADC_WTISR_WDG1L_WIDTH                    1u
#define ADC_WTISR_WDG1L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG1L_SHIFT))&ADC_WTISR_WDG1L_MASK)
#define ADC_WTISR_WDG1H_MASK                     0x8u
#define ADC_WTISR_WDG1H_SHIFT                    3u
#define ADC_WTISR_WDG1H_WIDTH                    1u
#define ADC_WTISR_WDG1H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG1H_SHIFT))&ADC_WTISR_WDG1H_MASK)
#define ADC_WTISR_WDG2L_MASK                     0x10u
#define ADC_WTISR_WDG2L_SHIFT                    4u
#define ADC_WTISR_WDG2L_WIDTH                    1u
#define ADC_WTISR_WDG2L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG2L_SHIFT))&ADC_WTISR_WDG2L_MASK)
#define ADC_WTISR_WDG2H_MASK                     0x20u
#define ADC_WTISR_WDG2H_SHIFT                    5u
#define ADC_WTISR_WDG2H_WIDTH                    1u
#define ADC_WTISR_WDG2H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG2H_SHIFT))&ADC_WTISR_WDG2H_MASK)
#define ADC_WTISR_WDG3L_MASK                     0x40u
#define ADC_WTISR_WDG3L_SHIFT                    6u
#define ADC_WTISR_WDG3L_WIDTH                    1u
#define ADC_WTISR_WDG3L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG3L_SHIFT))&ADC_WTISR_WDG3L_MASK)
#define ADC_WTISR_WDG3H_MASK                     0x80u
#define ADC_WTISR_WDG3H_SHIFT                    7u
#define ADC_WTISR_WDG3H_WIDTH                    1u
#define ADC_WTISR_WDG3H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG3H_SHIFT))&ADC_WTISR_WDG3H_MASK)
#define ADC_WTISR_WDG4L_MASK                     0x100u
#define ADC_WTISR_WDG4L_SHIFT                    8u
#define ADC_WTISR_WDG4L_WIDTH                    1u
#define ADC_WTISR_WDG4L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG4L_SHIFT))&ADC_WTISR_WDG4L_MASK)
#define ADC_WTISR_WDG4H_MASK                     0x200u
#define ADC_WTISR_WDG4H_SHIFT                    9u
#define ADC_WTISR_WDG4H_WIDTH                    1u
#define ADC_WTISR_WDG4H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG4H_SHIFT))&ADC_WTISR_WDG4H_MASK)
#define ADC_WTISR_WDG5L_MASK                     0x400u
#define ADC_WTISR_WDG5L_SHIFT                    10u
#define ADC_WTISR_WDG5L_WIDTH                    1u
#define ADC_WTISR_WDG5L(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG5L_SHIFT))&ADC_WTISR_WDG5L_MASK)
#define ADC_WTISR_WDG5H_MASK                     0x800u
#define ADC_WTISR_WDG5H_SHIFT                    11u
#define ADC_WTISR_WDG5H_WIDTH                    1u
#define ADC_WTISR_WDG5H(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_WTISR_WDG5H_SHIFT))&ADC_WTISR_WDG5H_MASK)
/* WTIMR Bit Fields */
#define ADC_WTIMR_MSKWDG0L_MASK                  0x1u
#define ADC_WTIMR_MSKWDG0L_SHIFT                 0u
#define ADC_WTIMR_MSKWDG0L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG0L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG0L_SHIFT))&ADC_WTIMR_MSKWDG0L_MASK)
#define ADC_WTIMR_MSKWDG0H_MASK                  0x2u
#define ADC_WTIMR_MSKWDG0H_SHIFT                 1u
#define ADC_WTIMR_MSKWDG0H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG0H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG0H_SHIFT))&ADC_WTIMR_MSKWDG0H_MASK)
#define ADC_WTIMR_MSKWDG1L_MASK                  0x4u
#define ADC_WTIMR_MSKWDG1L_SHIFT                 2u
#define ADC_WTIMR_MSKWDG1L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG1L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG1L_SHIFT))&ADC_WTIMR_MSKWDG1L_MASK)
#define ADC_WTIMR_MSKWDG1H_MASK                  0x8u
#define ADC_WTIMR_MSKWDG1H_SHIFT                 3u
#define ADC_WTIMR_MSKWDG1H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG1H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG1H_SHIFT))&ADC_WTIMR_MSKWDG1H_MASK)
#define ADC_WTIMR_MSKWDG2L_MASK                  0x10u
#define ADC_WTIMR_MSKWDG2L_SHIFT                 4u
#define ADC_WTIMR_MSKWDG2L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG2L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG2L_SHIFT))&ADC_WTIMR_MSKWDG2L_MASK)
#define ADC_WTIMR_MSKWDG2H_MASK                  0x20u
#define ADC_WTIMR_MSKWDG2H_SHIFT                 5u
#define ADC_WTIMR_MSKWDG2H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG2H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG2H_SHIFT))&ADC_WTIMR_MSKWDG2H_MASK)
#define ADC_WTIMR_MSKWDG3L_MASK                  0x40u
#define ADC_WTIMR_MSKWDG3L_SHIFT                 6u
#define ADC_WTIMR_MSKWDG3L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG3L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG3L_SHIFT))&ADC_WTIMR_MSKWDG3L_MASK)
#define ADC_WTIMR_MSKWDG3H_MASK                  0x80u
#define ADC_WTIMR_MSKWDG3H_SHIFT                 7u
#define ADC_WTIMR_MSKWDG3H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG3H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG3H_SHIFT))&ADC_WTIMR_MSKWDG3H_MASK)
#define ADC_WTIMR_MSKWDG4L_MASK                  0x100u
#define ADC_WTIMR_MSKWDG4L_SHIFT                 8u
#define ADC_WTIMR_MSKWDG4L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG4L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG4L_SHIFT))&ADC_WTIMR_MSKWDG4L_MASK)
#define ADC_WTIMR_MSKWDG4H_MASK                  0x200u
#define ADC_WTIMR_MSKWDG4H_SHIFT                 9u
#define ADC_WTIMR_MSKWDG4H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG4H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG4H_SHIFT))&ADC_WTIMR_MSKWDG4H_MASK)
#define ADC_WTIMR_MSKWDG5L_MASK                  0x400u
#define ADC_WTIMR_MSKWDG5L_SHIFT                 10u
#define ADC_WTIMR_MSKWDG5L_WIDTH                 1u
#define ADC_WTIMR_MSKWDG5L(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG5L_SHIFT))&ADC_WTIMR_MSKWDG5L_MASK)
#define ADC_WTIMR_MSKWDG5H_MASK                  0x800u
#define ADC_WTIMR_MSKWDG5H_SHIFT                 11u
#define ADC_WTIMR_MSKWDG5H_WIDTH                 1u
#define ADC_WTIMR_MSKWDG5H(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_WTIMR_MSKWDG5H_SHIFT))&ADC_WTIMR_MSKWDG5H_MASK)
/* DMAE Bit Fields */
#define ADC_DMAE_DMAEN_MASK                      0x1u
#define ADC_DMAE_DMAEN_SHIFT                     0u
#define ADC_DMAE_DMAEN_WIDTH                     1u
#define ADC_DMAE_DMAEN(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAE_DMAEN_SHIFT))&ADC_DMAE_DMAEN_MASK)
#define ADC_DMAE_DCLR_MASK                       0x2u
#define ADC_DMAE_DCLR_SHIFT                      1u
#define ADC_DMAE_DCLR_WIDTH                      1u
#define ADC_DMAE_DCLR(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAE_DCLR_SHIFT))&ADC_DMAE_DCLR_MASK)
/* DMAR Bit Fields */
#define ADC_DMAR_DMA0_MASK                       0x1u
#define ADC_DMAR_DMA0_SHIFT                      0u
#define ADC_DMAR_DMA0_WIDTH                      1u
#define ADC_DMAR_DMA0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA0_SHIFT))&ADC_DMAR_DMA0_MASK)
#define ADC_DMAR_DMA64_MASK                      0x1u
#define ADC_DMAR_DMA64_SHIFT                     0u
#define ADC_DMAR_DMA64_WIDTH                     1u
#define ADC_DMAR_DMA64(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA64_SHIFT))&ADC_DMAR_DMA64_MASK)
#define ADC_DMAR_DMA32_MASK                      0x1u
#define ADC_DMAR_DMA32_SHIFT                     0u
#define ADC_DMAR_DMA32_WIDTH                     1u
#define ADC_DMAR_DMA32(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA32_SHIFT))&ADC_DMAR_DMA32_MASK)
#define ADC_DMAR_DMA65_MASK                      0x2u
#define ADC_DMAR_DMA65_SHIFT                     1u
#define ADC_DMAR_DMA65_WIDTH                     1u
#define ADC_DMAR_DMA65(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA65_SHIFT))&ADC_DMAR_DMA65_MASK)
#define ADC_DMAR_DMA33_MASK                      0x2u
#define ADC_DMAR_DMA33_SHIFT                     1u
#define ADC_DMAR_DMA33_WIDTH                     1u
#define ADC_DMAR_DMA33(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA33_SHIFT))&ADC_DMAR_DMA33_MASK)
#define ADC_DMAR_DMA1_MASK                       0x2u
#define ADC_DMAR_DMA1_SHIFT                      1u
#define ADC_DMAR_DMA1_WIDTH                      1u
#define ADC_DMAR_DMA1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA1_SHIFT))&ADC_DMAR_DMA1_MASK)
#define ADC_DMAR_DMA34_MASK                      0x4u
#define ADC_DMAR_DMA34_SHIFT                     2u
#define ADC_DMAR_DMA34_WIDTH                     1u
#define ADC_DMAR_DMA34(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA34_SHIFT))&ADC_DMAR_DMA34_MASK)
#define ADC_DMAR_DMA2_MASK                       0x4u
#define ADC_DMAR_DMA2_SHIFT                      2u
#define ADC_DMAR_DMA2_WIDTH                      1u
#define ADC_DMAR_DMA2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA2_SHIFT))&ADC_DMAR_DMA2_MASK)
#define ADC_DMAR_DMA66_MASK                      0x4u
#define ADC_DMAR_DMA66_SHIFT                     2u
#define ADC_DMAR_DMA66_WIDTH                     1u
#define ADC_DMAR_DMA66(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA66_SHIFT))&ADC_DMAR_DMA66_MASK)
#define ADC_DMAR_DMA67_MASK                      0x8u
#define ADC_DMAR_DMA67_SHIFT                     3u
#define ADC_DMAR_DMA67_WIDTH                     1u
#define ADC_DMAR_DMA67(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA67_SHIFT))&ADC_DMAR_DMA67_MASK)
#define ADC_DMAR_DMA3_MASK                       0x8u
#define ADC_DMAR_DMA3_SHIFT                      3u
#define ADC_DMAR_DMA3_WIDTH                      1u
#define ADC_DMAR_DMA3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA3_SHIFT))&ADC_DMAR_DMA3_MASK)
#define ADC_DMAR_DMA35_MASK                      0x8u
#define ADC_DMAR_DMA35_SHIFT                     3u
#define ADC_DMAR_DMA35_WIDTH                     1u
#define ADC_DMAR_DMA35(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA35_SHIFT))&ADC_DMAR_DMA35_MASK)
#define ADC_DMAR_DMA4_MASK                       0x10u
#define ADC_DMAR_DMA4_SHIFT                      4u
#define ADC_DMAR_DMA4_WIDTH                      1u
#define ADC_DMAR_DMA4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA4_SHIFT))&ADC_DMAR_DMA4_MASK)
#define ADC_DMAR_DMA36_MASK                      0x10u
#define ADC_DMAR_DMA36_SHIFT                     4u
#define ADC_DMAR_DMA36_WIDTH                     1u
#define ADC_DMAR_DMA36(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA36_SHIFT))&ADC_DMAR_DMA36_MASK)
#define ADC_DMAR_DMA68_MASK                      0x10u
#define ADC_DMAR_DMA68_SHIFT                     4u
#define ADC_DMAR_DMA68_WIDTH                     1u
#define ADC_DMAR_DMA68(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA68_SHIFT))&ADC_DMAR_DMA68_MASK)
#define ADC_DMAR_DMA69_MASK                      0x20u
#define ADC_DMAR_DMA69_SHIFT                     5u
#define ADC_DMAR_DMA69_WIDTH                     1u
#define ADC_DMAR_DMA69(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA69_SHIFT))&ADC_DMAR_DMA69_MASK)
#define ADC_DMAR_DMA37_MASK                      0x20u
#define ADC_DMAR_DMA37_SHIFT                     5u
#define ADC_DMAR_DMA37_WIDTH                     1u
#define ADC_DMAR_DMA37(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA37_SHIFT))&ADC_DMAR_DMA37_MASK)
#define ADC_DMAR_DMA5_MASK                       0x20u
#define ADC_DMAR_DMA5_SHIFT                      5u
#define ADC_DMAR_DMA5_WIDTH                      1u
#define ADC_DMAR_DMA5(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA5_SHIFT))&ADC_DMAR_DMA5_MASK)
#define ADC_DMAR_DMA70_MASK                      0x40u
#define ADC_DMAR_DMA70_SHIFT                     6u
#define ADC_DMAR_DMA70_WIDTH                     1u
#define ADC_DMAR_DMA70(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA70_SHIFT))&ADC_DMAR_DMA70_MASK)
#define ADC_DMAR_DMA38_MASK                      0x40u
#define ADC_DMAR_DMA38_SHIFT                     6u
#define ADC_DMAR_DMA38_WIDTH                     1u
#define ADC_DMAR_DMA38(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA38_SHIFT))&ADC_DMAR_DMA38_MASK)
#define ADC_DMAR_DMA6_MASK                       0x40u
#define ADC_DMAR_DMA6_SHIFT                      6u
#define ADC_DMAR_DMA6_WIDTH                      1u
#define ADC_DMAR_DMA6(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA6_SHIFT))&ADC_DMAR_DMA6_MASK)
#define ADC_DMAR_DMA7_MASK                       0x80u
#define ADC_DMAR_DMA7_SHIFT                      7u
#define ADC_DMAR_DMA7_WIDTH                      1u
#define ADC_DMAR_DMA7(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA7_SHIFT))&ADC_DMAR_DMA7_MASK)
#define ADC_DMAR_DMA39_MASK                      0x80u
#define ADC_DMAR_DMA39_SHIFT                     7u
#define ADC_DMAR_DMA39_WIDTH                     1u
#define ADC_DMAR_DMA39(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA39_SHIFT))&ADC_DMAR_DMA39_MASK)
#define ADC_DMAR_DMA71_MASK                      0x80u
#define ADC_DMAR_DMA71_SHIFT                     7u
#define ADC_DMAR_DMA71_WIDTH                     1u
#define ADC_DMAR_DMA71(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA71_SHIFT))&ADC_DMAR_DMA71_MASK)
#define ADC_DMAR_DMA8_MASK                       0x100u
#define ADC_DMAR_DMA8_SHIFT                      8u
#define ADC_DMAR_DMA8_WIDTH                      1u
#define ADC_DMAR_DMA8(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA8_SHIFT))&ADC_DMAR_DMA8_MASK)
#define ADC_DMAR_DMA40_MASK                      0x100u
#define ADC_DMAR_DMA40_SHIFT                     8u
#define ADC_DMAR_DMA40_WIDTH                     1u
#define ADC_DMAR_DMA40(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA40_SHIFT))&ADC_DMAR_DMA40_MASK)
#define ADC_DMAR_DMA72_MASK                      0x100u
#define ADC_DMAR_DMA72_SHIFT                     8u
#define ADC_DMAR_DMA72_WIDTH                     1u
#define ADC_DMAR_DMA72(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA72_SHIFT))&ADC_DMAR_DMA72_MASK)
#define ADC_DMAR_DMA73_MASK                      0x200u
#define ADC_DMAR_DMA73_SHIFT                     9u
#define ADC_DMAR_DMA73_WIDTH                     1u
#define ADC_DMAR_DMA73(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA73_SHIFT))&ADC_DMAR_DMA73_MASK)
#define ADC_DMAR_DMA41_MASK                      0x200u
#define ADC_DMAR_DMA41_SHIFT                     9u
#define ADC_DMAR_DMA41_WIDTH                     1u
#define ADC_DMAR_DMA41(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA41_SHIFT))&ADC_DMAR_DMA41_MASK)
#define ADC_DMAR_DMA9_MASK                       0x200u
#define ADC_DMAR_DMA9_SHIFT                      9u
#define ADC_DMAR_DMA9_WIDTH                      1u
#define ADC_DMAR_DMA9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA9_SHIFT))&ADC_DMAR_DMA9_MASK)
#define ADC_DMAR_DMA42_MASK                      0x400u
#define ADC_DMAR_DMA42_SHIFT                     10u
#define ADC_DMAR_DMA42_WIDTH                     1u
#define ADC_DMAR_DMA42(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA42_SHIFT))&ADC_DMAR_DMA42_MASK)
#define ADC_DMAR_DMA74_MASK                      0x400u
#define ADC_DMAR_DMA74_SHIFT                     10u
#define ADC_DMAR_DMA74_WIDTH                     1u
#define ADC_DMAR_DMA74(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA74_SHIFT))&ADC_DMAR_DMA74_MASK)
#define ADC_DMAR_DMA10_MASK                      0x400u
#define ADC_DMAR_DMA10_SHIFT                     10u
#define ADC_DMAR_DMA10_WIDTH                     1u
#define ADC_DMAR_DMA10(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA10_SHIFT))&ADC_DMAR_DMA10_MASK)
#define ADC_DMAR_DMA11_MASK                      0x800u
#define ADC_DMAR_DMA11_SHIFT                     11u
#define ADC_DMAR_DMA11_WIDTH                     1u
#define ADC_DMAR_DMA11(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA11_SHIFT))&ADC_DMAR_DMA11_MASK)
#define ADC_DMAR_DMA75_MASK                      0x800u
#define ADC_DMAR_DMA75_SHIFT                     11u
#define ADC_DMAR_DMA75_WIDTH                     1u
#define ADC_DMAR_DMA75(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA75_SHIFT))&ADC_DMAR_DMA75_MASK)
#define ADC_DMAR_DMA43_MASK                      0x800u
#define ADC_DMAR_DMA43_SHIFT                     11u
#define ADC_DMAR_DMA43_WIDTH                     1u
#define ADC_DMAR_DMA43(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA43_SHIFT))&ADC_DMAR_DMA43_MASK)
#define ADC_DMAR_DMA76_MASK                      0x1000u
#define ADC_DMAR_DMA76_SHIFT                     12u
#define ADC_DMAR_DMA76_WIDTH                     1u
#define ADC_DMAR_DMA76(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA76_SHIFT))&ADC_DMAR_DMA76_MASK)
#define ADC_DMAR_DMA12_MASK                      0x1000u
#define ADC_DMAR_DMA12_SHIFT                     12u
#define ADC_DMAR_DMA12_WIDTH                     1u
#define ADC_DMAR_DMA12(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA12_SHIFT))&ADC_DMAR_DMA12_MASK)
#define ADC_DMAR_DMA44_MASK                      0x1000u
#define ADC_DMAR_DMA44_SHIFT                     12u
#define ADC_DMAR_DMA44_WIDTH                     1u
#define ADC_DMAR_DMA44(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA44_SHIFT))&ADC_DMAR_DMA44_MASK)
#define ADC_DMAR_DMA45_MASK                      0x2000u
#define ADC_DMAR_DMA45_SHIFT                     13u
#define ADC_DMAR_DMA45_WIDTH                     1u
#define ADC_DMAR_DMA45(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA45_SHIFT))&ADC_DMAR_DMA45_MASK)
#define ADC_DMAR_DMA77_MASK                      0x2000u
#define ADC_DMAR_DMA77_SHIFT                     13u
#define ADC_DMAR_DMA77_WIDTH                     1u
#define ADC_DMAR_DMA77(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA77_SHIFT))&ADC_DMAR_DMA77_MASK)
#define ADC_DMAR_DMA13_MASK                      0x2000u
#define ADC_DMAR_DMA13_SHIFT                     13u
#define ADC_DMAR_DMA13_WIDTH                     1u
#define ADC_DMAR_DMA13(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA13_SHIFT))&ADC_DMAR_DMA13_MASK)
#define ADC_DMAR_DMA14_MASK                      0x4000u
#define ADC_DMAR_DMA14_SHIFT                     14u
#define ADC_DMAR_DMA14_WIDTH                     1u
#define ADC_DMAR_DMA14(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA14_SHIFT))&ADC_DMAR_DMA14_MASK)
#define ADC_DMAR_DMA46_MASK                      0x4000u
#define ADC_DMAR_DMA46_SHIFT                     14u
#define ADC_DMAR_DMA46_WIDTH                     1u
#define ADC_DMAR_DMA46(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA46_SHIFT))&ADC_DMAR_DMA46_MASK)
#define ADC_DMAR_DMA78_MASK                      0x4000u
#define ADC_DMAR_DMA78_SHIFT                     14u
#define ADC_DMAR_DMA78_WIDTH                     1u
#define ADC_DMAR_DMA78(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA78_SHIFT))&ADC_DMAR_DMA78_MASK)
#define ADC_DMAR_DMA47_MASK                      0x8000u
#define ADC_DMAR_DMA47_SHIFT                     15u
#define ADC_DMAR_DMA47_WIDTH                     1u
#define ADC_DMAR_DMA47(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA47_SHIFT))&ADC_DMAR_DMA47_MASK)
#define ADC_DMAR_DMA15_MASK                      0x8000u
#define ADC_DMAR_DMA15_SHIFT                     15u
#define ADC_DMAR_DMA15_WIDTH                     1u
#define ADC_DMAR_DMA15(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA15_SHIFT))&ADC_DMAR_DMA15_MASK)
#define ADC_DMAR_DMA79_MASK                      0x8000u
#define ADC_DMAR_DMA79_SHIFT                     15u
#define ADC_DMAR_DMA79_WIDTH                     1u
#define ADC_DMAR_DMA79(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA79_SHIFT))&ADC_DMAR_DMA79_MASK)
#define ADC_DMAR_DMA80_MASK                      0x10000u
#define ADC_DMAR_DMA80_SHIFT                     16u
#define ADC_DMAR_DMA80_WIDTH                     1u
#define ADC_DMAR_DMA80(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA80_SHIFT))&ADC_DMAR_DMA80_MASK)
#define ADC_DMAR_DMA48_MASK                      0x10000u
#define ADC_DMAR_DMA48_SHIFT                     16u
#define ADC_DMAR_DMA48_WIDTH                     1u
#define ADC_DMAR_DMA48(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA48_SHIFT))&ADC_DMAR_DMA48_MASK)
#define ADC_DMAR_DMA81_MASK                      0x20000u
#define ADC_DMAR_DMA81_SHIFT                     17u
#define ADC_DMAR_DMA81_WIDTH                     1u
#define ADC_DMAR_DMA81(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA81_SHIFT))&ADC_DMAR_DMA81_MASK)
#define ADC_DMAR_DMA49_MASK                      0x20000u
#define ADC_DMAR_DMA49_SHIFT                     17u
#define ADC_DMAR_DMA49_WIDTH                     1u
#define ADC_DMAR_DMA49(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA49_SHIFT))&ADC_DMAR_DMA49_MASK)
#define ADC_DMAR_DMA50_MASK                      0x40000u
#define ADC_DMAR_DMA50_SHIFT                     18u
#define ADC_DMAR_DMA50_WIDTH                     1u
#define ADC_DMAR_DMA50(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA50_SHIFT))&ADC_DMAR_DMA50_MASK)
#define ADC_DMAR_DMA82_MASK                      0x40000u
#define ADC_DMAR_DMA82_SHIFT                     18u
#define ADC_DMAR_DMA82_WIDTH                     1u
#define ADC_DMAR_DMA82(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA82_SHIFT))&ADC_DMAR_DMA82_MASK)
#define ADC_DMAR_DMA51_MASK                      0x80000u
#define ADC_DMAR_DMA51_SHIFT                     19u
#define ADC_DMAR_DMA51_WIDTH                     1u
#define ADC_DMAR_DMA51(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA51_SHIFT))&ADC_DMAR_DMA51_MASK)
#define ADC_DMAR_DMA83_MASK                      0x80000u
#define ADC_DMAR_DMA83_SHIFT                     19u
#define ADC_DMAR_DMA83_WIDTH                     1u
#define ADC_DMAR_DMA83(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA83_SHIFT))&ADC_DMAR_DMA83_MASK)
#define ADC_DMAR_DMA52_MASK                      0x100000u
#define ADC_DMAR_DMA52_SHIFT                     20u
#define ADC_DMAR_DMA52_WIDTH                     1u
#define ADC_DMAR_DMA52(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA52_SHIFT))&ADC_DMAR_DMA52_MASK)
#define ADC_DMAR_DMA84_MASK                      0x100000u
#define ADC_DMAR_DMA84_SHIFT                     20u
#define ADC_DMAR_DMA84_WIDTH                     1u
#define ADC_DMAR_DMA84(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA84_SHIFT))&ADC_DMAR_DMA84_MASK)
#define ADC_DMAR_DMA53_MASK                      0x200000u
#define ADC_DMAR_DMA53_SHIFT                     21u
#define ADC_DMAR_DMA53_WIDTH                     1u
#define ADC_DMAR_DMA53(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA53_SHIFT))&ADC_DMAR_DMA53_MASK)
#define ADC_DMAR_DMA85_MASK                      0x200000u
#define ADC_DMAR_DMA85_SHIFT                     21u
#define ADC_DMAR_DMA85_WIDTH                     1u
#define ADC_DMAR_DMA85(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA85_SHIFT))&ADC_DMAR_DMA85_MASK)
#define ADC_DMAR_DMA54_MASK                      0x400000u
#define ADC_DMAR_DMA54_SHIFT                     22u
#define ADC_DMAR_DMA54_WIDTH                     1u
#define ADC_DMAR_DMA54(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA54_SHIFT))&ADC_DMAR_DMA54_MASK)
#define ADC_DMAR_DMA86_MASK                      0x400000u
#define ADC_DMAR_DMA86_SHIFT                     22u
#define ADC_DMAR_DMA86_WIDTH                     1u
#define ADC_DMAR_DMA86(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA86_SHIFT))&ADC_DMAR_DMA86_MASK)
#define ADC_DMAR_DMA55_MASK                      0x800000u
#define ADC_DMAR_DMA55_SHIFT                     23u
#define ADC_DMAR_DMA55_WIDTH                     1u
#define ADC_DMAR_DMA55(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA55_SHIFT))&ADC_DMAR_DMA55_MASK)
#define ADC_DMAR_DMA87_MASK                      0x800000u
#define ADC_DMAR_DMA87_SHIFT                     23u
#define ADC_DMAR_DMA87_WIDTH                     1u
#define ADC_DMAR_DMA87(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA87_SHIFT))&ADC_DMAR_DMA87_MASK)
#define ADC_DMAR_DMA88_MASK                      0x1000000u
#define ADC_DMAR_DMA88_SHIFT                     24u
#define ADC_DMAR_DMA88_WIDTH                     1u
#define ADC_DMAR_DMA88(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA88_SHIFT))&ADC_DMAR_DMA88_MASK)
#define ADC_DMAR_DMA56_MASK                      0x1000000u
#define ADC_DMAR_DMA56_SHIFT                     24u
#define ADC_DMAR_DMA56_WIDTH                     1u
#define ADC_DMAR_DMA56(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA56_SHIFT))&ADC_DMAR_DMA56_MASK)
#define ADC_DMAR_DMA89_MASK                      0x2000000u
#define ADC_DMAR_DMA89_SHIFT                     25u
#define ADC_DMAR_DMA89_WIDTH                     1u
#define ADC_DMAR_DMA89(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA89_SHIFT))&ADC_DMAR_DMA89_MASK)
#define ADC_DMAR_DMA57_MASK                      0x2000000u
#define ADC_DMAR_DMA57_SHIFT                     25u
#define ADC_DMAR_DMA57_WIDTH                     1u
#define ADC_DMAR_DMA57(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA57_SHIFT))&ADC_DMAR_DMA57_MASK)
#define ADC_DMAR_DMA90_MASK                      0x4000000u
#define ADC_DMAR_DMA90_SHIFT                     26u
#define ADC_DMAR_DMA90_WIDTH                     1u
#define ADC_DMAR_DMA90(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA90_SHIFT))&ADC_DMAR_DMA90_MASK)
#define ADC_DMAR_DMA58_MASK                      0x4000000u
#define ADC_DMAR_DMA58_SHIFT                     26u
#define ADC_DMAR_DMA58_WIDTH                     1u
#define ADC_DMAR_DMA58(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA58_SHIFT))&ADC_DMAR_DMA58_MASK)
#define ADC_DMAR_DMA59_MASK                      0x8000000u
#define ADC_DMAR_DMA59_SHIFT                     27u
#define ADC_DMAR_DMA59_WIDTH                     1u
#define ADC_DMAR_DMA59(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA59_SHIFT))&ADC_DMAR_DMA59_MASK)
#define ADC_DMAR_DMA91_MASK                      0x8000000u
#define ADC_DMAR_DMA91_SHIFT                     27u
#define ADC_DMAR_DMA91_WIDTH                     1u
#define ADC_DMAR_DMA91(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA91_SHIFT))&ADC_DMAR_DMA91_MASK)
#define ADC_DMAR_DMA60_MASK                      0x10000000u
#define ADC_DMAR_DMA60_SHIFT                     28u
#define ADC_DMAR_DMA60_WIDTH                     1u
#define ADC_DMAR_DMA60(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA60_SHIFT))&ADC_DMAR_DMA60_MASK)
#define ADC_DMAR_DMA92_MASK                      0x10000000u
#define ADC_DMAR_DMA92_SHIFT                     28u
#define ADC_DMAR_DMA92_WIDTH                     1u
#define ADC_DMAR_DMA92(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA92_SHIFT))&ADC_DMAR_DMA92_MASK)
#define ADC_DMAR_DMA61_MASK                      0x20000000u
#define ADC_DMAR_DMA61_SHIFT                     29u
#define ADC_DMAR_DMA61_WIDTH                     1u
#define ADC_DMAR_DMA61(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA61_SHIFT))&ADC_DMAR_DMA61_MASK)
#define ADC_DMAR_DMA93_MASK                      0x20000000u
#define ADC_DMAR_DMA93_SHIFT                     29u
#define ADC_DMAR_DMA93_WIDTH                     1u
#define ADC_DMAR_DMA93(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA93_SHIFT))&ADC_DMAR_DMA93_MASK)
#define ADC_DMAR_DMA94_MASK                      0x40000000u
#define ADC_DMAR_DMA94_SHIFT                     30u
#define ADC_DMAR_DMA94_WIDTH                     1u
#define ADC_DMAR_DMA94(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA94_SHIFT))&ADC_DMAR_DMA94_MASK)
#define ADC_DMAR_DMA62_MASK                      0x40000000u
#define ADC_DMAR_DMA62_SHIFT                     30u
#define ADC_DMAR_DMA62_WIDTH                     1u
#define ADC_DMAR_DMA62(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA62_SHIFT))&ADC_DMAR_DMA62_MASK)
#define ADC_DMAR_DMA95_MASK                      0x80000000u
#define ADC_DMAR_DMA95_SHIFT                     31u
#define ADC_DMAR_DMA95_WIDTH                     1u
#define ADC_DMAR_DMA95(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA95_SHIFT))&ADC_DMAR_DMA95_MASK)
#define ADC_DMAR_DMA63_MASK                      0x80000000u
#define ADC_DMAR_DMA63_SHIFT                     31u
#define ADC_DMAR_DMA63_WIDTH                     1u
#define ADC_DMAR_DMA63(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_DMAR_DMA63_SHIFT))&ADC_DMAR_DMA63_MASK)
/* THRHLR0 Bit Fields */
#define ADC_THRHLR0_THRL_MASK                    0xFFFu
#define ADC_THRHLR0_THRL_SHIFT                   0u
#define ADC_THRHLR0_THRL_WIDTH                   12u
#define ADC_THRHLR0_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR0_THRL_SHIFT))&ADC_THRHLR0_THRL_MASK)
#define ADC_THRHLR0_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR0_THRH_SHIFT                   16u
#define ADC_THRHLR0_THRH_WIDTH                   12u
#define ADC_THRHLR0_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR0_THRH_SHIFT))&ADC_THRHLR0_THRH_MASK)
/* THRHLR1 Bit Fields */
#define ADC_THRHLR1_THRL_MASK                    0xFFFu
#define ADC_THRHLR1_THRL_SHIFT                   0u
#define ADC_THRHLR1_THRL_WIDTH                   12u
#define ADC_THRHLR1_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR1_THRL_SHIFT))&ADC_THRHLR1_THRL_MASK)
#define ADC_THRHLR1_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR1_THRH_SHIFT                   16u
#define ADC_THRHLR1_THRH_WIDTH                   12u
#define ADC_THRHLR1_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR1_THRH_SHIFT))&ADC_THRHLR1_THRH_MASK)
/* THRHLR2 Bit Fields */
#define ADC_THRHLR2_THRL_MASK                    0xFFFu
#define ADC_THRHLR2_THRL_SHIFT                   0u
#define ADC_THRHLR2_THRL_WIDTH                   12u
#define ADC_THRHLR2_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR2_THRL_SHIFT))&ADC_THRHLR2_THRL_MASK)
#define ADC_THRHLR2_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR2_THRH_SHIFT                   16u
#define ADC_THRHLR2_THRH_WIDTH                   12u
#define ADC_THRHLR2_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR2_THRH_SHIFT))&ADC_THRHLR2_THRH_MASK)
/* THRHLR3 Bit Fields */
#define ADC_THRHLR3_THRL_MASK                    0xFFFu
#define ADC_THRHLR3_THRL_SHIFT                   0u
#define ADC_THRHLR3_THRL_WIDTH                   12u
#define ADC_THRHLR3_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR3_THRL_SHIFT))&ADC_THRHLR3_THRL_MASK)
#define ADC_THRHLR3_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR3_THRH_SHIFT                   16u
#define ADC_THRHLR3_THRH_WIDTH                   12u
#define ADC_THRHLR3_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR3_THRH_SHIFT))&ADC_THRHLR3_THRH_MASK)
/* PSCR Bit Fields */
#define ADC_PSCR_PRECONV_MASK                    0x1u
#define ADC_PSCR_PRECONV_SHIFT                   0u
#define ADC_PSCR_PRECONV_WIDTH                   1u
#define ADC_PSCR_PRECONV(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PRECONV_SHIFT))&ADC_PSCR_PRECONV_MASK)
#define ADC_PSCR_PREVAL0_MASK                    0x6u
#define ADC_PSCR_PREVAL0_SHIFT                   1u
#define ADC_PSCR_PREVAL0_WIDTH                   2u
#define ADC_PSCR_PREVAL0(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PREVAL0_SHIFT))&ADC_PSCR_PREVAL0_MASK)
#define ADC_PSCR_PREVAL1_MASK                    0x18u
#define ADC_PSCR_PREVAL1_SHIFT                   3u
#define ADC_PSCR_PREVAL1_WIDTH                   2u
#define ADC_PSCR_PREVAL1(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PREVAL1_SHIFT))&ADC_PSCR_PREVAL1_MASK)
#define ADC_PSCR_PREVAL2_MASK                    0x60u
#define ADC_PSCR_PREVAL2_SHIFT                   5u
#define ADC_PSCR_PREVAL2_WIDTH                   2u
#define ADC_PSCR_PREVAL2(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_PSCR_PREVAL2_SHIFT))&ADC_PSCR_PREVAL2_MASK)
/* PSR Bit Fields */
#define ADC_PSR_PRES0_MASK                       0x1u
#define ADC_PSR_PRES0_SHIFT                      0u
#define ADC_PSR_PRES0_WIDTH                      1u
#define ADC_PSR_PRES0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES0_SHIFT))&ADC_PSR_PRES0_MASK)
#define ADC_PSR_PRES64_MASK                      0x1u
#define ADC_PSR_PRES64_SHIFT                     0u
#define ADC_PSR_PRES64_WIDTH                     1u
#define ADC_PSR_PRES64(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES64_SHIFT))&ADC_PSR_PRES64_MASK)
#define ADC_PSR_PRES32_MASK                      0x1u
#define ADC_PSR_PRES32_SHIFT                     0u
#define ADC_PSR_PRES32_WIDTH                     1u
#define ADC_PSR_PRES32(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES32_SHIFT))&ADC_PSR_PRES32_MASK)
#define ADC_PSR_PRES65_MASK                      0x2u
#define ADC_PSR_PRES65_SHIFT                     1u
#define ADC_PSR_PRES65_WIDTH                     1u
#define ADC_PSR_PRES65(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES65_SHIFT))&ADC_PSR_PRES65_MASK)
#define ADC_PSR_PRES33_MASK                      0x2u
#define ADC_PSR_PRES33_SHIFT                     1u
#define ADC_PSR_PRES33_WIDTH                     1u
#define ADC_PSR_PRES33(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES33_SHIFT))&ADC_PSR_PRES33_MASK)
#define ADC_PSR_PRES1_MASK                       0x2u
#define ADC_PSR_PRES1_SHIFT                      1u
#define ADC_PSR_PRES1_WIDTH                      1u
#define ADC_PSR_PRES1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES1_SHIFT))&ADC_PSR_PRES1_MASK)
#define ADC_PSR_PRES34_MASK                      0x4u
#define ADC_PSR_PRES34_SHIFT                     2u
#define ADC_PSR_PRES34_WIDTH                     1u
#define ADC_PSR_PRES34(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES34_SHIFT))&ADC_PSR_PRES34_MASK)
#define ADC_PSR_PRES2_MASK                       0x4u
#define ADC_PSR_PRES2_SHIFT                      2u
#define ADC_PSR_PRES2_WIDTH                      1u
#define ADC_PSR_PRES2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES2_SHIFT))&ADC_PSR_PRES2_MASK)
#define ADC_PSR_PRES66_MASK                      0x4u
#define ADC_PSR_PRES66_SHIFT                     2u
#define ADC_PSR_PRES66_WIDTH                     1u
#define ADC_PSR_PRES66(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES66_SHIFT))&ADC_PSR_PRES66_MASK)
#define ADC_PSR_PRES67_MASK                      0x8u
#define ADC_PSR_PRES67_SHIFT                     3u
#define ADC_PSR_PRES67_WIDTH                     1u
#define ADC_PSR_PRES67(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES67_SHIFT))&ADC_PSR_PRES67_MASK)
#define ADC_PSR_PRES3_MASK                       0x8u
#define ADC_PSR_PRES3_SHIFT                      3u
#define ADC_PSR_PRES3_WIDTH                      1u
#define ADC_PSR_PRES3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES3_SHIFT))&ADC_PSR_PRES3_MASK)
#define ADC_PSR_PRES35_MASK                      0x8u
#define ADC_PSR_PRES35_SHIFT                     3u
#define ADC_PSR_PRES35_WIDTH                     1u
#define ADC_PSR_PRES35(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES35_SHIFT))&ADC_PSR_PRES35_MASK)
#define ADC_PSR_PRES4_MASK                       0x10u
#define ADC_PSR_PRES4_SHIFT                      4u
#define ADC_PSR_PRES4_WIDTH                      1u
#define ADC_PSR_PRES4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES4_SHIFT))&ADC_PSR_PRES4_MASK)
#define ADC_PSR_PRES36_MASK                      0x10u
#define ADC_PSR_PRES36_SHIFT                     4u
#define ADC_PSR_PRES36_WIDTH                     1u
#define ADC_PSR_PRES36(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES36_SHIFT))&ADC_PSR_PRES36_MASK)
#define ADC_PSR_PRES68_MASK                      0x10u
#define ADC_PSR_PRES68_SHIFT                     4u
#define ADC_PSR_PRES68_WIDTH                     1u
#define ADC_PSR_PRES68(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES68_SHIFT))&ADC_PSR_PRES68_MASK)
#define ADC_PSR_PRES69_MASK                      0x20u
#define ADC_PSR_PRES69_SHIFT                     5u
#define ADC_PSR_PRES69_WIDTH                     1u
#define ADC_PSR_PRES69(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES69_SHIFT))&ADC_PSR_PRES69_MASK)
#define ADC_PSR_PRES37_MASK                      0x20u
#define ADC_PSR_PRES37_SHIFT                     5u
#define ADC_PSR_PRES37_WIDTH                     1u
#define ADC_PSR_PRES37(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES37_SHIFT))&ADC_PSR_PRES37_MASK)
#define ADC_PSR_PRES5_MASK                       0x20u
#define ADC_PSR_PRES5_SHIFT                      5u
#define ADC_PSR_PRES5_WIDTH                      1u
#define ADC_PSR_PRES5(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES5_SHIFT))&ADC_PSR_PRES5_MASK)
#define ADC_PSR_PRES70_MASK                      0x40u
#define ADC_PSR_PRES70_SHIFT                     6u
#define ADC_PSR_PRES70_WIDTH                     1u
#define ADC_PSR_PRES70(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES70_SHIFT))&ADC_PSR_PRES70_MASK)
#define ADC_PSR_PRES38_MASK                      0x40u
#define ADC_PSR_PRES38_SHIFT                     6u
#define ADC_PSR_PRES38_WIDTH                     1u
#define ADC_PSR_PRES38(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES38_SHIFT))&ADC_PSR_PRES38_MASK)
#define ADC_PSR_PRES6_MASK                       0x40u
#define ADC_PSR_PRES6_SHIFT                      6u
#define ADC_PSR_PRES6_WIDTH                      1u
#define ADC_PSR_PRES6(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES6_SHIFT))&ADC_PSR_PRES6_MASK)
#define ADC_PSR_PRES7_MASK                       0x80u
#define ADC_PSR_PRES7_SHIFT                      7u
#define ADC_PSR_PRES7_WIDTH                      1u
#define ADC_PSR_PRES7(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES7_SHIFT))&ADC_PSR_PRES7_MASK)
#define ADC_PSR_PRES39_MASK                      0x80u
#define ADC_PSR_PRES39_SHIFT                     7u
#define ADC_PSR_PRES39_WIDTH                     1u
#define ADC_PSR_PRES39(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES39_SHIFT))&ADC_PSR_PRES39_MASK)
#define ADC_PSR_PRES71_MASK                      0x80u
#define ADC_PSR_PRES71_SHIFT                     7u
#define ADC_PSR_PRES71_WIDTH                     1u
#define ADC_PSR_PRES71(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES71_SHIFT))&ADC_PSR_PRES71_MASK)
#define ADC_PSR_PRES8_MASK                       0x100u
#define ADC_PSR_PRES8_SHIFT                      8u
#define ADC_PSR_PRES8_WIDTH                      1u
#define ADC_PSR_PRES8(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES8_SHIFT))&ADC_PSR_PRES8_MASK)
#define ADC_PSR_PRES40_MASK                      0x100u
#define ADC_PSR_PRES40_SHIFT                     8u
#define ADC_PSR_PRES40_WIDTH                     1u
#define ADC_PSR_PRES40(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES40_SHIFT))&ADC_PSR_PRES40_MASK)
#define ADC_PSR_PRES72_MASK                      0x100u
#define ADC_PSR_PRES72_SHIFT                     8u
#define ADC_PSR_PRES72_WIDTH                     1u
#define ADC_PSR_PRES72(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES72_SHIFT))&ADC_PSR_PRES72_MASK)
#define ADC_PSR_PRES73_MASK                      0x200u
#define ADC_PSR_PRES73_SHIFT                     9u
#define ADC_PSR_PRES73_WIDTH                     1u
#define ADC_PSR_PRES73(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES73_SHIFT))&ADC_PSR_PRES73_MASK)
#define ADC_PSR_PRES41_MASK                      0x200u
#define ADC_PSR_PRES41_SHIFT                     9u
#define ADC_PSR_PRES41_WIDTH                     1u
#define ADC_PSR_PRES41(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES41_SHIFT))&ADC_PSR_PRES41_MASK)
#define ADC_PSR_PRES9_MASK                       0x200u
#define ADC_PSR_PRES9_SHIFT                      9u
#define ADC_PSR_PRES9_WIDTH                      1u
#define ADC_PSR_PRES9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES9_SHIFT))&ADC_PSR_PRES9_MASK)
#define ADC_PSR_PRES42_MASK                      0x400u
#define ADC_PSR_PRES42_SHIFT                     10u
#define ADC_PSR_PRES42_WIDTH                     1u
#define ADC_PSR_PRES42(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES42_SHIFT))&ADC_PSR_PRES42_MASK)
#define ADC_PSR_PRES74_MASK                      0x400u
#define ADC_PSR_PRES74_SHIFT                     10u
#define ADC_PSR_PRES74_WIDTH                     1u
#define ADC_PSR_PRES74(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES74_SHIFT))&ADC_PSR_PRES74_MASK)
#define ADC_PSR_PRES10_MASK                      0x400u
#define ADC_PSR_PRES10_SHIFT                     10u
#define ADC_PSR_PRES10_WIDTH                     1u
#define ADC_PSR_PRES10(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES10_SHIFT))&ADC_PSR_PRES10_MASK)
#define ADC_PSR_PRES11_MASK                      0x800u
#define ADC_PSR_PRES11_SHIFT                     11u
#define ADC_PSR_PRES11_WIDTH                     1u
#define ADC_PSR_PRES11(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES11_SHIFT))&ADC_PSR_PRES11_MASK)
#define ADC_PSR_PRES75_MASK                      0x800u
#define ADC_PSR_PRES75_SHIFT                     11u
#define ADC_PSR_PRES75_WIDTH                     1u
#define ADC_PSR_PRES75(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES75_SHIFT))&ADC_PSR_PRES75_MASK)
#define ADC_PSR_PRES43_MASK                      0x800u
#define ADC_PSR_PRES43_SHIFT                     11u
#define ADC_PSR_PRES43_WIDTH                     1u
#define ADC_PSR_PRES43(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES43_SHIFT))&ADC_PSR_PRES43_MASK)
#define ADC_PSR_PRES76_MASK                      0x1000u
#define ADC_PSR_PRES76_SHIFT                     12u
#define ADC_PSR_PRES76_WIDTH                     1u
#define ADC_PSR_PRES76(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES76_SHIFT))&ADC_PSR_PRES76_MASK)
#define ADC_PSR_PRES12_MASK                      0x1000u
#define ADC_PSR_PRES12_SHIFT                     12u
#define ADC_PSR_PRES12_WIDTH                     1u
#define ADC_PSR_PRES12(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES12_SHIFT))&ADC_PSR_PRES12_MASK)
#define ADC_PSR_PRES44_MASK                      0x1000u
#define ADC_PSR_PRES44_SHIFT                     12u
#define ADC_PSR_PRES44_WIDTH                     1u
#define ADC_PSR_PRES44(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES44_SHIFT))&ADC_PSR_PRES44_MASK)
#define ADC_PSR_PRES45_MASK                      0x2000u
#define ADC_PSR_PRES45_SHIFT                     13u
#define ADC_PSR_PRES45_WIDTH                     1u
#define ADC_PSR_PRES45(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES45_SHIFT))&ADC_PSR_PRES45_MASK)
#define ADC_PSR_PRES77_MASK                      0x2000u
#define ADC_PSR_PRES77_SHIFT                     13u
#define ADC_PSR_PRES77_WIDTH                     1u
#define ADC_PSR_PRES77(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES77_SHIFT))&ADC_PSR_PRES77_MASK)
#define ADC_PSR_PRES13_MASK                      0x2000u
#define ADC_PSR_PRES13_SHIFT                     13u
#define ADC_PSR_PRES13_WIDTH                     1u
#define ADC_PSR_PRES13(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES13_SHIFT))&ADC_PSR_PRES13_MASK)
#define ADC_PSR_PRES14_MASK                      0x4000u
#define ADC_PSR_PRES14_SHIFT                     14u
#define ADC_PSR_PRES14_WIDTH                     1u
#define ADC_PSR_PRES14(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES14_SHIFT))&ADC_PSR_PRES14_MASK)
#define ADC_PSR_PRES46_MASK                      0x4000u
#define ADC_PSR_PRES46_SHIFT                     14u
#define ADC_PSR_PRES46_WIDTH                     1u
#define ADC_PSR_PRES46(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES46_SHIFT))&ADC_PSR_PRES46_MASK)
#define ADC_PSR_PRES78_MASK                      0x4000u
#define ADC_PSR_PRES78_SHIFT                     14u
#define ADC_PSR_PRES78_WIDTH                     1u
#define ADC_PSR_PRES78(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES78_SHIFT))&ADC_PSR_PRES78_MASK)
#define ADC_PSR_PRES47_MASK                      0x8000u
#define ADC_PSR_PRES47_SHIFT                     15u
#define ADC_PSR_PRES47_WIDTH                     1u
#define ADC_PSR_PRES47(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES47_SHIFT))&ADC_PSR_PRES47_MASK)
#define ADC_PSR_PRES15_MASK                      0x8000u
#define ADC_PSR_PRES15_SHIFT                     15u
#define ADC_PSR_PRES15_WIDTH                     1u
#define ADC_PSR_PRES15(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES15_SHIFT))&ADC_PSR_PRES15_MASK)
#define ADC_PSR_PRES79_MASK                      0x8000u
#define ADC_PSR_PRES79_SHIFT                     15u
#define ADC_PSR_PRES79_WIDTH                     1u
#define ADC_PSR_PRES79(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES79_SHIFT))&ADC_PSR_PRES79_MASK)
#define ADC_PSR_PRES80_MASK                      0x10000u
#define ADC_PSR_PRES80_SHIFT                     16u
#define ADC_PSR_PRES80_WIDTH                     1u
#define ADC_PSR_PRES80(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES80_SHIFT))&ADC_PSR_PRES80_MASK)
#define ADC_PSR_PRES48_MASK                      0x10000u
#define ADC_PSR_PRES48_SHIFT                     16u
#define ADC_PSR_PRES48_WIDTH                     1u
#define ADC_PSR_PRES48(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES48_SHIFT))&ADC_PSR_PRES48_MASK)
#define ADC_PSR_PRES81_MASK                      0x20000u
#define ADC_PSR_PRES81_SHIFT                     17u
#define ADC_PSR_PRES81_WIDTH                     1u
#define ADC_PSR_PRES81(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES81_SHIFT))&ADC_PSR_PRES81_MASK)
#define ADC_PSR_PRES49_MASK                      0x20000u
#define ADC_PSR_PRES49_SHIFT                     17u
#define ADC_PSR_PRES49_WIDTH                     1u
#define ADC_PSR_PRES49(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES49_SHIFT))&ADC_PSR_PRES49_MASK)
#define ADC_PSR_PRES50_MASK                      0x40000u
#define ADC_PSR_PRES50_SHIFT                     18u
#define ADC_PSR_PRES50_WIDTH                     1u
#define ADC_PSR_PRES50(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES50_SHIFT))&ADC_PSR_PRES50_MASK)
#define ADC_PSR_PRES82_MASK                      0x40000u
#define ADC_PSR_PRES82_SHIFT                     18u
#define ADC_PSR_PRES82_WIDTH                     1u
#define ADC_PSR_PRES82(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES82_SHIFT))&ADC_PSR_PRES82_MASK)
#define ADC_PSR_PRES51_MASK                      0x80000u
#define ADC_PSR_PRES51_SHIFT                     19u
#define ADC_PSR_PRES51_WIDTH                     1u
#define ADC_PSR_PRES51(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES51_SHIFT))&ADC_PSR_PRES51_MASK)
#define ADC_PSR_PRES83_MASK                      0x80000u
#define ADC_PSR_PRES83_SHIFT                     19u
#define ADC_PSR_PRES83_WIDTH                     1u
#define ADC_PSR_PRES83(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES83_SHIFT))&ADC_PSR_PRES83_MASK)
#define ADC_PSR_PRES52_MASK                      0x100000u
#define ADC_PSR_PRES52_SHIFT                     20u
#define ADC_PSR_PRES52_WIDTH                     1u
#define ADC_PSR_PRES52(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES52_SHIFT))&ADC_PSR_PRES52_MASK)
#define ADC_PSR_PRES84_MASK                      0x100000u
#define ADC_PSR_PRES84_SHIFT                     20u
#define ADC_PSR_PRES84_WIDTH                     1u
#define ADC_PSR_PRES84(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES84_SHIFT))&ADC_PSR_PRES84_MASK)
#define ADC_PSR_PRES53_MASK                      0x200000u
#define ADC_PSR_PRES53_SHIFT                     21u
#define ADC_PSR_PRES53_WIDTH                     1u
#define ADC_PSR_PRES53(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES53_SHIFT))&ADC_PSR_PRES53_MASK)
#define ADC_PSR_PRES85_MASK                      0x200000u
#define ADC_PSR_PRES85_SHIFT                     21u
#define ADC_PSR_PRES85_WIDTH                     1u
#define ADC_PSR_PRES85(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES85_SHIFT))&ADC_PSR_PRES85_MASK)
#define ADC_PSR_PRES54_MASK                      0x400000u
#define ADC_PSR_PRES54_SHIFT                     22u
#define ADC_PSR_PRES54_WIDTH                     1u
#define ADC_PSR_PRES54(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES54_SHIFT))&ADC_PSR_PRES54_MASK)
#define ADC_PSR_PRES86_MASK                      0x400000u
#define ADC_PSR_PRES86_SHIFT                     22u
#define ADC_PSR_PRES86_WIDTH                     1u
#define ADC_PSR_PRES86(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES86_SHIFT))&ADC_PSR_PRES86_MASK)
#define ADC_PSR_PRES55_MASK                      0x800000u
#define ADC_PSR_PRES55_SHIFT                     23u
#define ADC_PSR_PRES55_WIDTH                     1u
#define ADC_PSR_PRES55(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES55_SHIFT))&ADC_PSR_PRES55_MASK)
#define ADC_PSR_PRES87_MASK                      0x800000u
#define ADC_PSR_PRES87_SHIFT                     23u
#define ADC_PSR_PRES87_WIDTH                     1u
#define ADC_PSR_PRES87(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES87_SHIFT))&ADC_PSR_PRES87_MASK)
#define ADC_PSR_PRES88_MASK                      0x1000000u
#define ADC_PSR_PRES88_SHIFT                     24u
#define ADC_PSR_PRES88_WIDTH                     1u
#define ADC_PSR_PRES88(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES88_SHIFT))&ADC_PSR_PRES88_MASK)
#define ADC_PSR_PRES56_MASK                      0x1000000u
#define ADC_PSR_PRES56_SHIFT                     24u
#define ADC_PSR_PRES56_WIDTH                     1u
#define ADC_PSR_PRES56(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES56_SHIFT))&ADC_PSR_PRES56_MASK)
#define ADC_PSR_PRES89_MASK                      0x2000000u
#define ADC_PSR_PRES89_SHIFT                     25u
#define ADC_PSR_PRES89_WIDTH                     1u
#define ADC_PSR_PRES89(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES89_SHIFT))&ADC_PSR_PRES89_MASK)
#define ADC_PSR_PRES57_MASK                      0x2000000u
#define ADC_PSR_PRES57_SHIFT                     25u
#define ADC_PSR_PRES57_WIDTH                     1u
#define ADC_PSR_PRES57(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES57_SHIFT))&ADC_PSR_PRES57_MASK)
#define ADC_PSR_PRES90_MASK                      0x4000000u
#define ADC_PSR_PRES90_SHIFT                     26u
#define ADC_PSR_PRES90_WIDTH                     1u
#define ADC_PSR_PRES90(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES90_SHIFT))&ADC_PSR_PRES90_MASK)
#define ADC_PSR_PRES58_MASK                      0x4000000u
#define ADC_PSR_PRES58_SHIFT                     26u
#define ADC_PSR_PRES58_WIDTH                     1u
#define ADC_PSR_PRES58(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES58_SHIFT))&ADC_PSR_PRES58_MASK)
#define ADC_PSR_PRES59_MASK                      0x8000000u
#define ADC_PSR_PRES59_SHIFT                     27u
#define ADC_PSR_PRES59_WIDTH                     1u
#define ADC_PSR_PRES59(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES59_SHIFT))&ADC_PSR_PRES59_MASK)
#define ADC_PSR_PRES91_MASK                      0x8000000u
#define ADC_PSR_PRES91_SHIFT                     27u
#define ADC_PSR_PRES91_WIDTH                     1u
#define ADC_PSR_PRES91(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES91_SHIFT))&ADC_PSR_PRES91_MASK)
#define ADC_PSR_PRES60_MASK                      0x10000000u
#define ADC_PSR_PRES60_SHIFT                     28u
#define ADC_PSR_PRES60_WIDTH                     1u
#define ADC_PSR_PRES60(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES60_SHIFT))&ADC_PSR_PRES60_MASK)
#define ADC_PSR_PRES92_MASK                      0x10000000u
#define ADC_PSR_PRES92_SHIFT                     28u
#define ADC_PSR_PRES92_WIDTH                     1u
#define ADC_PSR_PRES92(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES92_SHIFT))&ADC_PSR_PRES92_MASK)
#define ADC_PSR_PRES61_MASK                      0x20000000u
#define ADC_PSR_PRES61_SHIFT                     29u
#define ADC_PSR_PRES61_WIDTH                     1u
#define ADC_PSR_PRES61(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES61_SHIFT))&ADC_PSR_PRES61_MASK)
#define ADC_PSR_PRES93_MASK                      0x20000000u
#define ADC_PSR_PRES93_SHIFT                     29u
#define ADC_PSR_PRES93_WIDTH                     1u
#define ADC_PSR_PRES93(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES93_SHIFT))&ADC_PSR_PRES93_MASK)
#define ADC_PSR_PRES94_MASK                      0x40000000u
#define ADC_PSR_PRES94_SHIFT                     30u
#define ADC_PSR_PRES94_WIDTH                     1u
#define ADC_PSR_PRES94(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES94_SHIFT))&ADC_PSR_PRES94_MASK)
#define ADC_PSR_PRES62_MASK                      0x40000000u
#define ADC_PSR_PRES62_SHIFT                     30u
#define ADC_PSR_PRES62_WIDTH                     1u
#define ADC_PSR_PRES62(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES62_SHIFT))&ADC_PSR_PRES62_MASK)
#define ADC_PSR_PRES95_MASK                      0x80000000u
#define ADC_PSR_PRES95_SHIFT                     31u
#define ADC_PSR_PRES95_WIDTH                     1u
#define ADC_PSR_PRES95(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES95_SHIFT))&ADC_PSR_PRES95_MASK)
#define ADC_PSR_PRES63_MASK                      0x80000000u
#define ADC_PSR_PRES63_SHIFT                     31u
#define ADC_PSR_PRES63_WIDTH                     1u
#define ADC_PSR_PRES63(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PSR_PRES63_SHIFT))&ADC_PSR_PRES63_MASK)
/* CTR Bit Fields */
#define ADC_CTR_INPSAMP_MASK                     0xFFu
#define ADC_CTR_INPSAMP_SHIFT                    0u
#define ADC_CTR_INPSAMP_WIDTH                    8u
#define ADC_CTR_INPSAMP(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CTR_INPSAMP_SHIFT))&ADC_CTR_INPSAMP_MASK)
/* NCMR Bit Fields */
#define ADC_NCMR_CH0_MASK                        0x1u
#define ADC_NCMR_CH0_SHIFT                       0u
#define ADC_NCMR_CH0_WIDTH                       1u
#define ADC_NCMR_CH0(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH0_SHIFT))&ADC_NCMR_CH0_MASK)
#define ADC_NCMR_CH64_MASK                       0x1u
#define ADC_NCMR_CH64_SHIFT                      0u
#define ADC_NCMR_CH64_WIDTH                      1u
#define ADC_NCMR_CH64(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH64_SHIFT))&ADC_NCMR_CH64_MASK)
#define ADC_NCMR_CH32_MASK                       0x1u
#define ADC_NCMR_CH32_SHIFT                      0u
#define ADC_NCMR_CH32_WIDTH                      1u
#define ADC_NCMR_CH32(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH32_SHIFT))&ADC_NCMR_CH32_MASK)
#define ADC_NCMR_CH65_MASK                       0x2u
#define ADC_NCMR_CH65_SHIFT                      1u
#define ADC_NCMR_CH65_WIDTH                      1u
#define ADC_NCMR_CH65(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH65_SHIFT))&ADC_NCMR_CH65_MASK)
#define ADC_NCMR_CH33_MASK                       0x2u
#define ADC_NCMR_CH33_SHIFT                      1u
#define ADC_NCMR_CH33_WIDTH                      1u
#define ADC_NCMR_CH33(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH33_SHIFT))&ADC_NCMR_CH33_MASK)
#define ADC_NCMR_CH1_MASK                        0x2u
#define ADC_NCMR_CH1_SHIFT                       1u
#define ADC_NCMR_CH1_WIDTH                       1u
#define ADC_NCMR_CH1(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH1_SHIFT))&ADC_NCMR_CH1_MASK)
#define ADC_NCMR_CH34_MASK                       0x4u
#define ADC_NCMR_CH34_SHIFT                      2u
#define ADC_NCMR_CH34_WIDTH                      1u
#define ADC_NCMR_CH34(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH34_SHIFT))&ADC_NCMR_CH34_MASK)
#define ADC_NCMR_CH2_MASK                        0x4u
#define ADC_NCMR_CH2_SHIFT                       2u
#define ADC_NCMR_CH2_WIDTH                       1u
#define ADC_NCMR_CH2(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH2_SHIFT))&ADC_NCMR_CH2_MASK)
#define ADC_NCMR_CH66_MASK                       0x4u
#define ADC_NCMR_CH66_SHIFT                      2u
#define ADC_NCMR_CH66_WIDTH                      1u
#define ADC_NCMR_CH66(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH66_SHIFT))&ADC_NCMR_CH66_MASK)
#define ADC_NCMR_CH67_MASK                       0x8u
#define ADC_NCMR_CH67_SHIFT                      3u
#define ADC_NCMR_CH67_WIDTH                      1u
#define ADC_NCMR_CH67(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH67_SHIFT))&ADC_NCMR_CH67_MASK)
#define ADC_NCMR_CH3_MASK                        0x8u
#define ADC_NCMR_CH3_SHIFT                       3u
#define ADC_NCMR_CH3_WIDTH                       1u
#define ADC_NCMR_CH3(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH3_SHIFT))&ADC_NCMR_CH3_MASK)
#define ADC_NCMR_CH35_MASK                       0x8u
#define ADC_NCMR_CH35_SHIFT                      3u
#define ADC_NCMR_CH35_WIDTH                      1u
#define ADC_NCMR_CH35(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH35_SHIFT))&ADC_NCMR_CH35_MASK)
#define ADC_NCMR_CH4_MASK                        0x10u
#define ADC_NCMR_CH4_SHIFT                       4u
#define ADC_NCMR_CH4_WIDTH                       1u
#define ADC_NCMR_CH4(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH4_SHIFT))&ADC_NCMR_CH4_MASK)
#define ADC_NCMR_CH36_MASK                       0x10u
#define ADC_NCMR_CH36_SHIFT                      4u
#define ADC_NCMR_CH36_WIDTH                      1u
#define ADC_NCMR_CH36(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH36_SHIFT))&ADC_NCMR_CH36_MASK)
#define ADC_NCMR_CH68_MASK                       0x10u
#define ADC_NCMR_CH68_SHIFT                      4u
#define ADC_NCMR_CH68_WIDTH                      1u
#define ADC_NCMR_CH68(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH68_SHIFT))&ADC_NCMR_CH68_MASK)
#define ADC_NCMR_CH69_MASK                       0x20u
#define ADC_NCMR_CH69_SHIFT                      5u
#define ADC_NCMR_CH69_WIDTH                      1u
#define ADC_NCMR_CH69(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH69_SHIFT))&ADC_NCMR_CH69_MASK)
#define ADC_NCMR_CH37_MASK                       0x20u
#define ADC_NCMR_CH37_SHIFT                      5u
#define ADC_NCMR_CH37_WIDTH                      1u
#define ADC_NCMR_CH37(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH37_SHIFT))&ADC_NCMR_CH37_MASK)
#define ADC_NCMR_CH5_MASK                        0x20u
#define ADC_NCMR_CH5_SHIFT                       5u
#define ADC_NCMR_CH5_WIDTH                       1u
#define ADC_NCMR_CH5(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH5_SHIFT))&ADC_NCMR_CH5_MASK)
#define ADC_NCMR_CH70_MASK                       0x40u
#define ADC_NCMR_CH70_SHIFT                      6u
#define ADC_NCMR_CH70_WIDTH                      1u
#define ADC_NCMR_CH70(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH70_SHIFT))&ADC_NCMR_CH70_MASK)
#define ADC_NCMR_CH38_MASK                       0x40u
#define ADC_NCMR_CH38_SHIFT                      6u
#define ADC_NCMR_CH38_WIDTH                      1u
#define ADC_NCMR_CH38(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH38_SHIFT))&ADC_NCMR_CH38_MASK)
#define ADC_NCMR_CH6_MASK                        0x40u
#define ADC_NCMR_CH6_SHIFT                       6u
#define ADC_NCMR_CH6_WIDTH                       1u
#define ADC_NCMR_CH6(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH6_SHIFT))&ADC_NCMR_CH6_MASK)
#define ADC_NCMR_CH7_MASK                        0x80u
#define ADC_NCMR_CH7_SHIFT                       7u
#define ADC_NCMR_CH7_WIDTH                       1u
#define ADC_NCMR_CH7(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH7_SHIFT))&ADC_NCMR_CH7_MASK)
#define ADC_NCMR_CH39_MASK                       0x80u
#define ADC_NCMR_CH39_SHIFT                      7u
#define ADC_NCMR_CH39_WIDTH                      1u
#define ADC_NCMR_CH39(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH39_SHIFT))&ADC_NCMR_CH39_MASK)
#define ADC_NCMR_CH71_MASK                       0x80u
#define ADC_NCMR_CH71_SHIFT                      7u
#define ADC_NCMR_CH71_WIDTH                      1u
#define ADC_NCMR_CH71(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH71_SHIFT))&ADC_NCMR_CH71_MASK)
#define ADC_NCMR_CH8_MASK                        0x100u
#define ADC_NCMR_CH8_SHIFT                       8u
#define ADC_NCMR_CH8_WIDTH                       1u
#define ADC_NCMR_CH8(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH8_SHIFT))&ADC_NCMR_CH8_MASK)
#define ADC_NCMR_CH40_MASK                       0x100u
#define ADC_NCMR_CH40_SHIFT                      8u
#define ADC_NCMR_CH40_WIDTH                      1u
#define ADC_NCMR_CH40(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH40_SHIFT))&ADC_NCMR_CH40_MASK)
#define ADC_NCMR_CH72_MASK                       0x100u
#define ADC_NCMR_CH72_SHIFT                      8u
#define ADC_NCMR_CH72_WIDTH                      1u
#define ADC_NCMR_CH72(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH72_SHIFT))&ADC_NCMR_CH72_MASK)
#define ADC_NCMR_CH73_MASK                       0x200u
#define ADC_NCMR_CH73_SHIFT                      9u
#define ADC_NCMR_CH73_WIDTH                      1u
#define ADC_NCMR_CH73(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH73_SHIFT))&ADC_NCMR_CH73_MASK)
#define ADC_NCMR_CH41_MASK                       0x200u
#define ADC_NCMR_CH41_SHIFT                      9u
#define ADC_NCMR_CH41_WIDTH                      1u
#define ADC_NCMR_CH41(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH41_SHIFT))&ADC_NCMR_CH41_MASK)
#define ADC_NCMR_CH9_MASK                        0x200u
#define ADC_NCMR_CH9_SHIFT                       9u
#define ADC_NCMR_CH9_WIDTH                       1u
#define ADC_NCMR_CH9(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH9_SHIFT))&ADC_NCMR_CH9_MASK)
#define ADC_NCMR_CH42_MASK                       0x400u
#define ADC_NCMR_CH42_SHIFT                      10u
#define ADC_NCMR_CH42_WIDTH                      1u
#define ADC_NCMR_CH42(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH42_SHIFT))&ADC_NCMR_CH42_MASK)
#define ADC_NCMR_CH74_MASK                       0x400u
#define ADC_NCMR_CH74_SHIFT                      10u
#define ADC_NCMR_CH74_WIDTH                      1u
#define ADC_NCMR_CH74(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH74_SHIFT))&ADC_NCMR_CH74_MASK)
#define ADC_NCMR_CH10_MASK                       0x400u
#define ADC_NCMR_CH10_SHIFT                      10u
#define ADC_NCMR_CH10_WIDTH                      1u
#define ADC_NCMR_CH10(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH10_SHIFT))&ADC_NCMR_CH10_MASK)
#define ADC_NCMR_CH11_MASK                       0x800u
#define ADC_NCMR_CH11_SHIFT                      11u
#define ADC_NCMR_CH11_WIDTH                      1u
#define ADC_NCMR_CH11(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH11_SHIFT))&ADC_NCMR_CH11_MASK)
#define ADC_NCMR_CH75_MASK                       0x800u
#define ADC_NCMR_CH75_SHIFT                      11u
#define ADC_NCMR_CH75_WIDTH                      1u
#define ADC_NCMR_CH75(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH75_SHIFT))&ADC_NCMR_CH75_MASK)
#define ADC_NCMR_CH43_MASK                       0x800u
#define ADC_NCMR_CH43_SHIFT                      11u
#define ADC_NCMR_CH43_WIDTH                      1u
#define ADC_NCMR_CH43(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH43_SHIFT))&ADC_NCMR_CH43_MASK)
#define ADC_NCMR_CH76_MASK                       0x1000u
#define ADC_NCMR_CH76_SHIFT                      12u
#define ADC_NCMR_CH76_WIDTH                      1u
#define ADC_NCMR_CH76(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH76_SHIFT))&ADC_NCMR_CH76_MASK)
#define ADC_NCMR_CH12_MASK                       0x1000u
#define ADC_NCMR_CH12_SHIFT                      12u
#define ADC_NCMR_CH12_WIDTH                      1u
#define ADC_NCMR_CH12(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH12_SHIFT))&ADC_NCMR_CH12_MASK)
#define ADC_NCMR_CH44_MASK                       0x1000u
#define ADC_NCMR_CH44_SHIFT                      12u
#define ADC_NCMR_CH44_WIDTH                      1u
#define ADC_NCMR_CH44(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH44_SHIFT))&ADC_NCMR_CH44_MASK)
#define ADC_NCMR_CH45_MASK                       0x2000u
#define ADC_NCMR_CH45_SHIFT                      13u
#define ADC_NCMR_CH45_WIDTH                      1u
#define ADC_NCMR_CH45(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH45_SHIFT))&ADC_NCMR_CH45_MASK)
#define ADC_NCMR_CH77_MASK                       0x2000u
#define ADC_NCMR_CH77_SHIFT                      13u
#define ADC_NCMR_CH77_WIDTH                      1u
#define ADC_NCMR_CH77(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH77_SHIFT))&ADC_NCMR_CH77_MASK)
#define ADC_NCMR_CH13_MASK                       0x2000u
#define ADC_NCMR_CH13_SHIFT                      13u
#define ADC_NCMR_CH13_WIDTH                      1u
#define ADC_NCMR_CH13(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH13_SHIFT))&ADC_NCMR_CH13_MASK)
#define ADC_NCMR_CH14_MASK                       0x4000u
#define ADC_NCMR_CH14_SHIFT                      14u
#define ADC_NCMR_CH14_WIDTH                      1u
#define ADC_NCMR_CH14(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH14_SHIFT))&ADC_NCMR_CH14_MASK)
#define ADC_NCMR_CH46_MASK                       0x4000u
#define ADC_NCMR_CH46_SHIFT                      14u
#define ADC_NCMR_CH46_WIDTH                      1u
#define ADC_NCMR_CH46(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH46_SHIFT))&ADC_NCMR_CH46_MASK)
#define ADC_NCMR_CH78_MASK                       0x4000u
#define ADC_NCMR_CH78_SHIFT                      14u
#define ADC_NCMR_CH78_WIDTH                      1u
#define ADC_NCMR_CH78(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH78_SHIFT))&ADC_NCMR_CH78_MASK)
#define ADC_NCMR_CH47_MASK                       0x8000u
#define ADC_NCMR_CH47_SHIFT                      15u
#define ADC_NCMR_CH47_WIDTH                      1u
#define ADC_NCMR_CH47(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH47_SHIFT))&ADC_NCMR_CH47_MASK)
#define ADC_NCMR_CH15_MASK                       0x8000u
#define ADC_NCMR_CH15_SHIFT                      15u
#define ADC_NCMR_CH15_WIDTH                      1u
#define ADC_NCMR_CH15(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH15_SHIFT))&ADC_NCMR_CH15_MASK)
#define ADC_NCMR_CH79_MASK                       0x8000u
#define ADC_NCMR_CH79_SHIFT                      15u
#define ADC_NCMR_CH79_WIDTH                      1u
#define ADC_NCMR_CH79(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH79_SHIFT))&ADC_NCMR_CH79_MASK)
#define ADC_NCMR_CH80_MASK                       0x10000u
#define ADC_NCMR_CH80_SHIFT                      16u
#define ADC_NCMR_CH80_WIDTH                      1u
#define ADC_NCMR_CH80(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH80_SHIFT))&ADC_NCMR_CH80_MASK)
#define ADC_NCMR_CH48_MASK                       0x10000u
#define ADC_NCMR_CH48_SHIFT                      16u
#define ADC_NCMR_CH48_WIDTH                      1u
#define ADC_NCMR_CH48(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH48_SHIFT))&ADC_NCMR_CH48_MASK)
#define ADC_NCMR_CH81_MASK                       0x20000u
#define ADC_NCMR_CH81_SHIFT                      17u
#define ADC_NCMR_CH81_WIDTH                      1u
#define ADC_NCMR_CH81(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH81_SHIFT))&ADC_NCMR_CH81_MASK)
#define ADC_NCMR_CH49_MASK                       0x20000u
#define ADC_NCMR_CH49_SHIFT                      17u
#define ADC_NCMR_CH49_WIDTH                      1u
#define ADC_NCMR_CH49(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH49_SHIFT))&ADC_NCMR_CH49_MASK)
#define ADC_NCMR_CH50_MASK                       0x40000u
#define ADC_NCMR_CH50_SHIFT                      18u
#define ADC_NCMR_CH50_WIDTH                      1u
#define ADC_NCMR_CH50(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH50_SHIFT))&ADC_NCMR_CH50_MASK)
#define ADC_NCMR_CH82_MASK                       0x40000u
#define ADC_NCMR_CH82_SHIFT                      18u
#define ADC_NCMR_CH82_WIDTH                      1u
#define ADC_NCMR_CH82(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH82_SHIFT))&ADC_NCMR_CH82_MASK)
#define ADC_NCMR_CH51_MASK                       0x80000u
#define ADC_NCMR_CH51_SHIFT                      19u
#define ADC_NCMR_CH51_WIDTH                      1u
#define ADC_NCMR_CH51(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH51_SHIFT))&ADC_NCMR_CH51_MASK)
#define ADC_NCMR_CH83_MASK                       0x80000u
#define ADC_NCMR_CH83_SHIFT                      19u
#define ADC_NCMR_CH83_WIDTH                      1u
#define ADC_NCMR_CH83(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH83_SHIFT))&ADC_NCMR_CH83_MASK)
#define ADC_NCMR_CH52_MASK                       0x100000u
#define ADC_NCMR_CH52_SHIFT                      20u
#define ADC_NCMR_CH52_WIDTH                      1u
#define ADC_NCMR_CH52(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH52_SHIFT))&ADC_NCMR_CH52_MASK)
#define ADC_NCMR_CH84_MASK                       0x100000u
#define ADC_NCMR_CH84_SHIFT                      20u
#define ADC_NCMR_CH84_WIDTH                      1u
#define ADC_NCMR_CH84(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH84_SHIFT))&ADC_NCMR_CH84_MASK)
#define ADC_NCMR_CH53_MASK                       0x200000u
#define ADC_NCMR_CH53_SHIFT                      21u
#define ADC_NCMR_CH53_WIDTH                      1u
#define ADC_NCMR_CH53(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH53_SHIFT))&ADC_NCMR_CH53_MASK)
#define ADC_NCMR_CH85_MASK                       0x200000u
#define ADC_NCMR_CH85_SHIFT                      21u
#define ADC_NCMR_CH85_WIDTH                      1u
#define ADC_NCMR_CH85(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH85_SHIFT))&ADC_NCMR_CH85_MASK)
#define ADC_NCMR_CH54_MASK                       0x400000u
#define ADC_NCMR_CH54_SHIFT                      22u
#define ADC_NCMR_CH54_WIDTH                      1u
#define ADC_NCMR_CH54(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH54_SHIFT))&ADC_NCMR_CH54_MASK)
#define ADC_NCMR_CH86_MASK                       0x400000u
#define ADC_NCMR_CH86_SHIFT                      22u
#define ADC_NCMR_CH86_WIDTH                      1u
#define ADC_NCMR_CH86(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH86_SHIFT))&ADC_NCMR_CH86_MASK)
#define ADC_NCMR_CH55_MASK                       0x800000u
#define ADC_NCMR_CH55_SHIFT                      23u
#define ADC_NCMR_CH55_WIDTH                      1u
#define ADC_NCMR_CH55(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH55_SHIFT))&ADC_NCMR_CH55_MASK)
#define ADC_NCMR_CH87_MASK                       0x800000u
#define ADC_NCMR_CH87_SHIFT                      23u
#define ADC_NCMR_CH87_WIDTH                      1u
#define ADC_NCMR_CH87(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH87_SHIFT))&ADC_NCMR_CH87_MASK)
#define ADC_NCMR_CH88_MASK                       0x1000000u
#define ADC_NCMR_CH88_SHIFT                      24u
#define ADC_NCMR_CH88_WIDTH                      1u
#define ADC_NCMR_CH88(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH88_SHIFT))&ADC_NCMR_CH88_MASK)
#define ADC_NCMR_CH56_MASK                       0x1000000u
#define ADC_NCMR_CH56_SHIFT                      24u
#define ADC_NCMR_CH56_WIDTH                      1u
#define ADC_NCMR_CH56(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH56_SHIFT))&ADC_NCMR_CH56_MASK)
#define ADC_NCMR_CH89_MASK                       0x2000000u
#define ADC_NCMR_CH89_SHIFT                      25u
#define ADC_NCMR_CH89_WIDTH                      1u
#define ADC_NCMR_CH89(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH89_SHIFT))&ADC_NCMR_CH89_MASK)
#define ADC_NCMR_CH57_MASK                       0x2000000u
#define ADC_NCMR_CH57_SHIFT                      25u
#define ADC_NCMR_CH57_WIDTH                      1u
#define ADC_NCMR_CH57(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH57_SHIFT))&ADC_NCMR_CH57_MASK)
#define ADC_NCMR_CH90_MASK                       0x4000000u
#define ADC_NCMR_CH90_SHIFT                      26u
#define ADC_NCMR_CH90_WIDTH                      1u
#define ADC_NCMR_CH90(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH90_SHIFT))&ADC_NCMR_CH90_MASK)
#define ADC_NCMR_CH58_MASK                       0x4000000u
#define ADC_NCMR_CH58_SHIFT                      26u
#define ADC_NCMR_CH58_WIDTH                      1u
#define ADC_NCMR_CH58(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH58_SHIFT))&ADC_NCMR_CH58_MASK)
#define ADC_NCMR_CH59_MASK                       0x8000000u
#define ADC_NCMR_CH59_SHIFT                      27u
#define ADC_NCMR_CH59_WIDTH                      1u
#define ADC_NCMR_CH59(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH59_SHIFT))&ADC_NCMR_CH59_MASK)
#define ADC_NCMR_CH91_MASK                       0x8000000u
#define ADC_NCMR_CH91_SHIFT                      27u
#define ADC_NCMR_CH91_WIDTH                      1u
#define ADC_NCMR_CH91(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH91_SHIFT))&ADC_NCMR_CH91_MASK)
#define ADC_NCMR_CH60_MASK                       0x10000000u
#define ADC_NCMR_CH60_SHIFT                      28u
#define ADC_NCMR_CH60_WIDTH                      1u
#define ADC_NCMR_CH60(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH60_SHIFT))&ADC_NCMR_CH60_MASK)
#define ADC_NCMR_CH92_MASK                       0x10000000u
#define ADC_NCMR_CH92_SHIFT                      28u
#define ADC_NCMR_CH92_WIDTH                      1u
#define ADC_NCMR_CH92(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH92_SHIFT))&ADC_NCMR_CH92_MASK)
#define ADC_NCMR_CH61_MASK                       0x20000000u
#define ADC_NCMR_CH61_SHIFT                      29u
#define ADC_NCMR_CH61_WIDTH                      1u
#define ADC_NCMR_CH61(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH61_SHIFT))&ADC_NCMR_CH61_MASK)
#define ADC_NCMR_CH93_MASK                       0x20000000u
#define ADC_NCMR_CH93_SHIFT                      29u
#define ADC_NCMR_CH93_WIDTH                      1u
#define ADC_NCMR_CH93(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH93_SHIFT))&ADC_NCMR_CH93_MASK)
#define ADC_NCMR_CH94_MASK                       0x40000000u
#define ADC_NCMR_CH94_SHIFT                      30u
#define ADC_NCMR_CH94_WIDTH                      1u
#define ADC_NCMR_CH94(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH94_SHIFT))&ADC_NCMR_CH94_MASK)
#define ADC_NCMR_CH62_MASK                       0x40000000u
#define ADC_NCMR_CH62_SHIFT                      30u
#define ADC_NCMR_CH62_WIDTH                      1u
#define ADC_NCMR_CH62(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH62_SHIFT))&ADC_NCMR_CH62_MASK)
#define ADC_NCMR_CH95_MASK                       0x80000000u
#define ADC_NCMR_CH95_SHIFT                      31u
#define ADC_NCMR_CH95_WIDTH                      1u
#define ADC_NCMR_CH95(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH95_SHIFT))&ADC_NCMR_CH95_MASK)
#define ADC_NCMR_CH63_MASK                       0x80000000u
#define ADC_NCMR_CH63_SHIFT                      31u
#define ADC_NCMR_CH63_WIDTH                      1u
#define ADC_NCMR_CH63(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_NCMR_CH63_SHIFT))&ADC_NCMR_CH63_MASK)
/* JCMR Bit Fields */
#define ADC_JCMR_CH0_MASK                        0x1u
#define ADC_JCMR_CH0_SHIFT                       0u
#define ADC_JCMR_CH0_WIDTH                       1u
#define ADC_JCMR_CH0(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH0_SHIFT))&ADC_JCMR_CH0_MASK)
#define ADC_JCMR_CH64_MASK                       0x1u
#define ADC_JCMR_CH64_SHIFT                      0u
#define ADC_JCMR_CH64_WIDTH                      1u
#define ADC_JCMR_CH64(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH64_SHIFT))&ADC_JCMR_CH64_MASK)
#define ADC_JCMR_CH32_MASK                       0x1u
#define ADC_JCMR_CH32_SHIFT                      0u
#define ADC_JCMR_CH32_WIDTH                      1u
#define ADC_JCMR_CH32(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH32_SHIFT))&ADC_JCMR_CH32_MASK)
#define ADC_JCMR_CH65_MASK                       0x2u
#define ADC_JCMR_CH65_SHIFT                      1u
#define ADC_JCMR_CH65_WIDTH                      1u
#define ADC_JCMR_CH65(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH65_SHIFT))&ADC_JCMR_CH65_MASK)
#define ADC_JCMR_CH33_MASK                       0x2u
#define ADC_JCMR_CH33_SHIFT                      1u
#define ADC_JCMR_CH33_WIDTH                      1u
#define ADC_JCMR_CH33(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH33_SHIFT))&ADC_JCMR_CH33_MASK)
#define ADC_JCMR_CH1_MASK                        0x2u
#define ADC_JCMR_CH1_SHIFT                       1u
#define ADC_JCMR_CH1_WIDTH                       1u
#define ADC_JCMR_CH1(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH1_SHIFT))&ADC_JCMR_CH1_MASK)
#define ADC_JCMR_CH34_MASK                       0x4u
#define ADC_JCMR_CH34_SHIFT                      2u
#define ADC_JCMR_CH34_WIDTH                      1u
#define ADC_JCMR_CH34(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH34_SHIFT))&ADC_JCMR_CH34_MASK)
#define ADC_JCMR_CH2_MASK                        0x4u
#define ADC_JCMR_CH2_SHIFT                       2u
#define ADC_JCMR_CH2_WIDTH                       1u
#define ADC_JCMR_CH2(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH2_SHIFT))&ADC_JCMR_CH2_MASK)
#define ADC_JCMR_CH66_MASK                       0x4u
#define ADC_JCMR_CH66_SHIFT                      2u
#define ADC_JCMR_CH66_WIDTH                      1u
#define ADC_JCMR_CH66(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH66_SHIFT))&ADC_JCMR_CH66_MASK)
#define ADC_JCMR_CH67_MASK                       0x8u
#define ADC_JCMR_CH67_SHIFT                      3u
#define ADC_JCMR_CH67_WIDTH                      1u
#define ADC_JCMR_CH67(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH67_SHIFT))&ADC_JCMR_CH67_MASK)
#define ADC_JCMR_CH3_MASK                        0x8u
#define ADC_JCMR_CH3_SHIFT                       3u
#define ADC_JCMR_CH3_WIDTH                       1u
#define ADC_JCMR_CH3(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH3_SHIFT))&ADC_JCMR_CH3_MASK)
#define ADC_JCMR_CH35_MASK                       0x8u
#define ADC_JCMR_CH35_SHIFT                      3u
#define ADC_JCMR_CH35_WIDTH                      1u
#define ADC_JCMR_CH35(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH35_SHIFT))&ADC_JCMR_CH35_MASK)
#define ADC_JCMR_CH4_MASK                        0x10u
#define ADC_JCMR_CH4_SHIFT                       4u
#define ADC_JCMR_CH4_WIDTH                       1u
#define ADC_JCMR_CH4(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH4_SHIFT))&ADC_JCMR_CH4_MASK)
#define ADC_JCMR_CH36_MASK                       0x10u
#define ADC_JCMR_CH36_SHIFT                      4u
#define ADC_JCMR_CH36_WIDTH                      1u
#define ADC_JCMR_CH36(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH36_SHIFT))&ADC_JCMR_CH36_MASK)
#define ADC_JCMR_CH68_MASK                       0x10u
#define ADC_JCMR_CH68_SHIFT                      4u
#define ADC_JCMR_CH68_WIDTH                      1u
#define ADC_JCMR_CH68(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH68_SHIFT))&ADC_JCMR_CH68_MASK)
#define ADC_JCMR_CH69_MASK                       0x20u
#define ADC_JCMR_CH69_SHIFT                      5u
#define ADC_JCMR_CH69_WIDTH                      1u
#define ADC_JCMR_CH69(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH69_SHIFT))&ADC_JCMR_CH69_MASK)
#define ADC_JCMR_CH37_MASK                       0x20u
#define ADC_JCMR_CH37_SHIFT                      5u
#define ADC_JCMR_CH37_WIDTH                      1u
#define ADC_JCMR_CH37(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH37_SHIFT))&ADC_JCMR_CH37_MASK)
#define ADC_JCMR_CH5_MASK                        0x20u
#define ADC_JCMR_CH5_SHIFT                       5u
#define ADC_JCMR_CH5_WIDTH                       1u
#define ADC_JCMR_CH5(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH5_SHIFT))&ADC_JCMR_CH5_MASK)
#define ADC_JCMR_CH70_MASK                       0x40u
#define ADC_JCMR_CH70_SHIFT                      6u
#define ADC_JCMR_CH70_WIDTH                      1u
#define ADC_JCMR_CH70(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH70_SHIFT))&ADC_JCMR_CH70_MASK)
#define ADC_JCMR_CH38_MASK                       0x40u
#define ADC_JCMR_CH38_SHIFT                      6u
#define ADC_JCMR_CH38_WIDTH                      1u
#define ADC_JCMR_CH38(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH38_SHIFT))&ADC_JCMR_CH38_MASK)
#define ADC_JCMR_CH6_MASK                        0x40u
#define ADC_JCMR_CH6_SHIFT                       6u
#define ADC_JCMR_CH6_WIDTH                       1u
#define ADC_JCMR_CH6(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH6_SHIFT))&ADC_JCMR_CH6_MASK)
#define ADC_JCMR_CH7_MASK                        0x80u
#define ADC_JCMR_CH7_SHIFT                       7u
#define ADC_JCMR_CH7_WIDTH                       1u
#define ADC_JCMR_CH7(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH7_SHIFT))&ADC_JCMR_CH7_MASK)
#define ADC_JCMR_CH39_MASK                       0x80u
#define ADC_JCMR_CH39_SHIFT                      7u
#define ADC_JCMR_CH39_WIDTH                      1u
#define ADC_JCMR_CH39(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH39_SHIFT))&ADC_JCMR_CH39_MASK)
#define ADC_JCMR_CH71_MASK                       0x80u
#define ADC_JCMR_CH71_SHIFT                      7u
#define ADC_JCMR_CH71_WIDTH                      1u
#define ADC_JCMR_CH71(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH71_SHIFT))&ADC_JCMR_CH71_MASK)
#define ADC_JCMR_CH8_MASK                        0x100u
#define ADC_JCMR_CH8_SHIFT                       8u
#define ADC_JCMR_CH8_WIDTH                       1u
#define ADC_JCMR_CH8(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH8_SHIFT))&ADC_JCMR_CH8_MASK)
#define ADC_JCMR_CH40_MASK                       0x100u
#define ADC_JCMR_CH40_SHIFT                      8u
#define ADC_JCMR_CH40_WIDTH                      1u
#define ADC_JCMR_CH40(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH40_SHIFT))&ADC_JCMR_CH40_MASK)
#define ADC_JCMR_CH72_MASK                       0x100u
#define ADC_JCMR_CH72_SHIFT                      8u
#define ADC_JCMR_CH72_WIDTH                      1u
#define ADC_JCMR_CH72(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH72_SHIFT))&ADC_JCMR_CH72_MASK)
#define ADC_JCMR_CH73_MASK                       0x200u
#define ADC_JCMR_CH73_SHIFT                      9u
#define ADC_JCMR_CH73_WIDTH                      1u
#define ADC_JCMR_CH73(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH73_SHIFT))&ADC_JCMR_CH73_MASK)
#define ADC_JCMR_CH41_MASK                       0x200u
#define ADC_JCMR_CH41_SHIFT                      9u
#define ADC_JCMR_CH41_WIDTH                      1u
#define ADC_JCMR_CH41(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH41_SHIFT))&ADC_JCMR_CH41_MASK)
#define ADC_JCMR_CH9_MASK                        0x200u
#define ADC_JCMR_CH9_SHIFT                       9u
#define ADC_JCMR_CH9_WIDTH                       1u
#define ADC_JCMR_CH9(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH9_SHIFT))&ADC_JCMR_CH9_MASK)
#define ADC_JCMR_CH42_MASK                       0x400u
#define ADC_JCMR_CH42_SHIFT                      10u
#define ADC_JCMR_CH42_WIDTH                      1u
#define ADC_JCMR_CH42(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH42_SHIFT))&ADC_JCMR_CH42_MASK)
#define ADC_JCMR_CH74_MASK                       0x400u
#define ADC_JCMR_CH74_SHIFT                      10u
#define ADC_JCMR_CH74_WIDTH                      1u
#define ADC_JCMR_CH74(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH74_SHIFT))&ADC_JCMR_CH74_MASK)
#define ADC_JCMR_CH10_MASK                       0x400u
#define ADC_JCMR_CH10_SHIFT                      10u
#define ADC_JCMR_CH10_WIDTH                      1u
#define ADC_JCMR_CH10(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH10_SHIFT))&ADC_JCMR_CH10_MASK)
#define ADC_JCMR_CH11_MASK                       0x800u
#define ADC_JCMR_CH11_SHIFT                      11u
#define ADC_JCMR_CH11_WIDTH                      1u
#define ADC_JCMR_CH11(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH11_SHIFT))&ADC_JCMR_CH11_MASK)
#define ADC_JCMR_CH75_MASK                       0x800u
#define ADC_JCMR_CH75_SHIFT                      11u
#define ADC_JCMR_CH75_WIDTH                      1u
#define ADC_JCMR_CH75(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH75_SHIFT))&ADC_JCMR_CH75_MASK)
#define ADC_JCMR_CH43_MASK                       0x800u
#define ADC_JCMR_CH43_SHIFT                      11u
#define ADC_JCMR_CH43_WIDTH                      1u
#define ADC_JCMR_CH43(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH43_SHIFT))&ADC_JCMR_CH43_MASK)
#define ADC_JCMR_CH76_MASK                       0x1000u
#define ADC_JCMR_CH76_SHIFT                      12u
#define ADC_JCMR_CH76_WIDTH                      1u
#define ADC_JCMR_CH76(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH76_SHIFT))&ADC_JCMR_CH76_MASK)
#define ADC_JCMR_CH12_MASK                       0x1000u
#define ADC_JCMR_CH12_SHIFT                      12u
#define ADC_JCMR_CH12_WIDTH                      1u
#define ADC_JCMR_CH12(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH12_SHIFT))&ADC_JCMR_CH12_MASK)
#define ADC_JCMR_CH44_MASK                       0x1000u
#define ADC_JCMR_CH44_SHIFT                      12u
#define ADC_JCMR_CH44_WIDTH                      1u
#define ADC_JCMR_CH44(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH44_SHIFT))&ADC_JCMR_CH44_MASK)
#define ADC_JCMR_CH45_MASK                       0x2000u
#define ADC_JCMR_CH45_SHIFT                      13u
#define ADC_JCMR_CH45_WIDTH                      1u
#define ADC_JCMR_CH45(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH45_SHIFT))&ADC_JCMR_CH45_MASK)
#define ADC_JCMR_CH77_MASK                       0x2000u
#define ADC_JCMR_CH77_SHIFT                      13u
#define ADC_JCMR_CH77_WIDTH                      1u
#define ADC_JCMR_CH77(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH77_SHIFT))&ADC_JCMR_CH77_MASK)
#define ADC_JCMR_CH13_MASK                       0x2000u
#define ADC_JCMR_CH13_SHIFT                      13u
#define ADC_JCMR_CH13_WIDTH                      1u
#define ADC_JCMR_CH13(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH13_SHIFT))&ADC_JCMR_CH13_MASK)
#define ADC_JCMR_CH14_MASK                       0x4000u
#define ADC_JCMR_CH14_SHIFT                      14u
#define ADC_JCMR_CH14_WIDTH                      1u
#define ADC_JCMR_CH14(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH14_SHIFT))&ADC_JCMR_CH14_MASK)
#define ADC_JCMR_CH46_MASK                       0x4000u
#define ADC_JCMR_CH46_SHIFT                      14u
#define ADC_JCMR_CH46_WIDTH                      1u
#define ADC_JCMR_CH46(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH46_SHIFT))&ADC_JCMR_CH46_MASK)
#define ADC_JCMR_CH78_MASK                       0x4000u
#define ADC_JCMR_CH78_SHIFT                      14u
#define ADC_JCMR_CH78_WIDTH                      1u
#define ADC_JCMR_CH78(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH78_SHIFT))&ADC_JCMR_CH78_MASK)
#define ADC_JCMR_CH47_MASK                       0x8000u
#define ADC_JCMR_CH47_SHIFT                      15u
#define ADC_JCMR_CH47_WIDTH                      1u
#define ADC_JCMR_CH47(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH47_SHIFT))&ADC_JCMR_CH47_MASK)
#define ADC_JCMR_CH15_MASK                       0x8000u
#define ADC_JCMR_CH15_SHIFT                      15u
#define ADC_JCMR_CH15_WIDTH                      1u
#define ADC_JCMR_CH15(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH15_SHIFT))&ADC_JCMR_CH15_MASK)
#define ADC_JCMR_CH79_MASK                       0x8000u
#define ADC_JCMR_CH79_SHIFT                      15u
#define ADC_JCMR_CH79_WIDTH                      1u
#define ADC_JCMR_CH79(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH79_SHIFT))&ADC_JCMR_CH79_MASK)
#define ADC_JCMR_CH80_MASK                       0x10000u
#define ADC_JCMR_CH80_SHIFT                      16u
#define ADC_JCMR_CH80_WIDTH                      1u
#define ADC_JCMR_CH80(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH80_SHIFT))&ADC_JCMR_CH80_MASK)
#define ADC_JCMR_CH48_MASK                       0x10000u
#define ADC_JCMR_CH48_SHIFT                      16u
#define ADC_JCMR_CH48_WIDTH                      1u
#define ADC_JCMR_CH48(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH48_SHIFT))&ADC_JCMR_CH48_MASK)
#define ADC_JCMR_CH81_MASK                       0x20000u
#define ADC_JCMR_CH81_SHIFT                      17u
#define ADC_JCMR_CH81_WIDTH                      1u
#define ADC_JCMR_CH81(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH81_SHIFT))&ADC_JCMR_CH81_MASK)
#define ADC_JCMR_CH49_MASK                       0x20000u
#define ADC_JCMR_CH49_SHIFT                      17u
#define ADC_JCMR_CH49_WIDTH                      1u
#define ADC_JCMR_CH49(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH49_SHIFT))&ADC_JCMR_CH49_MASK)
#define ADC_JCMR_CH50_MASK                       0x40000u
#define ADC_JCMR_CH50_SHIFT                      18u
#define ADC_JCMR_CH50_WIDTH                      1u
#define ADC_JCMR_CH50(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH50_SHIFT))&ADC_JCMR_CH50_MASK)
#define ADC_JCMR_CH82_MASK                       0x40000u
#define ADC_JCMR_CH82_SHIFT                      18u
#define ADC_JCMR_CH82_WIDTH                      1u
#define ADC_JCMR_CH82(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH82_SHIFT))&ADC_JCMR_CH82_MASK)
#define ADC_JCMR_CH51_MASK                       0x80000u
#define ADC_JCMR_CH51_SHIFT                      19u
#define ADC_JCMR_CH51_WIDTH                      1u
#define ADC_JCMR_CH51(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH51_SHIFT))&ADC_JCMR_CH51_MASK)
#define ADC_JCMR_CH83_MASK                       0x80000u
#define ADC_JCMR_CH83_SHIFT                      19u
#define ADC_JCMR_CH83_WIDTH                      1u
#define ADC_JCMR_CH83(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH83_SHIFT))&ADC_JCMR_CH83_MASK)
#define ADC_JCMR_CH52_MASK                       0x100000u
#define ADC_JCMR_CH52_SHIFT                      20u
#define ADC_JCMR_CH52_WIDTH                      1u
#define ADC_JCMR_CH52(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH52_SHIFT))&ADC_JCMR_CH52_MASK)
#define ADC_JCMR_CH84_MASK                       0x100000u
#define ADC_JCMR_CH84_SHIFT                      20u
#define ADC_JCMR_CH84_WIDTH                      1u
#define ADC_JCMR_CH84(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH84_SHIFT))&ADC_JCMR_CH84_MASK)
#define ADC_JCMR_CH53_MASK                       0x200000u
#define ADC_JCMR_CH53_SHIFT                      21u
#define ADC_JCMR_CH53_WIDTH                      1u
#define ADC_JCMR_CH53(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH53_SHIFT))&ADC_JCMR_CH53_MASK)
#define ADC_JCMR_CH85_MASK                       0x200000u
#define ADC_JCMR_CH85_SHIFT                      21u
#define ADC_JCMR_CH85_WIDTH                      1u
#define ADC_JCMR_CH85(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH85_SHIFT))&ADC_JCMR_CH85_MASK)
#define ADC_JCMR_CH54_MASK                       0x400000u
#define ADC_JCMR_CH54_SHIFT                      22u
#define ADC_JCMR_CH54_WIDTH                      1u
#define ADC_JCMR_CH54(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH54_SHIFT))&ADC_JCMR_CH54_MASK)
#define ADC_JCMR_CH86_MASK                       0x400000u
#define ADC_JCMR_CH86_SHIFT                      22u
#define ADC_JCMR_CH86_WIDTH                      1u
#define ADC_JCMR_CH86(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH86_SHIFT))&ADC_JCMR_CH86_MASK)
#define ADC_JCMR_CH55_MASK                       0x800000u
#define ADC_JCMR_CH55_SHIFT                      23u
#define ADC_JCMR_CH55_WIDTH                      1u
#define ADC_JCMR_CH55(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH55_SHIFT))&ADC_JCMR_CH55_MASK)
#define ADC_JCMR_CH87_MASK                       0x800000u
#define ADC_JCMR_CH87_SHIFT                      23u
#define ADC_JCMR_CH87_WIDTH                      1u
#define ADC_JCMR_CH87(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH87_SHIFT))&ADC_JCMR_CH87_MASK)
#define ADC_JCMR_CH88_MASK                       0x1000000u
#define ADC_JCMR_CH88_SHIFT                      24u
#define ADC_JCMR_CH88_WIDTH                      1u
#define ADC_JCMR_CH88(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH88_SHIFT))&ADC_JCMR_CH88_MASK)
#define ADC_JCMR_CH56_MASK                       0x1000000u
#define ADC_JCMR_CH56_SHIFT                      24u
#define ADC_JCMR_CH56_WIDTH                      1u
#define ADC_JCMR_CH56(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH56_SHIFT))&ADC_JCMR_CH56_MASK)
#define ADC_JCMR_CH89_MASK                       0x2000000u
#define ADC_JCMR_CH89_SHIFT                      25u
#define ADC_JCMR_CH89_WIDTH                      1u
#define ADC_JCMR_CH89(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH89_SHIFT))&ADC_JCMR_CH89_MASK)
#define ADC_JCMR_CH57_MASK                       0x2000000u
#define ADC_JCMR_CH57_SHIFT                      25u
#define ADC_JCMR_CH57_WIDTH                      1u
#define ADC_JCMR_CH57(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH57_SHIFT))&ADC_JCMR_CH57_MASK)
#define ADC_JCMR_CH90_MASK                       0x4000000u
#define ADC_JCMR_CH90_SHIFT                      26u
#define ADC_JCMR_CH90_WIDTH                      1u
#define ADC_JCMR_CH90(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH90_SHIFT))&ADC_JCMR_CH90_MASK)
#define ADC_JCMR_CH58_MASK                       0x4000000u
#define ADC_JCMR_CH58_SHIFT                      26u
#define ADC_JCMR_CH58_WIDTH                      1u
#define ADC_JCMR_CH58(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH58_SHIFT))&ADC_JCMR_CH58_MASK)
#define ADC_JCMR_CH59_MASK                       0x8000000u
#define ADC_JCMR_CH59_SHIFT                      27u
#define ADC_JCMR_CH59_WIDTH                      1u
#define ADC_JCMR_CH59(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH59_SHIFT))&ADC_JCMR_CH59_MASK)
#define ADC_JCMR_CH91_MASK                       0x8000000u
#define ADC_JCMR_CH91_SHIFT                      27u
#define ADC_JCMR_CH91_WIDTH                      1u
#define ADC_JCMR_CH91(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH91_SHIFT))&ADC_JCMR_CH91_MASK)
#define ADC_JCMR_CH60_MASK                       0x10000000u
#define ADC_JCMR_CH60_SHIFT                      28u
#define ADC_JCMR_CH60_WIDTH                      1u
#define ADC_JCMR_CH60(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH60_SHIFT))&ADC_JCMR_CH60_MASK)
#define ADC_JCMR_CH92_MASK                       0x10000000u
#define ADC_JCMR_CH92_SHIFT                      28u
#define ADC_JCMR_CH92_WIDTH                      1u
#define ADC_JCMR_CH92(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH92_SHIFT))&ADC_JCMR_CH92_MASK)
#define ADC_JCMR_CH61_MASK                       0x20000000u
#define ADC_JCMR_CH61_SHIFT                      29u
#define ADC_JCMR_CH61_WIDTH                      1u
#define ADC_JCMR_CH61(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH61_SHIFT))&ADC_JCMR_CH61_MASK)
#define ADC_JCMR_CH93_MASK                       0x20000000u
#define ADC_JCMR_CH93_SHIFT                      29u
#define ADC_JCMR_CH93_WIDTH                      1u
#define ADC_JCMR_CH93(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH93_SHIFT))&ADC_JCMR_CH93_MASK)
#define ADC_JCMR_CH94_MASK                       0x40000000u
#define ADC_JCMR_CH94_SHIFT                      30u
#define ADC_JCMR_CH94_WIDTH                      1u
#define ADC_JCMR_CH94(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH94_SHIFT))&ADC_JCMR_CH94_MASK)
#define ADC_JCMR_CH62_MASK                       0x40000000u
#define ADC_JCMR_CH62_SHIFT                      30u
#define ADC_JCMR_CH62_WIDTH                      1u
#define ADC_JCMR_CH62(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH62_SHIFT))&ADC_JCMR_CH62_MASK)
#define ADC_JCMR_CH95_MASK                       0x80000000u
#define ADC_JCMR_CH95_SHIFT                      31u
#define ADC_JCMR_CH95_WIDTH                      1u
#define ADC_JCMR_CH95(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH95_SHIFT))&ADC_JCMR_CH95_MASK)
#define ADC_JCMR_CH63_MASK                       0x80000000u
#define ADC_JCMR_CH63_SHIFT                      31u
#define ADC_JCMR_CH63_WIDTH                      1u
#define ADC_JCMR_CH63(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_JCMR_CH63_SHIFT))&ADC_JCMR_CH63_MASK)
/* DSDR Bit Fields */
#define ADC_DSDR_DSD_MASK                        0xFFFFu
#define ADC_DSDR_DSD_SHIFT                       0u
#define ADC_DSDR_DSD_WIDTH                       16u
#define ADC_DSDR_DSD(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_DSDR_DSD_SHIFT))&ADC_DSDR_DSD_MASK)
/* PDEDR Bit Fields */
#define ADC_PDEDR_PDED_MASK                      0xFFu
#define ADC_PDEDR_PDED_SHIFT                     0u
#define ADC_PDEDR_PDED_WIDTH                     8u
#define ADC_PDEDR_PDED(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PDEDR_PDED_SHIFT))&ADC_PDEDR_PDED_MASK)
/* CDR Bit Fields */
#define ADC_CDR_CDATA_MASK                       0xFFFFu
#define ADC_CDR_CDATA_SHIFT                      0u
#define ADC_CDR_CDATA_WIDTH                      16u
#define ADC_CDR_CDATA(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CDR_CDATA_SHIFT))&ADC_CDR_CDATA_MASK)
#define ADC_CDR_RESULT_MASK                      0x30000u
#define ADC_CDR_RESULT_SHIFT                     16u
#define ADC_CDR_RESULT_WIDTH                     2u
#define ADC_CDR_RESULT(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CDR_RESULT_SHIFT))&ADC_CDR_RESULT_MASK)
#define ADC_CDR_OVERW_MASK                       0x40000u
#define ADC_CDR_OVERW_SHIFT                      18u
#define ADC_CDR_OVERW_WIDTH                      1u
#define ADC_CDR_OVERW(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CDR_OVERW_SHIFT))&ADC_CDR_OVERW_MASK)
#define ADC_CDR_VALID_MASK                       0x80000u
#define ADC_CDR_VALID_SHIFT                      19u
#define ADC_CDR_VALID_WIDTH                      1u
#define ADC_CDR_VALID(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CDR_VALID_SHIFT))&ADC_CDR_VALID_MASK)
/* THRHLR4 Bit Fields */
#define ADC_THRHLR4_THRL_MASK                    0xFFFu
#define ADC_THRHLR4_THRL_SHIFT                   0u
#define ADC_THRHLR4_THRL_WIDTH                   12u
#define ADC_THRHLR4_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR4_THRL_SHIFT))&ADC_THRHLR4_THRL_MASK)
#define ADC_THRHLR4_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR4_THRH_SHIFT                   16u
#define ADC_THRHLR4_THRH_WIDTH                   12u
#define ADC_THRHLR4_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR4_THRH_SHIFT))&ADC_THRHLR4_THRH_MASK)
/* THRHLR5 Bit Fields */
#define ADC_THRHLR5_THRL_MASK                    0xFFFu
#define ADC_THRHLR5_THRL_SHIFT                   0u
#define ADC_THRHLR5_THRL_WIDTH                   12u
#define ADC_THRHLR5_THRL(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR5_THRL_SHIFT))&ADC_THRHLR5_THRL_MASK)
#define ADC_THRHLR5_THRH_MASK                    0xFFF0000u
#define ADC_THRHLR5_THRH_SHIFT                   16u
#define ADC_THRHLR5_THRH_WIDTH                   12u
#define ADC_THRHLR5_THRH(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_THRHLR5_THRH_SHIFT))&ADC_THRHLR5_THRH_MASK)
/* CWSELR Bit Fields */
#define ADC_CWSELR_WSEL_CH0_MASK                 0xFu
#define ADC_CWSELR_WSEL_CH0_SHIFT                0u
#define ADC_CWSELR_WSEL_CH0_WIDTH                4u
#define ADC_CWSELR_WSEL_CH0(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH0_SHIFT))&ADC_CWSELR_WSEL_CH0_MASK)
#define ADC_CWSELR_WSEL_CH88_MASK                0xFu
#define ADC_CWSELR_WSEL_CH88_SHIFT               0u
#define ADC_CWSELR_WSEL_CH88_WIDTH               4u
#define ADC_CWSELR_WSEL_CH88(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH88_SHIFT))&ADC_CWSELR_WSEL_CH88_MASK)
#define ADC_CWSELR_WSEL_CH80_MASK                0xFu
#define ADC_CWSELR_WSEL_CH80_SHIFT               0u
#define ADC_CWSELR_WSEL_CH80_WIDTH               4u
#define ADC_CWSELR_WSEL_CH80(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH80_SHIFT))&ADC_CWSELR_WSEL_CH80_MASK)
#define ADC_CWSELR_WSEL_CH72_MASK                0xFu
#define ADC_CWSELR_WSEL_CH72_SHIFT               0u
#define ADC_CWSELR_WSEL_CH72_WIDTH               4u
#define ADC_CWSELR_WSEL_CH72(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH72_SHIFT))&ADC_CWSELR_WSEL_CH72_MASK)
#define ADC_CWSELR_WSEL_CH64_MASK                0xFu
#define ADC_CWSELR_WSEL_CH64_SHIFT               0u
#define ADC_CWSELR_WSEL_CH64_WIDTH               4u
#define ADC_CWSELR_WSEL_CH64(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH64_SHIFT))&ADC_CWSELR_WSEL_CH64_MASK)
#define ADC_CWSELR_WSEL_CH56_MASK                0xFu
#define ADC_CWSELR_WSEL_CH56_SHIFT               0u
#define ADC_CWSELR_WSEL_CH56_WIDTH               4u
#define ADC_CWSELR_WSEL_CH56(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH56_SHIFT))&ADC_CWSELR_WSEL_CH56_MASK)
#define ADC_CWSELR_WSEL_CH48_MASK                0xFu
#define ADC_CWSELR_WSEL_CH48_SHIFT               0u
#define ADC_CWSELR_WSEL_CH48_WIDTH               4u
#define ADC_CWSELR_WSEL_CH48(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH48_SHIFT))&ADC_CWSELR_WSEL_CH48_MASK)
#define ADC_CWSELR_WSEL_CH40_MASK                0xFu
#define ADC_CWSELR_WSEL_CH40_SHIFT               0u
#define ADC_CWSELR_WSEL_CH40_WIDTH               4u
#define ADC_CWSELR_WSEL_CH40(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH40_SHIFT))&ADC_CWSELR_WSEL_CH40_MASK)
#define ADC_CWSELR_WSEL_CH8_MASK                 0xFu
#define ADC_CWSELR_WSEL_CH8_SHIFT                0u
#define ADC_CWSELR_WSEL_CH8_WIDTH                4u
#define ADC_CWSELR_WSEL_CH8(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH8_SHIFT))&ADC_CWSELR_WSEL_CH8_MASK)
#define ADC_CWSELR_WSEL_CH32_MASK                0xFu
#define ADC_CWSELR_WSEL_CH32_SHIFT               0u
#define ADC_CWSELR_WSEL_CH32_WIDTH               4u
#define ADC_CWSELR_WSEL_CH32(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH32_SHIFT))&ADC_CWSELR_WSEL_CH32_MASK)
#define ADC_CWSELR_WSEL_CH65_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH65_SHIFT               4u
#define ADC_CWSELR_WSEL_CH65_WIDTH               4u
#define ADC_CWSELR_WSEL_CH65(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH65_SHIFT))&ADC_CWSELR_WSEL_CH65_MASK)
#define ADC_CWSELR_WSEL_CH81_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH81_SHIFT               4u
#define ADC_CWSELR_WSEL_CH81_WIDTH               4u
#define ADC_CWSELR_WSEL_CH81(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH81_SHIFT))&ADC_CWSELR_WSEL_CH81_MASK)
#define ADC_CWSELR_WSEL_CH73_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH73_SHIFT               4u
#define ADC_CWSELR_WSEL_CH73_WIDTH               4u
#define ADC_CWSELR_WSEL_CH73(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH73_SHIFT))&ADC_CWSELR_WSEL_CH73_MASK)
#define ADC_CWSELR_WSEL_CH57_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH57_SHIFT               4u
#define ADC_CWSELR_WSEL_CH57_WIDTH               4u
#define ADC_CWSELR_WSEL_CH57(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH57_SHIFT))&ADC_CWSELR_WSEL_CH57_MASK)
#define ADC_CWSELR_WSEL_CH33_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH33_SHIFT               4u
#define ADC_CWSELR_WSEL_CH33_WIDTH               4u
#define ADC_CWSELR_WSEL_CH33(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH33_SHIFT))&ADC_CWSELR_WSEL_CH33_MASK)
#define ADC_CWSELR_WSEL_CH9_MASK                 0xF0u
#define ADC_CWSELR_WSEL_CH9_SHIFT                4u
#define ADC_CWSELR_WSEL_CH9_WIDTH                4u
#define ADC_CWSELR_WSEL_CH9(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH9_SHIFT))&ADC_CWSELR_WSEL_CH9_MASK)
#define ADC_CWSELR_WSEL_CH49_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH49_SHIFT               4u
#define ADC_CWSELR_WSEL_CH49_WIDTH               4u
#define ADC_CWSELR_WSEL_CH49(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH49_SHIFT))&ADC_CWSELR_WSEL_CH49_MASK)
#define ADC_CWSELR_WSEL_CH1_MASK                 0xF0u
#define ADC_CWSELR_WSEL_CH1_SHIFT                4u
#define ADC_CWSELR_WSEL_CH1_WIDTH                4u
#define ADC_CWSELR_WSEL_CH1(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH1_SHIFT))&ADC_CWSELR_WSEL_CH1_MASK)
#define ADC_CWSELR_WSEL_CH41_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH41_SHIFT               4u
#define ADC_CWSELR_WSEL_CH41_WIDTH               4u
#define ADC_CWSELR_WSEL_CH41(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH41_SHIFT))&ADC_CWSELR_WSEL_CH41_MASK)
#define ADC_CWSELR_WSEL_CH89_MASK                0xF0u
#define ADC_CWSELR_WSEL_CH89_SHIFT               4u
#define ADC_CWSELR_WSEL_CH89_WIDTH               4u
#define ADC_CWSELR_WSEL_CH89(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH89_SHIFT))&ADC_CWSELR_WSEL_CH89_MASK)
#define ADC_CWSELR_WSEL_CH82_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH82_SHIFT               8u
#define ADC_CWSELR_WSEL_CH82_WIDTH               4u
#define ADC_CWSELR_WSEL_CH82(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH82_SHIFT))&ADC_CWSELR_WSEL_CH82_MASK)
#define ADC_CWSELR_WSEL_CH74_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH74_SHIFT               8u
#define ADC_CWSELR_WSEL_CH74_WIDTH               4u
#define ADC_CWSELR_WSEL_CH74(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH74_SHIFT))&ADC_CWSELR_WSEL_CH74_MASK)
#define ADC_CWSELR_WSEL_CH2_MASK                 0xF00u
#define ADC_CWSELR_WSEL_CH2_SHIFT                8u
#define ADC_CWSELR_WSEL_CH2_WIDTH                4u
#define ADC_CWSELR_WSEL_CH2(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH2_SHIFT))&ADC_CWSELR_WSEL_CH2_MASK)
#define ADC_CWSELR_WSEL_CH66_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH66_SHIFT               8u
#define ADC_CWSELR_WSEL_CH66_WIDTH               4u
#define ADC_CWSELR_WSEL_CH66(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH66_SHIFT))&ADC_CWSELR_WSEL_CH66_MASK)
#define ADC_CWSELR_WSEL_CH42_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH42_SHIFT               8u
#define ADC_CWSELR_WSEL_CH42_WIDTH               4u
#define ADC_CWSELR_WSEL_CH42(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH42_SHIFT))&ADC_CWSELR_WSEL_CH42_MASK)
#define ADC_CWSELR_WSEL_CH50_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH50_SHIFT               8u
#define ADC_CWSELR_WSEL_CH50_WIDTH               4u
#define ADC_CWSELR_WSEL_CH50(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH50_SHIFT))&ADC_CWSELR_WSEL_CH50_MASK)
#define ADC_CWSELR_WSEL_CH34_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH34_SHIFT               8u
#define ADC_CWSELR_WSEL_CH34_WIDTH               4u
#define ADC_CWSELR_WSEL_CH34(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH34_SHIFT))&ADC_CWSELR_WSEL_CH34_MASK)
#define ADC_CWSELR_WSEL_CH58_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH58_SHIFT               8u
#define ADC_CWSELR_WSEL_CH58_WIDTH               4u
#define ADC_CWSELR_WSEL_CH58(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH58_SHIFT))&ADC_CWSELR_WSEL_CH58_MASK)
#define ADC_CWSELR_WSEL_CH90_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH90_SHIFT               8u
#define ADC_CWSELR_WSEL_CH90_WIDTH               4u
#define ADC_CWSELR_WSEL_CH90(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH90_SHIFT))&ADC_CWSELR_WSEL_CH90_MASK)
#define ADC_CWSELR_WSEL_CH10_MASK                0xF00u
#define ADC_CWSELR_WSEL_CH10_SHIFT               8u
#define ADC_CWSELR_WSEL_CH10_WIDTH               4u
#define ADC_CWSELR_WSEL_CH10(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH10_SHIFT))&ADC_CWSELR_WSEL_CH10_MASK)
#define ADC_CWSELR_WSEL_CH83_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH83_SHIFT               12u
#define ADC_CWSELR_WSEL_CH83_WIDTH               4u
#define ADC_CWSELR_WSEL_CH83(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH83_SHIFT))&ADC_CWSELR_WSEL_CH83_MASK)
#define ADC_CWSELR_WSEL_CH35_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH35_SHIFT               12u
#define ADC_CWSELR_WSEL_CH35_WIDTH               4u
#define ADC_CWSELR_WSEL_CH35(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH35_SHIFT))&ADC_CWSELR_WSEL_CH35_MASK)
#define ADC_CWSELR_WSEL_CH3_MASK                 0xF000u
#define ADC_CWSELR_WSEL_CH3_SHIFT                12u
#define ADC_CWSELR_WSEL_CH3_WIDTH                4u
#define ADC_CWSELR_WSEL_CH3(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH3_SHIFT))&ADC_CWSELR_WSEL_CH3_MASK)
#define ADC_CWSELR_WSEL_CH51_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH51_SHIFT               12u
#define ADC_CWSELR_WSEL_CH51_WIDTH               4u
#define ADC_CWSELR_WSEL_CH51(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH51_SHIFT))&ADC_CWSELR_WSEL_CH51_MASK)
#define ADC_CWSELR_WSEL_CH59_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH59_SHIFT               12u
#define ADC_CWSELR_WSEL_CH59_WIDTH               4u
#define ADC_CWSELR_WSEL_CH59(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH59_SHIFT))&ADC_CWSELR_WSEL_CH59_MASK)
#define ADC_CWSELR_WSEL_CH43_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH43_SHIFT               12u
#define ADC_CWSELR_WSEL_CH43_WIDTH               4u
#define ADC_CWSELR_WSEL_CH43(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH43_SHIFT))&ADC_CWSELR_WSEL_CH43_MASK)
#define ADC_CWSELR_WSEL_CH67_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH67_SHIFT               12u
#define ADC_CWSELR_WSEL_CH67_WIDTH               4u
#define ADC_CWSELR_WSEL_CH67(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH67_SHIFT))&ADC_CWSELR_WSEL_CH67_MASK)
#define ADC_CWSELR_WSEL_CH91_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH91_SHIFT               12u
#define ADC_CWSELR_WSEL_CH91_WIDTH               4u
#define ADC_CWSELR_WSEL_CH91(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH91_SHIFT))&ADC_CWSELR_WSEL_CH91_MASK)
#define ADC_CWSELR_WSEL_CH11_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH11_SHIFT               12u
#define ADC_CWSELR_WSEL_CH11_WIDTH               4u
#define ADC_CWSELR_WSEL_CH11(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH11_SHIFT))&ADC_CWSELR_WSEL_CH11_MASK)
#define ADC_CWSELR_WSEL_CH75_MASK                0xF000u
#define ADC_CWSELR_WSEL_CH75_SHIFT               12u
#define ADC_CWSELR_WSEL_CH75_WIDTH               4u
#define ADC_CWSELR_WSEL_CH75(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH75_SHIFT))&ADC_CWSELR_WSEL_CH75_MASK)
#define ADC_CWSELR_WSEL_CH76_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH76_SHIFT               16u
#define ADC_CWSELR_WSEL_CH76_WIDTH               4u
#define ADC_CWSELR_WSEL_CH76(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH76_SHIFT))&ADC_CWSELR_WSEL_CH76_MASK)
#define ADC_CWSELR_WSEL_CH52_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH52_SHIFT               16u
#define ADC_CWSELR_WSEL_CH52_WIDTH               4u
#define ADC_CWSELR_WSEL_CH52(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH52_SHIFT))&ADC_CWSELR_WSEL_CH52_MASK)
#define ADC_CWSELR_WSEL_CH84_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH84_SHIFT               16u
#define ADC_CWSELR_WSEL_CH84_WIDTH               4u
#define ADC_CWSELR_WSEL_CH84(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH84_SHIFT))&ADC_CWSELR_WSEL_CH84_MASK)
#define ADC_CWSELR_WSEL_CH92_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH92_SHIFT               16u
#define ADC_CWSELR_WSEL_CH92_WIDTH               4u
#define ADC_CWSELR_WSEL_CH92(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH92_SHIFT))&ADC_CWSELR_WSEL_CH92_MASK)
#define ADC_CWSELR_WSEL_CH60_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH60_SHIFT               16u
#define ADC_CWSELR_WSEL_CH60_WIDTH               4u
#define ADC_CWSELR_WSEL_CH60(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH60_SHIFT))&ADC_CWSELR_WSEL_CH60_MASK)
#define ADC_CWSELR_WSEL_CH68_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH68_SHIFT               16u
#define ADC_CWSELR_WSEL_CH68_WIDTH               4u
#define ADC_CWSELR_WSEL_CH68(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH68_SHIFT))&ADC_CWSELR_WSEL_CH68_MASK)
#define ADC_CWSELR_WSEL_CH12_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH12_SHIFT               16u
#define ADC_CWSELR_WSEL_CH12_WIDTH               4u
#define ADC_CWSELR_WSEL_CH12(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH12_SHIFT))&ADC_CWSELR_WSEL_CH12_MASK)
#define ADC_CWSELR_WSEL_CH44_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH44_SHIFT               16u
#define ADC_CWSELR_WSEL_CH44_WIDTH               4u
#define ADC_CWSELR_WSEL_CH44(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH44_SHIFT))&ADC_CWSELR_WSEL_CH44_MASK)
#define ADC_CWSELR_WSEL_CH4_MASK                 0xF0000u
#define ADC_CWSELR_WSEL_CH4_SHIFT                16u
#define ADC_CWSELR_WSEL_CH4_WIDTH                4u
#define ADC_CWSELR_WSEL_CH4(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH4_SHIFT))&ADC_CWSELR_WSEL_CH4_MASK)
#define ADC_CWSELR_WSEL_CH36_MASK                0xF0000u
#define ADC_CWSELR_WSEL_CH36_SHIFT               16u
#define ADC_CWSELR_WSEL_CH36_WIDTH               4u
#define ADC_CWSELR_WSEL_CH36(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH36_SHIFT))&ADC_CWSELR_WSEL_CH36_MASK)
#define ADC_CWSELR_WSEL_CH77_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH77_SHIFT               20u
#define ADC_CWSELR_WSEL_CH77_WIDTH               4u
#define ADC_CWSELR_WSEL_CH77(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH77_SHIFT))&ADC_CWSELR_WSEL_CH77_MASK)
#define ADC_CWSELR_WSEL_CH69_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH69_SHIFT               20u
#define ADC_CWSELR_WSEL_CH69_WIDTH               4u
#define ADC_CWSELR_WSEL_CH69(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH69_SHIFT))&ADC_CWSELR_WSEL_CH69_MASK)
#define ADC_CWSELR_WSEL_CH5_MASK                 0xF00000u
#define ADC_CWSELR_WSEL_CH5_SHIFT                20u
#define ADC_CWSELR_WSEL_CH5_WIDTH                4u
#define ADC_CWSELR_WSEL_CH5(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH5_SHIFT))&ADC_CWSELR_WSEL_CH5_MASK)
#define ADC_CWSELR_WSEL_CH53_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH53_SHIFT               20u
#define ADC_CWSELR_WSEL_CH53_WIDTH               4u
#define ADC_CWSELR_WSEL_CH53(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH53_SHIFT))&ADC_CWSELR_WSEL_CH53_MASK)
#define ADC_CWSELR_WSEL_CH85_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH85_SHIFT               20u
#define ADC_CWSELR_WSEL_CH85_WIDTH               4u
#define ADC_CWSELR_WSEL_CH85(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH85_SHIFT))&ADC_CWSELR_WSEL_CH85_MASK)
#define ADC_CWSELR_WSEL_CH45_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH45_SHIFT               20u
#define ADC_CWSELR_WSEL_CH45_WIDTH               4u
#define ADC_CWSELR_WSEL_CH45(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH45_SHIFT))&ADC_CWSELR_WSEL_CH45_MASK)
#define ADC_CWSELR_WSEL_CH37_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH37_SHIFT               20u
#define ADC_CWSELR_WSEL_CH37_WIDTH               4u
#define ADC_CWSELR_WSEL_CH37(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH37_SHIFT))&ADC_CWSELR_WSEL_CH37_MASK)
#define ADC_CWSELR_WSEL_CH93_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH93_SHIFT               20u
#define ADC_CWSELR_WSEL_CH93_WIDTH               4u
#define ADC_CWSELR_WSEL_CH93(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH93_SHIFT))&ADC_CWSELR_WSEL_CH93_MASK)
#define ADC_CWSELR_WSEL_CH13_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH13_SHIFT               20u
#define ADC_CWSELR_WSEL_CH13_WIDTH               4u
#define ADC_CWSELR_WSEL_CH13(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH13_SHIFT))&ADC_CWSELR_WSEL_CH13_MASK)
#define ADC_CWSELR_WSEL_CH61_MASK                0xF00000u
#define ADC_CWSELR_WSEL_CH61_SHIFT               20u
#define ADC_CWSELR_WSEL_CH61_WIDTH               4u
#define ADC_CWSELR_WSEL_CH61(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH61_SHIFT))&ADC_CWSELR_WSEL_CH61_MASK)
#define ADC_CWSELR_WSEL_CH78_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH78_SHIFT               24u
#define ADC_CWSELR_WSEL_CH78_WIDTH               4u
#define ADC_CWSELR_WSEL_CH78(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH78_SHIFT))&ADC_CWSELR_WSEL_CH78_MASK)
#define ADC_CWSELR_WSEL_CH94_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH94_SHIFT               24u
#define ADC_CWSELR_WSEL_CH94_WIDTH               4u
#define ADC_CWSELR_WSEL_CH94(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH94_SHIFT))&ADC_CWSELR_WSEL_CH94_MASK)
#define ADC_CWSELR_WSEL_CH14_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH14_SHIFT               24u
#define ADC_CWSELR_WSEL_CH14_WIDTH               4u
#define ADC_CWSELR_WSEL_CH14(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH14_SHIFT))&ADC_CWSELR_WSEL_CH14_MASK)
#define ADC_CWSELR_WSEL_CH6_MASK                 0xF000000u
#define ADC_CWSELR_WSEL_CH6_SHIFT                24u
#define ADC_CWSELR_WSEL_CH6_WIDTH                4u
#define ADC_CWSELR_WSEL_CH6(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH6_SHIFT))&ADC_CWSELR_WSEL_CH6_MASK)
#define ADC_CWSELR_WSEL_CH38_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH38_SHIFT               24u
#define ADC_CWSELR_WSEL_CH38_WIDTH               4u
#define ADC_CWSELR_WSEL_CH38(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH38_SHIFT))&ADC_CWSELR_WSEL_CH38_MASK)
#define ADC_CWSELR_WSEL_CH54_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH54_SHIFT               24u
#define ADC_CWSELR_WSEL_CH54_WIDTH               4u
#define ADC_CWSELR_WSEL_CH54(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH54_SHIFT))&ADC_CWSELR_WSEL_CH54_MASK)
#define ADC_CWSELR_WSEL_CH70_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH70_SHIFT               24u
#define ADC_CWSELR_WSEL_CH70_WIDTH               4u
#define ADC_CWSELR_WSEL_CH70(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH70_SHIFT))&ADC_CWSELR_WSEL_CH70_MASK)
#define ADC_CWSELR_WSEL_CH46_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH46_SHIFT               24u
#define ADC_CWSELR_WSEL_CH46_WIDTH               4u
#define ADC_CWSELR_WSEL_CH46(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH46_SHIFT))&ADC_CWSELR_WSEL_CH46_MASK)
#define ADC_CWSELR_WSEL_CH62_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH62_SHIFT               24u
#define ADC_CWSELR_WSEL_CH62_WIDTH               4u
#define ADC_CWSELR_WSEL_CH62(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH62_SHIFT))&ADC_CWSELR_WSEL_CH62_MASK)
#define ADC_CWSELR_WSEL_CH86_MASK                0xF000000u
#define ADC_CWSELR_WSEL_CH86_SHIFT               24u
#define ADC_CWSELR_WSEL_CH86_WIDTH               4u
#define ADC_CWSELR_WSEL_CH86(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH86_SHIFT))&ADC_CWSELR_WSEL_CH86_MASK)
#define ADC_CWSELR_WSEL_CH95_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH95_SHIFT               28u
#define ADC_CWSELR_WSEL_CH95_WIDTH               4u
#define ADC_CWSELR_WSEL_CH95(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH95_SHIFT))&ADC_CWSELR_WSEL_CH95_MASK)
#define ADC_CWSELR_WSEL_CH15_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH15_SHIFT               28u
#define ADC_CWSELR_WSEL_CH15_WIDTH               4u
#define ADC_CWSELR_WSEL_CH15(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH15_SHIFT))&ADC_CWSELR_WSEL_CH15_MASK)
#define ADC_CWSELR_WSEL_CH39_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH39_SHIFT               28u
#define ADC_CWSELR_WSEL_CH39_WIDTH               4u
#define ADC_CWSELR_WSEL_CH39(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH39_SHIFT))&ADC_CWSELR_WSEL_CH39_MASK)
#define ADC_CWSELR_WSEL_CH7_MASK                 0xF0000000u
#define ADC_CWSELR_WSEL_CH7_SHIFT                28u
#define ADC_CWSELR_WSEL_CH7_WIDTH                4u
#define ADC_CWSELR_WSEL_CH7(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH7_SHIFT))&ADC_CWSELR_WSEL_CH7_MASK)
#define ADC_CWSELR_WSEL_CH87_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH87_SHIFT               28u
#define ADC_CWSELR_WSEL_CH87_WIDTH               4u
#define ADC_CWSELR_WSEL_CH87(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH87_SHIFT))&ADC_CWSELR_WSEL_CH87_MASK)
#define ADC_CWSELR_WSEL_CH47_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH47_SHIFT               28u
#define ADC_CWSELR_WSEL_CH47_WIDTH               4u
#define ADC_CWSELR_WSEL_CH47(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH47_SHIFT))&ADC_CWSELR_WSEL_CH47_MASK)
#define ADC_CWSELR_WSEL_CH55_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH55_SHIFT               28u
#define ADC_CWSELR_WSEL_CH55_WIDTH               4u
#define ADC_CWSELR_WSEL_CH55(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH55_SHIFT))&ADC_CWSELR_WSEL_CH55_MASK)
#define ADC_CWSELR_WSEL_CH63_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH63_SHIFT               28u
#define ADC_CWSELR_WSEL_CH63_WIDTH               4u
#define ADC_CWSELR_WSEL_CH63(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH63_SHIFT))&ADC_CWSELR_WSEL_CH63_MASK)
#define ADC_CWSELR_WSEL_CH79_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH79_SHIFT               28u
#define ADC_CWSELR_WSEL_CH79_WIDTH               4u
#define ADC_CWSELR_WSEL_CH79(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH79_SHIFT))&ADC_CWSELR_WSEL_CH79_MASK)
#define ADC_CWSELR_WSEL_CH71_MASK                0xF0000000u
#define ADC_CWSELR_WSEL_CH71_SHIFT               28u
#define ADC_CWSELR_WSEL_CH71_WIDTH               4u
#define ADC_CWSELR_WSEL_CH71(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CWSELR_WSEL_CH71_SHIFT))&ADC_CWSELR_WSEL_CH71_MASK)
/* CWENR Bit Fields */
#define ADC_CWENR_CWEN0_MASK                     0x1u
#define ADC_CWENR_CWEN0_SHIFT                    0u
#define ADC_CWENR_CWEN0_WIDTH                    1u
#define ADC_CWENR_CWEN0(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN0_SHIFT))&ADC_CWENR_CWEN0_MASK)
#define ADC_CWENR_CWEN64_MASK                    0x1u
#define ADC_CWENR_CWEN64_SHIFT                   0u
#define ADC_CWENR_CWEN64_WIDTH                   1u
#define ADC_CWENR_CWEN64(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN64_SHIFT))&ADC_CWENR_CWEN64_MASK)
#define ADC_CWENR_CWEN32_MASK                    0x1u
#define ADC_CWENR_CWEN32_SHIFT                   0u
#define ADC_CWENR_CWEN32_WIDTH                   1u
#define ADC_CWENR_CWEN32(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN32_SHIFT))&ADC_CWENR_CWEN32_MASK)
#define ADC_CWENR_CWEN65_MASK                    0x2u
#define ADC_CWENR_CWEN65_SHIFT                   1u
#define ADC_CWENR_CWEN65_WIDTH                   1u
#define ADC_CWENR_CWEN65(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN65_SHIFT))&ADC_CWENR_CWEN65_MASK)
#define ADC_CWENR_CWEN33_MASK                    0x2u
#define ADC_CWENR_CWEN33_SHIFT                   1u
#define ADC_CWENR_CWEN33_WIDTH                   1u
#define ADC_CWENR_CWEN33(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN33_SHIFT))&ADC_CWENR_CWEN33_MASK)
#define ADC_CWENR_CWEN1_MASK                     0x2u
#define ADC_CWENR_CWEN1_SHIFT                    1u
#define ADC_CWENR_CWEN1_WIDTH                    1u
#define ADC_CWENR_CWEN1(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN1_SHIFT))&ADC_CWENR_CWEN1_MASK)
#define ADC_CWENR_CWEN34_MASK                    0x4u
#define ADC_CWENR_CWEN34_SHIFT                   2u
#define ADC_CWENR_CWEN34_WIDTH                   1u
#define ADC_CWENR_CWEN34(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN34_SHIFT))&ADC_CWENR_CWEN34_MASK)
#define ADC_CWENR_CWEN2_MASK                     0x4u
#define ADC_CWENR_CWEN2_SHIFT                    2u
#define ADC_CWENR_CWEN2_WIDTH                    1u
#define ADC_CWENR_CWEN2(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN2_SHIFT))&ADC_CWENR_CWEN2_MASK)
#define ADC_CWENR_CWEN66_MASK                    0x4u
#define ADC_CWENR_CWEN66_SHIFT                   2u
#define ADC_CWENR_CWEN66_WIDTH                   1u
#define ADC_CWENR_CWEN66(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN66_SHIFT))&ADC_CWENR_CWEN66_MASK)
#define ADC_CWENR_CWEN67_MASK                    0x8u
#define ADC_CWENR_CWEN67_SHIFT                   3u
#define ADC_CWENR_CWEN67_WIDTH                   1u
#define ADC_CWENR_CWEN67(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN67_SHIFT))&ADC_CWENR_CWEN67_MASK)
#define ADC_CWENR_CWEN3_MASK                     0x8u
#define ADC_CWENR_CWEN3_SHIFT                    3u
#define ADC_CWENR_CWEN3_WIDTH                    1u
#define ADC_CWENR_CWEN3(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN3_SHIFT))&ADC_CWENR_CWEN3_MASK)
#define ADC_CWENR_CWEN35_MASK                    0x8u
#define ADC_CWENR_CWEN35_SHIFT                   3u
#define ADC_CWENR_CWEN35_WIDTH                   1u
#define ADC_CWENR_CWEN35(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN35_SHIFT))&ADC_CWENR_CWEN35_MASK)
#define ADC_CWENR_CWEN4_MASK                     0x10u
#define ADC_CWENR_CWEN4_SHIFT                    4u
#define ADC_CWENR_CWEN4_WIDTH                    1u
#define ADC_CWENR_CWEN4(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN4_SHIFT))&ADC_CWENR_CWEN4_MASK)
#define ADC_CWENR_CWEN36_MASK                    0x10u
#define ADC_CWENR_CWEN36_SHIFT                   4u
#define ADC_CWENR_CWEN36_WIDTH                   1u
#define ADC_CWENR_CWEN36(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN36_SHIFT))&ADC_CWENR_CWEN36_MASK)
#define ADC_CWENR_CWEN68_MASK                    0x10u
#define ADC_CWENR_CWEN68_SHIFT                   4u
#define ADC_CWENR_CWEN68_WIDTH                   1u
#define ADC_CWENR_CWEN68(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN68_SHIFT))&ADC_CWENR_CWEN68_MASK)
#define ADC_CWENR_CWEN69_MASK                    0x20u
#define ADC_CWENR_CWEN69_SHIFT                   5u
#define ADC_CWENR_CWEN69_WIDTH                   1u
#define ADC_CWENR_CWEN69(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN69_SHIFT))&ADC_CWENR_CWEN69_MASK)
#define ADC_CWENR_CWEN37_MASK                    0x20u
#define ADC_CWENR_CWEN37_SHIFT                   5u
#define ADC_CWENR_CWEN37_WIDTH                   1u
#define ADC_CWENR_CWEN37(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN37_SHIFT))&ADC_CWENR_CWEN37_MASK)
#define ADC_CWENR_CWEN5_MASK                     0x20u
#define ADC_CWENR_CWEN5_SHIFT                    5u
#define ADC_CWENR_CWEN5_WIDTH                    1u
#define ADC_CWENR_CWEN5(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN5_SHIFT))&ADC_CWENR_CWEN5_MASK)
#define ADC_CWENR_CWEN70_MASK                    0x40u
#define ADC_CWENR_CWEN70_SHIFT                   6u
#define ADC_CWENR_CWEN70_WIDTH                   1u
#define ADC_CWENR_CWEN70(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN70_SHIFT))&ADC_CWENR_CWEN70_MASK)
#define ADC_CWENR_CWEN38_MASK                    0x40u
#define ADC_CWENR_CWEN38_SHIFT                   6u
#define ADC_CWENR_CWEN38_WIDTH                   1u
#define ADC_CWENR_CWEN38(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN38_SHIFT))&ADC_CWENR_CWEN38_MASK)
#define ADC_CWENR_CWEN6_MASK                     0x40u
#define ADC_CWENR_CWEN6_SHIFT                    6u
#define ADC_CWENR_CWEN6_WIDTH                    1u
#define ADC_CWENR_CWEN6(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN6_SHIFT))&ADC_CWENR_CWEN6_MASK)
#define ADC_CWENR_CWEN7_MASK                     0x80u
#define ADC_CWENR_CWEN7_SHIFT                    7u
#define ADC_CWENR_CWEN7_WIDTH                    1u
#define ADC_CWENR_CWEN7(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN7_SHIFT))&ADC_CWENR_CWEN7_MASK)
#define ADC_CWENR_CWEN39_MASK                    0x80u
#define ADC_CWENR_CWEN39_SHIFT                   7u
#define ADC_CWENR_CWEN39_WIDTH                   1u
#define ADC_CWENR_CWEN39(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN39_SHIFT))&ADC_CWENR_CWEN39_MASK)
#define ADC_CWENR_CWEN71_MASK                    0x80u
#define ADC_CWENR_CWEN71_SHIFT                   7u
#define ADC_CWENR_CWEN71_WIDTH                   1u
#define ADC_CWENR_CWEN71(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN71_SHIFT))&ADC_CWENR_CWEN71_MASK)
#define ADC_CWENR_CWEN8_MASK                     0x100u
#define ADC_CWENR_CWEN8_SHIFT                    8u
#define ADC_CWENR_CWEN8_WIDTH                    1u
#define ADC_CWENR_CWEN8(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN8_SHIFT))&ADC_CWENR_CWEN8_MASK)
#define ADC_CWENR_CWEN40_MASK                    0x100u
#define ADC_CWENR_CWEN40_SHIFT                   8u
#define ADC_CWENR_CWEN40_WIDTH                   1u
#define ADC_CWENR_CWEN40(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN40_SHIFT))&ADC_CWENR_CWEN40_MASK)
#define ADC_CWENR_CWEN72_MASK                    0x100u
#define ADC_CWENR_CWEN72_SHIFT                   8u
#define ADC_CWENR_CWEN72_WIDTH                   1u
#define ADC_CWENR_CWEN72(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN72_SHIFT))&ADC_CWENR_CWEN72_MASK)
#define ADC_CWENR_CWEN73_MASK                    0x200u
#define ADC_CWENR_CWEN73_SHIFT                   9u
#define ADC_CWENR_CWEN73_WIDTH                   1u
#define ADC_CWENR_CWEN73(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN73_SHIFT))&ADC_CWENR_CWEN73_MASK)
#define ADC_CWENR_CWEN41_MASK                    0x200u
#define ADC_CWENR_CWEN41_SHIFT                   9u
#define ADC_CWENR_CWEN41_WIDTH                   1u
#define ADC_CWENR_CWEN41(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN41_SHIFT))&ADC_CWENR_CWEN41_MASK)
#define ADC_CWENR_CWEN9_MASK                     0x200u
#define ADC_CWENR_CWEN9_SHIFT                    9u
#define ADC_CWENR_CWEN9_WIDTH                    1u
#define ADC_CWENR_CWEN9(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN9_SHIFT))&ADC_CWENR_CWEN9_MASK)
#define ADC_CWENR_CWEN42_MASK                    0x400u
#define ADC_CWENR_CWEN42_SHIFT                   10u
#define ADC_CWENR_CWEN42_WIDTH                   1u
#define ADC_CWENR_CWEN42(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN42_SHIFT))&ADC_CWENR_CWEN42_MASK)
#define ADC_CWENR_CWEN74_MASK                    0x400u
#define ADC_CWENR_CWEN74_SHIFT                   10u
#define ADC_CWENR_CWEN74_WIDTH                   1u
#define ADC_CWENR_CWEN74(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN74_SHIFT))&ADC_CWENR_CWEN74_MASK)
#define ADC_CWENR_CWEN10_MASK                    0x400u
#define ADC_CWENR_CWEN10_SHIFT                   10u
#define ADC_CWENR_CWEN10_WIDTH                   1u
#define ADC_CWENR_CWEN10(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN10_SHIFT))&ADC_CWENR_CWEN10_MASK)
#define ADC_CWENR_CWEN11_MASK                    0x800u
#define ADC_CWENR_CWEN11_SHIFT                   11u
#define ADC_CWENR_CWEN11_WIDTH                   1u
#define ADC_CWENR_CWEN11(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN11_SHIFT))&ADC_CWENR_CWEN11_MASK)
#define ADC_CWENR_CWEN75_MASK                    0x800u
#define ADC_CWENR_CWEN75_SHIFT                   11u
#define ADC_CWENR_CWEN75_WIDTH                   1u
#define ADC_CWENR_CWEN75(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN75_SHIFT))&ADC_CWENR_CWEN75_MASK)
#define ADC_CWENR_CWEN43_MASK                    0x800u
#define ADC_CWENR_CWEN43_SHIFT                   11u
#define ADC_CWENR_CWEN43_WIDTH                   1u
#define ADC_CWENR_CWEN43(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN43_SHIFT))&ADC_CWENR_CWEN43_MASK)
#define ADC_CWENR_CWEN76_MASK                    0x1000u
#define ADC_CWENR_CWEN76_SHIFT                   12u
#define ADC_CWENR_CWEN76_WIDTH                   1u
#define ADC_CWENR_CWEN76(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN76_SHIFT))&ADC_CWENR_CWEN76_MASK)
#define ADC_CWENR_CWEN12_MASK                    0x1000u
#define ADC_CWENR_CWEN12_SHIFT                   12u
#define ADC_CWENR_CWEN12_WIDTH                   1u
#define ADC_CWENR_CWEN12(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN12_SHIFT))&ADC_CWENR_CWEN12_MASK)
#define ADC_CWENR_CWEN44_MASK                    0x1000u
#define ADC_CWENR_CWEN44_SHIFT                   12u
#define ADC_CWENR_CWEN44_WIDTH                   1u
#define ADC_CWENR_CWEN44(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN44_SHIFT))&ADC_CWENR_CWEN44_MASK)
#define ADC_CWENR_CWEN45_MASK                    0x2000u
#define ADC_CWENR_CWEN45_SHIFT                   13u
#define ADC_CWENR_CWEN45_WIDTH                   1u
#define ADC_CWENR_CWEN45(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN45_SHIFT))&ADC_CWENR_CWEN45_MASK)
#define ADC_CWENR_CWEN77_MASK                    0x2000u
#define ADC_CWENR_CWEN77_SHIFT                   13u
#define ADC_CWENR_CWEN77_WIDTH                   1u
#define ADC_CWENR_CWEN77(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN77_SHIFT))&ADC_CWENR_CWEN77_MASK)
#define ADC_CWENR_CWEN13_MASK                    0x2000u
#define ADC_CWENR_CWEN13_SHIFT                   13u
#define ADC_CWENR_CWEN13_WIDTH                   1u
#define ADC_CWENR_CWEN13(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN13_SHIFT))&ADC_CWENR_CWEN13_MASK)
#define ADC_CWENR_CWEN14_MASK                    0x4000u
#define ADC_CWENR_CWEN14_SHIFT                   14u
#define ADC_CWENR_CWEN14_WIDTH                   1u
#define ADC_CWENR_CWEN14(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN14_SHIFT))&ADC_CWENR_CWEN14_MASK)
#define ADC_CWENR_CWEN46_MASK                    0x4000u
#define ADC_CWENR_CWEN46_SHIFT                   14u
#define ADC_CWENR_CWEN46_WIDTH                   1u
#define ADC_CWENR_CWEN46(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN46_SHIFT))&ADC_CWENR_CWEN46_MASK)
#define ADC_CWENR_CWEN78_MASK                    0x4000u
#define ADC_CWENR_CWEN78_SHIFT                   14u
#define ADC_CWENR_CWEN78_WIDTH                   1u
#define ADC_CWENR_CWEN78(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN78_SHIFT))&ADC_CWENR_CWEN78_MASK)
#define ADC_CWENR_CWEN47_MASK                    0x8000u
#define ADC_CWENR_CWEN47_SHIFT                   15u
#define ADC_CWENR_CWEN47_WIDTH                   1u
#define ADC_CWENR_CWEN47(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN47_SHIFT))&ADC_CWENR_CWEN47_MASK)
#define ADC_CWENR_CWEN15_MASK                    0x8000u
#define ADC_CWENR_CWEN15_SHIFT                   15u
#define ADC_CWENR_CWEN15_WIDTH                   1u
#define ADC_CWENR_CWEN15(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN15_SHIFT))&ADC_CWENR_CWEN15_MASK)
#define ADC_CWENR_CWEN79_MASK                    0x8000u
#define ADC_CWENR_CWEN79_SHIFT                   15u
#define ADC_CWENR_CWEN79_WIDTH                   1u
#define ADC_CWENR_CWEN79(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN79_SHIFT))&ADC_CWENR_CWEN79_MASK)
#define ADC_CWENR_CWEN80_MASK                    0x10000u
#define ADC_CWENR_CWEN80_SHIFT                   16u
#define ADC_CWENR_CWEN80_WIDTH                   1u
#define ADC_CWENR_CWEN80(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN80_SHIFT))&ADC_CWENR_CWEN80_MASK)
#define ADC_CWENR_CWEN48_MASK                    0x10000u
#define ADC_CWENR_CWEN48_SHIFT                   16u
#define ADC_CWENR_CWEN48_WIDTH                   1u
#define ADC_CWENR_CWEN48(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN48_SHIFT))&ADC_CWENR_CWEN48_MASK)
#define ADC_CWENR_CWEN81_MASK                    0x20000u
#define ADC_CWENR_CWEN81_SHIFT                   17u
#define ADC_CWENR_CWEN81_WIDTH                   1u
#define ADC_CWENR_CWEN81(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN81_SHIFT))&ADC_CWENR_CWEN81_MASK)
#define ADC_CWENR_CWEN49_MASK                    0x20000u
#define ADC_CWENR_CWEN49_SHIFT                   17u
#define ADC_CWENR_CWEN49_WIDTH                   1u
#define ADC_CWENR_CWEN49(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN49_SHIFT))&ADC_CWENR_CWEN49_MASK)
#define ADC_CWENR_CWEN50_MASK                    0x40000u
#define ADC_CWENR_CWEN50_SHIFT                   18u
#define ADC_CWENR_CWEN50_WIDTH                   1u
#define ADC_CWENR_CWEN50(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN50_SHIFT))&ADC_CWENR_CWEN50_MASK)
#define ADC_CWENR_CWEN82_MASK                    0x40000u
#define ADC_CWENR_CWEN82_SHIFT                   18u
#define ADC_CWENR_CWEN82_WIDTH                   1u
#define ADC_CWENR_CWEN82(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN82_SHIFT))&ADC_CWENR_CWEN82_MASK)
#define ADC_CWENR_CWEN51_MASK                    0x80000u
#define ADC_CWENR_CWEN51_SHIFT                   19u
#define ADC_CWENR_CWEN51_WIDTH                   1u
#define ADC_CWENR_CWEN51(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN51_SHIFT))&ADC_CWENR_CWEN51_MASK)
#define ADC_CWENR_CWEN83_MASK                    0x80000u
#define ADC_CWENR_CWEN83_SHIFT                   19u
#define ADC_CWENR_CWEN83_WIDTH                   1u
#define ADC_CWENR_CWEN83(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN83_SHIFT))&ADC_CWENR_CWEN83_MASK)
#define ADC_CWENR_CWEN52_MASK                    0x100000u
#define ADC_CWENR_CWEN52_SHIFT                   20u
#define ADC_CWENR_CWEN52_WIDTH                   1u
#define ADC_CWENR_CWEN52(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN52_SHIFT))&ADC_CWENR_CWEN52_MASK)
#define ADC_CWENR_CWEN84_MASK                    0x100000u
#define ADC_CWENR_CWEN84_SHIFT                   20u
#define ADC_CWENR_CWEN84_WIDTH                   1u
#define ADC_CWENR_CWEN84(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN84_SHIFT))&ADC_CWENR_CWEN84_MASK)
#define ADC_CWENR_CWEN53_MASK                    0x200000u
#define ADC_CWENR_CWEN53_SHIFT                   21u
#define ADC_CWENR_CWEN53_WIDTH                   1u
#define ADC_CWENR_CWEN53(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN53_SHIFT))&ADC_CWENR_CWEN53_MASK)
#define ADC_CWENR_CWEN85_MASK                    0x200000u
#define ADC_CWENR_CWEN85_SHIFT                   21u
#define ADC_CWENR_CWEN85_WIDTH                   1u
#define ADC_CWENR_CWEN85(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN85_SHIFT))&ADC_CWENR_CWEN85_MASK)
#define ADC_CWENR_CWEN54_MASK                    0x400000u
#define ADC_CWENR_CWEN54_SHIFT                   22u
#define ADC_CWENR_CWEN54_WIDTH                   1u
#define ADC_CWENR_CWEN54(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN54_SHIFT))&ADC_CWENR_CWEN54_MASK)
#define ADC_CWENR_CWEN86_MASK                    0x400000u
#define ADC_CWENR_CWEN86_SHIFT                   22u
#define ADC_CWENR_CWEN86_WIDTH                   1u
#define ADC_CWENR_CWEN86(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN86_SHIFT))&ADC_CWENR_CWEN86_MASK)
#define ADC_CWENR_CWEN55_MASK                    0x800000u
#define ADC_CWENR_CWEN55_SHIFT                   23u
#define ADC_CWENR_CWEN55_WIDTH                   1u
#define ADC_CWENR_CWEN55(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN55_SHIFT))&ADC_CWENR_CWEN55_MASK)
#define ADC_CWENR_CWEN87_MASK                    0x800000u
#define ADC_CWENR_CWEN87_SHIFT                   23u
#define ADC_CWENR_CWEN87_WIDTH                   1u
#define ADC_CWENR_CWEN87(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN87_SHIFT))&ADC_CWENR_CWEN87_MASK)
#define ADC_CWENR_CWEN88_MASK                    0x1000000u
#define ADC_CWENR_CWEN88_SHIFT                   24u
#define ADC_CWENR_CWEN88_WIDTH                   1u
#define ADC_CWENR_CWEN88(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN88_SHIFT))&ADC_CWENR_CWEN88_MASK)
#define ADC_CWENR_CWEN56_MASK                    0x1000000u
#define ADC_CWENR_CWEN56_SHIFT                   24u
#define ADC_CWENR_CWEN56_WIDTH                   1u
#define ADC_CWENR_CWEN56(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN56_SHIFT))&ADC_CWENR_CWEN56_MASK)
#define ADC_CWENR_CWEN89_MASK                    0x2000000u
#define ADC_CWENR_CWEN89_SHIFT                   25u
#define ADC_CWENR_CWEN89_WIDTH                   1u
#define ADC_CWENR_CWEN89(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN89_SHIFT))&ADC_CWENR_CWEN89_MASK)
#define ADC_CWENR_CWEN57_MASK                    0x2000000u
#define ADC_CWENR_CWEN57_SHIFT                   25u
#define ADC_CWENR_CWEN57_WIDTH                   1u
#define ADC_CWENR_CWEN57(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN57_SHIFT))&ADC_CWENR_CWEN57_MASK)
#define ADC_CWENR_CWEN90_MASK                    0x4000000u
#define ADC_CWENR_CWEN90_SHIFT                   26u
#define ADC_CWENR_CWEN90_WIDTH                   1u
#define ADC_CWENR_CWEN90(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN90_SHIFT))&ADC_CWENR_CWEN90_MASK)
#define ADC_CWENR_CWEN58_MASK                    0x4000000u
#define ADC_CWENR_CWEN58_SHIFT                   26u
#define ADC_CWENR_CWEN58_WIDTH                   1u
#define ADC_CWENR_CWEN58(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN58_SHIFT))&ADC_CWENR_CWEN58_MASK)
#define ADC_CWENR_CWEN59_MASK                    0x8000000u
#define ADC_CWENR_CWEN59_SHIFT                   27u
#define ADC_CWENR_CWEN59_WIDTH                   1u
#define ADC_CWENR_CWEN59(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN59_SHIFT))&ADC_CWENR_CWEN59_MASK)
#define ADC_CWENR_CWEN91_MASK                    0x8000000u
#define ADC_CWENR_CWEN91_SHIFT                   27u
#define ADC_CWENR_CWEN91_WIDTH                   1u
#define ADC_CWENR_CWEN91(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN91_SHIFT))&ADC_CWENR_CWEN91_MASK)
#define ADC_CWENR_CWEN60_MASK                    0x10000000u
#define ADC_CWENR_CWEN60_SHIFT                   28u
#define ADC_CWENR_CWEN60_WIDTH                   1u
#define ADC_CWENR_CWEN60(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN60_SHIFT))&ADC_CWENR_CWEN60_MASK)
#define ADC_CWENR_CWEN92_MASK                    0x10000000u
#define ADC_CWENR_CWEN92_SHIFT                   28u
#define ADC_CWENR_CWEN92_WIDTH                   1u
#define ADC_CWENR_CWEN92(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN92_SHIFT))&ADC_CWENR_CWEN92_MASK)
#define ADC_CWENR_CWEN61_MASK                    0x20000000u
#define ADC_CWENR_CWEN61_SHIFT                   29u
#define ADC_CWENR_CWEN61_WIDTH                   1u
#define ADC_CWENR_CWEN61(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN61_SHIFT))&ADC_CWENR_CWEN61_MASK)
#define ADC_CWENR_CWEN93_MASK                    0x20000000u
#define ADC_CWENR_CWEN93_SHIFT                   29u
#define ADC_CWENR_CWEN93_WIDTH                   1u
#define ADC_CWENR_CWEN93(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN93_SHIFT))&ADC_CWENR_CWEN93_MASK)
#define ADC_CWENR_CWEN94_MASK                    0x40000000u
#define ADC_CWENR_CWEN94_SHIFT                   30u
#define ADC_CWENR_CWEN94_WIDTH                   1u
#define ADC_CWENR_CWEN94(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN94_SHIFT))&ADC_CWENR_CWEN94_MASK)
#define ADC_CWENR_CWEN62_MASK                    0x40000000u
#define ADC_CWENR_CWEN62_SHIFT                   30u
#define ADC_CWENR_CWEN62_WIDTH                   1u
#define ADC_CWENR_CWEN62(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN62_SHIFT))&ADC_CWENR_CWEN62_MASK)
#define ADC_CWENR_CWEN95_MASK                    0x80000000u
#define ADC_CWENR_CWEN95_SHIFT                   31u
#define ADC_CWENR_CWEN95_WIDTH                   1u
#define ADC_CWENR_CWEN95(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN95_SHIFT))&ADC_CWENR_CWEN95_MASK)
#define ADC_CWENR_CWEN63_MASK                    0x80000000u
#define ADC_CWENR_CWEN63_SHIFT                   31u
#define ADC_CWENR_CWEN63_WIDTH                   1u
#define ADC_CWENR_CWEN63(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CWENR_CWEN63_SHIFT))&ADC_CWENR_CWEN63_MASK)
/* AWORR Bit Fields */
#define ADC_AWORR_AWOR_CH0_MASK                  0x1u
#define ADC_AWORR_AWOR_CH0_SHIFT                 0u
#define ADC_AWORR_AWOR_CH0_WIDTH                 1u
#define ADC_AWORR_AWOR_CH0(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH0_SHIFT))&ADC_AWORR_AWOR_CH0_MASK)
#define ADC_AWORR_AWOR_CH64_MASK                 0x1u
#define ADC_AWORR_AWOR_CH64_SHIFT                0u
#define ADC_AWORR_AWOR_CH64_WIDTH                1u
#define ADC_AWORR_AWOR_CH64(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH64_SHIFT))&ADC_AWORR_AWOR_CH64_MASK)
#define ADC_AWORR_AWOR_CH32_MASK                 0x1u
#define ADC_AWORR_AWOR_CH32_SHIFT                0u
#define ADC_AWORR_AWOR_CH32_WIDTH                1u
#define ADC_AWORR_AWOR_CH32(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH32_SHIFT))&ADC_AWORR_AWOR_CH32_MASK)
#define ADC_AWORR_AWOR_CH65_MASK                 0x2u
#define ADC_AWORR_AWOR_CH65_SHIFT                1u
#define ADC_AWORR_AWOR_CH65_WIDTH                1u
#define ADC_AWORR_AWOR_CH65(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH65_SHIFT))&ADC_AWORR_AWOR_CH65_MASK)
#define ADC_AWORR_AWOR_CH33_MASK                 0x2u
#define ADC_AWORR_AWOR_CH33_SHIFT                1u
#define ADC_AWORR_AWOR_CH33_WIDTH                1u
#define ADC_AWORR_AWOR_CH33(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH33_SHIFT))&ADC_AWORR_AWOR_CH33_MASK)
#define ADC_AWORR_AWOR_CH1_MASK                  0x2u
#define ADC_AWORR_AWOR_CH1_SHIFT                 1u
#define ADC_AWORR_AWOR_CH1_WIDTH                 1u
#define ADC_AWORR_AWOR_CH1(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH1_SHIFT))&ADC_AWORR_AWOR_CH1_MASK)
#define ADC_AWORR_AWOR_CH34_MASK                 0x4u
#define ADC_AWORR_AWOR_CH34_SHIFT                2u
#define ADC_AWORR_AWOR_CH34_WIDTH                1u
#define ADC_AWORR_AWOR_CH34(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH34_SHIFT))&ADC_AWORR_AWOR_CH34_MASK)
#define ADC_AWORR_AWOR_CH2_MASK                  0x4u
#define ADC_AWORR_AWOR_CH2_SHIFT                 2u
#define ADC_AWORR_AWOR_CH2_WIDTH                 1u
#define ADC_AWORR_AWOR_CH2(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH2_SHIFT))&ADC_AWORR_AWOR_CH2_MASK)
#define ADC_AWORR_AWOR_CH66_MASK                 0x4u
#define ADC_AWORR_AWOR_CH66_SHIFT                2u
#define ADC_AWORR_AWOR_CH66_WIDTH                1u
#define ADC_AWORR_AWOR_CH66(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH66_SHIFT))&ADC_AWORR_AWOR_CH66_MASK)
#define ADC_AWORR_AWOR_CH67_MASK                 0x8u
#define ADC_AWORR_AWOR_CH67_SHIFT                3u
#define ADC_AWORR_AWOR_CH67_WIDTH                1u
#define ADC_AWORR_AWOR_CH67(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH67_SHIFT))&ADC_AWORR_AWOR_CH67_MASK)
#define ADC_AWORR_AWOR_CH3_MASK                  0x8u
#define ADC_AWORR_AWOR_CH3_SHIFT                 3u
#define ADC_AWORR_AWOR_CH3_WIDTH                 1u
#define ADC_AWORR_AWOR_CH3(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH3_SHIFT))&ADC_AWORR_AWOR_CH3_MASK)
#define ADC_AWORR_AWOR_CH35_MASK                 0x8u
#define ADC_AWORR_AWOR_CH35_SHIFT                3u
#define ADC_AWORR_AWOR_CH35_WIDTH                1u
#define ADC_AWORR_AWOR_CH35(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH35_SHIFT))&ADC_AWORR_AWOR_CH35_MASK)
#define ADC_AWORR_AWOR_CH4_MASK                  0x10u
#define ADC_AWORR_AWOR_CH4_SHIFT                 4u
#define ADC_AWORR_AWOR_CH4_WIDTH                 1u
#define ADC_AWORR_AWOR_CH4(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH4_SHIFT))&ADC_AWORR_AWOR_CH4_MASK)
#define ADC_AWORR_AWOR_CH36_MASK                 0x10u
#define ADC_AWORR_AWOR_CH36_SHIFT                4u
#define ADC_AWORR_AWOR_CH36_WIDTH                1u
#define ADC_AWORR_AWOR_CH36(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH36_SHIFT))&ADC_AWORR_AWOR_CH36_MASK)
#define ADC_AWORR_AWOR_CH68_MASK                 0x10u
#define ADC_AWORR_AWOR_CH68_SHIFT                4u
#define ADC_AWORR_AWOR_CH68_WIDTH                1u
#define ADC_AWORR_AWOR_CH68(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH68_SHIFT))&ADC_AWORR_AWOR_CH68_MASK)
#define ADC_AWORR_AWOR_CH69_MASK                 0x20u
#define ADC_AWORR_AWOR_CH69_SHIFT                5u
#define ADC_AWORR_AWOR_CH69_WIDTH                1u
#define ADC_AWORR_AWOR_CH69(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH69_SHIFT))&ADC_AWORR_AWOR_CH69_MASK)
#define ADC_AWORR_AWOR_CH37_MASK                 0x20u
#define ADC_AWORR_AWOR_CH37_SHIFT                5u
#define ADC_AWORR_AWOR_CH37_WIDTH                1u
#define ADC_AWORR_AWOR_CH37(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH37_SHIFT))&ADC_AWORR_AWOR_CH37_MASK)
#define ADC_AWORR_AWOR_CH5_MASK                  0x20u
#define ADC_AWORR_AWOR_CH5_SHIFT                 5u
#define ADC_AWORR_AWOR_CH5_WIDTH                 1u
#define ADC_AWORR_AWOR_CH5(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH5_SHIFT))&ADC_AWORR_AWOR_CH5_MASK)
#define ADC_AWORR_AWOR_CH70_MASK                 0x40u
#define ADC_AWORR_AWOR_CH70_SHIFT                6u
#define ADC_AWORR_AWOR_CH70_WIDTH                1u
#define ADC_AWORR_AWOR_CH70(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH70_SHIFT))&ADC_AWORR_AWOR_CH70_MASK)
#define ADC_AWORR_AWOR_CH38_MASK                 0x40u
#define ADC_AWORR_AWOR_CH38_SHIFT                6u
#define ADC_AWORR_AWOR_CH38_WIDTH                1u
#define ADC_AWORR_AWOR_CH38(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH38_SHIFT))&ADC_AWORR_AWOR_CH38_MASK)
#define ADC_AWORR_AWOR_CH6_MASK                  0x40u
#define ADC_AWORR_AWOR_CH6_SHIFT                 6u
#define ADC_AWORR_AWOR_CH6_WIDTH                 1u
#define ADC_AWORR_AWOR_CH6(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH6_SHIFT))&ADC_AWORR_AWOR_CH6_MASK)
#define ADC_AWORR_AWOR_CH7_MASK                  0x80u
#define ADC_AWORR_AWOR_CH7_SHIFT                 7u
#define ADC_AWORR_AWOR_CH7_WIDTH                 1u
#define ADC_AWORR_AWOR_CH7(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH7_SHIFT))&ADC_AWORR_AWOR_CH7_MASK)
#define ADC_AWORR_AWOR_CH39_MASK                 0x80u
#define ADC_AWORR_AWOR_CH39_SHIFT                7u
#define ADC_AWORR_AWOR_CH39_WIDTH                1u
#define ADC_AWORR_AWOR_CH39(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH39_SHIFT))&ADC_AWORR_AWOR_CH39_MASK)
#define ADC_AWORR_AWOR_CH71_MASK                 0x80u
#define ADC_AWORR_AWOR_CH71_SHIFT                7u
#define ADC_AWORR_AWOR_CH71_WIDTH                1u
#define ADC_AWORR_AWOR_CH71(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH71_SHIFT))&ADC_AWORR_AWOR_CH71_MASK)
#define ADC_AWORR_AWOR_CH8_MASK                  0x100u
#define ADC_AWORR_AWOR_CH8_SHIFT                 8u
#define ADC_AWORR_AWOR_CH8_WIDTH                 1u
#define ADC_AWORR_AWOR_CH8(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH8_SHIFT))&ADC_AWORR_AWOR_CH8_MASK)
#define ADC_AWORR_AWOR_CH40_MASK                 0x100u
#define ADC_AWORR_AWOR_CH40_SHIFT                8u
#define ADC_AWORR_AWOR_CH40_WIDTH                1u
#define ADC_AWORR_AWOR_CH40(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH40_SHIFT))&ADC_AWORR_AWOR_CH40_MASK)
#define ADC_AWORR_AWOR_CH72_MASK                 0x100u
#define ADC_AWORR_AWOR_CH72_SHIFT                8u
#define ADC_AWORR_AWOR_CH72_WIDTH                1u
#define ADC_AWORR_AWOR_CH72(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH72_SHIFT))&ADC_AWORR_AWOR_CH72_MASK)
#define ADC_AWORR_AWOR_CH73_MASK                 0x200u
#define ADC_AWORR_AWOR_CH73_SHIFT                9u
#define ADC_AWORR_AWOR_CH73_WIDTH                1u
#define ADC_AWORR_AWOR_CH73(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH73_SHIFT))&ADC_AWORR_AWOR_CH73_MASK)
#define ADC_AWORR_AWOR_CH41_MASK                 0x200u
#define ADC_AWORR_AWOR_CH41_SHIFT                9u
#define ADC_AWORR_AWOR_CH41_WIDTH                1u
#define ADC_AWORR_AWOR_CH41(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH41_SHIFT))&ADC_AWORR_AWOR_CH41_MASK)
#define ADC_AWORR_AWOR_CH9_MASK                  0x200u
#define ADC_AWORR_AWOR_CH9_SHIFT                 9u
#define ADC_AWORR_AWOR_CH9_WIDTH                 1u
#define ADC_AWORR_AWOR_CH9(x)                    (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH9_SHIFT))&ADC_AWORR_AWOR_CH9_MASK)
#define ADC_AWORR_AWOR_CH42_MASK                 0x400u
#define ADC_AWORR_AWOR_CH42_SHIFT                10u
#define ADC_AWORR_AWOR_CH42_WIDTH                1u
#define ADC_AWORR_AWOR_CH42(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH42_SHIFT))&ADC_AWORR_AWOR_CH42_MASK)
#define ADC_AWORR_AWOR_CH74_MASK                 0x400u
#define ADC_AWORR_AWOR_CH74_SHIFT                10u
#define ADC_AWORR_AWOR_CH74_WIDTH                1u
#define ADC_AWORR_AWOR_CH74(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH74_SHIFT))&ADC_AWORR_AWOR_CH74_MASK)
#define ADC_AWORR_AWOR_CH10_MASK                 0x400u
#define ADC_AWORR_AWOR_CH10_SHIFT                10u
#define ADC_AWORR_AWOR_CH10_WIDTH                1u
#define ADC_AWORR_AWOR_CH10(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH10_SHIFT))&ADC_AWORR_AWOR_CH10_MASK)
#define ADC_AWORR_AWOR_CH11_MASK                 0x800u
#define ADC_AWORR_AWOR_CH11_SHIFT                11u
#define ADC_AWORR_AWOR_CH11_WIDTH                1u
#define ADC_AWORR_AWOR_CH11(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH11_SHIFT))&ADC_AWORR_AWOR_CH11_MASK)
#define ADC_AWORR_AWOR_CH75_MASK                 0x800u
#define ADC_AWORR_AWOR_CH75_SHIFT                11u
#define ADC_AWORR_AWOR_CH75_WIDTH                1u
#define ADC_AWORR_AWOR_CH75(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH75_SHIFT))&ADC_AWORR_AWOR_CH75_MASK)
#define ADC_AWORR_AWOR_CH43_MASK                 0x800u
#define ADC_AWORR_AWOR_CH43_SHIFT                11u
#define ADC_AWORR_AWOR_CH43_WIDTH                1u
#define ADC_AWORR_AWOR_CH43(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH43_SHIFT))&ADC_AWORR_AWOR_CH43_MASK)
#define ADC_AWORR_AWOR_CH76_MASK                 0x1000u
#define ADC_AWORR_AWOR_CH76_SHIFT                12u
#define ADC_AWORR_AWOR_CH76_WIDTH                1u
#define ADC_AWORR_AWOR_CH76(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH76_SHIFT))&ADC_AWORR_AWOR_CH76_MASK)
#define ADC_AWORR_AWOR_CH12_MASK                 0x1000u
#define ADC_AWORR_AWOR_CH12_SHIFT                12u
#define ADC_AWORR_AWOR_CH12_WIDTH                1u
#define ADC_AWORR_AWOR_CH12(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH12_SHIFT))&ADC_AWORR_AWOR_CH12_MASK)
#define ADC_AWORR_AWOR_CH44_MASK                 0x1000u
#define ADC_AWORR_AWOR_CH44_SHIFT                12u
#define ADC_AWORR_AWOR_CH44_WIDTH                1u
#define ADC_AWORR_AWOR_CH44(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH44_SHIFT))&ADC_AWORR_AWOR_CH44_MASK)
#define ADC_AWORR_AWOR_CH45_MASK                 0x2000u
#define ADC_AWORR_AWOR_CH45_SHIFT                13u
#define ADC_AWORR_AWOR_CH45_WIDTH                1u
#define ADC_AWORR_AWOR_CH45(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH45_SHIFT))&ADC_AWORR_AWOR_CH45_MASK)
#define ADC_AWORR_AWOR_CH77_MASK                 0x2000u
#define ADC_AWORR_AWOR_CH77_SHIFT                13u
#define ADC_AWORR_AWOR_CH77_WIDTH                1u
#define ADC_AWORR_AWOR_CH77(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH77_SHIFT))&ADC_AWORR_AWOR_CH77_MASK)
#define ADC_AWORR_AWOR_CH13_MASK                 0x2000u
#define ADC_AWORR_AWOR_CH13_SHIFT                13u
#define ADC_AWORR_AWOR_CH13_WIDTH                1u
#define ADC_AWORR_AWOR_CH13(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH13_SHIFT))&ADC_AWORR_AWOR_CH13_MASK)
#define ADC_AWORR_AWOR_CH14_MASK                 0x4000u
#define ADC_AWORR_AWOR_CH14_SHIFT                14u
#define ADC_AWORR_AWOR_CH14_WIDTH                1u
#define ADC_AWORR_AWOR_CH14(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH14_SHIFT))&ADC_AWORR_AWOR_CH14_MASK)
#define ADC_AWORR_AWOR_CH46_MASK                 0x4000u
#define ADC_AWORR_AWOR_CH46_SHIFT                14u
#define ADC_AWORR_AWOR_CH46_WIDTH                1u
#define ADC_AWORR_AWOR_CH46(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH46_SHIFT))&ADC_AWORR_AWOR_CH46_MASK)
#define ADC_AWORR_AWOR_CH78_MASK                 0x4000u
#define ADC_AWORR_AWOR_CH78_SHIFT                14u
#define ADC_AWORR_AWOR_CH78_WIDTH                1u
#define ADC_AWORR_AWOR_CH78(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH78_SHIFT))&ADC_AWORR_AWOR_CH78_MASK)
#define ADC_AWORR_AWOR_CH47_MASK                 0x8000u
#define ADC_AWORR_AWOR_CH47_SHIFT                15u
#define ADC_AWORR_AWOR_CH47_WIDTH                1u
#define ADC_AWORR_AWOR_CH47(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH47_SHIFT))&ADC_AWORR_AWOR_CH47_MASK)
#define ADC_AWORR_AWOR_CH15_MASK                 0x8000u
#define ADC_AWORR_AWOR_CH15_SHIFT                15u
#define ADC_AWORR_AWOR_CH15_WIDTH                1u
#define ADC_AWORR_AWOR_CH15(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH15_SHIFT))&ADC_AWORR_AWOR_CH15_MASK)
#define ADC_AWORR_AWOR_CH79_MASK                 0x8000u
#define ADC_AWORR_AWOR_CH79_SHIFT                15u
#define ADC_AWORR_AWOR_CH79_WIDTH                1u
#define ADC_AWORR_AWOR_CH79(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH79_SHIFT))&ADC_AWORR_AWOR_CH79_MASK)
#define ADC_AWORR_AWOR_CH80_MASK                 0x10000u
#define ADC_AWORR_AWOR_CH80_SHIFT                16u
#define ADC_AWORR_AWOR_CH80_WIDTH                1u
#define ADC_AWORR_AWOR_CH80(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH80_SHIFT))&ADC_AWORR_AWOR_CH80_MASK)
#define ADC_AWORR_AWOR_CH48_MASK                 0x10000u
#define ADC_AWORR_AWOR_CH48_SHIFT                16u
#define ADC_AWORR_AWOR_CH48_WIDTH                1u
#define ADC_AWORR_AWOR_CH48(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH48_SHIFT))&ADC_AWORR_AWOR_CH48_MASK)
#define ADC_AWORR_AWOR_CH81_MASK                 0x20000u
#define ADC_AWORR_AWOR_CH81_SHIFT                17u
#define ADC_AWORR_AWOR_CH81_WIDTH                1u
#define ADC_AWORR_AWOR_CH81(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH81_SHIFT))&ADC_AWORR_AWOR_CH81_MASK)
#define ADC_AWORR_AWOR_CH49_MASK                 0x20000u
#define ADC_AWORR_AWOR_CH49_SHIFT                17u
#define ADC_AWORR_AWOR_CH49_WIDTH                1u
#define ADC_AWORR_AWOR_CH49(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH49_SHIFT))&ADC_AWORR_AWOR_CH49_MASK)
#define ADC_AWORR_AWOR_CH50_MASK                 0x40000u
#define ADC_AWORR_AWOR_CH50_SHIFT                18u
#define ADC_AWORR_AWOR_CH50_WIDTH                1u
#define ADC_AWORR_AWOR_CH50(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH50_SHIFT))&ADC_AWORR_AWOR_CH50_MASK)
#define ADC_AWORR_AWOR_CH82_MASK                 0x40000u
#define ADC_AWORR_AWOR_CH82_SHIFT                18u
#define ADC_AWORR_AWOR_CH82_WIDTH                1u
#define ADC_AWORR_AWOR_CH82(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH82_SHIFT))&ADC_AWORR_AWOR_CH82_MASK)
#define ADC_AWORR_AWOR_CH51_MASK                 0x80000u
#define ADC_AWORR_AWOR_CH51_SHIFT                19u
#define ADC_AWORR_AWOR_CH51_WIDTH                1u
#define ADC_AWORR_AWOR_CH51(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH51_SHIFT))&ADC_AWORR_AWOR_CH51_MASK)
#define ADC_AWORR_AWOR_CH83_MASK                 0x80000u
#define ADC_AWORR_AWOR_CH83_SHIFT                19u
#define ADC_AWORR_AWOR_CH83_WIDTH                1u
#define ADC_AWORR_AWOR_CH83(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH83_SHIFT))&ADC_AWORR_AWOR_CH83_MASK)
#define ADC_AWORR_AWOR_CH52_MASK                 0x100000u
#define ADC_AWORR_AWOR_CH52_SHIFT                20u
#define ADC_AWORR_AWOR_CH52_WIDTH                1u
#define ADC_AWORR_AWOR_CH52(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH52_SHIFT))&ADC_AWORR_AWOR_CH52_MASK)
#define ADC_AWORR_AWOR_CH84_MASK                 0x100000u
#define ADC_AWORR_AWOR_CH84_SHIFT                20u
#define ADC_AWORR_AWOR_CH84_WIDTH                1u
#define ADC_AWORR_AWOR_CH84(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH84_SHIFT))&ADC_AWORR_AWOR_CH84_MASK)
#define ADC_AWORR_AWOR_CH53_MASK                 0x200000u
#define ADC_AWORR_AWOR_CH53_SHIFT                21u
#define ADC_AWORR_AWOR_CH53_WIDTH                1u
#define ADC_AWORR_AWOR_CH53(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH53_SHIFT))&ADC_AWORR_AWOR_CH53_MASK)
#define ADC_AWORR_AWOR_CH85_MASK                 0x200000u
#define ADC_AWORR_AWOR_CH85_SHIFT                21u
#define ADC_AWORR_AWOR_CH85_WIDTH                1u
#define ADC_AWORR_AWOR_CH85(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH85_SHIFT))&ADC_AWORR_AWOR_CH85_MASK)
#define ADC_AWORR_AWOR_CH54_MASK                 0x400000u
#define ADC_AWORR_AWOR_CH54_SHIFT                22u
#define ADC_AWORR_AWOR_CH54_WIDTH                1u
#define ADC_AWORR_AWOR_CH54(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH54_SHIFT))&ADC_AWORR_AWOR_CH54_MASK)
#define ADC_AWORR_AWOR_CH86_MASK                 0x400000u
#define ADC_AWORR_AWOR_CH86_SHIFT                22u
#define ADC_AWORR_AWOR_CH86_WIDTH                1u
#define ADC_AWORR_AWOR_CH86(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH86_SHIFT))&ADC_AWORR_AWOR_CH86_MASK)
#define ADC_AWORR_AWOR_CH55_MASK                 0x800000u
#define ADC_AWORR_AWOR_CH55_SHIFT                23u
#define ADC_AWORR_AWOR_CH55_WIDTH                1u
#define ADC_AWORR_AWOR_CH55(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH55_SHIFT))&ADC_AWORR_AWOR_CH55_MASK)
#define ADC_AWORR_AWOR_CH87_MASK                 0x800000u
#define ADC_AWORR_AWOR_CH87_SHIFT                23u
#define ADC_AWORR_AWOR_CH87_WIDTH                1u
#define ADC_AWORR_AWOR_CH87(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH87_SHIFT))&ADC_AWORR_AWOR_CH87_MASK)
#define ADC_AWORR_AWOR_CH88_MASK                 0x1000000u
#define ADC_AWORR_AWOR_CH88_SHIFT                24u
#define ADC_AWORR_AWOR_CH88_WIDTH                1u
#define ADC_AWORR_AWOR_CH88(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH88_SHIFT))&ADC_AWORR_AWOR_CH88_MASK)
#define ADC_AWORR_AWOR_CH56_MASK                 0x1000000u
#define ADC_AWORR_AWOR_CH56_SHIFT                24u
#define ADC_AWORR_AWOR_CH56_WIDTH                1u
#define ADC_AWORR_AWOR_CH56(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH56_SHIFT))&ADC_AWORR_AWOR_CH56_MASK)
#define ADC_AWORR_AWOR_CH89_MASK                 0x2000000u
#define ADC_AWORR_AWOR_CH89_SHIFT                25u
#define ADC_AWORR_AWOR_CH89_WIDTH                1u
#define ADC_AWORR_AWOR_CH89(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH89_SHIFT))&ADC_AWORR_AWOR_CH89_MASK)
#define ADC_AWORR_AWOR_CH57_MASK                 0x2000000u
#define ADC_AWORR_AWOR_CH57_SHIFT                25u
#define ADC_AWORR_AWOR_CH57_WIDTH                1u
#define ADC_AWORR_AWOR_CH57(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH57_SHIFT))&ADC_AWORR_AWOR_CH57_MASK)
#define ADC_AWORR_AWOR_CH90_MASK                 0x4000000u
#define ADC_AWORR_AWOR_CH90_SHIFT                26u
#define ADC_AWORR_AWOR_CH90_WIDTH                1u
#define ADC_AWORR_AWOR_CH90(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH90_SHIFT))&ADC_AWORR_AWOR_CH90_MASK)
#define ADC_AWORR_AWOR_CH58_MASK                 0x4000000u
#define ADC_AWORR_AWOR_CH58_SHIFT                26u
#define ADC_AWORR_AWOR_CH58_WIDTH                1u
#define ADC_AWORR_AWOR_CH58(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH58_SHIFT))&ADC_AWORR_AWOR_CH58_MASK)
#define ADC_AWORR_AWOR_CH59_MASK                 0x8000000u
#define ADC_AWORR_AWOR_CH59_SHIFT                27u
#define ADC_AWORR_AWOR_CH59_WIDTH                1u
#define ADC_AWORR_AWOR_CH59(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH59_SHIFT))&ADC_AWORR_AWOR_CH59_MASK)
#define ADC_AWORR_AWOR_CH91_MASK                 0x8000000u
#define ADC_AWORR_AWOR_CH91_SHIFT                27u
#define ADC_AWORR_AWOR_CH91_WIDTH                1u
#define ADC_AWORR_AWOR_CH91(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH91_SHIFT))&ADC_AWORR_AWOR_CH91_MASK)
#define ADC_AWORR_AWOR_CH60_MASK                 0x10000000u
#define ADC_AWORR_AWOR_CH60_SHIFT                28u
#define ADC_AWORR_AWOR_CH60_WIDTH                1u
#define ADC_AWORR_AWOR_CH60(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH60_SHIFT))&ADC_AWORR_AWOR_CH60_MASK)
#define ADC_AWORR_AWOR_CH92_MASK                 0x10000000u
#define ADC_AWORR_AWOR_CH92_SHIFT                28u
#define ADC_AWORR_AWOR_CH92_WIDTH                1u
#define ADC_AWORR_AWOR_CH92(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH92_SHIFT))&ADC_AWORR_AWOR_CH92_MASK)
#define ADC_AWORR_AWOR_CH61_MASK                 0x20000000u
#define ADC_AWORR_AWOR_CH61_SHIFT                29u
#define ADC_AWORR_AWOR_CH61_WIDTH                1u
#define ADC_AWORR_AWOR_CH61(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH61_SHIFT))&ADC_AWORR_AWOR_CH61_MASK)
#define ADC_AWORR_AWOR_CH93_MASK                 0x20000000u
#define ADC_AWORR_AWOR_CH93_SHIFT                29u
#define ADC_AWORR_AWOR_CH93_WIDTH                1u
#define ADC_AWORR_AWOR_CH93(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH93_SHIFT))&ADC_AWORR_AWOR_CH93_MASK)
#define ADC_AWORR_AWOR_CH94_MASK                 0x40000000u
#define ADC_AWORR_AWOR_CH94_SHIFT                30u
#define ADC_AWORR_AWOR_CH94_WIDTH                1u
#define ADC_AWORR_AWOR_CH94(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH94_SHIFT))&ADC_AWORR_AWOR_CH94_MASK)
#define ADC_AWORR_AWOR_CH62_MASK                 0x40000000u
#define ADC_AWORR_AWOR_CH62_SHIFT                30u
#define ADC_AWORR_AWOR_CH62_WIDTH                1u
#define ADC_AWORR_AWOR_CH62(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH62_SHIFT))&ADC_AWORR_AWOR_CH62_MASK)
#define ADC_AWORR_AWOR_CH95_MASK                 0x80000000u
#define ADC_AWORR_AWOR_CH95_SHIFT                31u
#define ADC_AWORR_AWOR_CH95_WIDTH                1u
#define ADC_AWORR_AWOR_CH95(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH95_SHIFT))&ADC_AWORR_AWOR_CH95_MASK)
#define ADC_AWORR_AWOR_CH63_MASK                 0x80000000u
#define ADC_AWORR_AWOR_CH63_SHIFT                31u
#define ADC_AWORR_AWOR_CH63_WIDTH                1u
#define ADC_AWORR_AWOR_CH63(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_AWORR_AWOR_CH63_SHIFT))&ADC_AWORR_AWOR_CH63_MASK)
/* CALBISTREG Bit Fields */
#define ADC_CALBISTREG_TEST_EN_MASK              0x1u
#define ADC_CALBISTREG_TEST_EN_SHIFT             0u
#define ADC_CALBISTREG_TEST_EN_WIDTH             1u
#define ADC_CALBISTREG_TEST_EN(x)                (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_TEST_EN_SHIFT))&ADC_CALBISTREG_TEST_EN_MASK)
#define ADC_CALBISTREG_TEST_FAIL_MASK            0x8u
#define ADC_CALBISTREG_TEST_FAIL_SHIFT           3u
#define ADC_CALBISTREG_TEST_FAIL_WIDTH           1u
#define ADC_CALBISTREG_TEST_FAIL(x)              (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_TEST_FAIL_SHIFT))&ADC_CALBISTREG_TEST_FAIL_MASK)
#define ADC_CALBISTREG_AVG_EN_MASK               0x10u
#define ADC_CALBISTREG_AVG_EN_SHIFT              4u
#define ADC_CALBISTREG_AVG_EN_WIDTH              1u
#define ADC_CALBISTREG_AVG_EN(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_AVG_EN_SHIFT))&ADC_CALBISTREG_AVG_EN_MASK)
#define ADC_CALBISTREG_NR_SMPL_MASK              0x60u
#define ADC_CALBISTREG_NR_SMPL_SHIFT             5u
#define ADC_CALBISTREG_NR_SMPL_WIDTH             2u
#define ADC_CALBISTREG_NR_SMPL(x)                (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_NR_SMPL_SHIFT))&ADC_CALBISTREG_NR_SMPL_MASK)
#define ADC_CALBISTREG_C_T_BUSY_MASK             0x8000u
#define ADC_CALBISTREG_C_T_BUSY_SHIFT            15u
#define ADC_CALBISTREG_C_T_BUSY_WIDTH            1u
#define ADC_CALBISTREG_C_T_BUSY(x)               (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_C_T_BUSY_SHIFT))&ADC_CALBISTREG_C_T_BUSY_MASK)
#define ADC_CALBISTREG_TSAMP_MASK                0x18000000u
#define ADC_CALBISTREG_TSAMP_SHIFT               27u
#define ADC_CALBISTREG_TSAMP_WIDTH               2u
#define ADC_CALBISTREG_TSAMP(x)                  (((uint32_t)(((uint32_t)(x))<<ADC_CALBISTREG_TSAMP_SHIFT))&ADC_CALBISTREG_TSAMP_MASK)
/* OFSGNUSR Bit Fields */
#define ADC_OFSGNUSR_OFFSET_USER_MASK            0xFFu
#define ADC_OFSGNUSR_OFFSET_USER_SHIFT           0u
#define ADC_OFSGNUSR_OFFSET_USER_WIDTH           8u
#define ADC_OFSGNUSR_OFFSET_USER(x)              (((uint32_t)(((uint32_t)(x))<<ADC_OFSGNUSR_OFFSET_USER_SHIFT))&ADC_OFSGNUSR_OFFSET_USER_MASK)
#define ADC_OFSGNUSR_GAIN_USER_MASK              0x3FF0000u
#define ADC_OFSGNUSR_GAIN_USER_SHIFT             16u
#define ADC_OFSGNUSR_GAIN_USER_WIDTH             10u
#define ADC_OFSGNUSR_GAIN_USER(x)                (((uint32_t)(((uint32_t)(x))<<ADC_OFSGNUSR_GAIN_USER_SHIFT))&ADC_OFSGNUSR_GAIN_USER_MASK)

/*!
 * @}
 */ /* end of group ADC_Register_Masks */


/*!
 * @}
 */ /* end of group ADC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- AIPS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Peripheral_Access_Layer AIPS Peripheral Access Layer
 * @{
 */


/** AIPS - Size of Registers Arrays */
#define AIPS_PACR_COUNT                          8u
#define AIPS_OPACR_COUNT                         32u

/** AIPS - Register Layout Typedef */
typedef struct {
  __IO uint32_t MPRA;                              /**< Master Privilege Register A, offset: 0x0 */
  __IO uint32_t MPRB;                              /**< Master Privilege Register B, offset: 0x4 */
       uint8_t RESERVED_0[248];
  __IO uint32_t PACR[AIPS_PACR_COUNT];             /**< Peripheral Access Control Register, array offset: 0x100, array step: 0x4 */
       uint8_t RESERVED_1[32];
  __IO uint32_t OPACR[AIPS_OPACR_COUNT];           /**< Off-Platform Peripheral Access Control Register, array offset: 0x140, array step: 0x4 */
} AIPS_Type, *AIPS_MemMapPtr;

 /** Number of instances of the AIPS module. */
#define AIPS_INSTANCE_COUNT                      (2u)


/* AIPS - Peripheral instance base addresses */
/** Peripheral AIPS_A base address */
#define AIPS_A_BASE                              (0xFC000000u)
/** Peripheral AIPS_A base pointer */
#define AIPS_A                                   ((AIPS_Type *)AIPS_A_BASE)
/** Peripheral AIPS_B base address */
#define AIPS_B_BASE                              (0xF8000000u)
/** Peripheral AIPS_B base pointer */
#define AIPS_B                                   ((AIPS_Type *)AIPS_B_BASE)
/** Array initializer of AIPS peripheral base addresses */
#define AIPS_BASE_ADDRS                          { AIPS_A_BASE, AIPS_B_BASE }
/** Array initializer of AIPS peripheral base pointers */
#define AIPS_BASE_PTRS                           { AIPS_A, AIPS_B }

/* ----------------------------------------------------------------------------
   -- AIPS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AIPS_Register_Masks AIPS Register Masks
 * @{
 */

/* MPRA Bit Fields */
#define AIPS_MPRA_MPL7_MASK                      0x1u
#define AIPS_MPRA_MPL7_SHIFT                     0u
#define AIPS_MPRA_MPL7_WIDTH                     1u
#define AIPS_MPRA_MPL7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL7_SHIFT))&AIPS_MPRA_MPL7_MASK)
#define AIPS_MPRA_MTW7_MASK                      0x2u
#define AIPS_MPRA_MTW7_SHIFT                     1u
#define AIPS_MPRA_MTW7_WIDTH                     1u
#define AIPS_MPRA_MTW7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW7_SHIFT))&AIPS_MPRA_MTW7_MASK)
#define AIPS_MPRA_MTR7_MASK                      0x4u
#define AIPS_MPRA_MTR7_SHIFT                     2u
#define AIPS_MPRA_MTR7_WIDTH                     1u
#define AIPS_MPRA_MTR7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR7_SHIFT))&AIPS_MPRA_MTR7_MASK)
#define AIPS_MPRA_MPL6_MASK                      0x10u
#define AIPS_MPRA_MPL6_SHIFT                     4u
#define AIPS_MPRA_MPL6_WIDTH                     1u
#define AIPS_MPRA_MPL6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL6_SHIFT))&AIPS_MPRA_MPL6_MASK)
#define AIPS_MPRA_MTW6_MASK                      0x20u
#define AIPS_MPRA_MTW6_SHIFT                     5u
#define AIPS_MPRA_MTW6_WIDTH                     1u
#define AIPS_MPRA_MTW6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW6_SHIFT))&AIPS_MPRA_MTW6_MASK)
#define AIPS_MPRA_MTR6_MASK                      0x40u
#define AIPS_MPRA_MTR6_SHIFT                     6u
#define AIPS_MPRA_MTR6_WIDTH                     1u
#define AIPS_MPRA_MTR6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR6_SHIFT))&AIPS_MPRA_MTR6_MASK)
#define AIPS_MPRA_MPL5_MASK                      0x100u
#define AIPS_MPRA_MPL5_SHIFT                     8u
#define AIPS_MPRA_MPL5_WIDTH                     1u
#define AIPS_MPRA_MPL5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL5_SHIFT))&AIPS_MPRA_MPL5_MASK)
#define AIPS_MPRA_MTW5_MASK                      0x200u
#define AIPS_MPRA_MTW5_SHIFT                     9u
#define AIPS_MPRA_MTW5_WIDTH                     1u
#define AIPS_MPRA_MTW5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW5_SHIFT))&AIPS_MPRA_MTW5_MASK)
#define AIPS_MPRA_MTR5_MASK                      0x400u
#define AIPS_MPRA_MTR5_SHIFT                     10u
#define AIPS_MPRA_MTR5_WIDTH                     1u
#define AIPS_MPRA_MTR5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR5_SHIFT))&AIPS_MPRA_MTR5_MASK)
#define AIPS_MPRA_MPL4_MASK                      0x1000u
#define AIPS_MPRA_MPL4_SHIFT                     12u
#define AIPS_MPRA_MPL4_WIDTH                     1u
#define AIPS_MPRA_MPL4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL4_SHIFT))&AIPS_MPRA_MPL4_MASK)
#define AIPS_MPRA_MTW4_MASK                      0x2000u
#define AIPS_MPRA_MTW4_SHIFT                     13u
#define AIPS_MPRA_MTW4_WIDTH                     1u
#define AIPS_MPRA_MTW4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW4_SHIFT))&AIPS_MPRA_MTW4_MASK)
#define AIPS_MPRA_MTR4_MASK                      0x4000u
#define AIPS_MPRA_MTR4_SHIFT                     14u
#define AIPS_MPRA_MTR4_WIDTH                     1u
#define AIPS_MPRA_MTR4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR4_SHIFT))&AIPS_MPRA_MTR4_MASK)
#define AIPS_MPRA_MPL3_MASK                      0x10000u
#define AIPS_MPRA_MPL3_SHIFT                     16u
#define AIPS_MPRA_MPL3_WIDTH                     1u
#define AIPS_MPRA_MPL3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL3_SHIFT))&AIPS_MPRA_MPL3_MASK)
#define AIPS_MPRA_MTW3_MASK                      0x20000u
#define AIPS_MPRA_MTW3_SHIFT                     17u
#define AIPS_MPRA_MTW3_WIDTH                     1u
#define AIPS_MPRA_MTW3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW3_SHIFT))&AIPS_MPRA_MTW3_MASK)
#define AIPS_MPRA_MTR3_MASK                      0x40000u
#define AIPS_MPRA_MTR3_SHIFT                     18u
#define AIPS_MPRA_MTR3_WIDTH                     1u
#define AIPS_MPRA_MTR3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR3_SHIFT))&AIPS_MPRA_MTR3_MASK)
#define AIPS_MPRA_MPL2_MASK                      0x100000u
#define AIPS_MPRA_MPL2_SHIFT                     20u
#define AIPS_MPRA_MPL2_WIDTH                     1u
#define AIPS_MPRA_MPL2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL2_SHIFT))&AIPS_MPRA_MPL2_MASK)
#define AIPS_MPRA_MTW2_MASK                      0x200000u
#define AIPS_MPRA_MTW2_SHIFT                     21u
#define AIPS_MPRA_MTW2_WIDTH                     1u
#define AIPS_MPRA_MTW2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW2_SHIFT))&AIPS_MPRA_MTW2_MASK)
#define AIPS_MPRA_MTR2_MASK                      0x400000u
#define AIPS_MPRA_MTR2_SHIFT                     22u
#define AIPS_MPRA_MTR2_WIDTH                     1u
#define AIPS_MPRA_MTR2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR2_SHIFT))&AIPS_MPRA_MTR2_MASK)
#define AIPS_MPRA_MPL1_MASK                      0x1000000u
#define AIPS_MPRA_MPL1_SHIFT                     24u
#define AIPS_MPRA_MPL1_WIDTH                     1u
#define AIPS_MPRA_MPL1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL1_SHIFT))&AIPS_MPRA_MPL1_MASK)
#define AIPS_MPRA_MTW1_MASK                      0x2000000u
#define AIPS_MPRA_MTW1_SHIFT                     25u
#define AIPS_MPRA_MTW1_WIDTH                     1u
#define AIPS_MPRA_MTW1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW1_SHIFT))&AIPS_MPRA_MTW1_MASK)
#define AIPS_MPRA_MTR1_MASK                      0x4000000u
#define AIPS_MPRA_MTR1_SHIFT                     26u
#define AIPS_MPRA_MTR1_WIDTH                     1u
#define AIPS_MPRA_MTR1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR1_SHIFT))&AIPS_MPRA_MTR1_MASK)
#define AIPS_MPRA_MPL0_MASK                      0x10000000u
#define AIPS_MPRA_MPL0_SHIFT                     28u
#define AIPS_MPRA_MPL0_WIDTH                     1u
#define AIPS_MPRA_MPL0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL0_SHIFT))&AIPS_MPRA_MPL0_MASK)
#define AIPS_MPRA_MTW0_MASK                      0x20000000u
#define AIPS_MPRA_MTW0_SHIFT                     29u
#define AIPS_MPRA_MTW0_WIDTH                     1u
#define AIPS_MPRA_MTW0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW0_SHIFT))&AIPS_MPRA_MTW0_MASK)
#define AIPS_MPRA_MTR0_MASK                      0x40000000u
#define AIPS_MPRA_MTR0_SHIFT                     30u
#define AIPS_MPRA_MTR0_WIDTH                     1u
#define AIPS_MPRA_MTR0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR0_SHIFT))&AIPS_MPRA_MTR0_MASK)
/* MPRB Bit Fields */
#define AIPS_MPRB_MP14_MASK                      0x10u
#define AIPS_MPRB_MP14_SHIFT                     4u
#define AIPS_MPRB_MP14_WIDTH                     1u
#define AIPS_MPRB_MP14(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MP14_SHIFT))&AIPS_MPRB_MP14_MASK)
#define AIPS_MPRB_MTW14_MASK                     0x20u
#define AIPS_MPRB_MTW14_SHIFT                    5u
#define AIPS_MPRB_MTW14_WIDTH                    1u
#define AIPS_MPRB_MTW14(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW14_SHIFT))&AIPS_MPRB_MTW14_MASK)
#define AIPS_MPRB_MTR14_MASK                     0x40u
#define AIPS_MPRB_MTR14_SHIFT                    6u
#define AIPS_MPRB_MTR14_WIDTH                    1u
#define AIPS_MPRB_MTR14(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR14_SHIFT))&AIPS_MPRB_MTR14_MASK)
#define AIPS_MPRB_MPL13_MASK                     0x100u
#define AIPS_MPRB_MPL13_SHIFT                    8u
#define AIPS_MPRB_MPL13_WIDTH                    1u
#define AIPS_MPRB_MPL13(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MPL13_SHIFT))&AIPS_MPRB_MPL13_MASK)
#define AIPS_MPRB_MTW13_MASK                     0x200u
#define AIPS_MPRB_MTW13_SHIFT                    9u
#define AIPS_MPRB_MTW13_WIDTH                    1u
#define AIPS_MPRB_MTW13(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW13_SHIFT))&AIPS_MPRB_MTW13_MASK)
#define AIPS_MPRB_MTR13_MASK                     0x400u
#define AIPS_MPRB_MTR13_SHIFT                    10u
#define AIPS_MPRB_MTR13_WIDTH                    1u
#define AIPS_MPRB_MTR13(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR13_SHIFT))&AIPS_MPRB_MTR13_MASK)
#define AIPS_MPRB_MPL12_MASK                     0x1000u
#define AIPS_MPRB_MPL12_SHIFT                    12u
#define AIPS_MPRB_MPL12_WIDTH                    1u
#define AIPS_MPRB_MPL12(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MPL12_SHIFT))&AIPS_MPRB_MPL12_MASK)
#define AIPS_MPRB_MTW12_MASK                     0x2000u
#define AIPS_MPRB_MTW12_SHIFT                    13u
#define AIPS_MPRB_MTW12_WIDTH                    1u
#define AIPS_MPRB_MTW12(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW12_SHIFT))&AIPS_MPRB_MTW12_MASK)
#define AIPS_MPRB_MTR12_MASK                     0x4000u
#define AIPS_MPRB_MTR12_SHIFT                    14u
#define AIPS_MPRB_MTR12_WIDTH                    1u
#define AIPS_MPRB_MTR12(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR12_SHIFT))&AIPS_MPRB_MTR12_MASK)
#define AIPS_MPRB_MPL11_MASK                     0x10000u
#define AIPS_MPRB_MPL11_SHIFT                    16u
#define AIPS_MPRB_MPL11_WIDTH                    1u
#define AIPS_MPRB_MPL11(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MPL11_SHIFT))&AIPS_MPRB_MPL11_MASK)
#define AIPS_MPRB_MTW11_MASK                     0x20000u
#define AIPS_MPRB_MTW11_SHIFT                    17u
#define AIPS_MPRB_MTW11_WIDTH                    1u
#define AIPS_MPRB_MTW11(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW11_SHIFT))&AIPS_MPRB_MTW11_MASK)
#define AIPS_MPRB_MTR11_MASK                     0x40000u
#define AIPS_MPRB_MTR11_SHIFT                    18u
#define AIPS_MPRB_MTR11_WIDTH                    1u
#define AIPS_MPRB_MTR11(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR11_SHIFT))&AIPS_MPRB_MTR11_MASK)
#define AIPS_MPRB_MPL10_MASK                     0x100000u
#define AIPS_MPRB_MPL10_SHIFT                    20u
#define AIPS_MPRB_MPL10_WIDTH                    1u
#define AIPS_MPRB_MPL10(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MPL10_SHIFT))&AIPS_MPRB_MPL10_MASK)
#define AIPS_MPRB_MTW10_MASK                     0x200000u
#define AIPS_MPRB_MTW10_SHIFT                    21u
#define AIPS_MPRB_MTW10_WIDTH                    1u
#define AIPS_MPRB_MTW10(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW10_SHIFT))&AIPS_MPRB_MTW10_MASK)
#define AIPS_MPRB_MTR10_MASK                     0x400000u
#define AIPS_MPRB_MTR10_SHIFT                    22u
#define AIPS_MPRB_MTR10_WIDTH                    1u
#define AIPS_MPRB_MTR10(x)                       (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR10_SHIFT))&AIPS_MPRB_MTR10_MASK)
#define AIPS_MPRB_MPL9_MASK                      0x1000000u
#define AIPS_MPRB_MPL9_SHIFT                     24u
#define AIPS_MPRB_MPL9_WIDTH                     1u
#define AIPS_MPRB_MPL9(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MPL9_SHIFT))&AIPS_MPRB_MPL9_MASK)
#define AIPS_MPRB_MTW9_MASK                      0x2000000u
#define AIPS_MPRB_MTW9_SHIFT                     25u
#define AIPS_MPRB_MTW9_WIDTH                     1u
#define AIPS_MPRB_MTW9(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW9_SHIFT))&AIPS_MPRB_MTW9_MASK)
#define AIPS_MPRB_MTR9_MASK                      0x4000000u
#define AIPS_MPRB_MTR9_SHIFT                     26u
#define AIPS_MPRB_MTR9_WIDTH                     1u
#define AIPS_MPRB_MTR9(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR9_SHIFT))&AIPS_MPRB_MTR9_MASK)
#define AIPS_MPRB_MPL8_MASK                      0x10000000u
#define AIPS_MPRB_MPL8_SHIFT                     28u
#define AIPS_MPRB_MPL8_WIDTH                     1u
#define AIPS_MPRB_MPL8(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MPL8_SHIFT))&AIPS_MPRB_MPL8_MASK)
#define AIPS_MPRB_MTW8_MASK                      0x20000000u
#define AIPS_MPRB_MTW8_SHIFT                     29u
#define AIPS_MPRB_MTW8_WIDTH                     1u
#define AIPS_MPRB_MTW8(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTW8_SHIFT))&AIPS_MPRB_MTW8_MASK)
#define AIPS_MPRB_MTR8_MASK                      0x40000000u
#define AIPS_MPRB_MTR8_SHIFT                     30u
#define AIPS_MPRB_MTR8_WIDTH                     1u
#define AIPS_MPRB_MTR8(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRB_MTR8_SHIFT))&AIPS_MPRB_MTR8_MASK)
/* PACR Bit Fields */
#define AIPS_PACR_TP7_MASK                       0x1u
#define AIPS_PACR_TP7_SHIFT                      0u
#define AIPS_PACR_TP7_WIDTH                      1u
#define AIPS_PACR_TP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP7_SHIFT))&AIPS_PACR_TP7_MASK)
#define AIPS_PACR_WP7_MASK                       0x2u
#define AIPS_PACR_WP7_SHIFT                      1u
#define AIPS_PACR_WP7_WIDTH                      1u
#define AIPS_PACR_WP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP7_SHIFT))&AIPS_PACR_WP7_MASK)
#define AIPS_PACR_SP7_MASK                       0x4u
#define AIPS_PACR_SP7_SHIFT                      2u
#define AIPS_PACR_SP7_WIDTH                      1u
#define AIPS_PACR_SP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP7_SHIFT))&AIPS_PACR_SP7_MASK)
#define AIPS_PACR_TP6_MASK                       0x10u
#define AIPS_PACR_TP6_SHIFT                      4u
#define AIPS_PACR_TP6_WIDTH                      1u
#define AIPS_PACR_TP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP6_SHIFT))&AIPS_PACR_TP6_MASK)
#define AIPS_PACR_WP6_MASK                       0x20u
#define AIPS_PACR_WP6_SHIFT                      5u
#define AIPS_PACR_WP6_WIDTH                      1u
#define AIPS_PACR_WP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP6_SHIFT))&AIPS_PACR_WP6_MASK)
#define AIPS_PACR_SP6_MASK                       0x40u
#define AIPS_PACR_SP6_SHIFT                      6u
#define AIPS_PACR_SP6_WIDTH                      1u
#define AIPS_PACR_SP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP6_SHIFT))&AIPS_PACR_SP6_MASK)
#define AIPS_PACR_TP5_MASK                       0x100u
#define AIPS_PACR_TP5_SHIFT                      8u
#define AIPS_PACR_TP5_WIDTH                      1u
#define AIPS_PACR_TP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP5_SHIFT))&AIPS_PACR_TP5_MASK)
#define AIPS_PACR_WP5_MASK                       0x200u
#define AIPS_PACR_WP5_SHIFT                      9u
#define AIPS_PACR_WP5_WIDTH                      1u
#define AIPS_PACR_WP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP5_SHIFT))&AIPS_PACR_WP5_MASK)
#define AIPS_PACR_SP5_MASK                       0x400u
#define AIPS_PACR_SP5_SHIFT                      10u
#define AIPS_PACR_SP5_WIDTH                      1u
#define AIPS_PACR_SP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP5_SHIFT))&AIPS_PACR_SP5_MASK)
#define AIPS_PACR_TP4_MASK                       0x1000u
#define AIPS_PACR_TP4_SHIFT                      12u
#define AIPS_PACR_TP4_WIDTH                      1u
#define AIPS_PACR_TP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP4_SHIFT))&AIPS_PACR_TP4_MASK)
#define AIPS_PACR_WP4_MASK                       0x2000u
#define AIPS_PACR_WP4_SHIFT                      13u
#define AIPS_PACR_WP4_WIDTH                      1u
#define AIPS_PACR_WP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP4_SHIFT))&AIPS_PACR_WP4_MASK)
#define AIPS_PACR_SP4_MASK                       0x4000u
#define AIPS_PACR_SP4_SHIFT                      14u
#define AIPS_PACR_SP4_WIDTH                      1u
#define AIPS_PACR_SP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP4_SHIFT))&AIPS_PACR_SP4_MASK)
#define AIPS_PACR_TP3_MASK                       0x10000u
#define AIPS_PACR_TP3_SHIFT                      16u
#define AIPS_PACR_TP3_WIDTH                      1u
#define AIPS_PACR_TP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP3_SHIFT))&AIPS_PACR_TP3_MASK)
#define AIPS_PACR_WP3_MASK                       0x20000u
#define AIPS_PACR_WP3_SHIFT                      17u
#define AIPS_PACR_WP3_WIDTH                      1u
#define AIPS_PACR_WP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP3_SHIFT))&AIPS_PACR_WP3_MASK)
#define AIPS_PACR_SP3_MASK                       0x40000u
#define AIPS_PACR_SP3_SHIFT                      18u
#define AIPS_PACR_SP3_WIDTH                      1u
#define AIPS_PACR_SP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP3_SHIFT))&AIPS_PACR_SP3_MASK)
#define AIPS_PACR_TP2_MASK                       0x100000u
#define AIPS_PACR_TP2_SHIFT                      20u
#define AIPS_PACR_TP2_WIDTH                      1u
#define AIPS_PACR_TP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP2_SHIFT))&AIPS_PACR_TP2_MASK)
#define AIPS_PACR_WP2_MASK                       0x200000u
#define AIPS_PACR_WP2_SHIFT                      21u
#define AIPS_PACR_WP2_WIDTH                      1u
#define AIPS_PACR_WP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP2_SHIFT))&AIPS_PACR_WP2_MASK)
#define AIPS_PACR_SP2_MASK                       0x400000u
#define AIPS_PACR_SP2_SHIFT                      22u
#define AIPS_PACR_SP2_WIDTH                      1u
#define AIPS_PACR_SP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP2_SHIFT))&AIPS_PACR_SP2_MASK)
#define AIPS_PACR_TP1_MASK                       0x1000000u
#define AIPS_PACR_TP1_SHIFT                      24u
#define AIPS_PACR_TP1_WIDTH                      1u
#define AIPS_PACR_TP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP1_SHIFT))&AIPS_PACR_TP1_MASK)
#define AIPS_PACR_WP1_MASK                       0x2000000u
#define AIPS_PACR_WP1_SHIFT                      25u
#define AIPS_PACR_WP1_WIDTH                      1u
#define AIPS_PACR_WP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP1_SHIFT))&AIPS_PACR_WP1_MASK)
#define AIPS_PACR_SP1_MASK                       0x4000000u
#define AIPS_PACR_SP1_SHIFT                      26u
#define AIPS_PACR_SP1_WIDTH                      1u
#define AIPS_PACR_SP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP1_SHIFT))&AIPS_PACR_SP1_MASK)
#define AIPS_PACR_TP0_MASK                       0x10000000u
#define AIPS_PACR_TP0_SHIFT                      28u
#define AIPS_PACR_TP0_WIDTH                      1u
#define AIPS_PACR_TP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP0_SHIFT))&AIPS_PACR_TP0_MASK)
#define AIPS_PACR_WP0_MASK                       0x20000000u
#define AIPS_PACR_WP0_SHIFT                      29u
#define AIPS_PACR_WP0_WIDTH                      1u
#define AIPS_PACR_WP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP0_SHIFT))&AIPS_PACR_WP0_MASK)
#define AIPS_PACR_SP0_MASK                       0x40000000u
#define AIPS_PACR_SP0_SHIFT                      30u
#define AIPS_PACR_SP0_WIDTH                      1u
#define AIPS_PACR_SP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP0_SHIFT))&AIPS_PACR_SP0_MASK)
/* OPACR Bit Fields */
#define AIPS_OPACR_TP7_MASK                      0x1u
#define AIPS_OPACR_TP7_SHIFT                     0u
#define AIPS_OPACR_TP7_WIDTH                     1u
#define AIPS_OPACR_TP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP7_SHIFT))&AIPS_OPACR_TP7_MASK)
#define AIPS_OPACR_WP7_MASK                      0x2u
#define AIPS_OPACR_WP7_SHIFT                     1u
#define AIPS_OPACR_WP7_WIDTH                     1u
#define AIPS_OPACR_WP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP7_SHIFT))&AIPS_OPACR_WP7_MASK)
#define AIPS_OPACR_SP7_MASK                      0x4u
#define AIPS_OPACR_SP7_SHIFT                     2u
#define AIPS_OPACR_SP7_WIDTH                     1u
#define AIPS_OPACR_SP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP7_SHIFT))&AIPS_OPACR_SP7_MASK)
#define AIPS_OPACR_TP6_MASK                      0x10u
#define AIPS_OPACR_TP6_SHIFT                     4u
#define AIPS_OPACR_TP6_WIDTH                     1u
#define AIPS_OPACR_TP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP6_SHIFT))&AIPS_OPACR_TP6_MASK)
#define AIPS_OPACR_WP6_MASK                      0x20u
#define AIPS_OPACR_WP6_SHIFT                     5u
#define AIPS_OPACR_WP6_WIDTH                     1u
#define AIPS_OPACR_WP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP6_SHIFT))&AIPS_OPACR_WP6_MASK)
#define AIPS_OPACR_SP6_MASK                      0x40u
#define AIPS_OPACR_SP6_SHIFT                     6u
#define AIPS_OPACR_SP6_WIDTH                     1u
#define AIPS_OPACR_SP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP6_SHIFT))&AIPS_OPACR_SP6_MASK)
#define AIPS_OPACR_TP5_MASK                      0x100u
#define AIPS_OPACR_TP5_SHIFT                     8u
#define AIPS_OPACR_TP5_WIDTH                     1u
#define AIPS_OPACR_TP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP5_SHIFT))&AIPS_OPACR_TP5_MASK)
#define AIPS_OPACR_WP5_MASK                      0x200u
#define AIPS_OPACR_WP5_SHIFT                     9u
#define AIPS_OPACR_WP5_WIDTH                     1u
#define AIPS_OPACR_WP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP5_SHIFT))&AIPS_OPACR_WP5_MASK)
#define AIPS_OPACR_SP5_MASK                      0x400u
#define AIPS_OPACR_SP5_SHIFT                     10u
#define AIPS_OPACR_SP5_WIDTH                     1u
#define AIPS_OPACR_SP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP5_SHIFT))&AIPS_OPACR_SP5_MASK)
#define AIPS_OPACR_TP4_MASK                      0x1000u
#define AIPS_OPACR_TP4_SHIFT                     12u
#define AIPS_OPACR_TP4_WIDTH                     1u
#define AIPS_OPACR_TP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP4_SHIFT))&AIPS_OPACR_TP4_MASK)
#define AIPS_OPACR_WP4_MASK                      0x2000u
#define AIPS_OPACR_WP4_SHIFT                     13u
#define AIPS_OPACR_WP4_WIDTH                     1u
#define AIPS_OPACR_WP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP4_SHIFT))&AIPS_OPACR_WP4_MASK)
#define AIPS_OPACR_SP4_MASK                      0x4000u
#define AIPS_OPACR_SP4_SHIFT                     14u
#define AIPS_OPACR_SP4_WIDTH                     1u
#define AIPS_OPACR_SP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP4_SHIFT))&AIPS_OPACR_SP4_MASK)
#define AIPS_OPACR_TP3_MASK                      0x10000u
#define AIPS_OPACR_TP3_SHIFT                     16u
#define AIPS_OPACR_TP3_WIDTH                     1u
#define AIPS_OPACR_TP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP3_SHIFT))&AIPS_OPACR_TP3_MASK)
#define AIPS_OPACR_WP3_MASK                      0x20000u
#define AIPS_OPACR_WP3_SHIFT                     17u
#define AIPS_OPACR_WP3_WIDTH                     1u
#define AIPS_OPACR_WP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP3_SHIFT))&AIPS_OPACR_WP3_MASK)
#define AIPS_OPACR_SP3_MASK                      0x40000u
#define AIPS_OPACR_SP3_SHIFT                     18u
#define AIPS_OPACR_SP3_WIDTH                     1u
#define AIPS_OPACR_SP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP3_SHIFT))&AIPS_OPACR_SP3_MASK)
#define AIPS_OPACR_TP2_MASK                      0x100000u
#define AIPS_OPACR_TP2_SHIFT                     20u
#define AIPS_OPACR_TP2_WIDTH                     1u
#define AIPS_OPACR_TP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP2_SHIFT))&AIPS_OPACR_TP2_MASK)
#define AIPS_OPACR_WP2_MASK                      0x200000u
#define AIPS_OPACR_WP2_SHIFT                     21u
#define AIPS_OPACR_WP2_WIDTH                     1u
#define AIPS_OPACR_WP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP2_SHIFT))&AIPS_OPACR_WP2_MASK)
#define AIPS_OPACR_SP2_MASK                      0x400000u
#define AIPS_OPACR_SP2_SHIFT                     22u
#define AIPS_OPACR_SP2_WIDTH                     1u
#define AIPS_OPACR_SP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP2_SHIFT))&AIPS_OPACR_SP2_MASK)
#define AIPS_OPACR_TP1_MASK                      0x1000000u
#define AIPS_OPACR_TP1_SHIFT                     24u
#define AIPS_OPACR_TP1_WIDTH                     1u
#define AIPS_OPACR_TP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP1_SHIFT))&AIPS_OPACR_TP1_MASK)
#define AIPS_OPACR_WP1_MASK                      0x2000000u
#define AIPS_OPACR_WP1_SHIFT                     25u
#define AIPS_OPACR_WP1_WIDTH                     1u
#define AIPS_OPACR_WP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP1_SHIFT))&AIPS_OPACR_WP1_MASK)
#define AIPS_OPACR_SP1_MASK                      0x4000000u
#define AIPS_OPACR_SP1_SHIFT                     26u
#define AIPS_OPACR_SP1_WIDTH                     1u
#define AIPS_OPACR_SP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP1_SHIFT))&AIPS_OPACR_SP1_MASK)
#define AIPS_OPACR_TP0_MASK                      0x10000000u
#define AIPS_OPACR_TP0_SHIFT                     28u
#define AIPS_OPACR_TP0_WIDTH                     1u
#define AIPS_OPACR_TP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP0_SHIFT))&AIPS_OPACR_TP0_MASK)
#define AIPS_OPACR_WP0_MASK                      0x20000000u
#define AIPS_OPACR_WP0_SHIFT                     29u
#define AIPS_OPACR_WP0_WIDTH                     1u
#define AIPS_OPACR_WP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP0_SHIFT))&AIPS_OPACR_WP0_MASK)
#define AIPS_OPACR_SP0_MASK                      0x40000000u
#define AIPS_OPACR_SP0_SHIFT                     30u
#define AIPS_OPACR_SP0_WIDTH                     1u
#define AIPS_OPACR_SP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP0_SHIFT))&AIPS_OPACR_SP0_MASK)

/*!
 * @}
 */ /* end of group AIPS_Register_Masks */


/*!
 * @}
 */ /* end of group AIPS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- AXBS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AXBS_Peripheral_Access_Layer AXBS Peripheral Access Layer
 * @{
 */


/** AXBS - Size of Registers Arrays */
#define AXBS_PORT_COUNT                          8u
#define AXBS_MGPCR_COUNT                         8u

/** AXBS - Register Layout Typedef */
typedef struct {
  struct {                                         /* offset: 0x0, array step: 0x100 */
    __IO uint32_t PRS;                               /**< Priority Registers Slave, array offset: 0x0, array step: 0x100 */
         uint8_t RESERVED_0[12];
    __IO uint32_t CRS;                               /**< Control Register, array offset: 0x10, array step: 0x100 */
         uint8_t RESERVED_1[236];
  } PORT[AXBS_PORT_COUNT];
  struct {                                         /* offset: 0x800, array step: 0x100 */
    __IO uint32_t MGPCR;                             /**< Master General Purpose Control Register, array offset: 0x800, array step: 0x100 */
         uint8_t RESERVED_0[252];
  } MGPCR[AXBS_MGPCR_COUNT];
} AXBS_Type, *AXBS_MemMapPtr;

 /** Number of instances of the AXBS module. */
#define AXBS_INSTANCE_COUNT                      (2u)


/* AXBS - Peripheral instance base addresses */
/** Peripheral AXBS_0 base address */
#define AXBS_0_BASE                              (0xFC004000u)
/** Peripheral AXBS_0 base pointer */
#define AXBS_0                                   ((AXBS_Type *)AXBS_0_BASE)
/** Peripheral AXBS_1 base address */
#define AXBS_1_BASE                              (0xFC008000u)
/** Peripheral AXBS_1 base pointer */
#define AXBS_1                                   ((AXBS_Type *)AXBS_1_BASE)
/** Array initializer of AXBS peripheral base addresses */
#define AXBS_BASE_ADDRS                          { AXBS_0_BASE, AXBS_1_BASE }
/** Array initializer of AXBS peripheral base pointers */
#define AXBS_BASE_PTRS                           { AXBS_0, AXBS_1 }

/* ----------------------------------------------------------------------------
   -- AXBS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup AXBS_Register_Masks AXBS Register Masks
 * @{
 */

/* PRS Bit Fields */
#define AXBS_PRS_M0_MASK                         0x7u
#define AXBS_PRS_M0_SHIFT                        0u
#define AXBS_PRS_M0_WIDTH                        3u
#define AXBS_PRS_M0(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M0_SHIFT))&AXBS_PRS_M0_MASK)
#define AXBS_PRS_M1_MASK                         0x70u
#define AXBS_PRS_M1_SHIFT                        4u
#define AXBS_PRS_M1_WIDTH                        3u
#define AXBS_PRS_M1(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M1_SHIFT))&AXBS_PRS_M1_MASK)
#define AXBS_PRS_M2_MASK                         0x700u
#define AXBS_PRS_M2_SHIFT                        8u
#define AXBS_PRS_M2_WIDTH                        3u
#define AXBS_PRS_M2(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M2_SHIFT))&AXBS_PRS_M2_MASK)
#define AXBS_PRS_M3_MASK                         0x7000u
#define AXBS_PRS_M3_SHIFT                        12u
#define AXBS_PRS_M3_WIDTH                        3u
#define AXBS_PRS_M3(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M3_SHIFT))&AXBS_PRS_M3_MASK)
#define AXBS_PRS_M4_MASK                         0x70000u
#define AXBS_PRS_M4_SHIFT                        16u
#define AXBS_PRS_M4_WIDTH                        3u
#define AXBS_PRS_M4(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M4_SHIFT))&AXBS_PRS_M4_MASK)
#define AXBS_PRS_M5_MASK                         0x700000u
#define AXBS_PRS_M5_SHIFT                        20u
#define AXBS_PRS_M5_WIDTH                        3u
#define AXBS_PRS_M5(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M5_SHIFT))&AXBS_PRS_M5_MASK)
#define AXBS_PRS_M6_MASK                         0x7000000u
#define AXBS_PRS_M6_SHIFT                        24u
#define AXBS_PRS_M6_WIDTH                        3u
#define AXBS_PRS_M6(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M6_SHIFT))&AXBS_PRS_M6_MASK)
#define AXBS_PRS_M7_MASK                         0x70000000u
#define AXBS_PRS_M7_SHIFT                        28u
#define AXBS_PRS_M7_WIDTH                        3u
#define AXBS_PRS_M7(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M7_SHIFT))&AXBS_PRS_M7_MASK)
/* CRS Bit Fields */
#define AXBS_CRS_PARK_MASK                       0x7u
#define AXBS_CRS_PARK_SHIFT                      0u
#define AXBS_CRS_PARK_WIDTH                      3u
#define AXBS_CRS_PARK(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_PARK_SHIFT))&AXBS_CRS_PARK_MASK)
#define AXBS_CRS_PCTL_MASK                       0x30u
#define AXBS_CRS_PCTL_SHIFT                      4u
#define AXBS_CRS_PCTL_WIDTH                      2u
#define AXBS_CRS_PCTL(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_PCTL_SHIFT))&AXBS_CRS_PCTL_MASK)
#define AXBS_CRS_ARB_MASK                        0x300u
#define AXBS_CRS_ARB_SHIFT                       8u
#define AXBS_CRS_ARB_WIDTH                       2u
#define AXBS_CRS_ARB(x)                          (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_ARB_SHIFT))&AXBS_CRS_ARB_MASK)
#define AXBS_CRS_HPE0_MASK                       0x10000u
#define AXBS_CRS_HPE0_SHIFT                      16u
#define AXBS_CRS_HPE0_WIDTH                      1u
#define AXBS_CRS_HPE0(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE0_SHIFT))&AXBS_CRS_HPE0_MASK)
#define AXBS_CRS_HPE1_MASK                       0x20000u
#define AXBS_CRS_HPE1_SHIFT                      17u
#define AXBS_CRS_HPE1_WIDTH                      1u
#define AXBS_CRS_HPE1(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE1_SHIFT))&AXBS_CRS_HPE1_MASK)
#define AXBS_CRS_HPE2_MASK                       0x40000u
#define AXBS_CRS_HPE2_SHIFT                      18u
#define AXBS_CRS_HPE2_WIDTH                      1u
#define AXBS_CRS_HPE2(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE2_SHIFT))&AXBS_CRS_HPE2_MASK)
#define AXBS_CRS_HPE3_MASK                       0x80000u
#define AXBS_CRS_HPE3_SHIFT                      19u
#define AXBS_CRS_HPE3_WIDTH                      1u
#define AXBS_CRS_HPE3(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE3_SHIFT))&AXBS_CRS_HPE3_MASK)
#define AXBS_CRS_HPE4_MASK                       0x100000u
#define AXBS_CRS_HPE4_SHIFT                      20u
#define AXBS_CRS_HPE4_WIDTH                      1u
#define AXBS_CRS_HPE4(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE4_SHIFT))&AXBS_CRS_HPE4_MASK)
#define AXBS_CRS_HPE5_MASK                       0x200000u
#define AXBS_CRS_HPE5_SHIFT                      21u
#define AXBS_CRS_HPE5_WIDTH                      1u
#define AXBS_CRS_HPE5(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE5_SHIFT))&AXBS_CRS_HPE5_MASK)
#define AXBS_CRS_HPE6_MASK                       0x400000u
#define AXBS_CRS_HPE6_SHIFT                      22u
#define AXBS_CRS_HPE6_WIDTH                      1u
#define AXBS_CRS_HPE6(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE6_SHIFT))&AXBS_CRS_HPE6_MASK)
#define AXBS_CRS_HPE7_MASK                       0x800000u
#define AXBS_CRS_HPE7_SHIFT                      23u
#define AXBS_CRS_HPE7_WIDTH                      1u
#define AXBS_CRS_HPE7(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HPE7_SHIFT))&AXBS_CRS_HPE7_MASK)
#define AXBS_CRS_HLP_MASK                        0x40000000u
#define AXBS_CRS_HLP_SHIFT                       30u
#define AXBS_CRS_HLP_WIDTH                       1u
#define AXBS_CRS_HLP(x)                          (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HLP_SHIFT))&AXBS_CRS_HLP_MASK)
#define AXBS_CRS_RO_MASK                         0x80000000u
#define AXBS_CRS_RO_SHIFT                        31u
#define AXBS_CRS_RO_WIDTH                        1u
#define AXBS_CRS_RO(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_RO_SHIFT))&AXBS_CRS_RO_MASK)
/* MGPCR Bit Fields */
#define AXBS_MGPCR_AULB_MASK                     0x7u
#define AXBS_MGPCR_AULB_SHIFT                    0u
#define AXBS_MGPCR_AULB_WIDTH                    3u
#define AXBS_MGPCR_AULB(x)                       (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR_AULB_SHIFT))&AXBS_MGPCR_AULB_MASK)

/*!
 * @}
 */ /* end of group AXBS_Register_Masks */


/*!
 * @}
 */ /* end of group AXBS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- BCTU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup BCTU_Peripheral_Access_Layer BCTU Peripheral Access Layer
 * @{
 */


/** BCTU - Size of Registers Arrays */
#define BCTU_TRGCFG__COUNT                       96u
#define BCTU_LISTCHR__COUNT                      16u

/** BCTU - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t MSR;                               /**< Module Status register, offset: 0x8 */
       uint8_t RESERVED_1[12];
  __IO uint32_t TRGCFG_[BCTU_TRGCFG__COUNT];       /**< Trigger Configuration Register, array offset: 0x18, array step: 0x4 */
       uint8_t RESERVED_2[144];
  __IO uint32_t WRPROT;                            /**< Write Protection register, offset: 0x228 */
  __IO uint32_t SFTRGR1;                           /**< Software Trigger register 1, offset: 0x22C */
  __IO uint32_t SFTRGR2;                           /**< Software Trigger register 2, offset: 0x230 */
  __IO uint32_t SFTRGR3;                           /**< Software Trigger register 3, offset: 0x234 */
       uint8_t RESERVED_3[4];
  __I  uint32_t ADC0DR;                            /**< ADC0 Result Data register, offset: 0x23C */
  __I  uint32_t ADC1DR;                            /**< ADC1 result data register, offset: 0x240 */
       uint8_t RESERVED_4[8];
  __I  uint32_t LISTSTAR;                          /**< LIST Size Status register, offset: 0x24C */
  __IO uint32_t LISTCHR_[BCTU_LISTCHR__COUNT];     /**< LIST Channel Address Register, array offset: 0x250, array step: 0x4 */
} BCTU_Type, *BCTU_MemMapPtr;

 /** Number of instances of the BCTU module. */
#define BCTU_INSTANCE_COUNT                      (1u)


/* BCTU - Peripheral instance base addresses */
/** Peripheral BCTU base address */
#define BCTU_BASE                                (0xFFC10000u)
/** Peripheral BCTU base pointer */
#define BCTU                                     ((BCTU_Type *)BCTU_BASE)
/** Array initializer of BCTU peripheral base addresses */
#define BCTU_BASE_ADDRS                          { BCTU_BASE }
/** Array initializer of BCTU peripheral base pointers */
#define BCTU_BASE_PTRS                           { BCTU }

/* ----------------------------------------------------------------------------
   -- BCTU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup BCTU_Register_Masks BCTU Register Masks
 * @{
 */

/* MCR Bit Fields */
#define BCTU_MCR_IEN0_MASK                       0x1u
#define BCTU_MCR_IEN0_SHIFT                      0u
#define BCTU_MCR_IEN0_WIDTH                      1u
#define BCTU_MCR_IEN0(x)                         (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_IEN0_SHIFT))&BCTU_MCR_IEN0_MASK)
#define BCTU_MCR_IEN1_MASK                       0x2u
#define BCTU_MCR_IEN1_SHIFT                      1u
#define BCTU_MCR_IEN1_WIDTH                      1u
#define BCTU_MCR_IEN1(x)                         (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_IEN1_SHIFT))&BCTU_MCR_IEN1_MASK)
#define BCTU_MCR_LIST_IEN_MASK                   0x20u
#define BCTU_MCR_LIST_IEN_SHIFT                  5u
#define BCTU_MCR_LIST_IEN_WIDTH                  1u
#define BCTU_MCR_LIST_IEN(x)                     (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_LIST_IEN_SHIFT))&BCTU_MCR_LIST_IEN_MASK)
#define BCTU_MCR_TRGEN_MASK                      0x80u
#define BCTU_MCR_TRGEN_SHIFT                     7u
#define BCTU_MCR_TRGEN_WIDTH                     1u
#define BCTU_MCR_TRGEN(x)                        (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_TRGEN_SHIFT))&BCTU_MCR_TRGEN_MASK)
#define BCTU_MCR_DMA0_MASK                       0x10000u
#define BCTU_MCR_DMA0_SHIFT                      16u
#define BCTU_MCR_DMA0_WIDTH                      1u
#define BCTU_MCR_DMA0(x)                         (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_DMA0_SHIFT))&BCTU_MCR_DMA0_MASK)
#define BCTU_MCR_DMA1_MASK                       0x20000u
#define BCTU_MCR_DMA1_SHIFT                      17u
#define BCTU_MCR_DMA1_WIDTH                      1u
#define BCTU_MCR_DMA1(x)                         (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_DMA1_SHIFT))&BCTU_MCR_DMA1_MASK)
#define BCTU_MCR_GTRGEN_MASK                     0x4000000u
#define BCTU_MCR_GTRGEN_SHIFT                    26u
#define BCTU_MCR_GTRGEN_WIDTH                    1u
#define BCTU_MCR_GTRGEN(x)                       (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_GTRGEN_SHIFT))&BCTU_MCR_GTRGEN_MASK)
#define BCTU_MCR_FRZ_MASK                        0x20000000u
#define BCTU_MCR_FRZ_SHIFT                       29u
#define BCTU_MCR_FRZ_WIDTH                       1u
#define BCTU_MCR_FRZ(x)                          (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_FRZ_SHIFT))&BCTU_MCR_FRZ_MASK)
#define BCTU_MCR_MDIS_MASK                       0x40000000u
#define BCTU_MCR_MDIS_SHIFT                      30u
#define BCTU_MCR_MDIS_WIDTH                      1u
#define BCTU_MCR_MDIS(x)                         (((uint32_t)(((uint32_t)(x))<<BCTU_MCR_MDIS_SHIFT))&BCTU_MCR_MDIS_MASK)
/* MSR Bit Fields */
#define BCTU_MSR_NDATA0_MASK                     0x1u
#define BCTU_MSR_NDATA0_SHIFT                    0u
#define BCTU_MSR_NDATA0_WIDTH                    1u
#define BCTU_MSR_NDATA0(x)                       (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_NDATA0_SHIFT))&BCTU_MSR_NDATA0_MASK)
#define BCTU_MSR_NDATA1_MASK                     0x2u
#define BCTU_MSR_NDATA1_SHIFT                    1u
#define BCTU_MSR_NDATA1_WIDTH                    1u
#define BCTU_MSR_NDATA1(x)                       (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_NDATA1_SHIFT))&BCTU_MSR_NDATA1_MASK)
#define BCTU_MSR_DATAOVR0_MASK                   0x10u
#define BCTU_MSR_DATAOVR0_SHIFT                  4u
#define BCTU_MSR_DATAOVR0_WIDTH                  1u
#define BCTU_MSR_DATAOVR0(x)                     (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_DATAOVR0_SHIFT))&BCTU_MSR_DATAOVR0_MASK)
#define BCTU_MSR_DATAOVR1_MASK                   0x20u
#define BCTU_MSR_DATAOVR1_SHIFT                  5u
#define BCTU_MSR_DATAOVR1_WIDTH                  1u
#define BCTU_MSR_DATAOVR1(x)                     (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_DATAOVR1_SHIFT))&BCTU_MSR_DATAOVR1_MASK)
#define BCTU_MSR_LIST0_Last_MASK                 0x100u
#define BCTU_MSR_LIST0_Last_SHIFT                8u
#define BCTU_MSR_LIST0_Last_WIDTH                1u
#define BCTU_MSR_LIST0_Last(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_LIST0_Last_SHIFT))&BCTU_MSR_LIST0_Last_MASK)
#define BCTU_MSR_LIST1_Last_MASK                 0x200u
#define BCTU_MSR_LIST1_Last_SHIFT                9u
#define BCTU_MSR_LIST1_Last_WIDTH                1u
#define BCTU_MSR_LIST1_Last(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_LIST1_Last_SHIFT))&BCTU_MSR_LIST1_Last_MASK)
#define BCTU_MSR_TRGF_MASK                       0x8000u
#define BCTU_MSR_TRGF_SHIFT                      15u
#define BCTU_MSR_TRGF_WIDTH                      1u
#define BCTU_MSR_TRGF(x)                         (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_TRGF_SHIFT))&BCTU_MSR_TRGF_MASK)
#define BCTU_MSR_NDATA0_CLR_MASK                 0x10000u
#define BCTU_MSR_NDATA0_CLR_SHIFT                16u
#define BCTU_MSR_NDATA0_CLR_WIDTH                1u
#define BCTU_MSR_NDATA0_CLR(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_NDATA0_CLR_SHIFT))&BCTU_MSR_NDATA0_CLR_MASK)
#define BCTU_MSR_NDATA1_CLR_MASK                 0x20000u
#define BCTU_MSR_NDATA1_CLR_SHIFT                17u
#define BCTU_MSR_NDATA1_CLR_WIDTH                1u
#define BCTU_MSR_NDATA1_CLR(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_NDATA1_CLR_SHIFT))&BCTU_MSR_NDATA1_CLR_MASK)
#define BCTU_MSR_DATAOVR0_CLR_MASK               0x100000u
#define BCTU_MSR_DATAOVR0_CLR_SHIFT              20u
#define BCTU_MSR_DATAOVR0_CLR_WIDTH              1u
#define BCTU_MSR_DATAOVR0_CLR(x)                 (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_DATAOVR0_CLR_SHIFT))&BCTU_MSR_DATAOVR0_CLR_MASK)
#define BCTU_MSR_DATAOVR1_CLR_MASK               0x200000u
#define BCTU_MSR_DATAOVR1_CLR_SHIFT              21u
#define BCTU_MSR_DATAOVR1_CLR_WIDTH              1u
#define BCTU_MSR_DATAOVR1_CLR(x)                 (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_DATAOVR1_CLR_SHIFT))&BCTU_MSR_DATAOVR1_CLR_MASK)
#define BCTU_MSR_LIST0_Last_CLR_MASK             0x1000000u
#define BCTU_MSR_LIST0_Last_CLR_SHIFT            24u
#define BCTU_MSR_LIST0_Last_CLR_WIDTH            1u
#define BCTU_MSR_LIST0_Last_CLR(x)               (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_LIST0_Last_CLR_SHIFT))&BCTU_MSR_LIST0_Last_CLR_MASK)
#define BCTU_MSR_LIST1_Last_CLR_MASK             0x2000000u
#define BCTU_MSR_LIST1_Last_CLR_SHIFT            25u
#define BCTU_MSR_LIST1_Last_CLR_WIDTH            1u
#define BCTU_MSR_LIST1_Last_CLR(x)               (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_LIST1_Last_CLR_SHIFT))&BCTU_MSR_LIST1_Last_CLR_MASK)
#define BCTU_MSR_TRGF_CLR_MASK                   0x80000000u
#define BCTU_MSR_TRGF_CLR_SHIFT                  31u
#define BCTU_MSR_TRGF_CLR_WIDTH                  1u
#define BCTU_MSR_TRGF_CLR(x)                     (((uint32_t)(((uint32_t)(x))<<BCTU_MSR_TRGF_CLR_SHIFT))&BCTU_MSR_TRGF_CLR_MASK)
/* TRGCFG_ Bit Fields */
#define BCTU_TRGCFG__CHANNEL_VALUE_OR_LADDR_MASK 0x7Fu
#define BCTU_TRGCFG__CHANNEL_VALUE_OR_LADDR_SHIFT 0u
#define BCTU_TRGCFG__CHANNEL_VALUE_OR_LADDR_WIDTH 7u
#define BCTU_TRGCFG__CHANNEL_VALUE_OR_LADDR(x)   (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__CHANNEL_VALUE_OR_LADDR_SHIFT))&BCTU_TRGCFG__CHANNEL_VALUE_OR_LADDR_MASK)
#define BCTU_TRGCFG__ADC_SEL0_MASK               0x100u
#define BCTU_TRGCFG__ADC_SEL0_SHIFT              8u
#define BCTU_TRGCFG__ADC_SEL0_WIDTH              1u
#define BCTU_TRGCFG__ADC_SEL0(x)                 (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__ADC_SEL0_SHIFT))&BCTU_TRGCFG__ADC_SEL0_MASK)
#define BCTU_TRGCFG__ADC_SEL1_MASK               0x200u
#define BCTU_TRGCFG__ADC_SEL1_SHIFT              9u
#define BCTU_TRGCFG__ADC_SEL1_WIDTH              1u
#define BCTU_TRGCFG__ADC_SEL1(x)                 (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__ADC_SEL1_SHIFT))&BCTU_TRGCFG__ADC_SEL1_MASK)
#define BCTU_TRGCFG__TRS_MASK                    0x2000u
#define BCTU_TRGCFG__TRS_SHIFT                   13u
#define BCTU_TRGCFG__TRS_WIDTH                   1u
#define BCTU_TRGCFG__TRS(x)                      (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__TRS_SHIFT))&BCTU_TRGCFG__TRS_MASK)
#define BCTU_TRGCFG__TRG_FLAG_MASK               0x4000u
#define BCTU_TRGCFG__TRG_FLAG_SHIFT              14u
#define BCTU_TRGCFG__TRG_FLAG_WIDTH              1u
#define BCTU_TRGCFG__TRG_FLAG(x)                 (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__TRG_FLAG_SHIFT))&BCTU_TRGCFG__TRG_FLAG_MASK)
#define BCTU_TRGCFG__TRIGEN_MASK                 0x8000u
#define BCTU_TRGCFG__TRIGEN_SHIFT                15u
#define BCTU_TRGCFG__TRIGEN_WIDTH                1u
#define BCTU_TRGCFG__TRIGEN(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__TRIGEN_SHIFT))&BCTU_TRGCFG__TRIGEN_MASK)
#define BCTU_TRGCFG__LOOP_MASK                   0x80000000u
#define BCTU_TRGCFG__LOOP_SHIFT                  31u
#define BCTU_TRGCFG__LOOP_WIDTH                  1u
#define BCTU_TRGCFG__LOOP(x)                     (((uint32_t)(((uint32_t)(x))<<BCTU_TRGCFG__LOOP_SHIFT))&BCTU_TRGCFG__LOOP_MASK)
/* WRPROT Bit Fields */
#define BCTU_WRPROT_PROTEC_CODE_MASK             0xFu
#define BCTU_WRPROT_PROTEC_CODE_SHIFT            0u
#define BCTU_WRPROT_PROTEC_CODE_WIDTH            4u
#define BCTU_WRPROT_PROTEC_CODE(x)               (((uint32_t)(((uint32_t)(x))<<BCTU_WRPROT_PROTEC_CODE_SHIFT))&BCTU_WRPROT_PROTEC_CODE_MASK)
/* SFTRGR1 Bit Fields */
#define BCTU_SFTRGR1_SFTRG0_MASK                 0x1u
#define BCTU_SFTRGR1_SFTRG0_SHIFT                0u
#define BCTU_SFTRGR1_SFTRG0_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG0(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG0_SHIFT))&BCTU_SFTRGR1_SFTRG0_MASK)
#define BCTU_SFTRGR1_SFTRG1_MASK                 0x2u
#define BCTU_SFTRGR1_SFTRG1_SHIFT                1u
#define BCTU_SFTRGR1_SFTRG1_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG1(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG1_SHIFT))&BCTU_SFTRGR1_SFTRG1_MASK)
#define BCTU_SFTRGR1_SFTRG2_MASK                 0x4u
#define BCTU_SFTRGR1_SFTRG2_SHIFT                2u
#define BCTU_SFTRGR1_SFTRG2_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG2(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG2_SHIFT))&BCTU_SFTRGR1_SFTRG2_MASK)
#define BCTU_SFTRGR1_SFTRG3_MASK                 0x8u
#define BCTU_SFTRGR1_SFTRG3_SHIFT                3u
#define BCTU_SFTRGR1_SFTRG3_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG3(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG3_SHIFT))&BCTU_SFTRGR1_SFTRG3_MASK)
#define BCTU_SFTRGR1_SFTRG4_MASK                 0x10u
#define BCTU_SFTRGR1_SFTRG4_SHIFT                4u
#define BCTU_SFTRGR1_SFTRG4_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG4(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG4_SHIFT))&BCTU_SFTRGR1_SFTRG4_MASK)
#define BCTU_SFTRGR1_SFTRG5_MASK                 0x20u
#define BCTU_SFTRGR1_SFTRG5_SHIFT                5u
#define BCTU_SFTRGR1_SFTRG5_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG5(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG5_SHIFT))&BCTU_SFTRGR1_SFTRG5_MASK)
#define BCTU_SFTRGR1_SFTRG6_MASK                 0x40u
#define BCTU_SFTRGR1_SFTRG6_SHIFT                6u
#define BCTU_SFTRGR1_SFTRG6_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG6(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG6_SHIFT))&BCTU_SFTRGR1_SFTRG6_MASK)
#define BCTU_SFTRGR1_SFTRG7_MASK                 0x80u
#define BCTU_SFTRGR1_SFTRG7_SHIFT                7u
#define BCTU_SFTRGR1_SFTRG7_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG7(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG7_SHIFT))&BCTU_SFTRGR1_SFTRG7_MASK)
#define BCTU_SFTRGR1_SFTRG8_MASK                 0x100u
#define BCTU_SFTRGR1_SFTRG8_SHIFT                8u
#define BCTU_SFTRGR1_SFTRG8_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG8(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG8_SHIFT))&BCTU_SFTRGR1_SFTRG8_MASK)
#define BCTU_SFTRGR1_SFTRG9_MASK                 0x200u
#define BCTU_SFTRGR1_SFTRG9_SHIFT                9u
#define BCTU_SFTRGR1_SFTRG9_WIDTH                1u
#define BCTU_SFTRGR1_SFTRG9(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG9_SHIFT))&BCTU_SFTRGR1_SFTRG9_MASK)
#define BCTU_SFTRGR1_SFTRG10_MASK                0x400u
#define BCTU_SFTRGR1_SFTRG10_SHIFT               10u
#define BCTU_SFTRGR1_SFTRG10_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG10(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG10_SHIFT))&BCTU_SFTRGR1_SFTRG10_MASK)
#define BCTU_SFTRGR1_SFTRG11_MASK                0x800u
#define BCTU_SFTRGR1_SFTRG11_SHIFT               11u
#define BCTU_SFTRGR1_SFTRG11_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG11(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG11_SHIFT))&BCTU_SFTRGR1_SFTRG11_MASK)
#define BCTU_SFTRGR1_SFTRG12_MASK                0x1000u
#define BCTU_SFTRGR1_SFTRG12_SHIFT               12u
#define BCTU_SFTRGR1_SFTRG12_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG12(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG12_SHIFT))&BCTU_SFTRGR1_SFTRG12_MASK)
#define BCTU_SFTRGR1_SFTRG13_MASK                0x2000u
#define BCTU_SFTRGR1_SFTRG13_SHIFT               13u
#define BCTU_SFTRGR1_SFTRG13_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG13(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG13_SHIFT))&BCTU_SFTRGR1_SFTRG13_MASK)
#define BCTU_SFTRGR1_SFTRG14_MASK                0x4000u
#define BCTU_SFTRGR1_SFTRG14_SHIFT               14u
#define BCTU_SFTRGR1_SFTRG14_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG14(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG14_SHIFT))&BCTU_SFTRGR1_SFTRG14_MASK)
#define BCTU_SFTRGR1_SFTRG15_MASK                0x8000u
#define BCTU_SFTRGR1_SFTRG15_SHIFT               15u
#define BCTU_SFTRGR1_SFTRG15_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG15(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG15_SHIFT))&BCTU_SFTRGR1_SFTRG15_MASK)
#define BCTU_SFTRGR1_SFTRG16_MASK                0x10000u
#define BCTU_SFTRGR1_SFTRG16_SHIFT               16u
#define BCTU_SFTRGR1_SFTRG16_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG16(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG16_SHIFT))&BCTU_SFTRGR1_SFTRG16_MASK)
#define BCTU_SFTRGR1_SFTRG17_MASK                0x20000u
#define BCTU_SFTRGR1_SFTRG17_SHIFT               17u
#define BCTU_SFTRGR1_SFTRG17_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG17(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG17_SHIFT))&BCTU_SFTRGR1_SFTRG17_MASK)
#define BCTU_SFTRGR1_SFTRG18_MASK                0x40000u
#define BCTU_SFTRGR1_SFTRG18_SHIFT               18u
#define BCTU_SFTRGR1_SFTRG18_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG18(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG18_SHIFT))&BCTU_SFTRGR1_SFTRG18_MASK)
#define BCTU_SFTRGR1_SFTRG19_MASK                0x80000u
#define BCTU_SFTRGR1_SFTRG19_SHIFT               19u
#define BCTU_SFTRGR1_SFTRG19_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG19(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG19_SHIFT))&BCTU_SFTRGR1_SFTRG19_MASK)
#define BCTU_SFTRGR1_SFTRG20_MASK                0x100000u
#define BCTU_SFTRGR1_SFTRG20_SHIFT               20u
#define BCTU_SFTRGR1_SFTRG20_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG20(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG20_SHIFT))&BCTU_SFTRGR1_SFTRG20_MASK)
#define BCTU_SFTRGR1_SFTRG21_MASK                0x200000u
#define BCTU_SFTRGR1_SFTRG21_SHIFT               21u
#define BCTU_SFTRGR1_SFTRG21_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG21(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG21_SHIFT))&BCTU_SFTRGR1_SFTRG21_MASK)
#define BCTU_SFTRGR1_SFTRG22_MASK                0x400000u
#define BCTU_SFTRGR1_SFTRG22_SHIFT               22u
#define BCTU_SFTRGR1_SFTRG22_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG22(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG22_SHIFT))&BCTU_SFTRGR1_SFTRG22_MASK)
#define BCTU_SFTRGR1_SFTRG23_MASK                0x800000u
#define BCTU_SFTRGR1_SFTRG23_SHIFT               23u
#define BCTU_SFTRGR1_SFTRG23_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG23(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG23_SHIFT))&BCTU_SFTRGR1_SFTRG23_MASK)
#define BCTU_SFTRGR1_SFTRG24_MASK                0x1000000u
#define BCTU_SFTRGR1_SFTRG24_SHIFT               24u
#define BCTU_SFTRGR1_SFTRG24_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG24(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG24_SHIFT))&BCTU_SFTRGR1_SFTRG24_MASK)
#define BCTU_SFTRGR1_SFTRG25_MASK                0x2000000u
#define BCTU_SFTRGR1_SFTRG25_SHIFT               25u
#define BCTU_SFTRGR1_SFTRG25_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG25(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG25_SHIFT))&BCTU_SFTRGR1_SFTRG25_MASK)
#define BCTU_SFTRGR1_SFTRG26_MASK                0x4000000u
#define BCTU_SFTRGR1_SFTRG26_SHIFT               26u
#define BCTU_SFTRGR1_SFTRG26_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG26(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG26_SHIFT))&BCTU_SFTRGR1_SFTRG26_MASK)
#define BCTU_SFTRGR1_SFTRG27_MASK                0x8000000u
#define BCTU_SFTRGR1_SFTRG27_SHIFT               27u
#define BCTU_SFTRGR1_SFTRG27_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG27(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG27_SHIFT))&BCTU_SFTRGR1_SFTRG27_MASK)
#define BCTU_SFTRGR1_SFTRG28_MASK                0x10000000u
#define BCTU_SFTRGR1_SFTRG28_SHIFT               28u
#define BCTU_SFTRGR1_SFTRG28_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG28(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG28_SHIFT))&BCTU_SFTRGR1_SFTRG28_MASK)
#define BCTU_SFTRGR1_SFTRG29_MASK                0x20000000u
#define BCTU_SFTRGR1_SFTRG29_SHIFT               29u
#define BCTU_SFTRGR1_SFTRG29_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG29(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG29_SHIFT))&BCTU_SFTRGR1_SFTRG29_MASK)
#define BCTU_SFTRGR1_SFTRG30_MASK                0x40000000u
#define BCTU_SFTRGR1_SFTRG30_SHIFT               30u
#define BCTU_SFTRGR1_SFTRG30_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG30(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG30_SHIFT))&BCTU_SFTRGR1_SFTRG30_MASK)
#define BCTU_SFTRGR1_SFTRG31_MASK                0x80000000u
#define BCTU_SFTRGR1_SFTRG31_SHIFT               31u
#define BCTU_SFTRGR1_SFTRG31_WIDTH               1u
#define BCTU_SFTRGR1_SFTRG31(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR1_SFTRG31_SHIFT))&BCTU_SFTRGR1_SFTRG31_MASK)
/* SFTRGR2 Bit Fields */
#define BCTU_SFTRGR2_SFTRG32_MASK                0x1u
#define BCTU_SFTRGR2_SFTRG32_SHIFT               0u
#define BCTU_SFTRGR2_SFTRG32_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG32(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG32_SHIFT))&BCTU_SFTRGR2_SFTRG32_MASK)
#define BCTU_SFTRGR2_SFTRG33_MASK                0x2u
#define BCTU_SFTRGR2_SFTRG33_SHIFT               1u
#define BCTU_SFTRGR2_SFTRG33_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG33(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG33_SHIFT))&BCTU_SFTRGR2_SFTRG33_MASK)
#define BCTU_SFTRGR2_SFTRG34_MASK                0x4u
#define BCTU_SFTRGR2_SFTRG34_SHIFT               2u
#define BCTU_SFTRGR2_SFTRG34_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG34(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG34_SHIFT))&BCTU_SFTRGR2_SFTRG34_MASK)
#define BCTU_SFTRGR2_SFTRG35_MASK                0x8u
#define BCTU_SFTRGR2_SFTRG35_SHIFT               3u
#define BCTU_SFTRGR2_SFTRG35_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG35(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG35_SHIFT))&BCTU_SFTRGR2_SFTRG35_MASK)
#define BCTU_SFTRGR2_SFTRG36_MASK                0x10u
#define BCTU_SFTRGR2_SFTRG36_SHIFT               4u
#define BCTU_SFTRGR2_SFTRG36_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG36(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG36_SHIFT))&BCTU_SFTRGR2_SFTRG36_MASK)
#define BCTU_SFTRGR2_SFTRG37_MASK                0x20u
#define BCTU_SFTRGR2_SFTRG37_SHIFT               5u
#define BCTU_SFTRGR2_SFTRG37_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG37(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG37_SHIFT))&BCTU_SFTRGR2_SFTRG37_MASK)
#define BCTU_SFTRGR2_SFTRG38_MASK                0x40u
#define BCTU_SFTRGR2_SFTRG38_SHIFT               6u
#define BCTU_SFTRGR2_SFTRG38_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG38(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG38_SHIFT))&BCTU_SFTRGR2_SFTRG38_MASK)
#define BCTU_SFTRGR2_SFTRG39_MASK                0x80u
#define BCTU_SFTRGR2_SFTRG39_SHIFT               7u
#define BCTU_SFTRGR2_SFTRG39_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG39(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG39_SHIFT))&BCTU_SFTRGR2_SFTRG39_MASK)
#define BCTU_SFTRGR2_SFTRG40_MASK                0x100u
#define BCTU_SFTRGR2_SFTRG40_SHIFT               8u
#define BCTU_SFTRGR2_SFTRG40_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG40(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG40_SHIFT))&BCTU_SFTRGR2_SFTRG40_MASK)
#define BCTU_SFTRGR2_SFTRG41_MASK                0x200u
#define BCTU_SFTRGR2_SFTRG41_SHIFT               9u
#define BCTU_SFTRGR2_SFTRG41_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG41(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG41_SHIFT))&BCTU_SFTRGR2_SFTRG41_MASK)
#define BCTU_SFTRGR2_SFTRG42_MASK                0x400u
#define BCTU_SFTRGR2_SFTRG42_SHIFT               10u
#define BCTU_SFTRGR2_SFTRG42_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG42(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG42_SHIFT))&BCTU_SFTRGR2_SFTRG42_MASK)
#define BCTU_SFTRGR2_SFTRG43_MASK                0x800u
#define BCTU_SFTRGR2_SFTRG43_SHIFT               11u
#define BCTU_SFTRGR2_SFTRG43_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG43(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG43_SHIFT))&BCTU_SFTRGR2_SFTRG43_MASK)
#define BCTU_SFTRGR2_SFTRG44_MASK                0x1000u
#define BCTU_SFTRGR2_SFTRG44_SHIFT               12u
#define BCTU_SFTRGR2_SFTRG44_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG44(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG44_SHIFT))&BCTU_SFTRGR2_SFTRG44_MASK)
#define BCTU_SFTRGR2_SFTRG45_MASK                0x2000u
#define BCTU_SFTRGR2_SFTRG45_SHIFT               13u
#define BCTU_SFTRGR2_SFTRG45_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG45(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG45_SHIFT))&BCTU_SFTRGR2_SFTRG45_MASK)
#define BCTU_SFTRGR2_SFTRG46_MASK                0x4000u
#define BCTU_SFTRGR2_SFTRG46_SHIFT               14u
#define BCTU_SFTRGR2_SFTRG46_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG46(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG46_SHIFT))&BCTU_SFTRGR2_SFTRG46_MASK)
#define BCTU_SFTRGR2_SFTRG47_MASK                0x8000u
#define BCTU_SFTRGR2_SFTRG47_SHIFT               15u
#define BCTU_SFTRGR2_SFTRG47_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG47(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG47_SHIFT))&BCTU_SFTRGR2_SFTRG47_MASK)
#define BCTU_SFTRGR2_SFTRG48_MASK                0x10000u
#define BCTU_SFTRGR2_SFTRG48_SHIFT               16u
#define BCTU_SFTRGR2_SFTRG48_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG48(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG48_SHIFT))&BCTU_SFTRGR2_SFTRG48_MASK)
#define BCTU_SFTRGR2_SFTRG49_MASK                0x20000u
#define BCTU_SFTRGR2_SFTRG49_SHIFT               17u
#define BCTU_SFTRGR2_SFTRG49_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG49(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG49_SHIFT))&BCTU_SFTRGR2_SFTRG49_MASK)
#define BCTU_SFTRGR2_SFTRG50_MASK                0x40000u
#define BCTU_SFTRGR2_SFTRG50_SHIFT               18u
#define BCTU_SFTRGR2_SFTRG50_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG50(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG50_SHIFT))&BCTU_SFTRGR2_SFTRG50_MASK)
#define BCTU_SFTRGR2_SFTRG51_MASK                0x80000u
#define BCTU_SFTRGR2_SFTRG51_SHIFT               19u
#define BCTU_SFTRGR2_SFTRG51_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG51(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG51_SHIFT))&BCTU_SFTRGR2_SFTRG51_MASK)
#define BCTU_SFTRGR2_SFTRG52_MASK                0x100000u
#define BCTU_SFTRGR2_SFTRG52_SHIFT               20u
#define BCTU_SFTRGR2_SFTRG52_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG52(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG52_SHIFT))&BCTU_SFTRGR2_SFTRG52_MASK)
#define BCTU_SFTRGR2_SFTRG53_MASK                0x200000u
#define BCTU_SFTRGR2_SFTRG53_SHIFT               21u
#define BCTU_SFTRGR2_SFTRG53_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG53(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG53_SHIFT))&BCTU_SFTRGR2_SFTRG53_MASK)
#define BCTU_SFTRGR2_SFTRG54_MASK                0x400000u
#define BCTU_SFTRGR2_SFTRG54_SHIFT               22u
#define BCTU_SFTRGR2_SFTRG54_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG54(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG54_SHIFT))&BCTU_SFTRGR2_SFTRG54_MASK)
#define BCTU_SFTRGR2_SFTRG55_MASK                0x800000u
#define BCTU_SFTRGR2_SFTRG55_SHIFT               23u
#define BCTU_SFTRGR2_SFTRG55_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG55(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG55_SHIFT))&BCTU_SFTRGR2_SFTRG55_MASK)
#define BCTU_SFTRGR2_SFTRG56_MASK                0x1000000u
#define BCTU_SFTRGR2_SFTRG56_SHIFT               24u
#define BCTU_SFTRGR2_SFTRG56_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG56(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG56_SHIFT))&BCTU_SFTRGR2_SFTRG56_MASK)
#define BCTU_SFTRGR2_SFTRG57_MASK                0x2000000u
#define BCTU_SFTRGR2_SFTRG57_SHIFT               25u
#define BCTU_SFTRGR2_SFTRG57_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG57(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG57_SHIFT))&BCTU_SFTRGR2_SFTRG57_MASK)
#define BCTU_SFTRGR2_SFTRG58_MASK                0x4000000u
#define BCTU_SFTRGR2_SFTRG58_SHIFT               26u
#define BCTU_SFTRGR2_SFTRG58_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG58(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG58_SHIFT))&BCTU_SFTRGR2_SFTRG58_MASK)
#define BCTU_SFTRGR2_SFTRG59_MASK                0x8000000u
#define BCTU_SFTRGR2_SFTRG59_SHIFT               27u
#define BCTU_SFTRGR2_SFTRG59_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG59(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG59_SHIFT))&BCTU_SFTRGR2_SFTRG59_MASK)
#define BCTU_SFTRGR2_SFTRG60_MASK                0x10000000u
#define BCTU_SFTRGR2_SFTRG60_SHIFT               28u
#define BCTU_SFTRGR2_SFTRG60_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG60(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG60_SHIFT))&BCTU_SFTRGR2_SFTRG60_MASK)
#define BCTU_SFTRGR2_SFTRG61_MASK                0x20000000u
#define BCTU_SFTRGR2_SFTRG61_SHIFT               29u
#define BCTU_SFTRGR2_SFTRG61_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG61(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG61_SHIFT))&BCTU_SFTRGR2_SFTRG61_MASK)
#define BCTU_SFTRGR2_SFTRG62_MASK                0x40000000u
#define BCTU_SFTRGR2_SFTRG62_SHIFT               30u
#define BCTU_SFTRGR2_SFTRG62_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG62(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG62_SHIFT))&BCTU_SFTRGR2_SFTRG62_MASK)
#define BCTU_SFTRGR2_SFTRG63_MASK                0x80000000u
#define BCTU_SFTRGR2_SFTRG63_SHIFT               31u
#define BCTU_SFTRGR2_SFTRG63_WIDTH               1u
#define BCTU_SFTRGR2_SFTRG63(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR2_SFTRG63_SHIFT))&BCTU_SFTRGR2_SFTRG63_MASK)
/* SFTRGR3 Bit Fields */
#define BCTU_SFTRGR3_SFTRG64_MASK                0x1u
#define BCTU_SFTRGR3_SFTRG64_SHIFT               0u
#define BCTU_SFTRGR3_SFTRG64_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG64(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG64_SHIFT))&BCTU_SFTRGR3_SFTRG64_MASK)
#define BCTU_SFTRGR3_SFTRG65_MASK                0x2u
#define BCTU_SFTRGR3_SFTRG65_SHIFT               1u
#define BCTU_SFTRGR3_SFTRG65_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG65(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG65_SHIFT))&BCTU_SFTRGR3_SFTRG65_MASK)
#define BCTU_SFTRGR3_SFTRG66_MASK                0x4u
#define BCTU_SFTRGR3_SFTRG66_SHIFT               2u
#define BCTU_SFTRGR3_SFTRG66_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG66(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG66_SHIFT))&BCTU_SFTRGR3_SFTRG66_MASK)
#define BCTU_SFTRGR3_SFTRG67_MASK                0x8u
#define BCTU_SFTRGR3_SFTRG67_SHIFT               3u
#define BCTU_SFTRGR3_SFTRG67_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG67(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG67_SHIFT))&BCTU_SFTRGR3_SFTRG67_MASK)
#define BCTU_SFTRGR3_SFTRG68_MASK                0x10u
#define BCTU_SFTRGR3_SFTRG68_SHIFT               4u
#define BCTU_SFTRGR3_SFTRG68_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG68(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG68_SHIFT))&BCTU_SFTRGR3_SFTRG68_MASK)
#define BCTU_SFTRGR3_SFTRG69_MASK                0x20u
#define BCTU_SFTRGR3_SFTRG69_SHIFT               5u
#define BCTU_SFTRGR3_SFTRG69_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG69(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG69_SHIFT))&BCTU_SFTRGR3_SFTRG69_MASK)
#define BCTU_SFTRGR3_SFTRG70_MASK                0x40u
#define BCTU_SFTRGR3_SFTRG70_SHIFT               6u
#define BCTU_SFTRGR3_SFTRG70_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG70(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG70_SHIFT))&BCTU_SFTRGR3_SFTRG70_MASK)
#define BCTU_SFTRGR3_SFTRG71_MASK                0x80u
#define BCTU_SFTRGR3_SFTRG71_SHIFT               7u
#define BCTU_SFTRGR3_SFTRG71_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG71(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG71_SHIFT))&BCTU_SFTRGR3_SFTRG71_MASK)
#define BCTU_SFTRGR3_SFTRG72_MASK                0x100u
#define BCTU_SFTRGR3_SFTRG72_SHIFT               8u
#define BCTU_SFTRGR3_SFTRG72_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG72(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG72_SHIFT))&BCTU_SFTRGR3_SFTRG72_MASK)
#define BCTU_SFTRGR3_SFTRG73_MASK                0x200u
#define BCTU_SFTRGR3_SFTRG73_SHIFT               9u
#define BCTU_SFTRGR3_SFTRG73_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG73(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG73_SHIFT))&BCTU_SFTRGR3_SFTRG73_MASK)
#define BCTU_SFTRGR3_SFTRG74_MASK                0x400u
#define BCTU_SFTRGR3_SFTRG74_SHIFT               10u
#define BCTU_SFTRGR3_SFTRG74_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG74(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG74_SHIFT))&BCTU_SFTRGR3_SFTRG74_MASK)
#define BCTU_SFTRGR3_SFTRG75_MASK                0x800u
#define BCTU_SFTRGR3_SFTRG75_SHIFT               11u
#define BCTU_SFTRGR3_SFTRG75_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG75(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG75_SHIFT))&BCTU_SFTRGR3_SFTRG75_MASK)
#define BCTU_SFTRGR3_SFTRG76_MASK                0x1000u
#define BCTU_SFTRGR3_SFTRG76_SHIFT               12u
#define BCTU_SFTRGR3_SFTRG76_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG76(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG76_SHIFT))&BCTU_SFTRGR3_SFTRG76_MASK)
#define BCTU_SFTRGR3_SFTRG77_MASK                0x2000u
#define BCTU_SFTRGR3_SFTRG77_SHIFT               13u
#define BCTU_SFTRGR3_SFTRG77_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG77(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG77_SHIFT))&BCTU_SFTRGR3_SFTRG77_MASK)
#define BCTU_SFTRGR3_SFTRG78_MASK                0x4000u
#define BCTU_SFTRGR3_SFTRG78_SHIFT               14u
#define BCTU_SFTRGR3_SFTRG78_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG78(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG78_SHIFT))&BCTU_SFTRGR3_SFTRG78_MASK)
#define BCTU_SFTRGR3_SFTRG79_MASK                0x8000u
#define BCTU_SFTRGR3_SFTRG79_SHIFT               15u
#define BCTU_SFTRGR3_SFTRG79_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG79(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG79_SHIFT))&BCTU_SFTRGR3_SFTRG79_MASK)
#define BCTU_SFTRGR3_SFTRG80_MASK                0x10000u
#define BCTU_SFTRGR3_SFTRG80_SHIFT               16u
#define BCTU_SFTRGR3_SFTRG80_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG80(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG80_SHIFT))&BCTU_SFTRGR3_SFTRG80_MASK)
#define BCTU_SFTRGR3_SFTRG81_MASK                0x20000u
#define BCTU_SFTRGR3_SFTRG81_SHIFT               17u
#define BCTU_SFTRGR3_SFTRG81_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG81(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG81_SHIFT))&BCTU_SFTRGR3_SFTRG81_MASK)
#define BCTU_SFTRGR3_SFTRG82_MASK                0x40000u
#define BCTU_SFTRGR3_SFTRG82_SHIFT               18u
#define BCTU_SFTRGR3_SFTRG82_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG82(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG82_SHIFT))&BCTU_SFTRGR3_SFTRG82_MASK)
#define BCTU_SFTRGR3_SFTRG83_MASK                0x80000u
#define BCTU_SFTRGR3_SFTRG83_SHIFT               19u
#define BCTU_SFTRGR3_SFTRG83_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG83(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG83_SHIFT))&BCTU_SFTRGR3_SFTRG83_MASK)
#define BCTU_SFTRGR3_SFTRG84_MASK                0x100000u
#define BCTU_SFTRGR3_SFTRG84_SHIFT               20u
#define BCTU_SFTRGR3_SFTRG84_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG84(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG84_SHIFT))&BCTU_SFTRGR3_SFTRG84_MASK)
#define BCTU_SFTRGR3_SFTRG85_MASK                0x200000u
#define BCTU_SFTRGR3_SFTRG85_SHIFT               21u
#define BCTU_SFTRGR3_SFTRG85_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG85(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG85_SHIFT))&BCTU_SFTRGR3_SFTRG85_MASK)
#define BCTU_SFTRGR3_SFTRG86_MASK                0x400000u
#define BCTU_SFTRGR3_SFTRG86_SHIFT               22u
#define BCTU_SFTRGR3_SFTRG86_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG86(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG86_SHIFT))&BCTU_SFTRGR3_SFTRG86_MASK)
#define BCTU_SFTRGR3_SFTRG87_MASK                0x800000u
#define BCTU_SFTRGR3_SFTRG87_SHIFT               23u
#define BCTU_SFTRGR3_SFTRG87_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG87(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG87_SHIFT))&BCTU_SFTRGR3_SFTRG87_MASK)
#define BCTU_SFTRGR3_SFTRG88_MASK                0x1000000u
#define BCTU_SFTRGR3_SFTRG88_SHIFT               24u
#define BCTU_SFTRGR3_SFTRG88_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG88(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG88_SHIFT))&BCTU_SFTRGR3_SFTRG88_MASK)
#define BCTU_SFTRGR3_SFTRG89_MASK                0x2000000u
#define BCTU_SFTRGR3_SFTRG89_SHIFT               25u
#define BCTU_SFTRGR3_SFTRG89_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG89(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG89_SHIFT))&BCTU_SFTRGR3_SFTRG89_MASK)
#define BCTU_SFTRGR3_SFTRG90_MASK                0x4000000u
#define BCTU_SFTRGR3_SFTRG90_SHIFT               26u
#define BCTU_SFTRGR3_SFTRG90_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG90(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG90_SHIFT))&BCTU_SFTRGR3_SFTRG90_MASK)
#define BCTU_SFTRGR3_SFTRG91_MASK                0x8000000u
#define BCTU_SFTRGR3_SFTRG91_SHIFT               27u
#define BCTU_SFTRGR3_SFTRG91_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG91(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG91_SHIFT))&BCTU_SFTRGR3_SFTRG91_MASK)
#define BCTU_SFTRGR3_SFTRG92_MASK                0x10000000u
#define BCTU_SFTRGR3_SFTRG92_SHIFT               28u
#define BCTU_SFTRGR3_SFTRG92_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG92(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG92_SHIFT))&BCTU_SFTRGR3_SFTRG92_MASK)
#define BCTU_SFTRGR3_SFTRG93_MASK                0x20000000u
#define BCTU_SFTRGR3_SFTRG93_SHIFT               29u
#define BCTU_SFTRGR3_SFTRG93_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG93(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG93_SHIFT))&BCTU_SFTRGR3_SFTRG93_MASK)
#define BCTU_SFTRGR3_SFTRG94_MASK                0x40000000u
#define BCTU_SFTRGR3_SFTRG94_SHIFT               30u
#define BCTU_SFTRGR3_SFTRG94_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG94(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG94_SHIFT))&BCTU_SFTRGR3_SFTRG94_MASK)
#define BCTU_SFTRGR3_SFTRG95_MASK                0x80000000u
#define BCTU_SFTRGR3_SFTRG95_SHIFT               31u
#define BCTU_SFTRGR3_SFTRG95_WIDTH               1u
#define BCTU_SFTRGR3_SFTRG95(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_SFTRGR3_SFTRG95_SHIFT))&BCTU_SFTRGR3_SFTRG95_MASK)
/* ADC0DR Bit Fields */
#define BCTU_ADC0DR_ADC_DATA_MASK                0xFFFu
#define BCTU_ADC0DR_ADC_DATA_SHIFT               0u
#define BCTU_ADC0DR_ADC_DATA_WIDTH               12u
#define BCTU_ADC0DR_ADC_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_ADC0DR_ADC_DATA_SHIFT))&BCTU_ADC0DR_ADC_DATA_MASK)
#define BCTU_ADC0DR_LAST_MASK                    0x4000u
#define BCTU_ADC0DR_LAST_SHIFT                   14u
#define BCTU_ADC0DR_LAST_WIDTH                   1u
#define BCTU_ADC0DR_LAST(x)                      (((uint32_t)(((uint32_t)(x))<<BCTU_ADC0DR_LAST_SHIFT))&BCTU_ADC0DR_LAST_MASK)
#define BCTU_ADC0DR_LIST_MASK                    0x8000u
#define BCTU_ADC0DR_LIST_SHIFT                   15u
#define BCTU_ADC0DR_LIST_WIDTH                   1u
#define BCTU_ADC0DR_LIST(x)                      (((uint32_t)(((uint32_t)(x))<<BCTU_ADC0DR_LIST_SHIFT))&BCTU_ADC0DR_LIST_MASK)
#define BCTU_ADC0DR_CH_MASK                      0xFF0000u
#define BCTU_ADC0DR_CH_SHIFT                     16u
#define BCTU_ADC0DR_CH_WIDTH                     8u
#define BCTU_ADC0DR_CH(x)                        (((uint32_t)(((uint32_t)(x))<<BCTU_ADC0DR_CH_SHIFT))&BCTU_ADC0DR_CH_MASK)
#define BCTU_ADC0DR_TRG_SRC_MASK                 0xFF000000u
#define BCTU_ADC0DR_TRG_SRC_SHIFT                24u
#define BCTU_ADC0DR_TRG_SRC_WIDTH                8u
#define BCTU_ADC0DR_TRG_SRC(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_ADC0DR_TRG_SRC_SHIFT))&BCTU_ADC0DR_TRG_SRC_MASK)
/* ADC1DR Bit Fields */
#define BCTU_ADC1DR_ADC_DATA_MASK                0xFFFu
#define BCTU_ADC1DR_ADC_DATA_SHIFT               0u
#define BCTU_ADC1DR_ADC_DATA_WIDTH               12u
#define BCTU_ADC1DR_ADC_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_ADC1DR_ADC_DATA_SHIFT))&BCTU_ADC1DR_ADC_DATA_MASK)
#define BCTU_ADC1DR_LAST_MASK                    0x4000u
#define BCTU_ADC1DR_LAST_SHIFT                   14u
#define BCTU_ADC1DR_LAST_WIDTH                   1u
#define BCTU_ADC1DR_LAST(x)                      (((uint32_t)(((uint32_t)(x))<<BCTU_ADC1DR_LAST_SHIFT))&BCTU_ADC1DR_LAST_MASK)
#define BCTU_ADC1DR_LIST_MASK                    0x8000u
#define BCTU_ADC1DR_LIST_SHIFT                   15u
#define BCTU_ADC1DR_LIST_WIDTH                   1u
#define BCTU_ADC1DR_LIST(x)                      (((uint32_t)(((uint32_t)(x))<<BCTU_ADC1DR_LIST_SHIFT))&BCTU_ADC1DR_LIST_MASK)
#define BCTU_ADC1DR_CH_MASK                      0xFF0000u
#define BCTU_ADC1DR_CH_SHIFT                     16u
#define BCTU_ADC1DR_CH_WIDTH                     8u
#define BCTU_ADC1DR_CH(x)                        (((uint32_t)(((uint32_t)(x))<<BCTU_ADC1DR_CH_SHIFT))&BCTU_ADC1DR_CH_MASK)
#define BCTU_ADC1DR_TRG_SRC_MASK                 0xFF000000u
#define BCTU_ADC1DR_TRG_SRC_SHIFT                24u
#define BCTU_ADC1DR_TRG_SRC_WIDTH                8u
#define BCTU_ADC1DR_TRG_SRC(x)                   (((uint32_t)(((uint32_t)(x))<<BCTU_ADC1DR_TRG_SRC_SHIFT))&BCTU_ADC1DR_TRG_SRC_MASK)
/* LISTSTAR Bit Fields */
#define BCTU_LISTSTAR_LISTSZ_MASK                0xFFu
#define BCTU_LISTSTAR_LISTSZ_SHIFT               0u
#define BCTU_LISTSTAR_LISTSZ_WIDTH               8u
#define BCTU_LISTSTAR_LISTSZ(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_LISTSTAR_LISTSZ_SHIFT))&BCTU_LISTSTAR_LISTSZ_MASK)
/* LISTCHR_ Bit Fields */
#define BCTU_LISTCHR__ADC_CHL_y_plus_1_MASK      0x7Fu
#define BCTU_LISTCHR__ADC_CHL_y_plus_1_SHIFT     0u
#define BCTU_LISTCHR__ADC_CHL_y_plus_1_WIDTH     7u
#define BCTU_LISTCHR__ADC_CHL_y_plus_1(x)        (((uint32_t)(((uint32_t)(x))<<BCTU_LISTCHR__ADC_CHL_y_plus_1_SHIFT))&BCTU_LISTCHR__ADC_CHL_y_plus_1_MASK)
#define BCTU_LISTCHR__LAST_y_plus_1_MASK         0x8000u
#define BCTU_LISTCHR__LAST_y_plus_1_SHIFT        15u
#define BCTU_LISTCHR__LAST_y_plus_1_WIDTH        1u
#define BCTU_LISTCHR__LAST_y_plus_1(x)           (((uint32_t)(((uint32_t)(x))<<BCTU_LISTCHR__LAST_y_plus_1_SHIFT))&BCTU_LISTCHR__LAST_y_plus_1_MASK)
#define BCTU_LISTCHR__ADC_CH_y_MASK              0x7F0000u
#define BCTU_LISTCHR__ADC_CH_y_SHIFT             16u
#define BCTU_LISTCHR__ADC_CH_y_WIDTH             7u
#define BCTU_LISTCHR__ADC_CH_y(x)                (((uint32_t)(((uint32_t)(x))<<BCTU_LISTCHR__ADC_CH_y_SHIFT))&BCTU_LISTCHR__ADC_CH_y_MASK)
#define BCTU_LISTCHR__LAST_y_MASK                0x80000000u
#define BCTU_LISTCHR__LAST_y_SHIFT               31u
#define BCTU_LISTCHR__LAST_y_WIDTH               1u
#define BCTU_LISTCHR__LAST_y(x)                  (((uint32_t)(((uint32_t)(x))<<BCTU_LISTCHR__LAST_y_SHIFT))&BCTU_LISTCHR__LAST_y_MASK)

/*!
 * @}
 */ /* end of group BCTU_Register_Masks */


/*!
 * @}
 */ /* end of group BCTU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- C55FMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup C55FMC_Peripheral_Access_Layer C55FMC Peripheral Access Layer
 * @{
 */


/** C55FMC - Size of Registers Arrays */
#define C55FMC_UM_COUNT                          9u

/** C55FMC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __I  uint32_t MCRE;                              /**< Extended Module Configuration Register, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __IO uint32_t LOCK0;                             /**< Lock 0 register, offset: 0x10 */
  __IO uint32_t LOCK1;                             /**< Lock 1 register, offset: 0x14 */
  __IO uint32_t LOCK2;                             /**< Lock 2 register, offset: 0x18 */
  __IO uint32_t LOCK3;                             /**< Lock 3 register, offset: 0x1C */
       uint8_t RESERVED_2[24];
  __IO uint32_t SEL0;                              /**< Select 0 register, offset: 0x38 */
  __IO uint32_t SEL1;                              /**< Select 1 register, offset: 0x3C */
  __IO uint32_t SEL2;                              /**< Select 2 register, offset: 0x40 */
  __IO uint32_t SEL3;                              /**< Select 3 register, offset: 0x44 */
       uint8_t RESERVED_3[8];
  __I  uint32_t ADR;                               /**< Address register, offset: 0x50 */
  __IO uint32_t UT0;                               /**< UTest 0 register, offset: 0x54 */
  __IO uint32_t UM[C55FMC_UM_COUNT];               /**< UMISR register, array offset: 0x58, array step: 0x4 */
  __IO uint32_t UM9;                               /**< UMISR register, offset: 0x7C */
  __I  uint32_t OPP0;                              /**< Over-Program Protection 0 register, offset: 0x80 */
  __I  uint32_t OPP1;                              /**< Over-Program Protection 1 register, offset: 0x84 */
  __I  uint32_t OPP2;                              /**< Over-Program Protection 2 register, offset: 0x88 */
  __I  uint32_t OPP3;                              /**< Over-Program Protection 3 register, offset: 0x8C */
  __IO uint32_t TMD;                               /**< Test Mode Disable Password Check register, offset: 0x90 */
} C55FMC_Type, *C55FMC_MemMapPtr;

 /** Number of instances of the C55FMC module. */
#define C55FMC_INSTANCE_COUNT                    (1u)


/* C55FMC - Peripheral instance base addresses */
/** Peripheral C55FMC base address */
#define C55FMC_BASE                              (0xFFFE0000u)
/** Peripheral C55FMC base pointer */
#define C55FMC                                   ((C55FMC_Type *)C55FMC_BASE)
/** Array initializer of C55FMC peripheral base addresses */
#define C55FMC_BASE_ADDRS                        { C55FMC_BASE }
/** Array initializer of C55FMC peripheral base pointers */
#define C55FMC_BASE_PTRS                         { C55FMC }

/* ----------------------------------------------------------------------------
   -- C55FMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup C55FMC_Register_Masks C55FMC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define C55FMC_MCR_EHV_MASK                      0x1u
#define C55FMC_MCR_EHV_SHIFT                     0u
#define C55FMC_MCR_EHV_WIDTH                     1u
#define C55FMC_MCR_EHV(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_EHV_SHIFT))&C55FMC_MCR_EHV_MASK)
#define C55FMC_MCR_ESUS_MASK                     0x2u
#define C55FMC_MCR_ESUS_SHIFT                    1u
#define C55FMC_MCR_ESUS_WIDTH                    1u
#define C55FMC_MCR_ESUS(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_ESUS_SHIFT))&C55FMC_MCR_ESUS_MASK)
#define C55FMC_MCR_ERS_MASK                      0x4u
#define C55FMC_MCR_ERS_SHIFT                     2u
#define C55FMC_MCR_ERS_WIDTH                     1u
#define C55FMC_MCR_ERS(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_ERS_SHIFT))&C55FMC_MCR_ERS_MASK)
#define C55FMC_MCR_PSUS_MASK                     0x8u
#define C55FMC_MCR_PSUS_SHIFT                    3u
#define C55FMC_MCR_PSUS_WIDTH                    1u
#define C55FMC_MCR_PSUS(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PSUS_SHIFT))&C55FMC_MCR_PSUS_MASK)
#define C55FMC_MCR_PGM_MASK                      0x10u
#define C55FMC_MCR_PGM_SHIFT                     4u
#define C55FMC_MCR_PGM_WIDTH                     1u
#define C55FMC_MCR_PGM(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PGM_SHIFT))&C55FMC_MCR_PGM_MASK)
#define C55FMC_MCR_PECIE_MASK                    0x100u
#define C55FMC_MCR_PECIE_SHIFT                   8u
#define C55FMC_MCR_PECIE_WIDTH                   1u
#define C55FMC_MCR_PECIE(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PECIE_SHIFT))&C55FMC_MCR_PECIE_MASK)
#define C55FMC_MCR_PEG_MASK                      0x200u
#define C55FMC_MCR_PEG_SHIFT                     9u
#define C55FMC_MCR_PEG_WIDTH                     1u
#define C55FMC_MCR_PEG(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PEG_SHIFT))&C55FMC_MCR_PEG_MASK)
#define C55FMC_MCR_DONE_MASK                     0x400u
#define C55FMC_MCR_DONE_SHIFT                    10u
#define C55FMC_MCR_DONE_WIDTH                    1u
#define C55FMC_MCR_DONE(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_DONE_SHIFT))&C55FMC_MCR_DONE_MASK)
#define C55FMC_MCR_PEAS_MASK                     0x800u
#define C55FMC_MCR_PEAS_SHIFT                    11u
#define C55FMC_MCR_PEAS_WIDTH                    1u
#define C55FMC_MCR_PEAS(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_PEAS_SHIFT))&C55FMC_MCR_PEAS_MASK)
#define C55FMC_MCR_SBC_MASK                      0x2000u
#define C55FMC_MCR_SBC_SHIFT                     13u
#define C55FMC_MCR_SBC_WIDTH                     1u
#define C55FMC_MCR_SBC(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_SBC_SHIFT))&C55FMC_MCR_SBC_MASK)
#define C55FMC_MCR_RWE_MASK                      0x4000u
#define C55FMC_MCR_RWE_SHIFT                     14u
#define C55FMC_MCR_RWE_WIDTH                     1u
#define C55FMC_MCR_RWE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_RWE_SHIFT))&C55FMC_MCR_RWE_MASK)
#define C55FMC_MCR_EER_MASK                      0x8000u
#define C55FMC_MCR_EER_SHIFT                     15u
#define C55FMC_MCR_EER_WIDTH                     1u
#define C55FMC_MCR_EER(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_EER_SHIFT))&C55FMC_MCR_EER_MASK)
#define C55FMC_MCR_EEE_MASK                      0x10000000u
#define C55FMC_MCR_EEE_SHIFT                     28u
#define C55FMC_MCR_EEE_WIDTH                     1u
#define C55FMC_MCR_EEE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_EEE_SHIFT))&C55FMC_MCR_EEE_MASK)
#define C55FMC_MCR_AEE_MASK                      0x20000000u
#define C55FMC_MCR_AEE_SHIFT                     29u
#define C55FMC_MCR_AEE_WIDTH                     1u
#define C55FMC_MCR_AEE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_AEE_SHIFT))&C55FMC_MCR_AEE_MASK)
#define C55FMC_MCR_RRE_MASK                      0x40000000u
#define C55FMC_MCR_RRE_SHIFT                     30u
#define C55FMC_MCR_RRE_WIDTH                     1u
#define C55FMC_MCR_RRE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_RRE_SHIFT))&C55FMC_MCR_RRE_MASK)
#define C55FMC_MCR_RVE_MASK                      0x80000000u
#define C55FMC_MCR_RVE_SHIFT                     31u
#define C55FMC_MCR_RVE_WIDTH                     1u
#define C55FMC_MCR_RVE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCR_RVE_SHIFT))&C55FMC_MCR_RVE_MASK)
/* MCRE Bit Fields */
#define C55FMC_MCRE_n16Kl_MASK                   0x7u
#define C55FMC_MCRE_n16Kl_SHIFT                  0u
#define C55FMC_MCRE_n16Kl_WIDTH                  3u
#define C55FMC_MCRE_n16Kl(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n16Kl_SHIFT))&C55FMC_MCRE_n16Kl_MASK)
#define C55FMC_MCRE_n32Kl_MASK                   0x18u
#define C55FMC_MCRE_n32Kl_SHIFT                  3u
#define C55FMC_MCRE_n32Kl_WIDTH                  2u
#define C55FMC_MCRE_n32Kl(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n32Kl_SHIFT))&C55FMC_MCRE_n32Kl_MASK)
#define C55FMC_MCRE_n64Kl_MASK                   0xE0u
#define C55FMC_MCRE_n64Kl_SHIFT                  5u
#define C55FMC_MCRE_n64Kl_WIDTH                  3u
#define C55FMC_MCRE_n64Kl(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n64Kl_SHIFT))&C55FMC_MCRE_n64Kl_MASK)
#define C55FMC_MCRE_n16Km_MASK                   0x700u
#define C55FMC_MCRE_n16Km_SHIFT                  8u
#define C55FMC_MCRE_n16Km_WIDTH                  3u
#define C55FMC_MCRE_n16Km(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n16Km_SHIFT))&C55FMC_MCRE_n16Km_MASK)
#define C55FMC_MCRE_n32Km_MASK                   0x1800u
#define C55FMC_MCRE_n32Km_SHIFT                  11u
#define C55FMC_MCRE_n32Km_WIDTH                  2u
#define C55FMC_MCRE_n32Km(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n32Km_SHIFT))&C55FMC_MCRE_n32Km_MASK)
#define C55FMC_MCRE_n64Km_MASK                   0xE000u
#define C55FMC_MCRE_n64Km_SHIFT                  13u
#define C55FMC_MCRE_n64Km_WIDTH                  3u
#define C55FMC_MCRE_n64Km(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n64Km_SHIFT))&C55FMC_MCRE_n64Km_MASK)
#define C55FMC_MCRE_n16Kh_MASK                   0x70000u
#define C55FMC_MCRE_n16Kh_SHIFT                  16u
#define C55FMC_MCRE_n16Kh_WIDTH                  3u
#define C55FMC_MCRE_n16Kh(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n16Kh_SHIFT))&C55FMC_MCRE_n16Kh_MASK)
#define C55FMC_MCRE_n32Kh_MASK                   0x180000u
#define C55FMC_MCRE_n32Kh_SHIFT                  19u
#define C55FMC_MCRE_n32Kh_WIDTH                  2u
#define C55FMC_MCRE_n32Kh(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n32Kh_SHIFT))&C55FMC_MCRE_n32Kh_MASK)
#define C55FMC_MCRE_n64Kh_MASK                   0xE00000u
#define C55FMC_MCRE_n64Kh_SHIFT                  21u
#define C55FMC_MCRE_n64Kh_WIDTH                  3u
#define C55FMC_MCRE_n64Kh(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n64Kh_SHIFT))&C55FMC_MCRE_n64Kh_MASK)
#define C55FMC_MCRE_n256K_MASK                   0x1F000000u
#define C55FMC_MCRE_n256K_SHIFT                  24u
#define C55FMC_MCRE_n256K_WIDTH                  5u
#define C55FMC_MCRE_n256K(x)                     (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_n256K_SHIFT))&C55FMC_MCRE_n256K_MASK)
#define C55FMC_MCRE_HT_MASK                      0x80000000u
#define C55FMC_MCRE_HT_SHIFT                     31u
#define C55FMC_MCRE_HT_WIDTH                     1u
#define C55FMC_MCRE_HT(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_MCRE_HT_SHIFT))&C55FMC_MCRE_HT_MASK)
/* LOCK0 Bit Fields */
#define C55FMC_LOCK0_MIDLOCK_MASK                0xFFFFu
#define C55FMC_LOCK0_MIDLOCK_SHIFT               0u
#define C55FMC_LOCK0_MIDLOCK_WIDTH               16u
#define C55FMC_LOCK0_MIDLOCK(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK0_MIDLOCK_SHIFT))&C55FMC_LOCK0_MIDLOCK_MASK)
#define C55FMC_LOCK0_LOWLOCK_MASK                0x3FFF0000u
#define C55FMC_LOCK0_LOWLOCK_SHIFT               16u
#define C55FMC_LOCK0_LOWLOCK_WIDTH               14u
#define C55FMC_LOCK0_LOWLOCK(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK0_LOWLOCK_SHIFT))&C55FMC_LOCK0_LOWLOCK_MASK)
#define C55FMC_LOCK0_TSLOCK_MASK                 0x80000000u
#define C55FMC_LOCK0_TSLOCK_SHIFT                31u
#define C55FMC_LOCK0_TSLOCK_WIDTH                1u
#define C55FMC_LOCK0_TSLOCK(x)                   (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK0_TSLOCK_SHIFT))&C55FMC_LOCK0_TSLOCK_MASK)
/* LOCK1 Bit Fields */
#define C55FMC_LOCK1_HIGHLOCK_MASK               0xFFFFu
#define C55FMC_LOCK1_HIGHLOCK_SHIFT              0u
#define C55FMC_LOCK1_HIGHLOCK_WIDTH              16u
#define C55FMC_LOCK1_HIGHLOCK(x)                 (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK1_HIGHLOCK_SHIFT))&C55FMC_LOCK1_HIGHLOCK_MASK)
/* LOCK2 Bit Fields */
#define C55FMC_LOCK2_A256KLOCK_MASK              0xFFFFFFFFu
#define C55FMC_LOCK2_A256KLOCK_SHIFT             0u
#define C55FMC_LOCK2_A256KLOCK_WIDTH             32u
#define C55FMC_LOCK2_A256KLOCK(x)                (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK2_A256KLOCK_SHIFT))&C55FMC_LOCK2_A256KLOCK_MASK)
/* LOCK3 Bit Fields */
#define C55FMC_LOCK3_A256KLOCK_MASK              0xFFFFu
#define C55FMC_LOCK3_A256KLOCK_SHIFT             0u
#define C55FMC_LOCK3_A256KLOCK_WIDTH             16u
#define C55FMC_LOCK3_A256KLOCK(x)                (((uint32_t)(((uint32_t)(x))<<C55FMC_LOCK3_A256KLOCK_SHIFT))&C55FMC_LOCK3_A256KLOCK_MASK)
/* SEL0 Bit Fields */
#define C55FMC_SEL0_MIDSEL_MASK                  0xFFFFu
#define C55FMC_SEL0_MIDSEL_SHIFT                 0u
#define C55FMC_SEL0_MIDSEL_WIDTH                 16u
#define C55FMC_SEL0_MIDSEL(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL0_MIDSEL_SHIFT))&C55FMC_SEL0_MIDSEL_MASK)
#define C55FMC_SEL0_LOWSEL_MASK                  0x3FFF0000u
#define C55FMC_SEL0_LOWSEL_SHIFT                 16u
#define C55FMC_SEL0_LOWSEL_WIDTH                 14u
#define C55FMC_SEL0_LOWSEL(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL0_LOWSEL_SHIFT))&C55FMC_SEL0_LOWSEL_MASK)
/* SEL1 Bit Fields */
#define C55FMC_SEL1_HIGHSEL_MASK                 0xFFFFu
#define C55FMC_SEL1_HIGHSEL_SHIFT                0u
#define C55FMC_SEL1_HIGHSEL_WIDTH                16u
#define C55FMC_SEL1_HIGHSEL(x)                   (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL1_HIGHSEL_SHIFT))&C55FMC_SEL1_HIGHSEL_MASK)
/* SEL2 Bit Fields */
#define C55FMC_SEL2_A256KSEL_MASK                0xFFFFFFFFu
#define C55FMC_SEL2_A256KSEL_SHIFT               0u
#define C55FMC_SEL2_A256KSEL_WIDTH               32u
#define C55FMC_SEL2_A256KSEL(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL2_A256KSEL_SHIFT))&C55FMC_SEL2_A256KSEL_MASK)
/* SEL3 Bit Fields */
#define C55FMC_SEL3_A256KSEL_MASK                0xFFFFu
#define C55FMC_SEL3_A256KSEL_SHIFT               0u
#define C55FMC_SEL3_A256KSEL_WIDTH               16u
#define C55FMC_SEL3_A256KSEL(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_SEL3_A256KSEL_SHIFT))&C55FMC_SEL3_A256KSEL_MASK)
/* ADR Bit Fields */
#define C55FMC_ADR_ADDR_MASK                     0xFFFFF8u
#define C55FMC_ADR_ADDR_SHIFT                    3u
#define C55FMC_ADR_ADDR_WIDTH                    21u
#define C55FMC_ADR_ADDR(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_ADDR_SHIFT))&C55FMC_ADR_ADDR_MASK)
#define C55FMC_ADR_a16k_MASK                     0x1000000u
#define C55FMC_ADR_a16k_SHIFT                    24u
#define C55FMC_ADR_a16k_WIDTH                    1u
#define C55FMC_ADR_a16k(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a16k_SHIFT))&C55FMC_ADR_a16k_MASK)
#define C55FMC_ADR_a32k_MASK                     0x2000000u
#define C55FMC_ADR_a32k_SHIFT                    25u
#define C55FMC_ADR_a32k_WIDTH                    1u
#define C55FMC_ADR_a32k(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a32k_SHIFT))&C55FMC_ADR_a32k_MASK)
#define C55FMC_ADR_a64k_MASK                     0x4000000u
#define C55FMC_ADR_a64k_SHIFT                    26u
#define C55FMC_ADR_a64k_WIDTH                    1u
#define C55FMC_ADR_a64k(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a64k_SHIFT))&C55FMC_ADR_a64k_MASK)
#define C55FMC_ADR_a256k_MASK                    0x8000000u
#define C55FMC_ADR_a256k_SHIFT                   27u
#define C55FMC_ADR_a256k_WIDTH                   1u
#define C55FMC_ADR_a256k(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_a256k_SHIFT))&C55FMC_ADR_a256k_MASK)
#define C55FMC_ADR_aL_MASK                       0x10000000u
#define C55FMC_ADR_aL_SHIFT                      28u
#define C55FMC_ADR_aL_WIDTH                      1u
#define C55FMC_ADR_aL(x)                         (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_aL_SHIFT))&C55FMC_ADR_aL_MASK)
#define C55FMC_ADR_aM_MASK                       0x20000000u
#define C55FMC_ADR_aM_SHIFT                      29u
#define C55FMC_ADR_aM_WIDTH                      1u
#define C55FMC_ADR_aM(x)                         (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_aM_SHIFT))&C55FMC_ADR_aM_MASK)
#define C55FMC_ADR_aH_MASK                       0x40000000u
#define C55FMC_ADR_aH_SHIFT                      30u
#define C55FMC_ADR_aH_WIDTH                      1u
#define C55FMC_ADR_aH(x)                         (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_aH_SHIFT))&C55FMC_ADR_aH_MASK)
#define C55FMC_ADR_SAD_MASK                      0x80000000u
#define C55FMC_ADR_SAD_SHIFT                     31u
#define C55FMC_ADR_SAD_WIDTH                     1u
#define C55FMC_ADR_SAD(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_ADR_SAD_SHIFT))&C55FMC_ADR_SAD_MASK)
/* UT0 Bit Fields */
#define C55FMC_UT0_AID_MASK                      0x1u
#define C55FMC_UT0_AID_SHIFT                     0u
#define C55FMC_UT0_AID_WIDTH                     1u
#define C55FMC_UT0_AID(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AID_SHIFT))&C55FMC_UT0_AID_MASK)
#define C55FMC_UT0_AIE_MASK                      0x2u
#define C55FMC_UT0_AIE_SHIFT                     1u
#define C55FMC_UT0_AIE_WIDTH                     1u
#define C55FMC_UT0_AIE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AIE_SHIFT))&C55FMC_UT0_AIE_MASK)
#define C55FMC_UT0_AIS_MASK                      0x4u
#define C55FMC_UT0_AIS_SHIFT                     2u
#define C55FMC_UT0_AIS_WIDTH                     1u
#define C55FMC_UT0_AIS(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AIS_SHIFT))&C55FMC_UT0_AIS_MASK)
#define C55FMC_UT0_MRV_MASK                      0x10u
#define C55FMC_UT0_MRV_SHIFT                     4u
#define C55FMC_UT0_MRV_WIDTH                     1u
#define C55FMC_UT0_MRV(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_MRV_SHIFT))&C55FMC_UT0_MRV_MASK)
#define C55FMC_UT0_MRE_MASK                      0x20u
#define C55FMC_UT0_MRE_SHIFT                     5u
#define C55FMC_UT0_MRE_WIDTH                     1u
#define C55FMC_UT0_MRE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_MRE_SHIFT))&C55FMC_UT0_MRE_MASK)
#define C55FMC_UT0_AISUS_MASK                    0x40u
#define C55FMC_UT0_AISUS_SHIFT                   6u
#define C55FMC_UT0_AISUS_WIDTH                   1u
#define C55FMC_UT0_AISUS(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AISUS_SHIFT))&C55FMC_UT0_AISUS_MASK)
#define C55FMC_UT0_AIBPE_MASK                    0x100u
#define C55FMC_UT0_AIBPE_SHIFT                   8u
#define C55FMC_UT0_AIBPE_WIDTH                   1u
#define C55FMC_UT0_AIBPE(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_AIBPE_SHIFT))&C55FMC_UT0_AIBPE_MASK)
#define C55FMC_UT0_NAIBP_MASK                    0x200u
#define C55FMC_UT0_NAIBP_SHIFT                   9u
#define C55FMC_UT0_NAIBP_WIDTH                   1u
#define C55FMC_UT0_NAIBP(x)                      (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_NAIBP_SHIFT))&C55FMC_UT0_NAIBP_MASK)
#define C55FMC_UT0_CPE_MASK                      0x10000u
#define C55FMC_UT0_CPE_SHIFT                     16u
#define C55FMC_UT0_CPE_WIDTH                     1u
#define C55FMC_UT0_CPE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_CPE_SHIFT))&C55FMC_UT0_CPE_MASK)
#define C55FMC_UT0_CPA_MASK                      0x20000u
#define C55FMC_UT0_CPA_SHIFT                     17u
#define C55FMC_UT0_CPA_WIDTH                     1u
#define C55FMC_UT0_CPA(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_CPA_SHIFT))&C55FMC_UT0_CPA_MASK)
#define C55FMC_UT0_CPR_MASK                      0x40000u
#define C55FMC_UT0_CPR_SHIFT                     18u
#define C55FMC_UT0_CPR_WIDTH                     1u
#define C55FMC_UT0_CPR(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_CPR_SHIFT))&C55FMC_UT0_CPR_MASK)
#define C55FMC_UT0_SBCE_MASK                     0x40000000u
#define C55FMC_UT0_SBCE_SHIFT                    30u
#define C55FMC_UT0_SBCE_WIDTH                    1u
#define C55FMC_UT0_SBCE(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_SBCE_SHIFT))&C55FMC_UT0_SBCE_MASK)
#define C55FMC_UT0_UTE_MASK                      0x80000000u
#define C55FMC_UT0_UTE_SHIFT                     31u
#define C55FMC_UT0_UTE_WIDTH                     1u
#define C55FMC_UT0_UTE(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UT0_UTE_SHIFT))&C55FMC_UT0_UTE_MASK)
/* UM Bit Fields */
#define C55FMC_UM_MISR_MASK                      0xFFFFFFFFu
#define C55FMC_UM_MISR_SHIFT                     0u
#define C55FMC_UM_MISR_WIDTH                     32u
#define C55FMC_UM_MISR(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_UM_MISR_SHIFT))&C55FMC_UM_MISR_MASK)
/* UM9 Bit Fields */
#define C55FMC_UM9_MISR_MASK                     0x1u
#define C55FMC_UM9_MISR_SHIFT                    0u
#define C55FMC_UM9_MISR_WIDTH                    1u
#define C55FMC_UM9_MISR(x)                       (((uint32_t)(((uint32_t)(x))<<C55FMC_UM9_MISR_SHIFT))&C55FMC_UM9_MISR_MASK)
/* OPP0 Bit Fields */
#define C55FMC_OPP0_MIDOPP_MASK                  0xFFFFu
#define C55FMC_OPP0_MIDOPP_SHIFT                 0u
#define C55FMC_OPP0_MIDOPP_WIDTH                 16u
#define C55FMC_OPP0_MIDOPP(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP0_MIDOPP_SHIFT))&C55FMC_OPP0_MIDOPP_MASK)
#define C55FMC_OPP0_LOWOPP_MASK                  0x3FFF0000u
#define C55FMC_OPP0_LOWOPP_SHIFT                 16u
#define C55FMC_OPP0_LOWOPP_WIDTH                 14u
#define C55FMC_OPP0_LOWOPP(x)                    (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP0_LOWOPP_SHIFT))&C55FMC_OPP0_LOWOPP_MASK)
/* OPP1 Bit Fields */
#define C55FMC_OPP1_HIGHOPP_MASK                 0xFFFFu
#define C55FMC_OPP1_HIGHOPP_SHIFT                0u
#define C55FMC_OPP1_HIGHOPP_WIDTH                16u
#define C55FMC_OPP1_HIGHOPP(x)                   (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP1_HIGHOPP_SHIFT))&C55FMC_OPP1_HIGHOPP_MASK)
/* OPP2 Bit Fields */
#define C55FMC_OPP2_A256KOPP_MASK                0xFFFFFFFFu
#define C55FMC_OPP2_A256KOPP_SHIFT               0u
#define C55FMC_OPP2_A256KOPP_WIDTH               32u
#define C55FMC_OPP2_A256KOPP(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP2_A256KOPP_SHIFT))&C55FMC_OPP2_A256KOPP_MASK)
/* OPP3 Bit Fields */
#define C55FMC_OPP3_A256KOPP_MASK                0xFFFFu
#define C55FMC_OPP3_A256KOPP_SHIFT               0u
#define C55FMC_OPP3_A256KOPP_WIDTH               16u
#define C55FMC_OPP3_A256KOPP(x)                  (((uint32_t)(((uint32_t)(x))<<C55FMC_OPP3_A256KOPP_SHIFT))&C55FMC_OPP3_A256KOPP_MASK)
/* TMD Bit Fields */
#define C55FMC_TMD_PWD_MASK                      0xFFFFFFFFu
#define C55FMC_TMD_PWD_SHIFT                     0u
#define C55FMC_TMD_PWD_WIDTH                     32u
#define C55FMC_TMD_PWD(x)                        (((uint32_t)(((uint32_t)(x))<<C55FMC_TMD_PWD_SHIFT))&C55FMC_TMD_PWD_MASK)

/*!
 * @}
 */ /* end of group C55FMC_Register_Masks */


/*!
 * @}
 */ /* end of group C55FMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CAN Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Peripheral_Access_Layer CAN Peripheral Access Layer
 * @{
 */


/** CAN - Size of Registers Arrays */
#define CAN_RAMn_COUNT                           384u
#define CAN_RXIMR_COUNT                          96u
#define CAN_WMB_COUNT                            4u

/** CAN - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
  __IO uint32_t CTRL1;                             /**< Control 1 register, offset: 0x4 */
  __IO uint32_t TIMER;                             /**< Free Running Timer, offset: 0x8 */
       uint8_t RESERVED_0[4];
  __IO uint32_t RXMGMASK;                          /**< Rx Mailboxes Global Mask Register, offset: 0x10 */
  __IO uint32_t RX14MASK;                          /**< Rx 14 Mask register, offset: 0x14 */
  __IO uint32_t RX15MASK;                          /**< Rx 15 Mask register, offset: 0x18 */
  __IO uint32_t ECR;                               /**< Error Counter, offset: 0x1C */
  __IO uint32_t ESR1;                              /**< Error and Status 1 register, offset: 0x20 */
  __IO uint32_t IMASK2;                            /**< Interrupt Masks 2 register, offset: 0x24 */
  __IO uint32_t IMASK1;                            /**< Interrupt Masks 1 register, offset: 0x28 */
  __IO uint32_t IFLAG2;                            /**< Interrupt Flags 2 register, offset: 0x2C */
  __IO uint32_t IFLAG1;                            /**< Interrupt Flags 1 register, offset: 0x30 */
  __IO uint32_t CTRL2;                             /**< Control 2 register, offset: 0x34 */
  __I  uint32_t ESR2;                              /**< Error and Status 2 register, offset: 0x38 */
       uint8_t RESERVED_1[8];
  __I  uint32_t CRCR;                              /**< CRC Register, offset: 0x44 */
  __IO uint32_t RXFGMASK;                          /**< Rx FIFO Global Mask register, offset: 0x48 */
  __I  uint32_t RXFIR;                             /**< Rx FIFO Information Register, offset: 0x4C */
  __IO uint32_t CBT;                               /**< CAN Bit Timing Register, offset: 0x50 */
       uint8_t RESERVED_2[24];
  __IO uint32_t IMASK3;                            /**< Interrupt Masks 3 Register, offset: 0x6C */
       uint8_t RESERVED_3[4];
  __IO uint32_t IFLAG3;                            /**< Interrupt Flags 3 Register, offset: 0x74 */
       uint8_t RESERVED_4[8];
  __IO uint32_t RAMn[CAN_RAMn_COUNT];              /**< Embedded RAM, array offset: 0x80, array step: 0x4 */
       uint8_t RESERVED_5[512];
  __IO uint32_t RXIMR[CAN_RXIMR_COUNT];            /**< Rx Individual Mask Registers, array offset: 0x880, array step: 0x4 */
       uint8_t RESERVED_6[256];
  __IO uint32_t CTRL1_PN;                          /**< Pretended Networking Control 1 Register, offset: 0xB00 */
  __IO uint32_t CTRL2_PN;                          /**< Pretended Networking Control 2 Register, offset: 0xB04 */
  __IO uint32_t WU_MTC;                            /**< Pretended Networking Wake Up Match Register, offset: 0xB08 */
  __IO uint32_t FLT_ID1;                           /**< Pretended Networking ID Filter 1 Register, offset: 0xB0C */
  __IO uint32_t FLT_DLC;                           /**< Pretended Networking DLC Filter Register, offset: 0xB10 */
  __IO uint32_t PL1_LO;                            /**< Pretended Networking Payload Low Filter 1 Register, offset: 0xB14 */
  __IO uint32_t PL1_HI;                            /**< Pretended Networking Payload High Filter 1 Register, offset: 0xB18 */
  __IO uint32_t FLT_ID2_IDMASK;                    /**< Pretended Networking ID Filter 2 Register / ID Mask Register, offset: 0xB1C */
  __IO uint32_t PL2_PLMASK_LO;                     /**< Pretended Networking Payload Low Filter 2 Register / Payload Low Mask Register, offset: 0xB20 */
  __IO uint32_t PL2_PLMASK_HI;                     /**< Pretended Networking Payload High Filter 2 low order bits / Payload High Mask Register, offset: 0xB24 */
       uint8_t RESERVED_7[24];
  struct {                                         /* offset: 0xB40, array step: 0x10 */
    __I  uint32_t WMBn_CS;                           /**< Wake Up Message Buffer Register for C/S, array offset: 0xB40, array step: 0x10 */
    __I  uint32_t WMBn_ID;                           /**< Wake Up Message Buffer Register for ID, array offset: 0xB44, array step: 0x10 */
    __I  uint32_t WMBn_D03;                          /**< Wake Up Message Buffer Register for Data 0-3, array offset: 0xB48, array step: 0x10 */
    __I  uint32_t WMBn_D47;                          /**< Wake Up Message Buffer Register Data 4-7, array offset: 0xB4C, array step: 0x10 */
  } WMB[CAN_WMB_COUNT];
       uint8_t RESERVED_8[128];
  __IO uint32_t FDCTRL;                            /**< CAN FD Control Register, offset: 0xC00 */
  __IO uint32_t FDCBT;                             /**< CAN FD Bit Timing Register, offset: 0xC04 */
  __I  uint32_t FDCRC;                             /**< CAN FD CRC Register, offset: 0xC08 */
} CAN_Type, *CAN_MemMapPtr;

 /** Number of instances of the CAN module. */
#define CAN_INSTANCE_COUNT                       (8u)


/* CAN - Peripheral instance base addresses */
/** Peripheral CAN_0 base address */
#define CAN_0_BASE                               (0xFFEC0000u)
/** Peripheral CAN_0 base pointer */
#define CAN_0                                    ((CAN_Type *)CAN_0_BASE)
/** Peripheral CAN_1 base address */
#define CAN_1_BASE                               (0xFBEC0000u)
/** Peripheral CAN_1 base pointer */
#define CAN_1                                    ((CAN_Type *)CAN_1_BASE)
/** Peripheral CAN_2 base address */
#define CAN_2_BASE                               (0xFFEC4000u)
/** Peripheral CAN_2 base pointer */
#define CAN_2                                    ((CAN_Type *)CAN_2_BASE)
/** Peripheral CAN_3 base address */
#define CAN_3_BASE                               (0xFBEC4000u)
/** Peripheral CAN_3 base pointer */
#define CAN_3                                    ((CAN_Type *)CAN_3_BASE)
/** Peripheral CAN_4 base address */
#define CAN_4_BASE                               (0xFFEC8000u)
/** Peripheral CAN_4 base pointer */
#define CAN_4                                    ((CAN_Type *)CAN_4_BASE)
/** Peripheral CAN_5 base address */
#define CAN_5_BASE                               (0xFBEC8000u)
/** Peripheral CAN_5 base pointer */
#define CAN_5                                    ((CAN_Type *)CAN_5_BASE)
/** Peripheral CAN_6 base address */
#define CAN_6_BASE                               (0xFFECC000u)
/** Peripheral CAN_6 base pointer */
#define CAN_6                                    ((CAN_Type *)CAN_6_BASE)
/** Peripheral CAN_7 base address */
#define CAN_7_BASE                               (0xFBECC000u)
/** Peripheral CAN_7 base pointer */
#define CAN_7                                    ((CAN_Type *)CAN_7_BASE)
/** Array initializer of CAN peripheral base addresses */
#define CAN_BASE_ADDRS                           { CAN_0_BASE, CAN_1_BASE, CAN_2_BASE, CAN_3_BASE, CAN_4_BASE, CAN_5_BASE, CAN_6_BASE, CAN_7_BASE }
/** Array initializer of CAN peripheral base pointers */
#define CAN_BASE_PTRS                            { CAN_0, CAN_1, CAN_2, CAN_3, CAN_4, CAN_5, CAN_6, CAN_7 }

/** Interrupt vectors for the CAN peripheral type */
#define CAN_Rx_Warning_IRQS                      { CAN0_ORed_IRQn, CAN1_ORed_IRQn, \
                                                   CAN2_ORed_IRQn, CAN3_ORed_IRQn, \
                                                   CAN4_ORed_IRQn, CAN5_ORed_IRQn, \
                                                   CAN6_ORed_IRQn, CAN7_ORed_IRQn }

#define CAN_Tx_Warning_IRQS                      { CAN0_ORed_IRQn, CAN1_ORed_IRQn, \
                                                   CAN2_ORed_IRQn, CAN3_ORed_IRQn, \
                                                   CAN4_ORed_IRQn, CAN5_ORed_IRQn, \
                                                   CAN6_ORed_IRQn, CAN7_ORed_IRQn }

#define CAN_Wake_Up_IRQS                         { CAN0_Wake_Up_IRQn, NotAvail_IRQn, \
                                                   NotAvail_IRQn, NotAvail_IRQn, \
                                                   NotAvail_IRQn, NotAvail_IRQn, \
                                                   NotAvail_IRQn, NotAvail_IRQn }

#define CAN_Error_IRQS                           { CAN0_Error_IRQn, CAN1_Error_IRQn, \
                                                   CAN2_Error_IRQn, CAN3_Error_IRQn, \
                                                   CAN4_Error_IRQn, CAN5_Error_IRQn, \
                                                   CAN6_Error_IRQn, CAN7_Error_IRQn }

#define CAN_Bus_Off_IRQS                         { CAN0_ORed_IRQn, CAN1_ORed_IRQn, \
                                                   CAN2_ORed_IRQn, CAN3_ORed_IRQn, \
                                                   CAN4_ORed_IRQn, CAN5_ORed_IRQn, \
                                                   CAN6_ORed_IRQn, CAN7_ORed_IRQn }

#define CAN_ORed_00_03_MB_IRQS                   { CAN0_ORed_00_03_MB_IRQn, CAN1_ORed_00_03_MB_IRQn, \
                                                   CAN2_ORed_00_03_MB_IRQn, CAN3_ORed_00_03_MB_IRQn, \
                                                   CAN4_ORed_00_03_MB_IRQn, CAN5_ORed_00_03_MB_IRQn, \
                                                   CAN6_ORed_00_03_MB_IRQn, CAN7_ORed_00_03_MB_IRQn }

#define CAN_ORed_04_07_MB_IRQS                   { CAN0_ORed_04_07_MB_IRQn, CAN1_ORed_04_07_MB_IRQn, \
                                                   CAN2_ORed_04_07_MB_IRQn, CAN3_ORed_04_07_MB_IRQn, \
                                                   CAN4_ORed_04_07_MB_IRQn, CAN5_ORed_04_07_MB_IRQn, \
                                                   CAN6_ORed_04_07_MB_IRQn, CAN7_ORed_04_07_MB_IRQn }

#define CAN_ORed_08_11_MB_IRQS                   { CAN0_ORed_08_11_MB_IRQn, CAN1_ORed_08_11_MB_IRQn, \
                                                   CAN2_ORed_08_11_MB_IRQn, CAN3_ORed_08_11_MB_IRQn, \
                                                   CAN4_ORed_08_11_MB_IRQn, CAN5_ORed_08_11_MB_IRQn, \
                                                   CAN6_ORed_08_11_MB_IRQn, CAN7_ORed_08_11_MB_IRQn }

#define CAN_ORed_12_15_MB_IRQS                   { CAN0_ORed_12_15_MB_IRQn, CAN1_ORed_12_15_MB_IRQn, \
                                                   CAN2_ORed_12_15_MB_IRQn, CAN3_ORed_12_15_MB_IRQn, \
                                                   CAN4_ORed_12_15_MB_IRQn, CAN5_ORed_12_15_MB_IRQn, \
                                                   CAN6_ORed_12_15_MB_IRQn, CAN7_ORed_12_15_MB_IRQn }

#define CAN_ORed_16_31_MB_IRQS                   { CAN0_ORed_16_31_MB_IRQn, CAN1_ORed_16_31_MB_IRQn, \
                                                   CAN2_ORed_16_31_MB_IRQn, CAN3_ORed_16_31_MB_IRQn, \
                                                   CAN4_ORed_16_31_MB_IRQn, CAN5_ORed_16_31_MB_IRQn, \
                                                   CAN6_ORed_16_31_MB_IRQn, CAN7_ORed_16_31_MB_IRQn }

#define CAN_ORed_32_63_MB_IRQS                   { CAN0_ORed_32_63_MB_IRQn, CAN1_ORed_32_63_MB_IRQn, \
                                                   CAN2_ORed_32_63_MB_IRQn, CAN3_ORed_32_63_MB_IRQn, \
                                                   CAN4_ORed_32_63_MB_IRQn, CAN5_ORed_32_63_MB_IRQn, \
                                                   CAN6_ORed_32_63_MB_IRQn, CAN7_ORed_32_63_MB_IRQn }

#define CAN_ORed_64_95_MB_IRQS                   { CAN0_ORed_64_95_MB_IRQn, CAN1_ORed_64_95_MB_IRQn, \
                                                   CAN2_ORed_64_95_MB_IRQn, CAN3_ORed_64_95_MB_IRQn, \
                                                   CAN4_ORed_64_95_MB_IRQn, CAN5_ORed_64_95_MB_IRQn, \
                                                   CAN6_ORed_64_95_MB_IRQn, CAN7_ORed_64_95_MB_IRQn }

/* ----------------------------------------------------------------------------
   -- CAN Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CAN_Register_Masks CAN Register Masks
 * @{
 */

/* MCR Bit Fields */
#define CAN_MCR_MAXMB_MASK                       0x7Fu
#define CAN_MCR_MAXMB_SHIFT                      0u
#define CAN_MCR_MAXMB_WIDTH                      7u
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK)
#define CAN_MCR_IDAM_MASK                        0x300u
#define CAN_MCR_IDAM_SHIFT                       8u
#define CAN_MCR_IDAM_WIDTH                       2u
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK)
#define CAN_MCR_FDEN_MASK                        0x800u
#define CAN_MCR_FDEN_SHIFT                       11u
#define CAN_MCR_FDEN_WIDTH                       1u
#define CAN_MCR_FDEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FDEN_SHIFT))&CAN_MCR_FDEN_MASK)
#define CAN_MCR_AEN_MASK                         0x1000u
#define CAN_MCR_AEN_SHIFT                        12u
#define CAN_MCR_AEN_WIDTH                        1u
#define CAN_MCR_AEN(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_AEN_SHIFT))&CAN_MCR_AEN_MASK)
#define CAN_MCR_LPRIOEN_MASK                     0x2000u
#define CAN_MCR_LPRIOEN_SHIFT                    13u
#define CAN_MCR_LPRIOEN_WIDTH                    1u
#define CAN_MCR_LPRIOEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPRIOEN_SHIFT))&CAN_MCR_LPRIOEN_MASK)
#define CAN_MCR_PNET_EN_MASK                     0x4000u
#define CAN_MCR_PNET_EN_SHIFT                    14u
#define CAN_MCR_PNET_EN_WIDTH                    1u
#define CAN_MCR_PNET_EN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_PNET_EN_SHIFT))&CAN_MCR_PNET_EN_MASK)
#define CAN_MCR_DMA_MASK                         0x8000u
#define CAN_MCR_DMA_SHIFT                        15u
#define CAN_MCR_DMA_WIDTH                        1u
#define CAN_MCR_DMA(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_DMA_SHIFT))&CAN_MCR_DMA_MASK)
#define CAN_MCR_IRMQ_MASK                        0x10000u
#define CAN_MCR_IRMQ_SHIFT                       16u
#define CAN_MCR_IRMQ_WIDTH                       1u
#define CAN_MCR_IRMQ(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IRMQ_SHIFT))&CAN_MCR_IRMQ_MASK)
#define CAN_MCR_SRXDIS_MASK                      0x20000u
#define CAN_MCR_SRXDIS_SHIFT                     17u
#define CAN_MCR_SRXDIS_WIDTH                     1u
#define CAN_MCR_SRXDIS(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SRXDIS_SHIFT))&CAN_MCR_SRXDIS_MASK)
#define CAN_MCR_WAKSRC_MASK                      0x80000u
#define CAN_MCR_WAKSRC_SHIFT                     19u
#define CAN_MCR_WAKSRC_WIDTH                     1u
#define CAN_MCR_WAKSRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WAKSRC_SHIFT))&CAN_MCR_WAKSRC_MASK)
#define CAN_MCR_LPMACK_MASK                      0x100000u
#define CAN_MCR_LPMACK_SHIFT                     20u
#define CAN_MCR_LPMACK_WIDTH                     1u
#define CAN_MCR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPMACK_SHIFT))&CAN_MCR_LPMACK_MASK)
#define CAN_MCR_WRNEN_MASK                       0x200000u
#define CAN_MCR_WRNEN_SHIFT                      21u
#define CAN_MCR_WRNEN_WIDTH                      1u
#define CAN_MCR_WRNEN(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WRNEN_SHIFT))&CAN_MCR_WRNEN_MASK)
#define CAN_MCR_SLFWAK_MASK                      0x400000u
#define CAN_MCR_SLFWAK_SHIFT                     22u
#define CAN_MCR_SLFWAK_WIDTH                     1u
#define CAN_MCR_SLFWAK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SLFWAK_SHIFT))&CAN_MCR_SLFWAK_MASK)
#define CAN_MCR_SUPV_MASK                        0x800000u
#define CAN_MCR_SUPV_SHIFT                       23u
#define CAN_MCR_SUPV_WIDTH                       1u
#define CAN_MCR_SUPV(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SUPV_SHIFT))&CAN_MCR_SUPV_MASK)
#define CAN_MCR_FRZACK_MASK                      0x1000000u
#define CAN_MCR_FRZACK_SHIFT                     24u
#define CAN_MCR_FRZACK_WIDTH                     1u
#define CAN_MCR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZACK_SHIFT))&CAN_MCR_FRZACK_MASK)
#define CAN_MCR_SOFTRST_MASK                     0x2000000u
#define CAN_MCR_SOFTRST_SHIFT                    25u
#define CAN_MCR_SOFTRST_WIDTH                    1u
#define CAN_MCR_SOFTRST(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SOFTRST_SHIFT))&CAN_MCR_SOFTRST_MASK)
#define CAN_MCR_WAKMSK_MASK                      0x4000000u
#define CAN_MCR_WAKMSK_SHIFT                     26u
#define CAN_MCR_WAKMSK_WIDTH                     1u
#define CAN_MCR_WAKMSK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WAKMSK_SHIFT))&CAN_MCR_WAKMSK_MASK)
#define CAN_MCR_NOTRDY_MASK                      0x8000000u
#define CAN_MCR_NOTRDY_SHIFT                     27u
#define CAN_MCR_NOTRDY_WIDTH                     1u
#define CAN_MCR_NOTRDY(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_NOTRDY_SHIFT))&CAN_MCR_NOTRDY_MASK)
#define CAN_MCR_HALT_MASK                        0x10000000u
#define CAN_MCR_HALT_SHIFT                       28u
#define CAN_MCR_HALT_WIDTH                       1u
#define CAN_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_HALT_SHIFT))&CAN_MCR_HALT_MASK)
#define CAN_MCR_RFEN_MASK                        0x20000000u
#define CAN_MCR_RFEN_SHIFT                       29u
#define CAN_MCR_RFEN_WIDTH                       1u
#define CAN_MCR_RFEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_RFEN_SHIFT))&CAN_MCR_RFEN_MASK)
#define CAN_MCR_FRZ_MASK                         0x40000000u
#define CAN_MCR_FRZ_SHIFT                        30u
#define CAN_MCR_FRZ_WIDTH                        1u
#define CAN_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZ_SHIFT))&CAN_MCR_FRZ_MASK)
#define CAN_MCR_MDIS_MASK                        0x80000000u
#define CAN_MCR_MDIS_SHIFT                       31u
#define CAN_MCR_MDIS_WIDTH                       1u
#define CAN_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MDIS_SHIFT))&CAN_MCR_MDIS_MASK)
/* CTRL1 Bit Fields */
#define CAN_CTRL1_PROPSEG_MASK                   0x7u
#define CAN_CTRL1_PROPSEG_SHIFT                  0u
#define CAN_CTRL1_PROPSEG_WIDTH                  3u
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK)
#define CAN_CTRL1_LOM_MASK                       0x8u
#define CAN_CTRL1_LOM_SHIFT                      3u
#define CAN_CTRL1_LOM_WIDTH                      1u
#define CAN_CTRL1_LOM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LOM_SHIFT))&CAN_CTRL1_LOM_MASK)
#define CAN_CTRL1_LBUF_MASK                      0x10u
#define CAN_CTRL1_LBUF_SHIFT                     4u
#define CAN_CTRL1_LBUF_WIDTH                     1u
#define CAN_CTRL1_LBUF(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LBUF_SHIFT))&CAN_CTRL1_LBUF_MASK)
#define CAN_CTRL1_TSYN_MASK                      0x20u
#define CAN_CTRL1_TSYN_SHIFT                     5u
#define CAN_CTRL1_TSYN_WIDTH                     1u
#define CAN_CTRL1_TSYN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TSYN_SHIFT))&CAN_CTRL1_TSYN_MASK)
#define CAN_CTRL1_BOFFREC_MASK                   0x40u
#define CAN_CTRL1_BOFFREC_SHIFT                  6u
#define CAN_CTRL1_BOFFREC_WIDTH                  1u
#define CAN_CTRL1_BOFFREC(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFREC_SHIFT))&CAN_CTRL1_BOFFREC_MASK)
#define CAN_CTRL1_SMP_MASK                       0x80u
#define CAN_CTRL1_SMP_SHIFT                      7u
#define CAN_CTRL1_SMP_WIDTH                      1u
#define CAN_CTRL1_SMP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_SMP_SHIFT))&CAN_CTRL1_SMP_MASK)
#define CAN_CTRL1_RWRNMSK_MASK                   0x400u
#define CAN_CTRL1_RWRNMSK_SHIFT                  10u
#define CAN_CTRL1_RWRNMSK_WIDTH                  1u
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RWRNMSK_SHIFT))&CAN_CTRL1_RWRNMSK_MASK)
#define CAN_CTRL1_TWRNMSK_MASK                   0x800u
#define CAN_CTRL1_TWRNMSK_SHIFT                  11u
#define CAN_CTRL1_TWRNMSK_WIDTH                  1u
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TWRNMSK_SHIFT))&CAN_CTRL1_TWRNMSK_MASK)
#define CAN_CTRL1_LPB_MASK                       0x1000u
#define CAN_CTRL1_LPB_SHIFT                      12u
#define CAN_CTRL1_LPB_WIDTH                      1u
#define CAN_CTRL1_LPB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LPB_SHIFT))&CAN_CTRL1_LPB_MASK)
#define CAN_CTRL1_CLKSRC_MASK                    0x2000u
#define CAN_CTRL1_CLKSRC_SHIFT                   13u
#define CAN_CTRL1_CLKSRC_WIDTH                   1u
#define CAN_CTRL1_CLKSRC(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_CLKSRC_SHIFT))&CAN_CTRL1_CLKSRC_MASK)
#define CAN_CTRL1_ERRMSK_MASK                    0x4000u
#define CAN_CTRL1_ERRMSK_SHIFT                   14u
#define CAN_CTRL1_ERRMSK_WIDTH                   1u
#define CAN_CTRL1_ERRMSK(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_ERRMSK_SHIFT))&CAN_CTRL1_ERRMSK_MASK)
#define CAN_CTRL1_BOFFMSK_MASK                   0x8000u
#define CAN_CTRL1_BOFFMSK_SHIFT                  15u
#define CAN_CTRL1_BOFFMSK_WIDTH                  1u
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFMSK_SHIFT))&CAN_CTRL1_BOFFMSK_MASK)
#define CAN_CTRL1_PSEG2_MASK                     0x70000u
#define CAN_CTRL1_PSEG2_SHIFT                    16u
#define CAN_CTRL1_PSEG2_WIDTH                    3u
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK)
#define CAN_CTRL1_PSEG1_MASK                     0x380000u
#define CAN_CTRL1_PSEG1_SHIFT                    19u
#define CAN_CTRL1_PSEG1_WIDTH                    3u
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK)
#define CAN_CTRL1_RJW_MASK                       0xC00000u
#define CAN_CTRL1_RJW_SHIFT                      22u
#define CAN_CTRL1_RJW_WIDTH                      2u
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK)
#define CAN_CTRL1_PRESDIV_MASK                   0xFF000000u
#define CAN_CTRL1_PRESDIV_SHIFT                  24u
#define CAN_CTRL1_PRESDIV_WIDTH                  8u
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK)
/* TIMER Bit Fields */
#define CAN_TIMER_TIMER_MASK                     0xFFFFu
#define CAN_TIMER_TIMER_SHIFT                    0u
#define CAN_TIMER_TIMER_WIDTH                    16u
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK)
/* RXMGMASK Bit Fields */
#define CAN_RXMGMASK_MG_MASK                     0xFFFFFFFFu
#define CAN_RXMGMASK_MG_SHIFT                    0u
#define CAN_RXMGMASK_MG_WIDTH                    32u
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK)
/* RX14MASK Bit Fields */
#define CAN_RX14MASK_RX14M_MASK                  0xFFFFFFFFu
#define CAN_RX14MASK_RX14M_SHIFT                 0u
#define CAN_RX14MASK_RX14M_WIDTH                 32u
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK)
/* RX15MASK Bit Fields */
#define CAN_RX15MASK_RX15M_MASK                  0xFFFFFFFFu
#define CAN_RX15MASK_RX15M_SHIFT                 0u
#define CAN_RX15MASK_RX15M_WIDTH                 32u
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK)
/* ECR Bit Fields */
#define CAN_ECR_TXERRCNT_MASK                    0xFFu
#define CAN_ECR_TXERRCNT_SHIFT                   0u
#define CAN_ECR_TXERRCNT_WIDTH                   8u
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK)
#define CAN_ECR_RXERRCNT_MASK                    0xFF00u
#define CAN_ECR_RXERRCNT_SHIFT                   8u
#define CAN_ECR_RXERRCNT_WIDTH                   8u
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK)
#define CAN_ECR_TXERRCNT_FAST_MASK               0xFF0000u
#define CAN_ECR_TXERRCNT_FAST_SHIFT              16u
#define CAN_ECR_TXERRCNT_FAST_WIDTH              8u
#define CAN_ECR_TXERRCNT_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_FAST_SHIFT))&CAN_ECR_TXERRCNT_FAST_MASK)
#define CAN_ECR_RXERRCNT_FAST_MASK               0xFF000000u
#define CAN_ECR_RXERRCNT_FAST_SHIFT              24u
#define CAN_ECR_RXERRCNT_FAST_WIDTH              8u
#define CAN_ECR_RXERRCNT_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_FAST_SHIFT))&CAN_ECR_RXERRCNT_FAST_MASK)
/* ESR1 Bit Fields */
#define CAN_ESR1_WAKINT_MASK                     0x1u
#define CAN_ESR1_WAKINT_SHIFT                    0u
#define CAN_ESR1_WAKINT_WIDTH                    1u
#define CAN_ESR1_WAKINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_WAKINT_SHIFT))&CAN_ESR1_WAKINT_MASK)
#define CAN_ESR1_ERRINT_MASK                     0x2u
#define CAN_ESR1_ERRINT_SHIFT                    1u
#define CAN_ESR1_ERRINT_WIDTH                    1u
#define CAN_ESR1_ERRINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_SHIFT))&CAN_ESR1_ERRINT_MASK)
#define CAN_ESR1_BOFFINT_MASK                    0x4u
#define CAN_ESR1_BOFFINT_SHIFT                   2u
#define CAN_ESR1_BOFFINT_WIDTH                   1u
#define CAN_ESR1_BOFFINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFINT_SHIFT))&CAN_ESR1_BOFFINT_MASK)
#define CAN_ESR1_RX_MASK                         0x8u
#define CAN_ESR1_RX_SHIFT                        3u
#define CAN_ESR1_RX_WIDTH                        1u
#define CAN_ESR1_RX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RX_SHIFT))&CAN_ESR1_RX_MASK)
#define CAN_ESR1_FLTCONF_MASK                    0x30u
#define CAN_ESR1_FLTCONF_SHIFT                   4u
#define CAN_ESR1_FLTCONF_WIDTH                   2u
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK)
#define CAN_ESR1_TX_MASK                         0x40u
#define CAN_ESR1_TX_SHIFT                        6u
#define CAN_ESR1_TX_WIDTH                        1u
#define CAN_ESR1_TX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TX_SHIFT))&CAN_ESR1_TX_MASK)
#define CAN_ESR1_IDLE_MASK                       0x80u
#define CAN_ESR1_IDLE_SHIFT                      7u
#define CAN_ESR1_IDLE_WIDTH                      1u
#define CAN_ESR1_IDLE(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_IDLE_SHIFT))&CAN_ESR1_IDLE_MASK)
#define CAN_ESR1_RXWRN_MASK                      0x100u
#define CAN_ESR1_RXWRN_SHIFT                     8u
#define CAN_ESR1_RXWRN_WIDTH                     1u
#define CAN_ESR1_RXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RXWRN_SHIFT))&CAN_ESR1_RXWRN_MASK)
#define CAN_ESR1_TXWRN_MASK                      0x200u
#define CAN_ESR1_TXWRN_SHIFT                     9u
#define CAN_ESR1_TXWRN_WIDTH                     1u
#define CAN_ESR1_TXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TXWRN_SHIFT))&CAN_ESR1_TXWRN_MASK)
#define CAN_ESR1_STFERR_MASK                     0x400u
#define CAN_ESR1_STFERR_SHIFT                    10u
#define CAN_ESR1_STFERR_WIDTH                    1u
#define CAN_ESR1_STFERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_SHIFT))&CAN_ESR1_STFERR_MASK)
#define CAN_ESR1_FRMERR_MASK                     0x800u
#define CAN_ESR1_FRMERR_SHIFT                    11u
#define CAN_ESR1_FRMERR_WIDTH                    1u
#define CAN_ESR1_FRMERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_SHIFT))&CAN_ESR1_FRMERR_MASK)
#define CAN_ESR1_CRCERR_MASK                     0x1000u
#define CAN_ESR1_CRCERR_SHIFT                    12u
#define CAN_ESR1_CRCERR_WIDTH                    1u
#define CAN_ESR1_CRCERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_SHIFT))&CAN_ESR1_CRCERR_MASK)
#define CAN_ESR1_ACKERR_MASK                     0x2000u
#define CAN_ESR1_ACKERR_SHIFT                    13u
#define CAN_ESR1_ACKERR_WIDTH                    1u
#define CAN_ESR1_ACKERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ACKERR_SHIFT))&CAN_ESR1_ACKERR_MASK)
#define CAN_ESR1_BIT0ERR_MASK                    0x4000u
#define CAN_ESR1_BIT0ERR_SHIFT                   14u
#define CAN_ESR1_BIT0ERR_WIDTH                   1u
#define CAN_ESR1_BIT0ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_SHIFT))&CAN_ESR1_BIT0ERR_MASK)
#define CAN_ESR1_BIT1ERR_MASK                    0x8000u
#define CAN_ESR1_BIT1ERR_SHIFT                   15u
#define CAN_ESR1_BIT1ERR_WIDTH                   1u
#define CAN_ESR1_BIT1ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_SHIFT))&CAN_ESR1_BIT1ERR_MASK)
#define CAN_ESR1_RWRNINT_MASK                    0x10000u
#define CAN_ESR1_RWRNINT_SHIFT                   16u
#define CAN_ESR1_RWRNINT_WIDTH                   1u
#define CAN_ESR1_RWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RWRNINT_SHIFT))&CAN_ESR1_RWRNINT_MASK)
#define CAN_ESR1_TWRNINT_MASK                    0x20000u
#define CAN_ESR1_TWRNINT_SHIFT                   17u
#define CAN_ESR1_TWRNINT_WIDTH                   1u
#define CAN_ESR1_TWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TWRNINT_SHIFT))&CAN_ESR1_TWRNINT_MASK)
#define CAN_ESR1_SYNCH_MASK                      0x40000u
#define CAN_ESR1_SYNCH_SHIFT                     18u
#define CAN_ESR1_SYNCH_WIDTH                     1u
#define CAN_ESR1_SYNCH(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_SYNCH_SHIFT))&CAN_ESR1_SYNCH_MASK)
#define CAN_ESR1_BOFFDONEINT_MASK                0x80000u
#define CAN_ESR1_BOFFDONEINT_SHIFT               19u
#define CAN_ESR1_BOFFDONEINT_WIDTH               1u
#define CAN_ESR1_BOFFDONEINT(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFDONEINT_SHIFT))&CAN_ESR1_BOFFDONEINT_MASK)
#define CAN_ESR1_ERRINT_FAST_MASK                0x100000u
#define CAN_ESR1_ERRINT_FAST_SHIFT               20u
#define CAN_ESR1_ERRINT_FAST_WIDTH               1u
#define CAN_ESR1_ERRINT_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_FAST_SHIFT))&CAN_ESR1_ERRINT_FAST_MASK)
#define CAN_ESR1_ERROVR_MASK                     0x200000u
#define CAN_ESR1_ERROVR_SHIFT                    21u
#define CAN_ESR1_ERROVR_WIDTH                    1u
#define CAN_ESR1_ERROVR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERROVR_SHIFT))&CAN_ESR1_ERROVR_MASK)
#define CAN_ESR1_STFERR_FAST_MASK                0x4000000u
#define CAN_ESR1_STFERR_FAST_SHIFT               26u
#define CAN_ESR1_STFERR_FAST_WIDTH               1u
#define CAN_ESR1_STFERR_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_FAST_SHIFT))&CAN_ESR1_STFERR_FAST_MASK)
#define CAN_ESR1_FRMERR_FAST_MASK                0x8000000u
#define CAN_ESR1_FRMERR_FAST_SHIFT               27u
#define CAN_ESR1_FRMERR_FAST_WIDTH               1u
#define CAN_ESR1_FRMERR_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_FAST_SHIFT))&CAN_ESR1_FRMERR_FAST_MASK)
#define CAN_ESR1_CRCERR_FAST_MASK                0x10000000u
#define CAN_ESR1_CRCERR_FAST_SHIFT               28u
#define CAN_ESR1_CRCERR_FAST_WIDTH               1u
#define CAN_ESR1_CRCERR_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_FAST_SHIFT))&CAN_ESR1_CRCERR_FAST_MASK)
#define CAN_ESR1_BIT0ERR_FAST_MASK               0x40000000u
#define CAN_ESR1_BIT0ERR_FAST_SHIFT              30u
#define CAN_ESR1_BIT0ERR_FAST_WIDTH              1u
#define CAN_ESR1_BIT0ERR_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_FAST_SHIFT))&CAN_ESR1_BIT0ERR_FAST_MASK)
#define CAN_ESR1_BIT1ERR_FAST_MASK               0x80000000u
#define CAN_ESR1_BIT1ERR_FAST_SHIFT              31u
#define CAN_ESR1_BIT1ERR_FAST_WIDTH              1u
#define CAN_ESR1_BIT1ERR_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_FAST_SHIFT))&CAN_ESR1_BIT1ERR_FAST_MASK)
/* IMASK2 Bit Fields */
#define CAN_IMASK2_BUF63TO32M_MASK               0xFFFFFFFFu
#define CAN_IMASK2_BUF63TO32M_SHIFT              0u
#define CAN_IMASK2_BUF63TO32M_WIDTH              32u
#define CAN_IMASK2_BUF63TO32M(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_IMASK2_BUF63TO32M_SHIFT))&CAN_IMASK2_BUF63TO32M_MASK)
/* IMASK1 Bit Fields */
#define CAN_IMASK1_BUF31TO0M_MASK                0xFFFFFFFFu
#define CAN_IMASK1_BUF31TO0M_SHIFT               0u
#define CAN_IMASK1_BUF31TO0M_WIDTH               32u
#define CAN_IMASK1_BUF31TO0M(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IMASK1_BUF31TO0M_SHIFT))&CAN_IMASK1_BUF31TO0M_MASK)
/* IFLAG2 Bit Fields */
#define CAN_IFLAG2_BUF63TO32I_MASK               0xFFFFFFFFu
#define CAN_IFLAG2_BUF63TO32I_SHIFT              0u
#define CAN_IFLAG2_BUF63TO32I_WIDTH              32u
#define CAN_IFLAG2_BUF63TO32I(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG2_BUF63TO32I_SHIFT))&CAN_IFLAG2_BUF63TO32I_MASK)
/* IFLAG1 Bit Fields */
#define CAN_IFLAG1_BUF0I_MASK                    0x1u
#define CAN_IFLAG1_BUF0I_SHIFT                   0u
#define CAN_IFLAG1_BUF0I_WIDTH                   1u
#define CAN_IFLAG1_BUF0I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF0I_SHIFT))&CAN_IFLAG1_BUF0I_MASK)
#define CAN_IFLAG1_BUF4TO1I_MASK                 0x1Eu
#define CAN_IFLAG1_BUF4TO1I_SHIFT                1u
#define CAN_IFLAG1_BUF4TO1I_WIDTH                4u
#define CAN_IFLAG1_BUF4TO1I(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF4TO1I_SHIFT))&CAN_IFLAG1_BUF4TO1I_MASK)
#define CAN_IFLAG1_BUF5I_MASK                    0x20u
#define CAN_IFLAG1_BUF5I_SHIFT                   5u
#define CAN_IFLAG1_BUF5I_WIDTH                   1u
#define CAN_IFLAG1_BUF5I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF5I_SHIFT))&CAN_IFLAG1_BUF5I_MASK)
#define CAN_IFLAG1_BUF6I_MASK                    0x40u
#define CAN_IFLAG1_BUF6I_SHIFT                   6u
#define CAN_IFLAG1_BUF6I_WIDTH                   1u
#define CAN_IFLAG1_BUF6I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF6I_SHIFT))&CAN_IFLAG1_BUF6I_MASK)
#define CAN_IFLAG1_BUF7I_MASK                    0x80u
#define CAN_IFLAG1_BUF7I_SHIFT                   7u
#define CAN_IFLAG1_BUF7I_WIDTH                   1u
#define CAN_IFLAG1_BUF7I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF7I_SHIFT))&CAN_IFLAG1_BUF7I_MASK)
#define CAN_IFLAG1_BUF31TO8I_MASK                0xFFFFFF00u
#define CAN_IFLAG1_BUF31TO8I_SHIFT               8u
#define CAN_IFLAG1_BUF31TO8I_WIDTH               24u
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK)
/* CTRL2 Bit Fields */
#define CAN_CTRL2_EDFLTDIS_MASK                  0x800u
#define CAN_CTRL2_EDFLTDIS_SHIFT                 11u
#define CAN_CTRL2_EDFLTDIS_WIDTH                 1u
#define CAN_CTRL2_EDFLTDIS(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EDFLTDIS_SHIFT))&CAN_CTRL2_EDFLTDIS_MASK)
#define CAN_CTRL2_ISOCANFDEN_MASK                0x1000u
#define CAN_CTRL2_ISOCANFDEN_SHIFT               12u
#define CAN_CTRL2_ISOCANFDEN_WIDTH               1u
#define CAN_CTRL2_ISOCANFDEN(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_ISOCANFDEN_SHIFT))&CAN_CTRL2_ISOCANFDEN_MASK)
#define CAN_CTRL2_PREXCEN_MASK                   0x4000u
#define CAN_CTRL2_PREXCEN_SHIFT                  14u
#define CAN_CTRL2_PREXCEN_WIDTH                  1u
#define CAN_CTRL2_PREXCEN(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_PREXCEN_SHIFT))&CAN_CTRL2_PREXCEN_MASK)
#define CAN_CTRL2_TIMER_SRC_MASK                 0x8000u
#define CAN_CTRL2_TIMER_SRC_SHIFT                15u
#define CAN_CTRL2_TIMER_SRC_WIDTH                1u
#define CAN_CTRL2_TIMER_SRC(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TIMER_SRC_SHIFT))&CAN_CTRL2_TIMER_SRC_MASK)
#define CAN_CTRL2_EACEN_MASK                     0x10000u
#define CAN_CTRL2_EACEN_SHIFT                    16u
#define CAN_CTRL2_EACEN_WIDTH                    1u
#define CAN_CTRL2_EACEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EACEN_SHIFT))&CAN_CTRL2_EACEN_MASK)
#define CAN_CTRL2_RRS_MASK                       0x20000u
#define CAN_CTRL2_RRS_SHIFT                      17u
#define CAN_CTRL2_RRS_WIDTH                      1u
#define CAN_CTRL2_RRS(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RRS_SHIFT))&CAN_CTRL2_RRS_MASK)
#define CAN_CTRL2_MRP_MASK                       0x40000u
#define CAN_CTRL2_MRP_SHIFT                      18u
#define CAN_CTRL2_MRP_WIDTH                      1u
#define CAN_CTRL2_MRP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_MRP_SHIFT))&CAN_CTRL2_MRP_MASK)
#define CAN_CTRL2_TASD_MASK                      0xF80000u
#define CAN_CTRL2_TASD_SHIFT                     19u
#define CAN_CTRL2_TASD_WIDTH                     5u
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK)
#define CAN_CTRL2_RFFN_MASK                      0xF000000u
#define CAN_CTRL2_RFFN_SHIFT                     24u
#define CAN_CTRL2_RFFN_WIDTH                     4u
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK)
#define CAN_CTRL2_BOFFDONEMSK_MASK               0x40000000u
#define CAN_CTRL2_BOFFDONEMSK_SHIFT              30u
#define CAN_CTRL2_BOFFDONEMSK_WIDTH              1u
#define CAN_CTRL2_BOFFDONEMSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_BOFFDONEMSK_SHIFT))&CAN_CTRL2_BOFFDONEMSK_MASK)
#define CAN_CTRL2_ERRMSK_FAST_MASK               0x80000000u
#define CAN_CTRL2_ERRMSK_FAST_SHIFT              31u
#define CAN_CTRL2_ERRMSK_FAST_WIDTH              1u
#define CAN_CTRL2_ERRMSK_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_ERRMSK_FAST_SHIFT))&CAN_CTRL2_ERRMSK_FAST_MASK)
/* ESR2 Bit Fields */
#define CAN_ESR2_IMB_MASK                        0x2000u
#define CAN_ESR2_IMB_SHIFT                       13u
#define CAN_ESR2_IMB_WIDTH                       1u
#define CAN_ESR2_IMB(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_IMB_SHIFT))&CAN_ESR2_IMB_MASK)
#define CAN_ESR2_VPS_MASK                        0x4000u
#define CAN_ESR2_VPS_SHIFT                       14u
#define CAN_ESR2_VPS_WIDTH                       1u
#define CAN_ESR2_VPS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_VPS_SHIFT))&CAN_ESR2_VPS_MASK)
#define CAN_ESR2_LPTM_MASK                       0x7F0000u
#define CAN_ESR2_LPTM_SHIFT                      16u
#define CAN_ESR2_LPTM_WIDTH                      7u
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK)
/* CRCR Bit Fields */
#define CAN_CRCR_TXCRC_MASK                      0x7FFFu
#define CAN_CRCR_TXCRC_SHIFT                     0u
#define CAN_CRCR_TXCRC_WIDTH                     15u
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK)
#define CAN_CRCR_MBCRC_MASK                      0x7F0000u
#define CAN_CRCR_MBCRC_SHIFT                     16u
#define CAN_CRCR_MBCRC_WIDTH                     7u
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK)
/* RXFGMASK Bit Fields */
#define CAN_RXFGMASK_FGM_MASK                    0xFFFFFFFFu
#define CAN_RXFGMASK_FGM_SHIFT                   0u
#define CAN_RXFGMASK_FGM_WIDTH                   32u
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK)
/* RXFIR Bit Fields */
#define CAN_RXFIR_IDHIT_MASK                     0x1FFu
#define CAN_RXFIR_IDHIT_SHIFT                    0u
#define CAN_RXFIR_IDHIT_WIDTH                    9u
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK)
/* CBT Bit Fields */
#define CAN_CBT_EPSEG2_MASK                      0x1Fu
#define CAN_CBT_EPSEG2_SHIFT                     0u
#define CAN_CBT_EPSEG2_WIDTH                     5u
#define CAN_CBT_EPSEG2(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPSEG2_SHIFT))&CAN_CBT_EPSEG2_MASK)
#define CAN_CBT_EPSEG1_MASK                      0x3E0u
#define CAN_CBT_EPSEG1_SHIFT                     5u
#define CAN_CBT_EPSEG1_WIDTH                     5u
#define CAN_CBT_EPSEG1(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPSEG1_SHIFT))&CAN_CBT_EPSEG1_MASK)
#define CAN_CBT_EPROPSEG_MASK                    0xFC00u
#define CAN_CBT_EPROPSEG_SHIFT                   10u
#define CAN_CBT_EPROPSEG_WIDTH                   6u
#define CAN_CBT_EPROPSEG(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPROPSEG_SHIFT))&CAN_CBT_EPROPSEG_MASK)
#define CAN_CBT_ERJW_MASK                        0x1F0000u
#define CAN_CBT_ERJW_SHIFT                       16u
#define CAN_CBT_ERJW_WIDTH                       5u
#define CAN_CBT_ERJW(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_CBT_ERJW_SHIFT))&CAN_CBT_ERJW_MASK)
#define CAN_CBT_EPRESDIV_MASK                    0x7FE00000u
#define CAN_CBT_EPRESDIV_SHIFT                   21u
#define CAN_CBT_EPRESDIV_WIDTH                   10u
#define CAN_CBT_EPRESDIV(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPRESDIV_SHIFT))&CAN_CBT_EPRESDIV_MASK)
#define CAN_CBT_BTF_MASK                         0x80000000u
#define CAN_CBT_BTF_SHIFT                        31u
#define CAN_CBT_BTF_WIDTH                        1u
#define CAN_CBT_BTF(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CBT_BTF_SHIFT))&CAN_CBT_BTF_MASK)
/* IMASK3 Bit Fields */
#define CAN_IMASK3_BUF95TO64M_MASK               0xFFFFFFFFu
#define CAN_IMASK3_BUF95TO64M_SHIFT              0u
#define CAN_IMASK3_BUF95TO64M_WIDTH              32u
#define CAN_IMASK3_BUF95TO64M(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_IMASK3_BUF95TO64M_SHIFT))&CAN_IMASK3_BUF95TO64M_MASK)
/* IFLAG3 Bit Fields */
#define CAN_IFLAG3_BUF95TO64_MASK                0xFFFFFFFFu
#define CAN_IFLAG3_BUF95TO64_SHIFT               0u
#define CAN_IFLAG3_BUF95TO64_WIDTH               32u
#define CAN_IFLAG3_BUF95TO64(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG3_BUF95TO64_SHIFT))&CAN_IFLAG3_BUF95TO64_MASK)
/* RAMn Bit Fields */
#define CAN_RAMn_DATA_BYTE_3_MASK                0xFFu
#define CAN_RAMn_DATA_BYTE_3_SHIFT               0u
#define CAN_RAMn_DATA_BYTE_3_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_3(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_3_SHIFT))&CAN_RAMn_DATA_BYTE_3_MASK)
#define CAN_RAMn_DATA_BYTE_2_MASK                0xFF00u
#define CAN_RAMn_DATA_BYTE_2_SHIFT               8u
#define CAN_RAMn_DATA_BYTE_2_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_2(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_2_SHIFT))&CAN_RAMn_DATA_BYTE_2_MASK)
#define CAN_RAMn_DATA_BYTE_1_MASK                0xFF0000u
#define CAN_RAMn_DATA_BYTE_1_SHIFT               16u
#define CAN_RAMn_DATA_BYTE_1_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_1(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_1_SHIFT))&CAN_RAMn_DATA_BYTE_1_MASK)
#define CAN_RAMn_DATA_BYTE_0_MASK                0xFF000000u
#define CAN_RAMn_DATA_BYTE_0_SHIFT               24u
#define CAN_RAMn_DATA_BYTE_0_WIDTH               8u
#define CAN_RAMn_DATA_BYTE_0(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_RAMn_DATA_BYTE_0_SHIFT))&CAN_RAMn_DATA_BYTE_0_MASK)
/* RXIMR Bit Fields */
#define CAN_RXIMR_MI_MASK                        0xFFFFFFFFu
#define CAN_RXIMR_MI_SHIFT                       0u
#define CAN_RXIMR_MI_WIDTH                       32u
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK)
/* CTRL1_PN Bit Fields */
#define CAN_CTRL1_PN_FCS_MASK                    0x3u
#define CAN_CTRL1_PN_FCS_SHIFT                   0u
#define CAN_CTRL1_PN_FCS_WIDTH                   2u
#define CAN_CTRL1_PN_FCS(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_FCS_SHIFT))&CAN_CTRL1_PN_FCS_MASK)
#define CAN_CTRL1_PN_IDFS_MASK                   0xCu
#define CAN_CTRL1_PN_IDFS_SHIFT                  2u
#define CAN_CTRL1_PN_IDFS_WIDTH                  2u
#define CAN_CTRL1_PN_IDFS(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_IDFS_SHIFT))&CAN_CTRL1_PN_IDFS_MASK)
#define CAN_CTRL1_PN_PLFS_MASK                   0x30u
#define CAN_CTRL1_PN_PLFS_SHIFT                  4u
#define CAN_CTRL1_PN_PLFS_WIDTH                  2u
#define CAN_CTRL1_PN_PLFS(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_PLFS_SHIFT))&CAN_CTRL1_PN_PLFS_MASK)
#define CAN_CTRL1_PN_NMATCH_MASK                 0xFF00u
#define CAN_CTRL1_PN_NMATCH_SHIFT                8u
#define CAN_CTRL1_PN_NMATCH_WIDTH                8u
#define CAN_CTRL1_PN_NMATCH(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_NMATCH_SHIFT))&CAN_CTRL1_PN_NMATCH_MASK)
#define CAN_CTRL1_PN_WUMF_MSK_MASK               0x10000u
#define CAN_CTRL1_PN_WUMF_MSK_SHIFT              16u
#define CAN_CTRL1_PN_WUMF_MSK_WIDTH              1u
#define CAN_CTRL1_PN_WUMF_MSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_WUMF_MSK_SHIFT))&CAN_CTRL1_PN_WUMF_MSK_MASK)
#define CAN_CTRL1_PN_WTOF_MSK_MASK               0x20000u
#define CAN_CTRL1_PN_WTOF_MSK_SHIFT              17u
#define CAN_CTRL1_PN_WTOF_MSK_WIDTH              1u
#define CAN_CTRL1_PN_WTOF_MSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_WTOF_MSK_SHIFT))&CAN_CTRL1_PN_WTOF_MSK_MASK)
/* CTRL2_PN Bit Fields */
#define CAN_CTRL2_PN_MATCHTO_MASK                0xFFFFu
#define CAN_CTRL2_PN_MATCHTO_SHIFT               0u
#define CAN_CTRL2_PN_MATCHTO_WIDTH               16u
#define CAN_CTRL2_PN_MATCHTO(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_PN_MATCHTO_SHIFT))&CAN_CTRL2_PN_MATCHTO_MASK)
/* WU_MTC Bit Fields */
#define CAN_WU_MTC_MCOUNTER_MASK                 0xFF00u
#define CAN_WU_MTC_MCOUNTER_SHIFT                8u
#define CAN_WU_MTC_MCOUNTER_WIDTH                8u
#define CAN_WU_MTC_MCOUNTER(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_WU_MTC_MCOUNTER_SHIFT))&CAN_WU_MTC_MCOUNTER_MASK)
#define CAN_WU_MTC_WUMF_MASK                     0x10000u
#define CAN_WU_MTC_WUMF_SHIFT                    16u
#define CAN_WU_MTC_WUMF_WIDTH                    1u
#define CAN_WU_MTC_WUMF(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WU_MTC_WUMF_SHIFT))&CAN_WU_MTC_WUMF_MASK)
#define CAN_WU_MTC_WTOF_MASK                     0x20000u
#define CAN_WU_MTC_WTOF_SHIFT                    17u
#define CAN_WU_MTC_WTOF_WIDTH                    1u
#define CAN_WU_MTC_WTOF(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WU_MTC_WTOF_SHIFT))&CAN_WU_MTC_WTOF_MASK)
/* FLT_ID1 Bit Fields */
#define CAN_FLT_ID1_FLT_ID1_MASK                 0x1FFFFFFFu
#define CAN_FLT_ID1_FLT_ID1_SHIFT                0u
#define CAN_FLT_ID1_FLT_ID1_WIDTH                29u
#define CAN_FLT_ID1_FLT_ID1(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID1_FLT_ID1_SHIFT))&CAN_FLT_ID1_FLT_ID1_MASK)
#define CAN_FLT_ID1_FLT_RTR_MASK                 0x20000000u
#define CAN_FLT_ID1_FLT_RTR_SHIFT                29u
#define CAN_FLT_ID1_FLT_RTR_WIDTH                1u
#define CAN_FLT_ID1_FLT_RTR(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID1_FLT_RTR_SHIFT))&CAN_FLT_ID1_FLT_RTR_MASK)
#define CAN_FLT_ID1_FLT_IDE_MASK                 0x40000000u
#define CAN_FLT_ID1_FLT_IDE_SHIFT                30u
#define CAN_FLT_ID1_FLT_IDE_WIDTH                1u
#define CAN_FLT_ID1_FLT_IDE(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID1_FLT_IDE_SHIFT))&CAN_FLT_ID1_FLT_IDE_MASK)
/* FLT_DLC Bit Fields */
#define CAN_FLT_DLC_FLT_DLC_HI_MASK              0xFu
#define CAN_FLT_DLC_FLT_DLC_HI_SHIFT             0u
#define CAN_FLT_DLC_FLT_DLC_HI_WIDTH             4u
#define CAN_FLT_DLC_FLT_DLC_HI(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FLT_DLC_FLT_DLC_HI_SHIFT))&CAN_FLT_DLC_FLT_DLC_HI_MASK)
#define CAN_FLT_DLC_FLT_DLC_LO_MASK              0xF0000u
#define CAN_FLT_DLC_FLT_DLC_LO_SHIFT             16u
#define CAN_FLT_DLC_FLT_DLC_LO_WIDTH             4u
#define CAN_FLT_DLC_FLT_DLC_LO(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FLT_DLC_FLT_DLC_LO_SHIFT))&CAN_FLT_DLC_FLT_DLC_LO_MASK)
/* PL1_LO Bit Fields */
#define CAN_PL1_LO_Data_byte_3_MASK              0xFFu
#define CAN_PL1_LO_Data_byte_3_SHIFT             0u
#define CAN_PL1_LO_Data_byte_3_WIDTH             8u
#define CAN_PL1_LO_Data_byte_3(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_3_SHIFT))&CAN_PL1_LO_Data_byte_3_MASK)
#define CAN_PL1_LO_Data_byte_2_MASK              0xFF00u
#define CAN_PL1_LO_Data_byte_2_SHIFT             8u
#define CAN_PL1_LO_Data_byte_2_WIDTH             8u
#define CAN_PL1_LO_Data_byte_2(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_2_SHIFT))&CAN_PL1_LO_Data_byte_2_MASK)
#define CAN_PL1_LO_Data_byte_1_MASK              0xFF0000u
#define CAN_PL1_LO_Data_byte_1_SHIFT             16u
#define CAN_PL1_LO_Data_byte_1_WIDTH             8u
#define CAN_PL1_LO_Data_byte_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_1_SHIFT))&CAN_PL1_LO_Data_byte_1_MASK)
#define CAN_PL1_LO_Data_byte_0_MASK              0xFF000000u
#define CAN_PL1_LO_Data_byte_0_SHIFT             24u
#define CAN_PL1_LO_Data_byte_0_WIDTH             8u
#define CAN_PL1_LO_Data_byte_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_0_SHIFT))&CAN_PL1_LO_Data_byte_0_MASK)
/* PL1_HI Bit Fields */
#define CAN_PL1_HI_Data_byte_7_MASK              0xFFu
#define CAN_PL1_HI_Data_byte_7_SHIFT             0u
#define CAN_PL1_HI_Data_byte_7_WIDTH             8u
#define CAN_PL1_HI_Data_byte_7(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_7_SHIFT))&CAN_PL1_HI_Data_byte_7_MASK)
#define CAN_PL1_HI_Data_byte_6_MASK              0xFF00u
#define CAN_PL1_HI_Data_byte_6_SHIFT             8u
#define CAN_PL1_HI_Data_byte_6_WIDTH             8u
#define CAN_PL1_HI_Data_byte_6(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_6_SHIFT))&CAN_PL1_HI_Data_byte_6_MASK)
#define CAN_PL1_HI_Data_byte_5_MASK              0xFF0000u
#define CAN_PL1_HI_Data_byte_5_SHIFT             16u
#define CAN_PL1_HI_Data_byte_5_WIDTH             8u
#define CAN_PL1_HI_Data_byte_5(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_5_SHIFT))&CAN_PL1_HI_Data_byte_5_MASK)
#define CAN_PL1_HI_Data_byte_4_MASK              0xFF000000u
#define CAN_PL1_HI_Data_byte_4_SHIFT             24u
#define CAN_PL1_HI_Data_byte_4_WIDTH             8u
#define CAN_PL1_HI_Data_byte_4(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_4_SHIFT))&CAN_PL1_HI_Data_byte_4_MASK)
/* FLT_ID2_IDMASK Bit Fields */
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_MASK   0x1FFFFFFFu
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_SHIFT  0u
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_WIDTH  29u
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK(x)     (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_SHIFT))&CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_MASK)
#define CAN_FLT_ID2_IDMASK_RTR_MSK_MASK          0x20000000u
#define CAN_FLT_ID2_IDMASK_RTR_MSK_SHIFT         29u
#define CAN_FLT_ID2_IDMASK_RTR_MSK_WIDTH         1u
#define CAN_FLT_ID2_IDMASK_RTR_MSK(x)            (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID2_IDMASK_RTR_MSK_SHIFT))&CAN_FLT_ID2_IDMASK_RTR_MSK_MASK)
#define CAN_FLT_ID2_IDMASK_IDE_MSK_MASK          0x40000000u
#define CAN_FLT_ID2_IDMASK_IDE_MSK_SHIFT         30u
#define CAN_FLT_ID2_IDMASK_IDE_MSK_WIDTH         1u
#define CAN_FLT_ID2_IDMASK_IDE_MSK(x)            (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID2_IDMASK_IDE_MSK_SHIFT))&CAN_FLT_ID2_IDMASK_IDE_MSK_MASK)
/* PL2_PLMASK_LO Bit Fields */
#define CAN_PL2_PLMASK_LO_Data_byte_3_MASK       0xFFu
#define CAN_PL2_PLMASK_LO_Data_byte_3_SHIFT      0u
#define CAN_PL2_PLMASK_LO_Data_byte_3_WIDTH      8u
#define CAN_PL2_PLMASK_LO_Data_byte_3(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_3_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_3_MASK)
#define CAN_PL2_PLMASK_LO_Data_byte_2_MASK       0xFF00u
#define CAN_PL2_PLMASK_LO_Data_byte_2_SHIFT      8u
#define CAN_PL2_PLMASK_LO_Data_byte_2_WIDTH      8u
#define CAN_PL2_PLMASK_LO_Data_byte_2(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_2_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_2_MASK)
#define CAN_PL2_PLMASK_LO_Data_byte_1_MASK       0xFF0000u
#define CAN_PL2_PLMASK_LO_Data_byte_1_SHIFT      16u
#define CAN_PL2_PLMASK_LO_Data_byte_1_WIDTH      8u
#define CAN_PL2_PLMASK_LO_Data_byte_1(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_1_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_1_MASK)
#define CAN_PL2_PLMASK_LO_Data_byte_0_MASK       0xFF000000u
#define CAN_PL2_PLMASK_LO_Data_byte_0_SHIFT      24u
#define CAN_PL2_PLMASK_LO_Data_byte_0_WIDTH      8u
#define CAN_PL2_PLMASK_LO_Data_byte_0(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_0_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_0_MASK)
/* PL2_PLMASK_HI Bit Fields */
#define CAN_PL2_PLMASK_HI_Data_byte_7_MASK       0xFFu
#define CAN_PL2_PLMASK_HI_Data_byte_7_SHIFT      0u
#define CAN_PL2_PLMASK_HI_Data_byte_7_WIDTH      8u
#define CAN_PL2_PLMASK_HI_Data_byte_7(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_7_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_7_MASK)
#define CAN_PL2_PLMASK_HI_Data_byte_6_MASK       0xFF00u
#define CAN_PL2_PLMASK_HI_Data_byte_6_SHIFT      8u
#define CAN_PL2_PLMASK_HI_Data_byte_6_WIDTH      8u
#define CAN_PL2_PLMASK_HI_Data_byte_6(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_6_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_6_MASK)
#define CAN_PL2_PLMASK_HI_Data_byte_5_MASK       0xFF0000u
#define CAN_PL2_PLMASK_HI_Data_byte_5_SHIFT      16u
#define CAN_PL2_PLMASK_HI_Data_byte_5_WIDTH      8u
#define CAN_PL2_PLMASK_HI_Data_byte_5(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_5_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_5_MASK)
#define CAN_PL2_PLMASK_HI_Data_byte_4_MASK       0xFF000000u
#define CAN_PL2_PLMASK_HI_Data_byte_4_SHIFT      24u
#define CAN_PL2_PLMASK_HI_Data_byte_4_WIDTH      8u
#define CAN_PL2_PLMASK_HI_Data_byte_4(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_4_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_4_MASK)
/* WMBn_CS Bit Fields */
#define CAN_WMBn_CS_DLC_MASK                     0xF0000u
#define CAN_WMBn_CS_DLC_SHIFT                    16u
#define CAN_WMBn_CS_DLC_WIDTH                    4u
#define CAN_WMBn_CS_DLC(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_DLC_SHIFT))&CAN_WMBn_CS_DLC_MASK)
#define CAN_WMBn_CS_RTR_MASK                     0x100000u
#define CAN_WMBn_CS_RTR_SHIFT                    20u
#define CAN_WMBn_CS_RTR_WIDTH                    1u
#define CAN_WMBn_CS_RTR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_RTR_SHIFT))&CAN_WMBn_CS_RTR_MASK)
#define CAN_WMBn_CS_IDE_MASK                     0x200000u
#define CAN_WMBn_CS_IDE_SHIFT                    21u
#define CAN_WMBn_CS_IDE_WIDTH                    1u
#define CAN_WMBn_CS_IDE(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_IDE_SHIFT))&CAN_WMBn_CS_IDE_MASK)
#define CAN_WMBn_CS_SRR_MASK                     0x400000u
#define CAN_WMBn_CS_SRR_SHIFT                    22u
#define CAN_WMBn_CS_SRR_WIDTH                    1u
#define CAN_WMBn_CS_SRR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_SRR_SHIFT))&CAN_WMBn_CS_SRR_MASK)
/* WMBn_ID Bit Fields */
#define CAN_WMBn_ID_ID_MASK                      0x1FFFFFFFu
#define CAN_WMBn_ID_ID_SHIFT                     0u
#define CAN_WMBn_ID_ID_WIDTH                     29u
#define CAN_WMBn_ID_ID(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_ID_ID_SHIFT))&CAN_WMBn_ID_ID_MASK)
/* WMBn_D03 Bit Fields */
#define CAN_WMBn_D03_Data_byte_3_MASK            0xFFu
#define CAN_WMBn_D03_Data_byte_3_SHIFT           0u
#define CAN_WMBn_D03_Data_byte_3_WIDTH           8u
#define CAN_WMBn_D03_Data_byte_3(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_3_SHIFT))&CAN_WMBn_D03_Data_byte_3_MASK)
#define CAN_WMBn_D03_Data_byte_2_MASK            0xFF00u
#define CAN_WMBn_D03_Data_byte_2_SHIFT           8u
#define CAN_WMBn_D03_Data_byte_2_WIDTH           8u
#define CAN_WMBn_D03_Data_byte_2(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_2_SHIFT))&CAN_WMBn_D03_Data_byte_2_MASK)
#define CAN_WMBn_D03_Data_byte_1_MASK            0xFF0000u
#define CAN_WMBn_D03_Data_byte_1_SHIFT           16u
#define CAN_WMBn_D03_Data_byte_1_WIDTH           8u
#define CAN_WMBn_D03_Data_byte_1(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_1_SHIFT))&CAN_WMBn_D03_Data_byte_1_MASK)
#define CAN_WMBn_D03_Data_byte_0_MASK            0xFF000000u
#define CAN_WMBn_D03_Data_byte_0_SHIFT           24u
#define CAN_WMBn_D03_Data_byte_0_WIDTH           8u
#define CAN_WMBn_D03_Data_byte_0(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_0_SHIFT))&CAN_WMBn_D03_Data_byte_0_MASK)
/* WMBn_D47 Bit Fields */
#define CAN_WMBn_D47_Data_byte_7_MASK            0xFFu
#define CAN_WMBn_D47_Data_byte_7_SHIFT           0u
#define CAN_WMBn_D47_Data_byte_7_WIDTH           8u
#define CAN_WMBn_D47_Data_byte_7(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_7_SHIFT))&CAN_WMBn_D47_Data_byte_7_MASK)
#define CAN_WMBn_D47_Data_byte_6_MASK            0xFF00u
#define CAN_WMBn_D47_Data_byte_6_SHIFT           8u
#define CAN_WMBn_D47_Data_byte_6_WIDTH           8u
#define CAN_WMBn_D47_Data_byte_6(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_6_SHIFT))&CAN_WMBn_D47_Data_byte_6_MASK)
#define CAN_WMBn_D47_Data_byte_5_MASK            0xFF0000u
#define CAN_WMBn_D47_Data_byte_5_SHIFT           16u
#define CAN_WMBn_D47_Data_byte_5_WIDTH           8u
#define CAN_WMBn_D47_Data_byte_5(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_5_SHIFT))&CAN_WMBn_D47_Data_byte_5_MASK)
#define CAN_WMBn_D47_Data_byte_4_MASK            0xFF000000u
#define CAN_WMBn_D47_Data_byte_4_SHIFT           24u
#define CAN_WMBn_D47_Data_byte_4_WIDTH           8u
#define CAN_WMBn_D47_Data_byte_4(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_4_SHIFT))&CAN_WMBn_D47_Data_byte_4_MASK)
/* FDCTRL Bit Fields */
#define CAN_FDCTRL_TDCVAL_MASK                   0x3Fu
#define CAN_FDCTRL_TDCVAL_SHIFT                  0u
#define CAN_FDCTRL_TDCVAL_WIDTH                  6u
#define CAN_FDCTRL_TDCVAL(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCVAL_SHIFT))&CAN_FDCTRL_TDCVAL_MASK)
#define CAN_FDCTRL_TDCOFF_MASK                   0x1F00u
#define CAN_FDCTRL_TDCOFF_SHIFT                  8u
#define CAN_FDCTRL_TDCOFF_WIDTH                  5u
#define CAN_FDCTRL_TDCOFF(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCOFF_SHIFT))&CAN_FDCTRL_TDCOFF_MASK)
#define CAN_FDCTRL_TDCFAIL_MASK                  0x4000u
#define CAN_FDCTRL_TDCFAIL_SHIFT                 14u
#define CAN_FDCTRL_TDCFAIL_WIDTH                 1u
#define CAN_FDCTRL_TDCFAIL(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCFAIL_SHIFT))&CAN_FDCTRL_TDCFAIL_MASK)
#define CAN_FDCTRL_TDCEN_MASK                    0x8000u
#define CAN_FDCTRL_TDCEN_SHIFT                   15u
#define CAN_FDCTRL_TDCEN_WIDTH                   1u
#define CAN_FDCTRL_TDCEN(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCEN_SHIFT))&CAN_FDCTRL_TDCEN_MASK)
#define CAN_FDCTRL_MBDSR0_MASK                   0x30000u
#define CAN_FDCTRL_MBDSR0_SHIFT                  16u
#define CAN_FDCTRL_MBDSR0_WIDTH                  2u
#define CAN_FDCTRL_MBDSR0(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_MBDSR0_SHIFT))&CAN_FDCTRL_MBDSR0_MASK)
#define CAN_FDCTRL_MBDSR1_MASK                   0x180000u
#define CAN_FDCTRL_MBDSR1_SHIFT                  19u
#define CAN_FDCTRL_MBDSR1_WIDTH                  2u
#define CAN_FDCTRL_MBDSR1(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_MBDSR1_SHIFT))&CAN_FDCTRL_MBDSR1_MASK)
#define CAN_FDCTRL_MBDSR2_MASK                   0xC00000u
#define CAN_FDCTRL_MBDSR2_SHIFT                  22u
#define CAN_FDCTRL_MBDSR2_WIDTH                  2u
#define CAN_FDCTRL_MBDSR2(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_MBDSR2_SHIFT))&CAN_FDCTRL_MBDSR2_MASK)
#define CAN_FDCTRL_FDRATE_MASK                   0x80000000u
#define CAN_FDCTRL_FDRATE_SHIFT                  31u
#define CAN_FDCTRL_FDRATE_WIDTH                  1u
#define CAN_FDCTRL_FDRATE(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_FDRATE_SHIFT))&CAN_FDCTRL_FDRATE_MASK)
/* FDCBT Bit Fields */
#define CAN_FDCBT_FPSEG2_MASK                    0x7u
#define CAN_FDCBT_FPSEG2_SHIFT                   0u
#define CAN_FDCBT_FPSEG2_WIDTH                   3u
#define CAN_FDCBT_FPSEG2(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPSEG2_SHIFT))&CAN_FDCBT_FPSEG2_MASK)
#define CAN_FDCBT_FPSEG1_MASK                    0xE0u
#define CAN_FDCBT_FPSEG1_SHIFT                   5u
#define CAN_FDCBT_FPSEG1_WIDTH                   3u
#define CAN_FDCBT_FPSEG1(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPSEG1_SHIFT))&CAN_FDCBT_FPSEG1_MASK)
#define CAN_FDCBT_FPROPSEG_MASK                  0x7C00u
#define CAN_FDCBT_FPROPSEG_SHIFT                 10u
#define CAN_FDCBT_FPROPSEG_WIDTH                 5u
#define CAN_FDCBT_FPROPSEG(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPROPSEG_SHIFT))&CAN_FDCBT_FPROPSEG_MASK)
#define CAN_FDCBT_FRJW_MASK                      0x70000u
#define CAN_FDCBT_FRJW_SHIFT                     16u
#define CAN_FDCBT_FRJW_WIDTH                     3u
#define CAN_FDCBT_FRJW(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FRJW_SHIFT))&CAN_FDCBT_FRJW_MASK)
#define CAN_FDCBT_FPRESDIV_MASK                  0x3FF00000u
#define CAN_FDCBT_FPRESDIV_SHIFT                 20u
#define CAN_FDCBT_FPRESDIV_WIDTH                 10u
#define CAN_FDCBT_FPRESDIV(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPRESDIV_SHIFT))&CAN_FDCBT_FPRESDIV_MASK)
/* FDCRC Bit Fields */
#define CAN_FDCRC_FD_TXCRC_MASK                  0x1FFFFFu
#define CAN_FDCRC_FD_TXCRC_SHIFT                 0u
#define CAN_FDCRC_FD_TXCRC_WIDTH                 21u
#define CAN_FDCRC_FD_TXCRC(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCRC_FD_TXCRC_SHIFT))&CAN_FDCRC_FD_TXCRC_MASK)
#define CAN_FDCRC_FD_MBCRC_MASK                  0x7F000000u
#define CAN_FDCRC_FD_MBCRC_SHIFT                 24u
#define CAN_FDCRC_FD_MBCRC_WIDTH                 7u
#define CAN_FDCRC_FD_MBCRC(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCRC_FD_MBCRC_SHIFT))&CAN_FDCRC_FD_MBCRC_MASK)

/*!
 * @}
 */ /* end of group CAN_Register_Masks */


/*!
 * @}
 */ /* end of group CAN_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMP Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMP_Peripheral_Access_Layer CMP Peripheral Access Layer
 * @{
 */


/** CMP - Size of Registers Arrays */

/** CMP - Register Layout Typedef */
typedef struct {
  __IO uint32_t C0;                                /**< CMP Control Register 0, offset: 0x0 */
  __IO uint32_t C1;                                /**< CMP Control Register 1, offset: 0x4 */
  __IO uint32_t C2;                                /**< CMP Control Register 2, offset: 0x8 */
} CMP_Type, *CMP_MemMapPtr;

 /** Number of instances of the CMP module. */
#define CMP_INSTANCE_COUNT                       (3u)


/* CMP - Peripheral instance base addresses */
/** Peripheral CMP_0 base address */
#define CMP_0_BASE                               (0xFFCDC000u)
/** Peripheral CMP_0 base pointer */
#define CMP_0                                    ((CMP_Type *)CMP_0_BASE)
/** Peripheral CMP_1 base address */
#define CMP_1_BASE                               (0xFFCE0000u)
/** Peripheral CMP_1 base pointer */
#define CMP_1                                    ((CMP_Type *)CMP_1_BASE)
/** Peripheral CMP_2 base address */
#define CMP_2_BASE                               (0xFFCE4000u)
/** Peripheral CMP_2 base pointer */
#define CMP_2                                    ((CMP_Type *)CMP_2_BASE)
/** Array initializer of CMP peripheral base addresses */
#define CMP_BASE_ADDRS                           { CMP_0_BASE, CMP_1_BASE, CMP_2_BASE }
/** Array initializer of CMP peripheral base pointers */
#define CMP_BASE_PTRS                            { CMP_0, CMP_1, CMP_2 }

/* ----------------------------------------------------------------------------
   -- CMP Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMP_Register_Masks CMP Register Masks
 * @{
 */

/* C0 Bit Fields */
#define CMP_C0_HYSTCTR_MASK                      0x3u
#define CMP_C0_HYSTCTR_SHIFT                     0u
#define CMP_C0_HYSTCTR_WIDTH                     2u
#define CMP_C0_HYSTCTR(x)                        (((uint32_t)(((uint32_t)(x))<<CMP_C0_HYSTCTR_SHIFT))&CMP_C0_HYSTCTR_MASK)
#define CMP_C0_FILTER_CNT_MASK                   0x70u
#define CMP_C0_FILTER_CNT_SHIFT                  4u
#define CMP_C0_FILTER_CNT_WIDTH                  3u
#define CMP_C0_FILTER_CNT(x)                     (((uint32_t)(((uint32_t)(x))<<CMP_C0_FILTER_CNT_SHIFT))&CMP_C0_FILTER_CNT_MASK)
#define CMP_C0_EN_MASK                           0x100u
#define CMP_C0_EN_SHIFT                          8u
#define CMP_C0_EN_WIDTH                          1u
#define CMP_C0_EN(x)                             (((uint32_t)(((uint32_t)(x))<<CMP_C0_EN_SHIFT))&CMP_C0_EN_MASK)
#define CMP_C0_OPE_MASK                          0x200u
#define CMP_C0_OPE_SHIFT                         9u
#define CMP_C0_OPE_WIDTH                         1u
#define CMP_C0_OPE(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_OPE_SHIFT))&CMP_C0_OPE_MASK)
#define CMP_C0_COS_MASK                          0x400u
#define CMP_C0_COS_SHIFT                         10u
#define CMP_C0_COS_WIDTH                         1u
#define CMP_C0_COS(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_COS_SHIFT))&CMP_C0_COS_MASK)
#define CMP_C0_INVT_MASK                         0x800u
#define CMP_C0_INVT_SHIFT                        11u
#define CMP_C0_INVT_WIDTH                        1u
#define CMP_C0_INVT(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C0_INVT_SHIFT))&CMP_C0_INVT_MASK)
#define CMP_C0_PMODE_MASK                        0x1000u
#define CMP_C0_PMODE_SHIFT                       12u
#define CMP_C0_PMODE_WIDTH                       1u
#define CMP_C0_PMODE(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C0_PMODE_SHIFT))&CMP_C0_PMODE_MASK)
#define CMP_C0_WE_MASK                           0x4000u
#define CMP_C0_WE_SHIFT                          14u
#define CMP_C0_WE_WIDTH                          1u
#define CMP_C0_WE(x)                             (((uint32_t)(((uint32_t)(x))<<CMP_C0_WE_SHIFT))&CMP_C0_WE_MASK)
#define CMP_C0_SE_MASK                           0x8000u
#define CMP_C0_SE_SHIFT                          15u
#define CMP_C0_SE_WIDTH                          1u
#define CMP_C0_SE(x)                             (((uint32_t)(((uint32_t)(x))<<CMP_C0_SE_SHIFT))&CMP_C0_SE_MASK)
#define CMP_C0_FPR_MASK                          0xFF0000u
#define CMP_C0_FPR_SHIFT                         16u
#define CMP_C0_FPR_WIDTH                         8u
#define CMP_C0_FPR(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_FPR_SHIFT))&CMP_C0_FPR_MASK)
#define CMP_C0_COUT_MASK                         0x1000000u
#define CMP_C0_COUT_SHIFT                        24u
#define CMP_C0_COUT_WIDTH                        1u
#define CMP_C0_COUT(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C0_COUT_SHIFT))&CMP_C0_COUT_MASK)
#define CMP_C0_CFF_MASK                          0x2000000u
#define CMP_C0_CFF_SHIFT                         25u
#define CMP_C0_CFF_WIDTH                         1u
#define CMP_C0_CFF(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_CFF_SHIFT))&CMP_C0_CFF_MASK)
#define CMP_C0_CFR_MASK                          0x4000000u
#define CMP_C0_CFR_SHIFT                         26u
#define CMP_C0_CFR_WIDTH                         1u
#define CMP_C0_CFR(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_CFR_SHIFT))&CMP_C0_CFR_MASK)
#define CMP_C0_IEF_MASK                          0x8000000u
#define CMP_C0_IEF_SHIFT                         27u
#define CMP_C0_IEF_WIDTH                         1u
#define CMP_C0_IEF(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_IEF_SHIFT))&CMP_C0_IEF_MASK)
#define CMP_C0_IER_MASK                          0x10000000u
#define CMP_C0_IER_SHIFT                         28u
#define CMP_C0_IER_WIDTH                         1u
#define CMP_C0_IER(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_IER_SHIFT))&CMP_C0_IER_MASK)
#define CMP_C0_DMAEN_MASK                        0x40000000u
#define CMP_C0_DMAEN_SHIFT                       30u
#define CMP_C0_DMAEN_WIDTH                       1u
#define CMP_C0_DMAEN(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C0_DMAEN_SHIFT))&CMP_C0_DMAEN_MASK)
/* C1 Bit Fields */
#define CMP_C1_VOSEL_MASK                        0x3Fu
#define CMP_C1_VOSEL_SHIFT                       0u
#define CMP_C1_VOSEL_WIDTH                       6u
#define CMP_C1_VOSEL(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_VOSEL_SHIFT))&CMP_C1_VOSEL_MASK)
#define CMP_C1_VRSEL_MASK                        0x40u
#define CMP_C1_VRSEL_SHIFT                       6u
#define CMP_C1_VRSEL_WIDTH                       1u
#define CMP_C1_VRSEL(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_VRSEL_SHIFT))&CMP_C1_VRSEL_MASK)
#define CMP_C1_DACEN_MASK                        0x80u
#define CMP_C1_DACEN_SHIFT                       7u
#define CMP_C1_DACEN_WIDTH                       1u
#define CMP_C1_DACEN(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_DACEN_SHIFT))&CMP_C1_DACEN_MASK)
#define CMP_C1_MSEL_MASK                         0x700u
#define CMP_C1_MSEL_SHIFT                        8u
#define CMP_C1_MSEL_WIDTH                        3u
#define CMP_C1_MSEL(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_MSEL_SHIFT))&CMP_C1_MSEL_MASK)
#define CMP_C1_PSEL_MASK                         0x3800u
#define CMP_C1_PSEL_SHIFT                        11u
#define CMP_C1_PSEL_WIDTH                        3u
#define CMP_C1_PSEL(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_PSEL_SHIFT))&CMP_C1_PSEL_MASK)
#define CMP_C1_DMSEL_MASK                        0x4000u
#define CMP_C1_DMSEL_SHIFT                       14u
#define CMP_C1_DMSEL_WIDTH                       1u
#define CMP_C1_DMSEL(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_DMSEL_SHIFT))&CMP_C1_DMSEL_MASK)
#define CMP_C1_DPSEL_MASK                        0x8000u
#define CMP_C1_DPSEL_SHIFT                       15u
#define CMP_C1_DPSEL_WIDTH                       1u
#define CMP_C1_DPSEL(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_DPSEL_SHIFT))&CMP_C1_DPSEL_MASK)
#define CMP_C1_CHN0_MASK                         0x10000u
#define CMP_C1_CHN0_SHIFT                        16u
#define CMP_C1_CHN0_WIDTH                        1u
#define CMP_C1_CHN0(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN0_SHIFT))&CMP_C1_CHN0_MASK)
#define CMP_C1_CHN1_MASK                         0x20000u
#define CMP_C1_CHN1_SHIFT                        17u
#define CMP_C1_CHN1_WIDTH                        1u
#define CMP_C1_CHN1(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN1_SHIFT))&CMP_C1_CHN1_MASK)
#define CMP_C1_CHN2_MASK                         0x40000u
#define CMP_C1_CHN2_SHIFT                        18u
#define CMP_C1_CHN2_WIDTH                        1u
#define CMP_C1_CHN2(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN2_SHIFT))&CMP_C1_CHN2_MASK)
#define CMP_C1_CHN3_MASK                         0x80000u
#define CMP_C1_CHN3_SHIFT                        19u
#define CMP_C1_CHN3_WIDTH                        1u
#define CMP_C1_CHN3(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN3_SHIFT))&CMP_C1_CHN3_MASK)
#define CMP_C1_CHN4_MASK                         0x100000u
#define CMP_C1_CHN4_SHIFT                        20u
#define CMP_C1_CHN4_WIDTH                        1u
#define CMP_C1_CHN4(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN4_SHIFT))&CMP_C1_CHN4_MASK)
#define CMP_C1_CHN5_MASK                         0x200000u
#define CMP_C1_CHN5_SHIFT                        21u
#define CMP_C1_CHN5_WIDTH                        1u
#define CMP_C1_CHN5(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN5_SHIFT))&CMP_C1_CHN5_MASK)
#define CMP_C1_CHN6_MASK                         0x400000u
#define CMP_C1_CHN6_SHIFT                        22u
#define CMP_C1_CHN6_WIDTH                        1u
#define CMP_C1_CHN6(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN6_SHIFT))&CMP_C1_CHN6_MASK)
#define CMP_C1_CHN7_MASK                         0x800000u
#define CMP_C1_CHN7_SHIFT                        23u
#define CMP_C1_CHN7_WIDTH                        1u
#define CMP_C1_CHN7(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN7_SHIFT))&CMP_C1_CHN7_MASK)
/* C2 Bit Fields */
#define CMP_C2_ACOn_MASK                         0xFFu
#define CMP_C2_ACOn_SHIFT                        0u
#define CMP_C2_ACOn_WIDTH                        8u
#define CMP_C2_ACOn(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_ACOn_SHIFT))&CMP_C2_ACOn_MASK)
#define CMP_C2_NSAM_MASK                         0xC000u
#define CMP_C2_NSAM_SHIFT                        14u
#define CMP_C2_NSAM_WIDTH                        2u
#define CMP_C2_NSAM(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_NSAM_SHIFT))&CMP_C2_NSAM_MASK)
#define CMP_C2_CH0F_MASK                         0x10000u
#define CMP_C2_CH0F_SHIFT                        16u
#define CMP_C2_CH0F_WIDTH                        1u
#define CMP_C2_CH0F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH0F_SHIFT))&CMP_C2_CH0F_MASK)
#define CMP_C2_CH1F_MASK                         0x20000u
#define CMP_C2_CH1F_SHIFT                        17u
#define CMP_C2_CH1F_WIDTH                        1u
#define CMP_C2_CH1F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH1F_SHIFT))&CMP_C2_CH1F_MASK)
#define CMP_C2_CH2F_MASK                         0x40000u
#define CMP_C2_CH2F_SHIFT                        18u
#define CMP_C2_CH2F_WIDTH                        1u
#define CMP_C2_CH2F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH2F_SHIFT))&CMP_C2_CH2F_MASK)
#define CMP_C2_CH3F_MASK                         0x80000u
#define CMP_C2_CH3F_SHIFT                        19u
#define CMP_C2_CH3F_WIDTH                        1u
#define CMP_C2_CH3F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH3F_SHIFT))&CMP_C2_CH3F_MASK)
#define CMP_C2_CH4F_MASK                         0x100000u
#define CMP_C2_CH4F_SHIFT                        20u
#define CMP_C2_CH4F_WIDTH                        1u
#define CMP_C2_CH4F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH4F_SHIFT))&CMP_C2_CH4F_MASK)
#define CMP_C2_CH5F_MASK                         0x200000u
#define CMP_C2_CH5F_SHIFT                        21u
#define CMP_C2_CH5F_WIDTH                        1u
#define CMP_C2_CH5F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH5F_SHIFT))&CMP_C2_CH5F_MASK)
#define CMP_C2_CH6F_MASK                         0x400000u
#define CMP_C2_CH6F_SHIFT                        22u
#define CMP_C2_CH6F_WIDTH                        1u
#define CMP_C2_CH6F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH6F_SHIFT))&CMP_C2_CH6F_MASK)
#define CMP_C2_CH7F_MASK                         0x800000u
#define CMP_C2_CH7F_SHIFT                        23u
#define CMP_C2_CH7F_WIDTH                        1u
#define CMP_C2_CH7F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH7F_SHIFT))&CMP_C2_CH7F_MASK)
#define CMP_C2_FXMXCH_MASK                       0xE000000u
#define CMP_C2_FXMXCH_SHIFT                      25u
#define CMP_C2_FXMXCH_WIDTH                      3u
#define CMP_C2_FXMXCH(x)                         (((uint32_t)(((uint32_t)(x))<<CMP_C2_FXMXCH_SHIFT))&CMP_C2_FXMXCH_MASK)
#define CMP_C2_FXDACI_MASK                       0x10000000u
#define CMP_C2_FXDACI_SHIFT                      28u
#define CMP_C2_FXDACI_WIDTH                      1u
#define CMP_C2_FXDACI(x)                         (((uint32_t)(((uint32_t)(x))<<CMP_C2_FXDACI_SHIFT))&CMP_C2_FXDACI_MASK)
#define CMP_C2_FXMP_MASK                         0x20000000u
#define CMP_C2_FXMP_SHIFT                        29u
#define CMP_C2_FXMP_WIDTH                        1u
#define CMP_C2_FXMP(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_FXMP_SHIFT))&CMP_C2_FXMP_MASK)
#define CMP_C2_RRIE_MASK                         0x40000000u
#define CMP_C2_RRIE_SHIFT                        30u
#define CMP_C2_RRIE_WIDTH                        1u
#define CMP_C2_RRIE(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_RRIE_SHIFT))&CMP_C2_RRIE_MASK)
#define CMP_C2_RRE_MASK                          0x80000000u
#define CMP_C2_RRE_SHIFT                         31u
#define CMP_C2_RRE_WIDTH                         1u
#define CMP_C2_RRE(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C2_RRE_SHIFT))&CMP_C2_RRE_MASK)

/*!
 * @}
 */ /* end of group CMP_Register_Masks */


/*!
 * @}
 */ /* end of group CMP_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CMU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_Peripheral_Access_Layer CMU Peripheral Access Layer
 * @{
 */


/** CMU - Size of Registers Arrays */

/** CMU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CSR;                               /**< CMU Control Status Register, offset: 0x0 */
  __I  uint32_t FDR;                               /**< CMU Frequency Display Register, offset: 0x4 */
  __IO uint32_t HFREFR;                            /**< CMU High Frequency Reference Register CLKMN1, offset: 0x8 */
  __IO uint32_t LFREFR;                            /**< CMU Low Frequency Reference Register CLKMN1, offset: 0xC */
  __IO uint32_t ISR;                               /**< CMU Interrupt Status Register, offset: 0x10 */
       uint8_t RESERVED_0[4];
  __IO uint32_t MDR;                               /**< CMU Measurement Duration Register, offset: 0x18 */
} CMU_Type, *CMU_MemMapPtr;

 /** Number of instances of the CMU module. */
#define CMU_INSTANCE_COUNT                       (1u)


/* CMU - Peripheral instance base addresses */
/** Peripheral CMU base address */
#define CMU_BASE                                 (0xFFFB0140u)
/** Peripheral CMU base pointer */
#define CMU                                      ((CMU_Type *)CMU_BASE)
/** Array initializer of CMU peripheral base addresses */
#define CMU_BASE_ADDRS                           { CMU_BASE }
/** Array initializer of CMU peripheral base pointers */
#define CMU_BASE_PTRS                            { CMU }

/* ----------------------------------------------------------------------------
   -- CMU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CMU_Register_Masks CMU Register Masks
 * @{
 */

/* CSR Bit Fields */
#define CMU_CSR_CME_MASK                         0x1u
#define CMU_CSR_CME_SHIFT                        0u
#define CMU_CSR_CME_WIDTH                        1u
#define CMU_CSR_CME(x)                           (((uint32_t)(((uint32_t)(x))<<CMU_CSR_CME_SHIFT))&CMU_CSR_CME_MASK)
#define CMU_CSR_RCDIV_MASK                       0x6u
#define CMU_CSR_RCDIV_SHIFT                      1u
#define CMU_CSR_RCDIV_WIDTH                      2u
#define CMU_CSR_RCDIV(x)                         (((uint32_t)(((uint32_t)(x))<<CMU_CSR_RCDIV_SHIFT))&CMU_CSR_RCDIV_MASK)
#define CMU_CSR_CKSEL1_MASK                      0x300u
#define CMU_CSR_CKSEL1_SHIFT                     8u
#define CMU_CSR_CKSEL1_WIDTH                     2u
#define CMU_CSR_CKSEL1(x)                        (((uint32_t)(((uint32_t)(x))<<CMU_CSR_CKSEL1_SHIFT))&CMU_CSR_CKSEL1_MASK)
#define CMU_CSR_SFM_MASK                         0x800000u
#define CMU_CSR_SFM_SHIFT                        23u
#define CMU_CSR_SFM_WIDTH                        1u
#define CMU_CSR_SFM(x)                           (((uint32_t)(((uint32_t)(x))<<CMU_CSR_SFM_SHIFT))&CMU_CSR_SFM_MASK)
/* FDR Bit Fields */
#define CMU_FDR_FD_MASK                          0xFFFFFu
#define CMU_FDR_FD_SHIFT                         0u
#define CMU_FDR_FD_WIDTH                         20u
#define CMU_FDR_FD(x)                            (((uint32_t)(((uint32_t)(x))<<CMU_FDR_FD_SHIFT))&CMU_FDR_FD_MASK)
/* HFREFR Bit Fields */
#define CMU_HFREFR_HFREF_MASK                    0xFFFu
#define CMU_HFREFR_HFREF_SHIFT                   0u
#define CMU_HFREFR_HFREF_WIDTH                   12u
#define CMU_HFREFR_HFREF(x)                      (((uint32_t)(((uint32_t)(x))<<CMU_HFREFR_HFREF_SHIFT))&CMU_HFREFR_HFREF_MASK)
/* LFREFR Bit Fields */
#define CMU_LFREFR_LFREF_MASK                    0xFFFu
#define CMU_LFREFR_LFREF_SHIFT                   0u
#define CMU_LFREFR_LFREF_WIDTH                   12u
#define CMU_LFREFR_LFREF(x)                      (((uint32_t)(((uint32_t)(x))<<CMU_LFREFR_LFREF_SHIFT))&CMU_LFREFR_LFREF_MASK)
/* ISR Bit Fields */
#define CMU_ISR_OLRI_MASK                        0x1u
#define CMU_ISR_OLRI_SHIFT                       0u
#define CMU_ISR_OLRI_WIDTH                       1u
#define CMU_ISR_OLRI(x)                          (((uint32_t)(((uint32_t)(x))<<CMU_ISR_OLRI_SHIFT))&CMU_ISR_OLRI_MASK)
#define CMU_ISR_FLLI_MASK                        0x2u
#define CMU_ISR_FLLI_SHIFT                       1u
#define CMU_ISR_FLLI_WIDTH                       1u
#define CMU_ISR_FLLI(x)                          (((uint32_t)(((uint32_t)(x))<<CMU_ISR_FLLI_SHIFT))&CMU_ISR_FLLI_MASK)
#define CMU_ISR_FHHI_MASK                        0x4u
#define CMU_ISR_FHHI_SHIFT                       2u
#define CMU_ISR_FHHI_WIDTH                       1u
#define CMU_ISR_FHHI(x)                          (((uint32_t)(((uint32_t)(x))<<CMU_ISR_FHHI_SHIFT))&CMU_ISR_FHHI_MASK)
/* MDR Bit Fields */
#define CMU_MDR_MD_MASK                          0xFFFFFu
#define CMU_MDR_MD_SHIFT                         0u
#define CMU_MDR_MD_WIDTH                         20u
#define CMU_MDR_MD(x)                            (((uint32_t)(((uint32_t)(x))<<CMU_MDR_MD_SHIFT))&CMU_MDR_MD_MASK)

/*!
 * @}
 */ /* end of group CMU_Register_Masks */


/*!
 * @}
 */ /* end of group CMU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- CRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Peripheral_Access_Layer CRC Peripheral Access Layer
 * @{
 */


/** CRC - Size of Registers Arrays */

/** CRC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CFG;                               /**< Configuration Register, offset: 0x0 */
  __IO uint32_t INP;                               /**< Input Register, offset: 0x4 */
  __IO uint32_t CSTAT;                             /**< Current Status Register, offset: 0x8 */
  __I  uint32_t OUTP;                              /**< Output Register, offset: 0xC */
} CRC_Type, *CRC_MemMapPtr;

 /** Number of instances of the CRC module. */
#define CRC_INSTANCE_COUNT                       (1u)


/* CRC - Peripheral instance base addresses */
/** Peripheral CRC base address */
#define CRC_BASE                                 (0xFFF64000u)
/** Peripheral CRC base pointer */
#define CRC                                      ((CRC_Type *)CRC_BASE)
/** Array initializer of CRC peripheral base addresses */
#define CRC_BASE_ADDRS                           { CRC_BASE }
/** Array initializer of CRC peripheral base pointers */
#define CRC_BASE_PTRS                            { CRC }

/* ----------------------------------------------------------------------------
   -- CRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup CRC_Register_Masks CRC Register Masks
 * @{
 */

/* CFG Bit Fields */
#define CRC_CFG_INV_MASK                         0x1u
#define CRC_CFG_INV_SHIFT                        0u
#define CRC_CFG_INV_WIDTH                        1u
#define CRC_CFG_INV(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_CFG_INV_SHIFT))&CRC_CFG_INV_MASK)
#define CRC_CFG_SWAP_MASK                        0x2u
#define CRC_CFG_SWAP_SHIFT                       1u
#define CRC_CFG_SWAP_WIDTH                       1u
#define CRC_CFG_SWAP(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CFG_SWAP_SHIFT))&CRC_CFG_SWAP_MASK)
#define CRC_CFG_POLYG_MASK                       0xCu
#define CRC_CFG_POLYG_SHIFT                      2u
#define CRC_CFG_POLYG_WIDTH                      2u
#define CRC_CFG_POLYG(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CFG_POLYG_SHIFT))&CRC_CFG_POLYG_MASK)
#define CRC_CFG_SWAP_BITWISE_MASK                0x10u
#define CRC_CFG_SWAP_BITWISE_SHIFT               4u
#define CRC_CFG_SWAP_BITWISE_WIDTH               1u
#define CRC_CFG_SWAP_BITWISE(x)                  (((uint32_t)(((uint32_t)(x))<<CRC_CFG_SWAP_BITWISE_SHIFT))&CRC_CFG_SWAP_BITWISE_MASK)
#define CRC_CFG_SWAP_BYTEWISE_MASK               0x20u
#define CRC_CFG_SWAP_BYTEWISE_SHIFT              5u
#define CRC_CFG_SWAP_BYTEWISE_WIDTH              1u
#define CRC_CFG_SWAP_BYTEWISE(x)                 (((uint32_t)(((uint32_t)(x))<<CRC_CFG_SWAP_BYTEWISE_SHIFT))&CRC_CFG_SWAP_BYTEWISE_MASK)
/* INP Bit Fields */
#define CRC_INP_INP_MASK                         0xFFFFFFFFu
#define CRC_INP_INP_SHIFT                        0u
#define CRC_INP_INP_WIDTH                        32u
#define CRC_INP_INP(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_INP_INP_SHIFT))&CRC_INP_INP_MASK)
/* CSTAT Bit Fields */
#define CRC_CSTAT_CSTAT_MASK                     0xFFFFFFFFu
#define CRC_CSTAT_CSTAT_SHIFT                    0u
#define CRC_CSTAT_CSTAT_WIDTH                    32u
#define CRC_CSTAT_CSTAT(x)                       (((uint32_t)(((uint32_t)(x))<<CRC_CSTAT_CSTAT_SHIFT))&CRC_CSTAT_CSTAT_MASK)
/* OUTP Bit Fields */
#define CRC_OUTP_OUTP_MASK                       0xFFFFFFFFu
#define CRC_OUTP_OUTP_SHIFT                      0u
#define CRC_OUTP_OUTP_WIDTH                      32u
#define CRC_OUTP_OUTP(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_OUTP_OUTP_SHIFT))&CRC_OUTP_OUTP_MASK)

/*!
 * @}
 */ /* end of group CRC_Register_Masks */


/*!
 * @}
 */ /* end of group CRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMA Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Peripheral_Access_Layer DMA Peripheral Access Layer
 * @{
 */


/** DMA - Size of Registers Arrays */
#define DMA_DCHPRI_COUNT                         32u
#define DMA_DCHMID_COUNT                         32u
#define DMA_TCD_COUNT                            32u

/** DMA - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< Control Register, offset: 0x0 */
  __I  uint32_t ES;                                /**< Error Status Register, offset: 0x4 */
       uint8_t RESERVED_0[4];
  __IO uint32_t ERQ;                               /**< Enable Request Register, offset: 0xC */
       uint8_t RESERVED_1[4];
  __IO uint32_t EEI;                               /**< Enable Error Interrupt Register, offset: 0x14 */
  __O  uint8_t SERQ;                               /**< Set Enable Request Register, offset: 0x18 */
  __O  uint8_t CERQ;                               /**< Clear Enable Request Register, offset: 0x19 */
  __O  uint8_t SEEI;                               /**< Set Enable Error Interrupt Register, offset: 0x1A */
  __O  uint8_t CEEI;                               /**< Clear Enable Error Interrupt Register, offset: 0x1B */
  __O  uint8_t CINT;                               /**< Clear Interrupt Request Register, offset: 0x1C */
  __O  uint8_t CERR;                               /**< Clear Error Register, offset: 0x1D */
  __O  uint8_t SSRT;                               /**< Set START Bit Register, offset: 0x1E */
  __O  uint8_t CDNE;                               /**< Clear DONE Status Bit Register, offset: 0x1F */
       uint8_t RESERVED_2[4];
  __IO uint32_t INT;                               /**< Interrupt Request Register, offset: 0x24 */
       uint8_t RESERVED_3[4];
  __IO uint32_t ERR;                               /**< Error Register, offset: 0x2C */
       uint8_t RESERVED_4[4];
  __I  uint32_t HRS;                               /**< Hardware Request Status Register, offset: 0x34 */
       uint8_t RESERVED_5[200];
  __IO uint8_t DCHPRI[DMA_DCHPRI_COUNT];           /**< Channel n Priority Register, array offset: 0x100, array step: 0x1 */
       uint8_t RESERVED_6[32];
  __IO uint8_t DCHMID[DMA_DCHMID_COUNT];           /**< Channel n Master ID Register, array offset: 0x140, array step: 0x1 */
       uint8_t RESERVED_7[3744];
  struct {                                         /* offset: 0x1000, array step: 0x20 */
    __IO uint32_t SADDR;                             /**< TCD Source Address, array offset: 0x1000, array step: 0x20 */
    __IO uint16_t ATTR;                              /**< TCD Transfer Attributes, array offset: 0x1004, array step: 0x20 */
    __IO uint16_t SOFF;                              /**< TCD Signed Source Address Offset, array offset: 0x1006, array step: 0x20 */
    union {                                          /* offset: 0x1008, array step: 0x20 */
      __IO uint32_t MLNO;                              /**< TCD Minor Byte Count (Minor Loop Mapping Disabled), array offset: 0x1008, array step: 0x20 */
      __IO uint32_t MLOFFNO;                           /**< TCD Signed Minor Loop Offset (Minor Loop Mapping Enabled and Offset Disabled), array offset: 0x1008, array step: 0x20 */
      __IO uint32_t MLOFFYES;                          /**< TCD Signed Minor Loop Offset (Minor Loop Mapping and Offset Enabled), array offset: 0x1008, array step: 0x20 */
    } NBYTES;
    __IO uint32_t SLAST;                             /**< TCD Last Source Address Adjustment, array offset: 0x100C, array step: 0x20 */
    __IO uint32_t DADDR;                             /**< TCD Destination Address, array offset: 0x1010, array step: 0x20 */
    union {                                          /* offset: 0x1014, array step: 0x20 */
      __IO uint16_t ELINKNO;                           /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x1014, array step: 0x20 */
      __IO uint16_t ELINKYES;                          /**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x1014, array step: 0x20 */
    } CITER;
    __IO uint16_t DOFF;                              /**< TCD Signed Destination Address Offset, array offset: 0x1016, array step: 0x20 */
    __IO uint32_t DLASTSGA;                          /**< TCD Last Destination Address Adjustment/Scatter Gather Address, array offset: 0x1018, array step: 0x20 */
    union {                                          /* offset: 0x101C, array step: 0x20 */
      __IO uint16_t ELINKNO;                           /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x101C, array step: 0x20 */
      __IO uint16_t ELINKYES;                          /**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x101C, array step: 0x20 */
    } BITER;
    __IO uint16_t CSR;                               /**< TCD Control and Status, array offset: 0x101E, array step: 0x20 */
  } TCD[DMA_TCD_COUNT];
} DMA_Type, *DMA_MemMapPtr;

 /** Number of instances of the DMA module. */
#define DMA_INSTANCE_COUNT                       (1u)


/* DMA - Peripheral instance base addresses */
/** Peripheral DMA base address */
#define DMA_BASE                                 (0xFC0A0000u)
/** Peripheral DMA base pointer */
#define DMA                                      ((DMA_Type *)DMA_BASE)
/** Array initializer of DMA peripheral base addresses */
#define DMA_BASE_ADDRS                           { DMA_BASE }
/** Array initializer of DMA peripheral base pointers */
#define DMA_BASE_PTRS                            { DMA }
 /** Number of interrupt vector arrays for the DMA module. */
#define DMA_IRQS_ARR_COUNT                       (2u)
 /** Number of interrupt channels for the CHN type of DMA module. */
#define DMA_CHN_IRQS_CH_COUNT                    (32u)
 /** Number of interrupt channels for the ERROR type of DMA module. */
#define DMA_ERROR_IRQS_CH_COUNT                  (1u)
/** Interrupt vectors for the DMA peripheral type */
#define DMA_CHN_IRQS                             { DMA0_IRQn, DMA1_IRQn, DMA2_IRQn, DMA3_IRQn, DMA4_IRQn, DMA5_IRQn, DMA6_IRQn, DMA7_IRQn, DMA8_IRQn, DMA9_IRQn, DMA10_IRQn, DMA11_IRQn, DMA12_IRQn, DMA13_IRQn, DMA14_IRQn, DMA15_IRQn, DMA16_IRQn, DMA17_IRQn, DMA18_IRQn, DMA19_IRQn, DMA20_IRQn, DMA21_IRQn, DMA22_IRQn, DMA23_IRQn, DMA24_IRQn, DMA25_IRQn, DMA26_IRQn, DMA27_IRQn, DMA28_IRQn, DMA29_IRQn, DMA30_IRQn, DMA31_IRQn }
#define DMA_ERROR_IRQS                           { DMA_Error_IRQn }

/* ----------------------------------------------------------------------------
   -- DMA Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMA_Register_Masks DMA Register Masks
 * @{
 */

/* CR Bit Fields */
#define DMA_CR_EDBG_MASK                         0x2u
#define DMA_CR_EDBG_SHIFT                        1u
#define DMA_CR_EDBG_WIDTH                        1u
#define DMA_CR_EDBG(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EDBG_SHIFT))&DMA_CR_EDBG_MASK)
#define DMA_CR_ERCA_MASK                         0x4u
#define DMA_CR_ERCA_SHIFT                        2u
#define DMA_CR_ERCA_WIDTH                        1u
#define DMA_CR_ERCA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERCA_SHIFT))&DMA_CR_ERCA_MASK)
#define DMA_CR_ERGA_MASK                         0x8u
#define DMA_CR_ERGA_SHIFT                        3u
#define DMA_CR_ERGA_WIDTH                        1u
#define DMA_CR_ERGA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERGA_SHIFT))&DMA_CR_ERGA_MASK)
#define DMA_CR_HOE_MASK                          0x10u
#define DMA_CR_HOE_SHIFT                         4u
#define DMA_CR_HOE_WIDTH                         1u
#define DMA_CR_HOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_HOE_SHIFT))&DMA_CR_HOE_MASK)
#define DMA_CR_HALT_MASK                         0x20u
#define DMA_CR_HALT_SHIFT                        5u
#define DMA_CR_HALT_WIDTH                        1u
#define DMA_CR_HALT(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_HALT_SHIFT))&DMA_CR_HALT_MASK)
#define DMA_CR_CLM_MASK                          0x40u
#define DMA_CR_CLM_SHIFT                         6u
#define DMA_CR_CLM_WIDTH                         1u
#define DMA_CR_CLM(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_CLM_SHIFT))&DMA_CR_CLM_MASK)
#define DMA_CR_EMLM_MASK                         0x80u
#define DMA_CR_EMLM_SHIFT                        7u
#define DMA_CR_EMLM_WIDTH                        1u
#define DMA_CR_EMLM(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EMLM_SHIFT))&DMA_CR_EMLM_MASK)
#define DMA_CR_GRP0PRI_MASK                      0x100u
#define DMA_CR_GRP0PRI_SHIFT                     8u
#define DMA_CR_GRP0PRI_WIDTH                     1u
#define DMA_CR_GRP0PRI(x)                        (((uint32_t)(((uint32_t)(x))<<DMA_CR_GRP0PRI_SHIFT))&DMA_CR_GRP0PRI_MASK)
#define DMA_CR_GRP1PRI_MASK                      0x400u
#define DMA_CR_GRP1PRI_SHIFT                     10u
#define DMA_CR_GRP1PRI_WIDTH                     1u
#define DMA_CR_GRP1PRI(x)                        (((uint32_t)(((uint32_t)(x))<<DMA_CR_GRP1PRI_SHIFT))&DMA_CR_GRP1PRI_MASK)
#define DMA_CR_ECX_MASK                          0x10000u
#define DMA_CR_ECX_SHIFT                         16u
#define DMA_CR_ECX_WIDTH                         1u
#define DMA_CR_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_ECX_SHIFT))&DMA_CR_ECX_MASK)
#define DMA_CR_CX_MASK                           0x20000u
#define DMA_CR_CX_SHIFT                          17u
#define DMA_CR_CX_WIDTH                          1u
#define DMA_CR_CX(x)                             (((uint32_t)(((uint32_t)(x))<<DMA_CR_CX_SHIFT))&DMA_CR_CX_MASK)
/* ES Bit Fields */
#define DMA_ES_DBE_MASK                          0x1u
#define DMA_ES_DBE_SHIFT                         0u
#define DMA_ES_DBE_WIDTH                         1u
#define DMA_ES_DBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DBE_SHIFT))&DMA_ES_DBE_MASK)
#define DMA_ES_SBE_MASK                          0x2u
#define DMA_ES_SBE_SHIFT                         1u
#define DMA_ES_SBE_WIDTH                         1u
#define DMA_ES_SBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SBE_SHIFT))&DMA_ES_SBE_MASK)
#define DMA_ES_SGE_MASK                          0x4u
#define DMA_ES_SGE_SHIFT                         2u
#define DMA_ES_SGE_WIDTH                         1u
#define DMA_ES_SGE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SGE_SHIFT))&DMA_ES_SGE_MASK)
#define DMA_ES_NCE_MASK                          0x8u
#define DMA_ES_NCE_SHIFT                         3u
#define DMA_ES_NCE_WIDTH                         1u
#define DMA_ES_NCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_NCE_SHIFT))&DMA_ES_NCE_MASK)
#define DMA_ES_DOE_MASK                          0x10u
#define DMA_ES_DOE_SHIFT                         4u
#define DMA_ES_DOE_WIDTH                         1u
#define DMA_ES_DOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DOE_SHIFT))&DMA_ES_DOE_MASK)
#define DMA_ES_DAE_MASK                          0x20u
#define DMA_ES_DAE_SHIFT                         5u
#define DMA_ES_DAE_WIDTH                         1u
#define DMA_ES_DAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DAE_SHIFT))&DMA_ES_DAE_MASK)
#define DMA_ES_SOE_MASK                          0x40u
#define DMA_ES_SOE_SHIFT                         6u
#define DMA_ES_SOE_WIDTH                         1u
#define DMA_ES_SOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SOE_SHIFT))&DMA_ES_SOE_MASK)
#define DMA_ES_SAE_MASK                          0x80u
#define DMA_ES_SAE_SHIFT                         7u
#define DMA_ES_SAE_WIDTH                         1u
#define DMA_ES_SAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SAE_SHIFT))&DMA_ES_SAE_MASK)
#define DMA_ES_ERRCHN_MASK                       0x1F00u
#define DMA_ES_ERRCHN_SHIFT                      8u
#define DMA_ES_ERRCHN_WIDTH                      5u
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK)
#define DMA_ES_CPE_MASK                          0x4000u
#define DMA_ES_CPE_SHIFT                         14u
#define DMA_ES_CPE_WIDTH                         1u
#define DMA_ES_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_CPE_SHIFT))&DMA_ES_CPE_MASK)
#define DMA_ES_GPE_MASK                          0x8000u
#define DMA_ES_GPE_SHIFT                         15u
#define DMA_ES_GPE_WIDTH                         1u
#define DMA_ES_GPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_GPE_SHIFT))&DMA_ES_GPE_MASK)
#define DMA_ES_ECX_MASK                          0x10000u
#define DMA_ES_ECX_SHIFT                         16u
#define DMA_ES_ECX_WIDTH                         1u
#define DMA_ES_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_ECX_SHIFT))&DMA_ES_ECX_MASK)
#define DMA_ES_UCE_MASK                          0x20000u
#define DMA_ES_UCE_SHIFT                         17u
#define DMA_ES_UCE_WIDTH                         1u
#define DMA_ES_UCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_UCE_SHIFT))&DMA_ES_UCE_MASK)
#define DMA_ES_VLD_MASK                          0x80000000u
#define DMA_ES_VLD_SHIFT                         31u
#define DMA_ES_VLD_WIDTH                         1u
#define DMA_ES_VLD(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_VLD_SHIFT))&DMA_ES_VLD_MASK)
/* ERQ Bit Fields */
#define DMA_ERQ_ERQ0_MASK                        0x1u
#define DMA_ERQ_ERQ0_SHIFT                       0u
#define DMA_ERQ_ERQ0_WIDTH                       1u
#define DMA_ERQ_ERQ0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ0_SHIFT))&DMA_ERQ_ERQ0_MASK)
#define DMA_ERQ_ERQ1_MASK                        0x2u
#define DMA_ERQ_ERQ1_SHIFT                       1u
#define DMA_ERQ_ERQ1_WIDTH                       1u
#define DMA_ERQ_ERQ1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ1_SHIFT))&DMA_ERQ_ERQ1_MASK)
#define DMA_ERQ_ERQ2_MASK                        0x4u
#define DMA_ERQ_ERQ2_SHIFT                       2u
#define DMA_ERQ_ERQ2_WIDTH                       1u
#define DMA_ERQ_ERQ2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ2_SHIFT))&DMA_ERQ_ERQ2_MASK)
#define DMA_ERQ_ERQ3_MASK                        0x8u
#define DMA_ERQ_ERQ3_SHIFT                       3u
#define DMA_ERQ_ERQ3_WIDTH                       1u
#define DMA_ERQ_ERQ3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ3_SHIFT))&DMA_ERQ_ERQ3_MASK)
#define DMA_ERQ_ERQ4_MASK                        0x10u
#define DMA_ERQ_ERQ4_SHIFT                       4u
#define DMA_ERQ_ERQ4_WIDTH                       1u
#define DMA_ERQ_ERQ4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ4_SHIFT))&DMA_ERQ_ERQ4_MASK)
#define DMA_ERQ_ERQ5_MASK                        0x20u
#define DMA_ERQ_ERQ5_SHIFT                       5u
#define DMA_ERQ_ERQ5_WIDTH                       1u
#define DMA_ERQ_ERQ5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ5_SHIFT))&DMA_ERQ_ERQ5_MASK)
#define DMA_ERQ_ERQ6_MASK                        0x40u
#define DMA_ERQ_ERQ6_SHIFT                       6u
#define DMA_ERQ_ERQ6_WIDTH                       1u
#define DMA_ERQ_ERQ6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ6_SHIFT))&DMA_ERQ_ERQ6_MASK)
#define DMA_ERQ_ERQ7_MASK                        0x80u
#define DMA_ERQ_ERQ7_SHIFT                       7u
#define DMA_ERQ_ERQ7_WIDTH                       1u
#define DMA_ERQ_ERQ7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ7_SHIFT))&DMA_ERQ_ERQ7_MASK)
#define DMA_ERQ_ERQ8_MASK                        0x100u
#define DMA_ERQ_ERQ8_SHIFT                       8u
#define DMA_ERQ_ERQ8_WIDTH                       1u
#define DMA_ERQ_ERQ8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ8_SHIFT))&DMA_ERQ_ERQ8_MASK)
#define DMA_ERQ_ERQ9_MASK                        0x200u
#define DMA_ERQ_ERQ9_SHIFT                       9u
#define DMA_ERQ_ERQ9_WIDTH                       1u
#define DMA_ERQ_ERQ9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ9_SHIFT))&DMA_ERQ_ERQ9_MASK)
#define DMA_ERQ_ERQ10_MASK                       0x400u
#define DMA_ERQ_ERQ10_SHIFT                      10u
#define DMA_ERQ_ERQ10_WIDTH                      1u
#define DMA_ERQ_ERQ10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ10_SHIFT))&DMA_ERQ_ERQ10_MASK)
#define DMA_ERQ_ERQ11_MASK                       0x800u
#define DMA_ERQ_ERQ11_SHIFT                      11u
#define DMA_ERQ_ERQ11_WIDTH                      1u
#define DMA_ERQ_ERQ11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ11_SHIFT))&DMA_ERQ_ERQ11_MASK)
#define DMA_ERQ_ERQ12_MASK                       0x1000u
#define DMA_ERQ_ERQ12_SHIFT                      12u
#define DMA_ERQ_ERQ12_WIDTH                      1u
#define DMA_ERQ_ERQ12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ12_SHIFT))&DMA_ERQ_ERQ12_MASK)
#define DMA_ERQ_ERQ13_MASK                       0x2000u
#define DMA_ERQ_ERQ13_SHIFT                      13u
#define DMA_ERQ_ERQ13_WIDTH                      1u
#define DMA_ERQ_ERQ13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ13_SHIFT))&DMA_ERQ_ERQ13_MASK)
#define DMA_ERQ_ERQ14_MASK                       0x4000u
#define DMA_ERQ_ERQ14_SHIFT                      14u
#define DMA_ERQ_ERQ14_WIDTH                      1u
#define DMA_ERQ_ERQ14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ14_SHIFT))&DMA_ERQ_ERQ14_MASK)
#define DMA_ERQ_ERQ15_MASK                       0x8000u
#define DMA_ERQ_ERQ15_SHIFT                      15u
#define DMA_ERQ_ERQ15_WIDTH                      1u
#define DMA_ERQ_ERQ15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ15_SHIFT))&DMA_ERQ_ERQ15_MASK)
#define DMA_ERQ_ERQ16_MASK                       0x10000u
#define DMA_ERQ_ERQ16_SHIFT                      16u
#define DMA_ERQ_ERQ16_WIDTH                      1u
#define DMA_ERQ_ERQ16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ16_SHIFT))&DMA_ERQ_ERQ16_MASK)
#define DMA_ERQ_ERQ17_MASK                       0x20000u
#define DMA_ERQ_ERQ17_SHIFT                      17u
#define DMA_ERQ_ERQ17_WIDTH                      1u
#define DMA_ERQ_ERQ17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ17_SHIFT))&DMA_ERQ_ERQ17_MASK)
#define DMA_ERQ_ERQ18_MASK                       0x40000u
#define DMA_ERQ_ERQ18_SHIFT                      18u
#define DMA_ERQ_ERQ18_WIDTH                      1u
#define DMA_ERQ_ERQ18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ18_SHIFT))&DMA_ERQ_ERQ18_MASK)
#define DMA_ERQ_ERQ19_MASK                       0x80000u
#define DMA_ERQ_ERQ19_SHIFT                      19u
#define DMA_ERQ_ERQ19_WIDTH                      1u
#define DMA_ERQ_ERQ19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ19_SHIFT))&DMA_ERQ_ERQ19_MASK)
#define DMA_ERQ_ERQ20_MASK                       0x100000u
#define DMA_ERQ_ERQ20_SHIFT                      20u
#define DMA_ERQ_ERQ20_WIDTH                      1u
#define DMA_ERQ_ERQ20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ20_SHIFT))&DMA_ERQ_ERQ20_MASK)
#define DMA_ERQ_ERQ21_MASK                       0x200000u
#define DMA_ERQ_ERQ21_SHIFT                      21u
#define DMA_ERQ_ERQ21_WIDTH                      1u
#define DMA_ERQ_ERQ21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ21_SHIFT))&DMA_ERQ_ERQ21_MASK)
#define DMA_ERQ_ERQ22_MASK                       0x400000u
#define DMA_ERQ_ERQ22_SHIFT                      22u
#define DMA_ERQ_ERQ22_WIDTH                      1u
#define DMA_ERQ_ERQ22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ22_SHIFT))&DMA_ERQ_ERQ22_MASK)
#define DMA_ERQ_ERQ23_MASK                       0x800000u
#define DMA_ERQ_ERQ23_SHIFT                      23u
#define DMA_ERQ_ERQ23_WIDTH                      1u
#define DMA_ERQ_ERQ23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ23_SHIFT))&DMA_ERQ_ERQ23_MASK)
#define DMA_ERQ_ERQ24_MASK                       0x1000000u
#define DMA_ERQ_ERQ24_SHIFT                      24u
#define DMA_ERQ_ERQ24_WIDTH                      1u
#define DMA_ERQ_ERQ24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ24_SHIFT))&DMA_ERQ_ERQ24_MASK)
#define DMA_ERQ_ERQ25_MASK                       0x2000000u
#define DMA_ERQ_ERQ25_SHIFT                      25u
#define DMA_ERQ_ERQ25_WIDTH                      1u
#define DMA_ERQ_ERQ25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ25_SHIFT))&DMA_ERQ_ERQ25_MASK)
#define DMA_ERQ_ERQ26_MASK                       0x4000000u
#define DMA_ERQ_ERQ26_SHIFT                      26u
#define DMA_ERQ_ERQ26_WIDTH                      1u
#define DMA_ERQ_ERQ26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ26_SHIFT))&DMA_ERQ_ERQ26_MASK)
#define DMA_ERQ_ERQ27_MASK                       0x8000000u
#define DMA_ERQ_ERQ27_SHIFT                      27u
#define DMA_ERQ_ERQ27_WIDTH                      1u
#define DMA_ERQ_ERQ27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ27_SHIFT))&DMA_ERQ_ERQ27_MASK)
#define DMA_ERQ_ERQ28_MASK                       0x10000000u
#define DMA_ERQ_ERQ28_SHIFT                      28u
#define DMA_ERQ_ERQ28_WIDTH                      1u
#define DMA_ERQ_ERQ28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ28_SHIFT))&DMA_ERQ_ERQ28_MASK)
#define DMA_ERQ_ERQ29_MASK                       0x20000000u
#define DMA_ERQ_ERQ29_SHIFT                      29u
#define DMA_ERQ_ERQ29_WIDTH                      1u
#define DMA_ERQ_ERQ29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ29_SHIFT))&DMA_ERQ_ERQ29_MASK)
#define DMA_ERQ_ERQ30_MASK                       0x40000000u
#define DMA_ERQ_ERQ30_SHIFT                      30u
#define DMA_ERQ_ERQ30_WIDTH                      1u
#define DMA_ERQ_ERQ30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ30_SHIFT))&DMA_ERQ_ERQ30_MASK)
#define DMA_ERQ_ERQ31_MASK                       0x80000000u
#define DMA_ERQ_ERQ31_SHIFT                      31u
#define DMA_ERQ_ERQ31_WIDTH                      1u
#define DMA_ERQ_ERQ31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ31_SHIFT))&DMA_ERQ_ERQ31_MASK)
/* EEI Bit Fields */
#define DMA_EEI_EEI0_MASK                        0x1u
#define DMA_EEI_EEI0_SHIFT                       0u
#define DMA_EEI_EEI0_WIDTH                       1u
#define DMA_EEI_EEI0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI0_SHIFT))&DMA_EEI_EEI0_MASK)
#define DMA_EEI_EEI1_MASK                        0x2u
#define DMA_EEI_EEI1_SHIFT                       1u
#define DMA_EEI_EEI1_WIDTH                       1u
#define DMA_EEI_EEI1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI1_SHIFT))&DMA_EEI_EEI1_MASK)
#define DMA_EEI_EEI2_MASK                        0x4u
#define DMA_EEI_EEI2_SHIFT                       2u
#define DMA_EEI_EEI2_WIDTH                       1u
#define DMA_EEI_EEI2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI2_SHIFT))&DMA_EEI_EEI2_MASK)
#define DMA_EEI_EEI3_MASK                        0x8u
#define DMA_EEI_EEI3_SHIFT                       3u
#define DMA_EEI_EEI3_WIDTH                       1u
#define DMA_EEI_EEI3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI3_SHIFT))&DMA_EEI_EEI3_MASK)
#define DMA_EEI_EEI4_MASK                        0x10u
#define DMA_EEI_EEI4_SHIFT                       4u
#define DMA_EEI_EEI4_WIDTH                       1u
#define DMA_EEI_EEI4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI4_SHIFT))&DMA_EEI_EEI4_MASK)
#define DMA_EEI_EEI5_MASK                        0x20u
#define DMA_EEI_EEI5_SHIFT                       5u
#define DMA_EEI_EEI5_WIDTH                       1u
#define DMA_EEI_EEI5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI5_SHIFT))&DMA_EEI_EEI5_MASK)
#define DMA_EEI_EEI6_MASK                        0x40u
#define DMA_EEI_EEI6_SHIFT                       6u
#define DMA_EEI_EEI6_WIDTH                       1u
#define DMA_EEI_EEI6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI6_SHIFT))&DMA_EEI_EEI6_MASK)
#define DMA_EEI_EEI7_MASK                        0x80u
#define DMA_EEI_EEI7_SHIFT                       7u
#define DMA_EEI_EEI7_WIDTH                       1u
#define DMA_EEI_EEI7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI7_SHIFT))&DMA_EEI_EEI7_MASK)
#define DMA_EEI_EEI8_MASK                        0x100u
#define DMA_EEI_EEI8_SHIFT                       8u
#define DMA_EEI_EEI8_WIDTH                       1u
#define DMA_EEI_EEI8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI8_SHIFT))&DMA_EEI_EEI8_MASK)
#define DMA_EEI_EEI9_MASK                        0x200u
#define DMA_EEI_EEI9_SHIFT                       9u
#define DMA_EEI_EEI9_WIDTH                       1u
#define DMA_EEI_EEI9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI9_SHIFT))&DMA_EEI_EEI9_MASK)
#define DMA_EEI_EEI10_MASK                       0x400u
#define DMA_EEI_EEI10_SHIFT                      10u
#define DMA_EEI_EEI10_WIDTH                      1u
#define DMA_EEI_EEI10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI10_SHIFT))&DMA_EEI_EEI10_MASK)
#define DMA_EEI_EEI11_MASK                       0x800u
#define DMA_EEI_EEI11_SHIFT                      11u
#define DMA_EEI_EEI11_WIDTH                      1u
#define DMA_EEI_EEI11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI11_SHIFT))&DMA_EEI_EEI11_MASK)
#define DMA_EEI_EEI12_MASK                       0x1000u
#define DMA_EEI_EEI12_SHIFT                      12u
#define DMA_EEI_EEI12_WIDTH                      1u
#define DMA_EEI_EEI12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI12_SHIFT))&DMA_EEI_EEI12_MASK)
#define DMA_EEI_EEI13_MASK                       0x2000u
#define DMA_EEI_EEI13_SHIFT                      13u
#define DMA_EEI_EEI13_WIDTH                      1u
#define DMA_EEI_EEI13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI13_SHIFT))&DMA_EEI_EEI13_MASK)
#define DMA_EEI_EEI14_MASK                       0x4000u
#define DMA_EEI_EEI14_SHIFT                      14u
#define DMA_EEI_EEI14_WIDTH                      1u
#define DMA_EEI_EEI14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI14_SHIFT))&DMA_EEI_EEI14_MASK)
#define DMA_EEI_EEI15_MASK                       0x8000u
#define DMA_EEI_EEI15_SHIFT                      15u
#define DMA_EEI_EEI15_WIDTH                      1u
#define DMA_EEI_EEI15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI15_SHIFT))&DMA_EEI_EEI15_MASK)
#define DMA_EEI_EEI16_MASK                       0x10000u
#define DMA_EEI_EEI16_SHIFT                      16u
#define DMA_EEI_EEI16_WIDTH                      1u
#define DMA_EEI_EEI16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI16_SHIFT))&DMA_EEI_EEI16_MASK)
#define DMA_EEI_EEI17_MASK                       0x20000u
#define DMA_EEI_EEI17_SHIFT                      17u
#define DMA_EEI_EEI17_WIDTH                      1u
#define DMA_EEI_EEI17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI17_SHIFT))&DMA_EEI_EEI17_MASK)
#define DMA_EEI_EEI18_MASK                       0x40000u
#define DMA_EEI_EEI18_SHIFT                      18u
#define DMA_EEI_EEI18_WIDTH                      1u
#define DMA_EEI_EEI18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI18_SHIFT))&DMA_EEI_EEI18_MASK)
#define DMA_EEI_EEI19_MASK                       0x80000u
#define DMA_EEI_EEI19_SHIFT                      19u
#define DMA_EEI_EEI19_WIDTH                      1u
#define DMA_EEI_EEI19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI19_SHIFT))&DMA_EEI_EEI19_MASK)
#define DMA_EEI_EEI20_MASK                       0x100000u
#define DMA_EEI_EEI20_SHIFT                      20u
#define DMA_EEI_EEI20_WIDTH                      1u
#define DMA_EEI_EEI20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI20_SHIFT))&DMA_EEI_EEI20_MASK)
#define DMA_EEI_EEI21_MASK                       0x200000u
#define DMA_EEI_EEI21_SHIFT                      21u
#define DMA_EEI_EEI21_WIDTH                      1u
#define DMA_EEI_EEI21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI21_SHIFT))&DMA_EEI_EEI21_MASK)
#define DMA_EEI_EEI22_MASK                       0x400000u
#define DMA_EEI_EEI22_SHIFT                      22u
#define DMA_EEI_EEI22_WIDTH                      1u
#define DMA_EEI_EEI22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI22_SHIFT))&DMA_EEI_EEI22_MASK)
#define DMA_EEI_EEI23_MASK                       0x800000u
#define DMA_EEI_EEI23_SHIFT                      23u
#define DMA_EEI_EEI23_WIDTH                      1u
#define DMA_EEI_EEI23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI23_SHIFT))&DMA_EEI_EEI23_MASK)
#define DMA_EEI_EEI24_MASK                       0x1000000u
#define DMA_EEI_EEI24_SHIFT                      24u
#define DMA_EEI_EEI24_WIDTH                      1u
#define DMA_EEI_EEI24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI24_SHIFT))&DMA_EEI_EEI24_MASK)
#define DMA_EEI_EEI25_MASK                       0x2000000u
#define DMA_EEI_EEI25_SHIFT                      25u
#define DMA_EEI_EEI25_WIDTH                      1u
#define DMA_EEI_EEI25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI25_SHIFT))&DMA_EEI_EEI25_MASK)
#define DMA_EEI_EEI26_MASK                       0x4000000u
#define DMA_EEI_EEI26_SHIFT                      26u
#define DMA_EEI_EEI26_WIDTH                      1u
#define DMA_EEI_EEI26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI26_SHIFT))&DMA_EEI_EEI26_MASK)
#define DMA_EEI_EEI27_MASK                       0x8000000u
#define DMA_EEI_EEI27_SHIFT                      27u
#define DMA_EEI_EEI27_WIDTH                      1u
#define DMA_EEI_EEI27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI27_SHIFT))&DMA_EEI_EEI27_MASK)
#define DMA_EEI_EEI28_MASK                       0x10000000u
#define DMA_EEI_EEI28_SHIFT                      28u
#define DMA_EEI_EEI28_WIDTH                      1u
#define DMA_EEI_EEI28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI28_SHIFT))&DMA_EEI_EEI28_MASK)
#define DMA_EEI_EEI29_MASK                       0x20000000u
#define DMA_EEI_EEI29_SHIFT                      29u
#define DMA_EEI_EEI29_WIDTH                      1u
#define DMA_EEI_EEI29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI29_SHIFT))&DMA_EEI_EEI29_MASK)
#define DMA_EEI_EEI30_MASK                       0x40000000u
#define DMA_EEI_EEI30_SHIFT                      30u
#define DMA_EEI_EEI30_WIDTH                      1u
#define DMA_EEI_EEI30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI30_SHIFT))&DMA_EEI_EEI30_MASK)
#define DMA_EEI_EEI31_MASK                       0x80000000u
#define DMA_EEI_EEI31_SHIFT                      31u
#define DMA_EEI_EEI31_WIDTH                      1u
#define DMA_EEI_EEI31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI31_SHIFT))&DMA_EEI_EEI31_MASK)
/* SERQ Bit Fields */
#define DMA_SERQ_SERQ_MASK                       0x1Fu
#define DMA_SERQ_SERQ_SHIFT                      0u
#define DMA_SERQ_SERQ_WIDTH                      5u
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK)
#define DMA_SERQ_SAER_MASK                       0x40u
#define DMA_SERQ_SAER_SHIFT                      6u
#define DMA_SERQ_SAER_WIDTH                      1u
#define DMA_SERQ_SAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SAER_SHIFT))&DMA_SERQ_SAER_MASK)
#define DMA_SERQ_NOP_MASK                        0x80u
#define DMA_SERQ_NOP_SHIFT                       7u
#define DMA_SERQ_NOP_WIDTH                       1u
#define DMA_SERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_NOP_SHIFT))&DMA_SERQ_NOP_MASK)
/* CERQ Bit Fields */
#define DMA_CERQ_CERQ_MASK                       0x1Fu
#define DMA_CERQ_CERQ_SHIFT                      0u
#define DMA_CERQ_CERQ_WIDTH                      5u
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK)
#define DMA_CERQ_CAER_MASK                       0x40u
#define DMA_CERQ_CAER_SHIFT                      6u
#define DMA_CERQ_CAER_WIDTH                      1u
#define DMA_CERQ_CAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CAER_SHIFT))&DMA_CERQ_CAER_MASK)
#define DMA_CERQ_NOP_MASK                        0x80u
#define DMA_CERQ_NOP_SHIFT                       7u
#define DMA_CERQ_NOP_WIDTH                       1u
#define DMA_CERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_NOP_SHIFT))&DMA_CERQ_NOP_MASK)
/* SEEI Bit Fields */
#define DMA_SEEI_SEEI_MASK                       0x1Fu
#define DMA_SEEI_SEEI_SHIFT                      0u
#define DMA_SEEI_SEEI_WIDTH                      5u
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK)
#define DMA_SEEI_SAEE_MASK                       0x40u
#define DMA_SEEI_SAEE_SHIFT                      6u
#define DMA_SEEI_SAEE_WIDTH                      1u
#define DMA_SEEI_SAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SAEE_SHIFT))&DMA_SEEI_SAEE_MASK)
#define DMA_SEEI_NOP_MASK                        0x80u
#define DMA_SEEI_NOP_SHIFT                       7u
#define DMA_SEEI_NOP_WIDTH                       1u
#define DMA_SEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_NOP_SHIFT))&DMA_SEEI_NOP_MASK)
/* CEEI Bit Fields */
#define DMA_CEEI_CEEI_MASK                       0x1Fu
#define DMA_CEEI_CEEI_SHIFT                      0u
#define DMA_CEEI_CEEI_WIDTH                      5u
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK)
#define DMA_CEEI_CAEE_MASK                       0x40u
#define DMA_CEEI_CAEE_SHIFT                      6u
#define DMA_CEEI_CAEE_WIDTH                      1u
#define DMA_CEEI_CAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CAEE_SHIFT))&DMA_CEEI_CAEE_MASK)
#define DMA_CEEI_NOP_MASK                        0x80u
#define DMA_CEEI_NOP_SHIFT                       7u
#define DMA_CEEI_NOP_WIDTH                       1u
#define DMA_CEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_NOP_SHIFT))&DMA_CEEI_NOP_MASK)
/* CINT Bit Fields */
#define DMA_CINT_CINT_MASK                       0x1Fu
#define DMA_CINT_CINT_SHIFT                      0u
#define DMA_CINT_CINT_WIDTH                      5u
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK)
#define DMA_CINT_CAIR_MASK                       0x40u
#define DMA_CINT_CAIR_SHIFT                      6u
#define DMA_CINT_CAIR_WIDTH                      1u
#define DMA_CINT_CAIR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CAIR_SHIFT))&DMA_CINT_CAIR_MASK)
#define DMA_CINT_NOP_MASK                        0x80u
#define DMA_CINT_NOP_SHIFT                       7u
#define DMA_CINT_NOP_WIDTH                       1u
#define DMA_CINT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CINT_NOP_SHIFT))&DMA_CINT_NOP_MASK)
/* CERR Bit Fields */
#define DMA_CERR_CERR_MASK                       0x1Fu
#define DMA_CERR_CERR_SHIFT                      0u
#define DMA_CERR_CERR_WIDTH                      5u
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK)
#define DMA_CERR_CAEI_MASK                       0x40u
#define DMA_CERR_CAEI_SHIFT                      6u
#define DMA_CERR_CAEI_WIDTH                      1u
#define DMA_CERR_CAEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CAEI_SHIFT))&DMA_CERR_CAEI_MASK)
#define DMA_CERR_NOP_MASK                        0x80u
#define DMA_CERR_NOP_SHIFT                       7u
#define DMA_CERR_NOP_WIDTH                       1u
#define DMA_CERR_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERR_NOP_SHIFT))&DMA_CERR_NOP_MASK)
/* SSRT Bit Fields */
#define DMA_SSRT_SSRT_MASK                       0x1Fu
#define DMA_SSRT_SSRT_SHIFT                      0u
#define DMA_SSRT_SSRT_WIDTH                      5u
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK)
#define DMA_SSRT_SAST_MASK                       0x40u
#define DMA_SSRT_SAST_SHIFT                      6u
#define DMA_SSRT_SAST_WIDTH                      1u
#define DMA_SSRT_SAST(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SAST_SHIFT))&DMA_SSRT_SAST_MASK)
#define DMA_SSRT_NOP_MASK                        0x80u
#define DMA_SSRT_NOP_SHIFT                       7u
#define DMA_SSRT_NOP_WIDTH                       1u
#define DMA_SSRT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_NOP_SHIFT))&DMA_SSRT_NOP_MASK)
/* CDNE Bit Fields */
#define DMA_CDNE_CDNE_MASK                       0x1Fu
#define DMA_CDNE_CDNE_SHIFT                      0u
#define DMA_CDNE_CDNE_WIDTH                      5u
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK)
#define DMA_CDNE_CADN_MASK                       0x40u
#define DMA_CDNE_CADN_SHIFT                      6u
#define DMA_CDNE_CADN_WIDTH                      1u
#define DMA_CDNE_CADN(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CADN_SHIFT))&DMA_CDNE_CADN_MASK)
#define DMA_CDNE_NOP_MASK                        0x80u
#define DMA_CDNE_NOP_SHIFT                       7u
#define DMA_CDNE_NOP_WIDTH                       1u
#define DMA_CDNE_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_NOP_SHIFT))&DMA_CDNE_NOP_MASK)
/* INT Bit Fields */
#define DMA_INT_INT0_MASK                        0x1u
#define DMA_INT_INT0_SHIFT                       0u
#define DMA_INT_INT0_WIDTH                       1u
#define DMA_INT_INT0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT0_SHIFT))&DMA_INT_INT0_MASK)
#define DMA_INT_INT1_MASK                        0x2u
#define DMA_INT_INT1_SHIFT                       1u
#define DMA_INT_INT1_WIDTH                       1u
#define DMA_INT_INT1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT1_SHIFT))&DMA_INT_INT1_MASK)
#define DMA_INT_INT2_MASK                        0x4u
#define DMA_INT_INT2_SHIFT                       2u
#define DMA_INT_INT2_WIDTH                       1u
#define DMA_INT_INT2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT2_SHIFT))&DMA_INT_INT2_MASK)
#define DMA_INT_INT3_MASK                        0x8u
#define DMA_INT_INT3_SHIFT                       3u
#define DMA_INT_INT3_WIDTH                       1u
#define DMA_INT_INT3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT3_SHIFT))&DMA_INT_INT3_MASK)
#define DMA_INT_INT4_MASK                        0x10u
#define DMA_INT_INT4_SHIFT                       4u
#define DMA_INT_INT4_WIDTH                       1u
#define DMA_INT_INT4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT4_SHIFT))&DMA_INT_INT4_MASK)
#define DMA_INT_INT5_MASK                        0x20u
#define DMA_INT_INT5_SHIFT                       5u
#define DMA_INT_INT5_WIDTH                       1u
#define DMA_INT_INT5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT5_SHIFT))&DMA_INT_INT5_MASK)
#define DMA_INT_INT6_MASK                        0x40u
#define DMA_INT_INT6_SHIFT                       6u
#define DMA_INT_INT6_WIDTH                       1u
#define DMA_INT_INT6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT6_SHIFT))&DMA_INT_INT6_MASK)
#define DMA_INT_INT7_MASK                        0x80u
#define DMA_INT_INT7_SHIFT                       7u
#define DMA_INT_INT7_WIDTH                       1u
#define DMA_INT_INT7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT7_SHIFT))&DMA_INT_INT7_MASK)
#define DMA_INT_INT8_MASK                        0x100u
#define DMA_INT_INT8_SHIFT                       8u
#define DMA_INT_INT8_WIDTH                       1u
#define DMA_INT_INT8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT8_SHIFT))&DMA_INT_INT8_MASK)
#define DMA_INT_INT9_MASK                        0x200u
#define DMA_INT_INT9_SHIFT                       9u
#define DMA_INT_INT9_WIDTH                       1u
#define DMA_INT_INT9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT9_SHIFT))&DMA_INT_INT9_MASK)
#define DMA_INT_INT10_MASK                       0x400u
#define DMA_INT_INT10_SHIFT                      10u
#define DMA_INT_INT10_WIDTH                      1u
#define DMA_INT_INT10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT10_SHIFT))&DMA_INT_INT10_MASK)
#define DMA_INT_INT11_MASK                       0x800u
#define DMA_INT_INT11_SHIFT                      11u
#define DMA_INT_INT11_WIDTH                      1u
#define DMA_INT_INT11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT11_SHIFT))&DMA_INT_INT11_MASK)
#define DMA_INT_INT12_MASK                       0x1000u
#define DMA_INT_INT12_SHIFT                      12u
#define DMA_INT_INT12_WIDTH                      1u
#define DMA_INT_INT12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT12_SHIFT))&DMA_INT_INT12_MASK)
#define DMA_INT_INT13_MASK                       0x2000u
#define DMA_INT_INT13_SHIFT                      13u
#define DMA_INT_INT13_WIDTH                      1u
#define DMA_INT_INT13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT13_SHIFT))&DMA_INT_INT13_MASK)
#define DMA_INT_INT14_MASK                       0x4000u
#define DMA_INT_INT14_SHIFT                      14u
#define DMA_INT_INT14_WIDTH                      1u
#define DMA_INT_INT14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT14_SHIFT))&DMA_INT_INT14_MASK)
#define DMA_INT_INT15_MASK                       0x8000u
#define DMA_INT_INT15_SHIFT                      15u
#define DMA_INT_INT15_WIDTH                      1u
#define DMA_INT_INT15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT15_SHIFT))&DMA_INT_INT15_MASK)
#define DMA_INT_INT16_MASK                       0x10000u
#define DMA_INT_INT16_SHIFT                      16u
#define DMA_INT_INT16_WIDTH                      1u
#define DMA_INT_INT16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT16_SHIFT))&DMA_INT_INT16_MASK)
#define DMA_INT_INT17_MASK                       0x20000u
#define DMA_INT_INT17_SHIFT                      17u
#define DMA_INT_INT17_WIDTH                      1u
#define DMA_INT_INT17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT17_SHIFT))&DMA_INT_INT17_MASK)
#define DMA_INT_INT18_MASK                       0x40000u
#define DMA_INT_INT18_SHIFT                      18u
#define DMA_INT_INT18_WIDTH                      1u
#define DMA_INT_INT18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT18_SHIFT))&DMA_INT_INT18_MASK)
#define DMA_INT_INT19_MASK                       0x80000u
#define DMA_INT_INT19_SHIFT                      19u
#define DMA_INT_INT19_WIDTH                      1u
#define DMA_INT_INT19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT19_SHIFT))&DMA_INT_INT19_MASK)
#define DMA_INT_INT20_MASK                       0x100000u
#define DMA_INT_INT20_SHIFT                      20u
#define DMA_INT_INT20_WIDTH                      1u
#define DMA_INT_INT20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT20_SHIFT))&DMA_INT_INT20_MASK)
#define DMA_INT_INT21_MASK                       0x200000u
#define DMA_INT_INT21_SHIFT                      21u
#define DMA_INT_INT21_WIDTH                      1u
#define DMA_INT_INT21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT21_SHIFT))&DMA_INT_INT21_MASK)
#define DMA_INT_INT22_MASK                       0x400000u
#define DMA_INT_INT22_SHIFT                      22u
#define DMA_INT_INT22_WIDTH                      1u
#define DMA_INT_INT22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT22_SHIFT))&DMA_INT_INT22_MASK)
#define DMA_INT_INT23_MASK                       0x800000u
#define DMA_INT_INT23_SHIFT                      23u
#define DMA_INT_INT23_WIDTH                      1u
#define DMA_INT_INT23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT23_SHIFT))&DMA_INT_INT23_MASK)
#define DMA_INT_INT24_MASK                       0x1000000u
#define DMA_INT_INT24_SHIFT                      24u
#define DMA_INT_INT24_WIDTH                      1u
#define DMA_INT_INT24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT24_SHIFT))&DMA_INT_INT24_MASK)
#define DMA_INT_INT25_MASK                       0x2000000u
#define DMA_INT_INT25_SHIFT                      25u
#define DMA_INT_INT25_WIDTH                      1u
#define DMA_INT_INT25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT25_SHIFT))&DMA_INT_INT25_MASK)
#define DMA_INT_INT26_MASK                       0x4000000u
#define DMA_INT_INT26_SHIFT                      26u
#define DMA_INT_INT26_WIDTH                      1u
#define DMA_INT_INT26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT26_SHIFT))&DMA_INT_INT26_MASK)
#define DMA_INT_INT27_MASK                       0x8000000u
#define DMA_INT_INT27_SHIFT                      27u
#define DMA_INT_INT27_WIDTH                      1u
#define DMA_INT_INT27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT27_SHIFT))&DMA_INT_INT27_MASK)
#define DMA_INT_INT28_MASK                       0x10000000u
#define DMA_INT_INT28_SHIFT                      28u
#define DMA_INT_INT28_WIDTH                      1u
#define DMA_INT_INT28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT28_SHIFT))&DMA_INT_INT28_MASK)
#define DMA_INT_INT29_MASK                       0x20000000u
#define DMA_INT_INT29_SHIFT                      29u
#define DMA_INT_INT29_WIDTH                      1u
#define DMA_INT_INT29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT29_SHIFT))&DMA_INT_INT29_MASK)
#define DMA_INT_INT30_MASK                       0x40000000u
#define DMA_INT_INT30_SHIFT                      30u
#define DMA_INT_INT30_WIDTH                      1u
#define DMA_INT_INT30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT30_SHIFT))&DMA_INT_INT30_MASK)
#define DMA_INT_INT31_MASK                       0x80000000u
#define DMA_INT_INT31_SHIFT                      31u
#define DMA_INT_INT31_WIDTH                      1u
#define DMA_INT_INT31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT31_SHIFT))&DMA_INT_INT31_MASK)
/* ERR Bit Fields */
#define DMA_ERR_ERR0_MASK                        0x1u
#define DMA_ERR_ERR0_SHIFT                       0u
#define DMA_ERR_ERR0_WIDTH                       1u
#define DMA_ERR_ERR0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR0_SHIFT))&DMA_ERR_ERR0_MASK)
#define DMA_ERR_ERR1_MASK                        0x2u
#define DMA_ERR_ERR1_SHIFT                       1u
#define DMA_ERR_ERR1_WIDTH                       1u
#define DMA_ERR_ERR1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR1_SHIFT))&DMA_ERR_ERR1_MASK)
#define DMA_ERR_ERR2_MASK                        0x4u
#define DMA_ERR_ERR2_SHIFT                       2u
#define DMA_ERR_ERR2_WIDTH                       1u
#define DMA_ERR_ERR2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR2_SHIFT))&DMA_ERR_ERR2_MASK)
#define DMA_ERR_ERR3_MASK                        0x8u
#define DMA_ERR_ERR3_SHIFT                       3u
#define DMA_ERR_ERR3_WIDTH                       1u
#define DMA_ERR_ERR3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR3_SHIFT))&DMA_ERR_ERR3_MASK)
#define DMA_ERR_ERR4_MASK                        0x10u
#define DMA_ERR_ERR4_SHIFT                       4u
#define DMA_ERR_ERR4_WIDTH                       1u
#define DMA_ERR_ERR4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR4_SHIFT))&DMA_ERR_ERR4_MASK)
#define DMA_ERR_ERR5_MASK                        0x20u
#define DMA_ERR_ERR5_SHIFT                       5u
#define DMA_ERR_ERR5_WIDTH                       1u
#define DMA_ERR_ERR5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR5_SHIFT))&DMA_ERR_ERR5_MASK)
#define DMA_ERR_ERR6_MASK                        0x40u
#define DMA_ERR_ERR6_SHIFT                       6u
#define DMA_ERR_ERR6_WIDTH                       1u
#define DMA_ERR_ERR6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR6_SHIFT))&DMA_ERR_ERR6_MASK)
#define DMA_ERR_ERR7_MASK                        0x80u
#define DMA_ERR_ERR7_SHIFT                       7u
#define DMA_ERR_ERR7_WIDTH                       1u
#define DMA_ERR_ERR7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR7_SHIFT))&DMA_ERR_ERR7_MASK)
#define DMA_ERR_ERR8_MASK                        0x100u
#define DMA_ERR_ERR8_SHIFT                       8u
#define DMA_ERR_ERR8_WIDTH                       1u
#define DMA_ERR_ERR8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR8_SHIFT))&DMA_ERR_ERR8_MASK)
#define DMA_ERR_ERR9_MASK                        0x200u
#define DMA_ERR_ERR9_SHIFT                       9u
#define DMA_ERR_ERR9_WIDTH                       1u
#define DMA_ERR_ERR9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR9_SHIFT))&DMA_ERR_ERR9_MASK)
#define DMA_ERR_ERR10_MASK                       0x400u
#define DMA_ERR_ERR10_SHIFT                      10u
#define DMA_ERR_ERR10_WIDTH                      1u
#define DMA_ERR_ERR10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR10_SHIFT))&DMA_ERR_ERR10_MASK)
#define DMA_ERR_ERR11_MASK                       0x800u
#define DMA_ERR_ERR11_SHIFT                      11u
#define DMA_ERR_ERR11_WIDTH                      1u
#define DMA_ERR_ERR11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR11_SHIFT))&DMA_ERR_ERR11_MASK)
#define DMA_ERR_ERR12_MASK                       0x1000u
#define DMA_ERR_ERR12_SHIFT                      12u
#define DMA_ERR_ERR12_WIDTH                      1u
#define DMA_ERR_ERR12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR12_SHIFT))&DMA_ERR_ERR12_MASK)
#define DMA_ERR_ERR13_MASK                       0x2000u
#define DMA_ERR_ERR13_SHIFT                      13u
#define DMA_ERR_ERR13_WIDTH                      1u
#define DMA_ERR_ERR13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR13_SHIFT))&DMA_ERR_ERR13_MASK)
#define DMA_ERR_ERR14_MASK                       0x4000u
#define DMA_ERR_ERR14_SHIFT                      14u
#define DMA_ERR_ERR14_WIDTH                      1u
#define DMA_ERR_ERR14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR14_SHIFT))&DMA_ERR_ERR14_MASK)
#define DMA_ERR_ERR15_MASK                       0x8000u
#define DMA_ERR_ERR15_SHIFT                      15u
#define DMA_ERR_ERR15_WIDTH                      1u
#define DMA_ERR_ERR15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR15_SHIFT))&DMA_ERR_ERR15_MASK)
#define DMA_ERR_ERR16_MASK                       0x10000u
#define DMA_ERR_ERR16_SHIFT                      16u
#define DMA_ERR_ERR16_WIDTH                      1u
#define DMA_ERR_ERR16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR16_SHIFT))&DMA_ERR_ERR16_MASK)
#define DMA_ERR_ERR17_MASK                       0x20000u
#define DMA_ERR_ERR17_SHIFT                      17u
#define DMA_ERR_ERR17_WIDTH                      1u
#define DMA_ERR_ERR17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR17_SHIFT))&DMA_ERR_ERR17_MASK)
#define DMA_ERR_ERR18_MASK                       0x40000u
#define DMA_ERR_ERR18_SHIFT                      18u
#define DMA_ERR_ERR18_WIDTH                      1u
#define DMA_ERR_ERR18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR18_SHIFT))&DMA_ERR_ERR18_MASK)
#define DMA_ERR_ERR19_MASK                       0x80000u
#define DMA_ERR_ERR19_SHIFT                      19u
#define DMA_ERR_ERR19_WIDTH                      1u
#define DMA_ERR_ERR19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR19_SHIFT))&DMA_ERR_ERR19_MASK)
#define DMA_ERR_ERR20_MASK                       0x100000u
#define DMA_ERR_ERR20_SHIFT                      20u
#define DMA_ERR_ERR20_WIDTH                      1u
#define DMA_ERR_ERR20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR20_SHIFT))&DMA_ERR_ERR20_MASK)
#define DMA_ERR_ERR21_MASK                       0x200000u
#define DMA_ERR_ERR21_SHIFT                      21u
#define DMA_ERR_ERR21_WIDTH                      1u
#define DMA_ERR_ERR21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR21_SHIFT))&DMA_ERR_ERR21_MASK)
#define DMA_ERR_ERR22_MASK                       0x400000u
#define DMA_ERR_ERR22_SHIFT                      22u
#define DMA_ERR_ERR22_WIDTH                      1u
#define DMA_ERR_ERR22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR22_SHIFT))&DMA_ERR_ERR22_MASK)
#define DMA_ERR_ERR23_MASK                       0x800000u
#define DMA_ERR_ERR23_SHIFT                      23u
#define DMA_ERR_ERR23_WIDTH                      1u
#define DMA_ERR_ERR23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR23_SHIFT))&DMA_ERR_ERR23_MASK)
#define DMA_ERR_ERR24_MASK                       0x1000000u
#define DMA_ERR_ERR24_SHIFT                      24u
#define DMA_ERR_ERR24_WIDTH                      1u
#define DMA_ERR_ERR24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR24_SHIFT))&DMA_ERR_ERR24_MASK)
#define DMA_ERR_ERR25_MASK                       0x2000000u
#define DMA_ERR_ERR25_SHIFT                      25u
#define DMA_ERR_ERR25_WIDTH                      1u
#define DMA_ERR_ERR25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR25_SHIFT))&DMA_ERR_ERR25_MASK)
#define DMA_ERR_ERR26_MASK                       0x4000000u
#define DMA_ERR_ERR26_SHIFT                      26u
#define DMA_ERR_ERR26_WIDTH                      1u
#define DMA_ERR_ERR26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR26_SHIFT))&DMA_ERR_ERR26_MASK)
#define DMA_ERR_ERR27_MASK                       0x8000000u
#define DMA_ERR_ERR27_SHIFT                      27u
#define DMA_ERR_ERR27_WIDTH                      1u
#define DMA_ERR_ERR27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR27_SHIFT))&DMA_ERR_ERR27_MASK)
#define DMA_ERR_ERR28_MASK                       0x10000000u
#define DMA_ERR_ERR28_SHIFT                      28u
#define DMA_ERR_ERR28_WIDTH                      1u
#define DMA_ERR_ERR28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR28_SHIFT))&DMA_ERR_ERR28_MASK)
#define DMA_ERR_ERR29_MASK                       0x20000000u
#define DMA_ERR_ERR29_SHIFT                      29u
#define DMA_ERR_ERR29_WIDTH                      1u
#define DMA_ERR_ERR29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR29_SHIFT))&DMA_ERR_ERR29_MASK)
#define DMA_ERR_ERR30_MASK                       0x40000000u
#define DMA_ERR_ERR30_SHIFT                      30u
#define DMA_ERR_ERR30_WIDTH                      1u
#define DMA_ERR_ERR30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR30_SHIFT))&DMA_ERR_ERR30_MASK)
#define DMA_ERR_ERR31_MASK                       0x80000000u
#define DMA_ERR_ERR31_SHIFT                      31u
#define DMA_ERR_ERR31_WIDTH                      1u
#define DMA_ERR_ERR31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR31_SHIFT))&DMA_ERR_ERR31_MASK)
/* HRS Bit Fields */
#define DMA_HRS_HRS0_MASK                        0x1u
#define DMA_HRS_HRS0_SHIFT                       0u
#define DMA_HRS_HRS0_WIDTH                       1u
#define DMA_HRS_HRS0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS0_SHIFT))&DMA_HRS_HRS0_MASK)
#define DMA_HRS_HRS1_MASK                        0x2u
#define DMA_HRS_HRS1_SHIFT                       1u
#define DMA_HRS_HRS1_WIDTH                       1u
#define DMA_HRS_HRS1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS1_SHIFT))&DMA_HRS_HRS1_MASK)
#define DMA_HRS_HRS2_MASK                        0x4u
#define DMA_HRS_HRS2_SHIFT                       2u
#define DMA_HRS_HRS2_WIDTH                       1u
#define DMA_HRS_HRS2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS2_SHIFT))&DMA_HRS_HRS2_MASK)
#define DMA_HRS_HRS3_MASK                        0x8u
#define DMA_HRS_HRS3_SHIFT                       3u
#define DMA_HRS_HRS3_WIDTH                       1u
#define DMA_HRS_HRS3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS3_SHIFT))&DMA_HRS_HRS3_MASK)
#define DMA_HRS_HRS4_MASK                        0x10u
#define DMA_HRS_HRS4_SHIFT                       4u
#define DMA_HRS_HRS4_WIDTH                       1u
#define DMA_HRS_HRS4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS4_SHIFT))&DMA_HRS_HRS4_MASK)
#define DMA_HRS_HRS5_MASK                        0x20u
#define DMA_HRS_HRS5_SHIFT                       5u
#define DMA_HRS_HRS5_WIDTH                       1u
#define DMA_HRS_HRS5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS5_SHIFT))&DMA_HRS_HRS5_MASK)
#define DMA_HRS_HRS6_MASK                        0x40u
#define DMA_HRS_HRS6_SHIFT                       6u
#define DMA_HRS_HRS6_WIDTH                       1u
#define DMA_HRS_HRS6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS6_SHIFT))&DMA_HRS_HRS6_MASK)
#define DMA_HRS_HRS7_MASK                        0x80u
#define DMA_HRS_HRS7_SHIFT                       7u
#define DMA_HRS_HRS7_WIDTH                       1u
#define DMA_HRS_HRS7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS7_SHIFT))&DMA_HRS_HRS7_MASK)
#define DMA_HRS_HRS8_MASK                        0x100u
#define DMA_HRS_HRS8_SHIFT                       8u
#define DMA_HRS_HRS8_WIDTH                       1u
#define DMA_HRS_HRS8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS8_SHIFT))&DMA_HRS_HRS8_MASK)
#define DMA_HRS_HRS9_MASK                        0x200u
#define DMA_HRS_HRS9_SHIFT                       9u
#define DMA_HRS_HRS9_WIDTH                       1u
#define DMA_HRS_HRS9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS9_SHIFT))&DMA_HRS_HRS9_MASK)
#define DMA_HRS_HRS10_MASK                       0x400u
#define DMA_HRS_HRS10_SHIFT                      10u
#define DMA_HRS_HRS10_WIDTH                      1u
#define DMA_HRS_HRS10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS10_SHIFT))&DMA_HRS_HRS10_MASK)
#define DMA_HRS_HRS11_MASK                       0x800u
#define DMA_HRS_HRS11_SHIFT                      11u
#define DMA_HRS_HRS11_WIDTH                      1u
#define DMA_HRS_HRS11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS11_SHIFT))&DMA_HRS_HRS11_MASK)
#define DMA_HRS_HRS12_MASK                       0x1000u
#define DMA_HRS_HRS12_SHIFT                      12u
#define DMA_HRS_HRS12_WIDTH                      1u
#define DMA_HRS_HRS12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS12_SHIFT))&DMA_HRS_HRS12_MASK)
#define DMA_HRS_HRS13_MASK                       0x2000u
#define DMA_HRS_HRS13_SHIFT                      13u
#define DMA_HRS_HRS13_WIDTH                      1u
#define DMA_HRS_HRS13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS13_SHIFT))&DMA_HRS_HRS13_MASK)
#define DMA_HRS_HRS14_MASK                       0x4000u
#define DMA_HRS_HRS14_SHIFT                      14u
#define DMA_HRS_HRS14_WIDTH                      1u
#define DMA_HRS_HRS14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS14_SHIFT))&DMA_HRS_HRS14_MASK)
#define DMA_HRS_HRS15_MASK                       0x8000u
#define DMA_HRS_HRS15_SHIFT                      15u
#define DMA_HRS_HRS15_WIDTH                      1u
#define DMA_HRS_HRS15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS15_SHIFT))&DMA_HRS_HRS15_MASK)
#define DMA_HRS_HRS16_MASK                       0x10000u
#define DMA_HRS_HRS16_SHIFT                      16u
#define DMA_HRS_HRS16_WIDTH                      1u
#define DMA_HRS_HRS16(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS16_SHIFT))&DMA_HRS_HRS16_MASK)
#define DMA_HRS_HRS17_MASK                       0x20000u
#define DMA_HRS_HRS17_SHIFT                      17u
#define DMA_HRS_HRS17_WIDTH                      1u
#define DMA_HRS_HRS17(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS17_SHIFT))&DMA_HRS_HRS17_MASK)
#define DMA_HRS_HRS18_MASK                       0x40000u
#define DMA_HRS_HRS18_SHIFT                      18u
#define DMA_HRS_HRS18_WIDTH                      1u
#define DMA_HRS_HRS18(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS18_SHIFT))&DMA_HRS_HRS18_MASK)
#define DMA_HRS_HRS19_MASK                       0x80000u
#define DMA_HRS_HRS19_SHIFT                      19u
#define DMA_HRS_HRS19_WIDTH                      1u
#define DMA_HRS_HRS19(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS19_SHIFT))&DMA_HRS_HRS19_MASK)
#define DMA_HRS_HRS20_MASK                       0x100000u
#define DMA_HRS_HRS20_SHIFT                      20u
#define DMA_HRS_HRS20_WIDTH                      1u
#define DMA_HRS_HRS20(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS20_SHIFT))&DMA_HRS_HRS20_MASK)
#define DMA_HRS_HRS21_MASK                       0x200000u
#define DMA_HRS_HRS21_SHIFT                      21u
#define DMA_HRS_HRS21_WIDTH                      1u
#define DMA_HRS_HRS21(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS21_SHIFT))&DMA_HRS_HRS21_MASK)
#define DMA_HRS_HRS22_MASK                       0x400000u
#define DMA_HRS_HRS22_SHIFT                      22u
#define DMA_HRS_HRS22_WIDTH                      1u
#define DMA_HRS_HRS22(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS22_SHIFT))&DMA_HRS_HRS22_MASK)
#define DMA_HRS_HRS23_MASK                       0x800000u
#define DMA_HRS_HRS23_SHIFT                      23u
#define DMA_HRS_HRS23_WIDTH                      1u
#define DMA_HRS_HRS23(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS23_SHIFT))&DMA_HRS_HRS23_MASK)
#define DMA_HRS_HRS24_MASK                       0x1000000u
#define DMA_HRS_HRS24_SHIFT                      24u
#define DMA_HRS_HRS24_WIDTH                      1u
#define DMA_HRS_HRS24(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS24_SHIFT))&DMA_HRS_HRS24_MASK)
#define DMA_HRS_HRS25_MASK                       0x2000000u
#define DMA_HRS_HRS25_SHIFT                      25u
#define DMA_HRS_HRS25_WIDTH                      1u
#define DMA_HRS_HRS25(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS25_SHIFT))&DMA_HRS_HRS25_MASK)
#define DMA_HRS_HRS26_MASK                       0x4000000u
#define DMA_HRS_HRS26_SHIFT                      26u
#define DMA_HRS_HRS26_WIDTH                      1u
#define DMA_HRS_HRS26(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS26_SHIFT))&DMA_HRS_HRS26_MASK)
#define DMA_HRS_HRS27_MASK                       0x8000000u
#define DMA_HRS_HRS27_SHIFT                      27u
#define DMA_HRS_HRS27_WIDTH                      1u
#define DMA_HRS_HRS27(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS27_SHIFT))&DMA_HRS_HRS27_MASK)
#define DMA_HRS_HRS28_MASK                       0x10000000u
#define DMA_HRS_HRS28_SHIFT                      28u
#define DMA_HRS_HRS28_WIDTH                      1u
#define DMA_HRS_HRS28(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS28_SHIFT))&DMA_HRS_HRS28_MASK)
#define DMA_HRS_HRS29_MASK                       0x20000000u
#define DMA_HRS_HRS29_SHIFT                      29u
#define DMA_HRS_HRS29_WIDTH                      1u
#define DMA_HRS_HRS29(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS29_SHIFT))&DMA_HRS_HRS29_MASK)
#define DMA_HRS_HRS30_MASK                       0x40000000u
#define DMA_HRS_HRS30_SHIFT                      30u
#define DMA_HRS_HRS30_WIDTH                      1u
#define DMA_HRS_HRS30(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS30_SHIFT))&DMA_HRS_HRS30_MASK)
#define DMA_HRS_HRS31_MASK                       0x80000000u
#define DMA_HRS_HRS31_SHIFT                      31u
#define DMA_HRS_HRS31_WIDTH                      1u
#define DMA_HRS_HRS31(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS31_SHIFT))&DMA_HRS_HRS31_MASK)
/* DCHPRI Bit Fields */
#define DMA_DCHPRI_CHPRI_MASK                    0xFu
#define DMA_DCHPRI_CHPRI_SHIFT                   0u
#define DMA_DCHPRI_CHPRI_WIDTH                   4u
#define DMA_DCHPRI_CHPRI(x)                      (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_CHPRI_SHIFT))&DMA_DCHPRI_CHPRI_MASK)
#define DMA_DCHPRI_GRPPRI_MASK                   0x30u
#define DMA_DCHPRI_GRPPRI_SHIFT                  4u
#define DMA_DCHPRI_GRPPRI_WIDTH                  2u
#define DMA_DCHPRI_GRPPRI(x)                     (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_GRPPRI_SHIFT))&DMA_DCHPRI_GRPPRI_MASK)
#define DMA_DCHPRI_DPA_MASK                      0x40u
#define DMA_DCHPRI_DPA_SHIFT                     6u
#define DMA_DCHPRI_DPA_WIDTH                     1u
#define DMA_DCHPRI_DPA(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_DPA_SHIFT))&DMA_DCHPRI_DPA_MASK)
#define DMA_DCHPRI_ECP_MASK                      0x80u
#define DMA_DCHPRI_ECP_SHIFT                     7u
#define DMA_DCHPRI_ECP_WIDTH                     1u
#define DMA_DCHPRI_ECP(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_ECP_SHIFT))&DMA_DCHPRI_ECP_MASK)
/* DCHMID Bit Fields */
#define DMA_DCHMID_MID_MASK                      0xFu
#define DMA_DCHMID_MID_SHIFT                     0u
#define DMA_DCHMID_MID_WIDTH                     4u
#define DMA_DCHMID_MID(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHMID_MID_SHIFT))&DMA_DCHMID_MID_MASK)
#define DMA_DCHMID_PAL_MASK                      0x40u
#define DMA_DCHMID_PAL_SHIFT                     6u
#define DMA_DCHMID_PAL_WIDTH                     1u
#define DMA_DCHMID_PAL(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHMID_PAL_SHIFT))&DMA_DCHMID_PAL_MASK)
#define DMA_DCHMID_EMI_MASK                      0x80u
#define DMA_DCHMID_EMI_SHIFT                     7u
#define DMA_DCHMID_EMI_WIDTH                     1u
#define DMA_DCHMID_EMI(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHMID_EMI_SHIFT))&DMA_DCHMID_EMI_MASK)
/* TCD_SADDR Bit Fields */
#define DMA_TCD_SADDR_SADDR_MASK                 0xFFFFFFFFu
#define DMA_TCD_SADDR_SADDR_SHIFT                0u
#define DMA_TCD_SADDR_SADDR_WIDTH                32u
#define DMA_TCD_SADDR_SADDR(x)                   (((uint32_t)(((uint32_t)(x))<<DMA_TCD_SADDR_SADDR_SHIFT))&DMA_TCD_SADDR_SADDR_MASK)
/* TCD_ATTR Bit Fields */
#define DMA_TCD_ATTR_DSIZE_MASK                  0x7u
#define DMA_TCD_ATTR_DSIZE_SHIFT                 0u
#define DMA_TCD_ATTR_DSIZE_WIDTH                 3u
#define DMA_TCD_ATTR_DSIZE(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_DSIZE_SHIFT))&DMA_TCD_ATTR_DSIZE_MASK)
#define DMA_TCD_ATTR_DMOD_MASK                   0xF8u
#define DMA_TCD_ATTR_DMOD_SHIFT                  3u
#define DMA_TCD_ATTR_DMOD_WIDTH                  5u
#define DMA_TCD_ATTR_DMOD(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_DMOD_SHIFT))&DMA_TCD_ATTR_DMOD_MASK)
#define DMA_TCD_ATTR_SSIZE_MASK                  0x700u
#define DMA_TCD_ATTR_SSIZE_SHIFT                 8u
#define DMA_TCD_ATTR_SSIZE_WIDTH                 3u
#define DMA_TCD_ATTR_SSIZE(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_SSIZE_SHIFT))&DMA_TCD_ATTR_SSIZE_MASK)
#define DMA_TCD_ATTR_SMOD_MASK                   0xF800u
#define DMA_TCD_ATTR_SMOD_SHIFT                  11u
#define DMA_TCD_ATTR_SMOD_WIDTH                  5u
#define DMA_TCD_ATTR_SMOD(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_ATTR_SMOD_SHIFT))&DMA_TCD_ATTR_SMOD_MASK)
/* TCD_SOFF Bit Fields */
#define DMA_TCD_SOFF_SOFF_MASK                   0xFFFFu
#define DMA_TCD_SOFF_SOFF_SHIFT                  0u
#define DMA_TCD_SOFF_SOFF_WIDTH                  16u
#define DMA_TCD_SOFF_SOFF(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_SOFF_SOFF_SHIFT))&DMA_TCD_SOFF_SOFF_MASK)
/* TCD_NBYTES_MLNO Bit Fields */
#define DMA_TCD_NBYTES_MLNO_NBYTES_MASK          0xFFFFFFFFu
#define DMA_TCD_NBYTES_MLNO_NBYTES_SHIFT         0u
#define DMA_TCD_NBYTES_MLNO_NBYTES_WIDTH         32u
#define DMA_TCD_NBYTES_MLNO_NBYTES(x)            (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLNO_NBYTES_SHIFT))&DMA_TCD_NBYTES_MLNO_NBYTES_MASK)
/* TCD_NBYTES_MLOFFNO Bit Fields */
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_MASK       0x3FFFFFFFu
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_SHIFT      0u
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES_WIDTH      30u
#define DMA_TCD_NBYTES_MLOFFNO_NBYTES(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_TCD_NBYTES_MLOFFNO_NBYTES_MASK)
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_MASK        0x40000000u
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_SHIFT       30u
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE_WIDTH       1u
#define DMA_TCD_NBYTES_MLOFFNO_DMLOE(x)          (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFNO_DMLOE_MASK)
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_MASK        0x80000000u
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_SHIFT       31u
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE_WIDTH       1u
#define DMA_TCD_NBYTES_MLOFFNO_SMLOE(x)          (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFNO_SMLOE_MASK)
/* TCD_NBYTES_MLOFFYES Bit Fields */
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_MASK      0x3FFu
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_SHIFT     0u
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES_WIDTH     10u
#define DMA_TCD_NBYTES_MLOFFYES_NBYTES(x)        (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_NBYTES_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_MASK       0x3FFFFC00u
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_SHIFT      10u
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF_WIDTH      20u
#define DMA_TCD_NBYTES_MLOFFYES_MLOFF(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_MLOFF_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_MASK       0x40000000u
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_SHIFT      30u
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE_WIDTH      1u
#define DMA_TCD_NBYTES_MLOFFYES_DMLOE(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_DMLOE_MASK)
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_MASK       0x80000000u
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_SHIFT      31u
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE_WIDTH      1u
#define DMA_TCD_NBYTES_MLOFFYES_SMLOE(x)         (((uint32_t)(((uint32_t)(x))<<DMA_TCD_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_TCD_NBYTES_MLOFFYES_SMLOE_MASK)
/* TCD_SLAST Bit Fields */
#define DMA_TCD_SLAST_SLAST_MASK                 0xFFFFFFFFu
#define DMA_TCD_SLAST_SLAST_SHIFT                0u
#define DMA_TCD_SLAST_SLAST_WIDTH                32u
#define DMA_TCD_SLAST_SLAST(x)                   (((uint32_t)(((uint32_t)(x))<<DMA_TCD_SLAST_SLAST_SHIFT))&DMA_TCD_SLAST_SLAST_MASK)
/* TCD_DADDR Bit Fields */
#define DMA_TCD_DADDR_DADDR_MASK                 0xFFFFFFFFu
#define DMA_TCD_DADDR_DADDR_SHIFT                0u
#define DMA_TCD_DADDR_DADDR_WIDTH                32u
#define DMA_TCD_DADDR_DADDR(x)                   (((uint32_t)(((uint32_t)(x))<<DMA_TCD_DADDR_DADDR_SHIFT))&DMA_TCD_DADDR_DADDR_MASK)
/* TCD_CITER_ELINKNO Bit Fields */
#define DMA_TCD_CITER_ELINKNO_CITER_MASK         0x7FFFu
#define DMA_TCD_CITER_ELINKNO_CITER_SHIFT        0u
#define DMA_TCD_CITER_ELINKNO_CITER_WIDTH        15u
#define DMA_TCD_CITER_ELINKNO_CITER(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKNO_CITER_SHIFT))&DMA_TCD_CITER_ELINKNO_CITER_MASK)
#define DMA_TCD_CITER_ELINKNO_ELINK_MASK         0x8000u
#define DMA_TCD_CITER_ELINKNO_ELINK_SHIFT        15u
#define DMA_TCD_CITER_ELINKNO_ELINK_WIDTH        1u
#define DMA_TCD_CITER_ELINKNO_ELINK(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKNO_ELINK_SHIFT))&DMA_TCD_CITER_ELINKNO_ELINK_MASK)
/* TCD_CITER_ELINKYES Bit Fields */
#define DMA_TCD_CITER_ELINKYES_CITER_MASK        0x1FFu
#define DMA_TCD_CITER_ELINKYES_CITER_SHIFT       0u
#define DMA_TCD_CITER_ELINKYES_CITER_WIDTH       9u
#define DMA_TCD_CITER_ELINKYES_CITER(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKYES_CITER_SHIFT))&DMA_TCD_CITER_ELINKYES_CITER_MASK)
#define DMA_TCD_CITER_ELINKYES_LINKCH_MASK       0x3E00u
#define DMA_TCD_CITER_ELINKYES_LINKCH_SHIFT      9u
#define DMA_TCD_CITER_ELINKYES_LINKCH_WIDTH      5u
#define DMA_TCD_CITER_ELINKYES_LINKCH(x)         (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD_CITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD_CITER_ELINKYES_ELINK_MASK        0x8000u
#define DMA_TCD_CITER_ELINKYES_ELINK_SHIFT       15u
#define DMA_TCD_CITER_ELINKYES_ELINK_WIDTH       1u
#define DMA_TCD_CITER_ELINKYES_ELINK(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CITER_ELINKYES_ELINK_SHIFT))&DMA_TCD_CITER_ELINKYES_ELINK_MASK)
/* TCD_DOFF Bit Fields */
#define DMA_TCD_DOFF_DOFF_MASK                   0xFFFFu
#define DMA_TCD_DOFF_DOFF_SHIFT                  0u
#define DMA_TCD_DOFF_DOFF_WIDTH                  16u
#define DMA_TCD_DOFF_DOFF(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_DOFF_DOFF_SHIFT))&DMA_TCD_DOFF_DOFF_MASK)
/* TCD_DLASTSGA Bit Fields */
#define DMA_TCD_DLASTSGA_DLASTSGA_MASK           0xFFFFFFFFu
#define DMA_TCD_DLASTSGA_DLASTSGA_SHIFT          0u
#define DMA_TCD_DLASTSGA_DLASTSGA_WIDTH          32u
#define DMA_TCD_DLASTSGA_DLASTSGA(x)             (((uint32_t)(((uint32_t)(x))<<DMA_TCD_DLASTSGA_DLASTSGA_SHIFT))&DMA_TCD_DLASTSGA_DLASTSGA_MASK)
/* TCD_BITER_ELINKNO Bit Fields */
#define DMA_TCD_BITER_ELINKNO_BITER_MASK         0x7FFFu
#define DMA_TCD_BITER_ELINKNO_BITER_SHIFT        0u
#define DMA_TCD_BITER_ELINKNO_BITER_WIDTH        15u
#define DMA_TCD_BITER_ELINKNO_BITER(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKNO_BITER_SHIFT))&DMA_TCD_BITER_ELINKNO_BITER_MASK)
#define DMA_TCD_BITER_ELINKNO_ELINK_MASK         0x8000u
#define DMA_TCD_BITER_ELINKNO_ELINK_SHIFT        15u
#define DMA_TCD_BITER_ELINKNO_ELINK_WIDTH        1u
#define DMA_TCD_BITER_ELINKNO_ELINK(x)           (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKNO_ELINK_SHIFT))&DMA_TCD_BITER_ELINKNO_ELINK_MASK)
/* TCD_BITER_ELINKYES Bit Fields */
#define DMA_TCD_BITER_ELINKYES_BITER_MASK        0x1FFu
#define DMA_TCD_BITER_ELINKYES_BITER_SHIFT       0u
#define DMA_TCD_BITER_ELINKYES_BITER_WIDTH       9u
#define DMA_TCD_BITER_ELINKYES_BITER(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKYES_BITER_SHIFT))&DMA_TCD_BITER_ELINKYES_BITER_MASK)
#define DMA_TCD_BITER_ELINKYES_LINKCH_MASK       0x3E00u
#define DMA_TCD_BITER_ELINKYES_LINKCH_SHIFT      9u
#define DMA_TCD_BITER_ELINKYES_LINKCH_WIDTH      5u
#define DMA_TCD_BITER_ELINKYES_LINKCH(x)         (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKYES_LINKCH_SHIFT))&DMA_TCD_BITER_ELINKYES_LINKCH_MASK)
#define DMA_TCD_BITER_ELINKYES_ELINK_MASK        0x8000u
#define DMA_TCD_BITER_ELINKYES_ELINK_SHIFT       15u
#define DMA_TCD_BITER_ELINKYES_ELINK_WIDTH       1u
#define DMA_TCD_BITER_ELINKYES_ELINK(x)          (((uint16_t)(((uint16_t)(x))<<DMA_TCD_BITER_ELINKYES_ELINK_SHIFT))&DMA_TCD_BITER_ELINKYES_ELINK_MASK)
/* TCD_CSR Bit Fields */
#define DMA_TCD_CSR_START_MASK                   0x1u
#define DMA_TCD_CSR_START_SHIFT                  0u
#define DMA_TCD_CSR_START_WIDTH                  1u
#define DMA_TCD_CSR_START(x)                     (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_START_SHIFT))&DMA_TCD_CSR_START_MASK)
#define DMA_TCD_CSR_INTMAJOR_MASK                0x2u
#define DMA_TCD_CSR_INTMAJOR_SHIFT               1u
#define DMA_TCD_CSR_INTMAJOR_WIDTH               1u
#define DMA_TCD_CSR_INTMAJOR(x)                  (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_INTMAJOR_SHIFT))&DMA_TCD_CSR_INTMAJOR_MASK)
#define DMA_TCD_CSR_INTHALF_MASK                 0x4u
#define DMA_TCD_CSR_INTHALF_SHIFT                2u
#define DMA_TCD_CSR_INTHALF_WIDTH                1u
#define DMA_TCD_CSR_INTHALF(x)                   (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_INTHALF_SHIFT))&DMA_TCD_CSR_INTHALF_MASK)
#define DMA_TCD_CSR_DREQ_MASK                    0x8u
#define DMA_TCD_CSR_DREQ_SHIFT                   3u
#define DMA_TCD_CSR_DREQ_WIDTH                   1u
#define DMA_TCD_CSR_DREQ(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_DREQ_SHIFT))&DMA_TCD_CSR_DREQ_MASK)
#define DMA_TCD_CSR_ESG_MASK                     0x10u
#define DMA_TCD_CSR_ESG_SHIFT                    4u
#define DMA_TCD_CSR_ESG_WIDTH                    1u
#define DMA_TCD_CSR_ESG(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_ESG_SHIFT))&DMA_TCD_CSR_ESG_MASK)
#define DMA_TCD_CSR_MAJORELINK_MASK              0x20u
#define DMA_TCD_CSR_MAJORELINK_SHIFT             5u
#define DMA_TCD_CSR_MAJORELINK_WIDTH             1u
#define DMA_TCD_CSR_MAJORELINK(x)                (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_MAJORELINK_SHIFT))&DMA_TCD_CSR_MAJORELINK_MASK)
#define DMA_TCD_CSR_ACTIVE_MASK                  0x40u
#define DMA_TCD_CSR_ACTIVE_SHIFT                 6u
#define DMA_TCD_CSR_ACTIVE_WIDTH                 1u
#define DMA_TCD_CSR_ACTIVE(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_ACTIVE_SHIFT))&DMA_TCD_CSR_ACTIVE_MASK)
#define DMA_TCD_CSR_DONE_MASK                    0x80u
#define DMA_TCD_CSR_DONE_SHIFT                   7u
#define DMA_TCD_CSR_DONE_WIDTH                   1u
#define DMA_TCD_CSR_DONE(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_DONE_SHIFT))&DMA_TCD_CSR_DONE_MASK)
#define DMA_TCD_CSR_MAJORLINKCH_MASK             0x1F00u
#define DMA_TCD_CSR_MAJORLINKCH_SHIFT            8u
#define DMA_TCD_CSR_MAJORLINKCH_WIDTH            5u
#define DMA_TCD_CSR_MAJORLINKCH(x)               (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_MAJORLINKCH_SHIFT))&DMA_TCD_CSR_MAJORLINKCH_MASK)
#define DMA_TCD_CSR_BWC_MASK                     0xC000u
#define DMA_TCD_CSR_BWC_SHIFT                    14u
#define DMA_TCD_CSR_BWC_WIDTH                    2u
#define DMA_TCD_CSR_BWC(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_TCD_CSR_BWC_SHIFT))&DMA_TCD_CSR_BWC_MASK)

/*!
 * @}
 */ /* end of group DMA_Register_Masks */


/*!
 * @}
 */ /* end of group DMA_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DMAMUX Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Peripheral_Access_Layer DMAMUX Peripheral Access Layer
 * @{
 */


/** DMAMUX - Size of Registers Arrays */
#define DMAMUX_CHCFG_COUNT                       16u

/** DMAMUX - Register Layout Typedef */
typedef struct {
  __IO uint8_t CHCFG[DMAMUX_CHCFG_COUNT];          /**< Channel Configuration register, array offset: 0x0, array step: 0x1 */
} DMAMUX_Type, *DMAMUX_MemMapPtr;

 /** Number of instances of the DMAMUX module. */
#define DMAMUX_INSTANCE_COUNT                    (2u)


/* DMAMUX - Peripheral instance base addresses */
/** Peripheral DMAMUX_0 base address */
#define DMAMUX_0_BASE                            (0xFFF6C000u)
/** Peripheral DMAMUX_0 base pointer */
#define DMAMUX_0                                 ((DMAMUX_Type *)DMAMUX_0_BASE)
/** Peripheral DMAMUX_1 base address */
#define DMAMUX_1_BASE                            (0xFFF6C200u)
/** Peripheral DMAMUX_1 base pointer */
#define DMAMUX_1                                 ((DMAMUX_Type *)DMAMUX_1_BASE)
/** Array initializer of DMAMUX peripheral base addresses */
#define DMAMUX_BASE_ADDRS                        { DMAMUX_0_BASE, DMAMUX_1_BASE }
/** Array initializer of DMAMUX peripheral base pointers */
#define DMAMUX_BASE_PTRS                         { DMAMUX_0, DMAMUX_1 }

/* ----------------------------------------------------------------------------
   -- DMAMUX Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DMAMUX_Register_Masks DMAMUX Register Masks
 * @{
 */

/* CHCFG Bit Fields */
#define DMAMUX_CHCFG_SOURCE_MASK                 0x3Fu
#define DMAMUX_CHCFG_SOURCE_SHIFT                0u
#define DMAMUX_CHCFG_SOURCE_WIDTH                6u
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK)
#define DMAMUX_CHCFG_TRIG_MASK                   0x40u
#define DMAMUX_CHCFG_TRIG_SHIFT                  6u
#define DMAMUX_CHCFG_TRIG_WIDTH                  1u
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_TRIG_SHIFT))&DMAMUX_CHCFG_TRIG_MASK)
#define DMAMUX_CHCFG_ENBL_MASK                   0x80u
#define DMAMUX_CHCFG_ENBL_SHIFT                  7u
#define DMAMUX_CHCFG_ENBL_WIDTH                  1u
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_ENBL_SHIFT))&DMAMUX_CHCFG_ENBL_MASK)

/*!
 * @}
 */ /* end of group DMAMUX_Register_Masks */


/*!
 * @}
 */ /* end of group DMAMUX_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- DSPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DSPI_Peripheral_Access_Layer DSPI Peripheral Access Layer
 * @{
 */


/** DSPI - Size of Registers Arrays */
#define DSPI_CTAR_COUNT                          6u
#define DSPI_CTAR_SLAVE_COUNT                    2u
#define DSPI_TXFR_COUNT                          4u
#define DSPI_RXFR_COUNT                          4u
#define DSPI_CTARE_COUNT                         6u

/** DSPI - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t TCR;                               /**< Transfer Count Register, offset: 0x8 */
  union {                                          /* offset: 0xC */
    __IO uint32_t CTAR[DSPI_CTAR_COUNT];             /**< Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 */
    __IO uint32_t CTAR_SLAVE[DSPI_CTAR_SLAVE_COUNT]; /**< Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 */
  } MODE;
       uint8_t RESERVED_1[8];
  __IO uint32_t SR;                                /**< Status Register, offset: 0x2C */
  __IO uint32_t RSER;                              /**< DMA/Interrupt Request Select and Enable Register, offset: 0x30 */
  union {                                          /* offset: 0x34 */
    struct {                                         /* offset: 0x34 */
      __IO uint16_t CMD;                               /**< DSPI_1_PUSHR_FIFO_CMD register...DSPI_2_PUSHR_FIFO_CMD register., offset: 0x34 */
      __IO uint16_t TX;                                /**< DSPI_1_PUSHR_FIFO_TX register...DSPI_2_PUSHR_FIFO_TX register., offset: 0x36 */
    } FIFO;
    __IO uint32_t PUSHR;                             /**< PUSH TX FIFO Register In Master Mode, offset: 0x34 */
    __IO uint32_t SLAVE;                             /**< PUSH TX FIFO Register In Slave Mode, offset: 0x34 */
  } PUSHR;
  __I  uint32_t POPR;                              /**< POP RX FIFO Register, offset: 0x38 */
  __I  uint32_t TXFR[DSPI_TXFR_COUNT];             /**< Transmit FIFO Registers, array offset: 0x3C, array step: 0x4 */
       uint8_t RESERVED_2[48];
  __I  uint32_t RXFR[DSPI_RXFR_COUNT];             /**< Receive FIFO Registers, array offset: 0x7C, array step: 0x4 */
       uint8_t RESERVED_3[48];
  __IO uint32_t DSICR0;                            /**< DSI Configuration Register 0, offset: 0xBC */
  __I  uint32_t SDR0;                              /**< DSI Serialization Data Register 0, offset: 0xC0 */
  __IO uint32_t ASDR0;                             /**< DSI Alternate Serialization Data Register 0, offset: 0xC4 */
  __I  uint32_t COMPR0;                            /**< DSI Transmit Comparison Register 0, offset: 0xC8 */
  __I  uint32_t DDR0;                              /**< DSI Deserialization Data Register 0, offset: 0xCC */
  __IO uint32_t DSICR1;                            /**< DSI Configuration Register 1, offset: 0xD0 */
  __IO uint32_t SSR0;                              /**< DSI Serialization Source Select Register 0, offset: 0xD4 */
  __IO uint32_t PISR0;                             /**< DSI Parallel Input Select Register 0, offset: 0xD8 */
  __IO uint32_t PISR1;                             /**< DSI Parallel Input Select Register 1, offset: 0xDC */
  __IO uint32_t PISR2;                             /**< DSI Parallel Input Select Register 2, offset: 0xE0 */
  __IO uint32_t PISR3;                             /**< DSI Parallel Input Select Register 3, offset: 0xE4 */
  __IO uint32_t DIMR0;                             /**< DSI Deserialized Data Interrupt Mask Register 0, offset: 0xE8 */
  __IO uint32_t DPIR0;                             /**< DSI Deserialized Data Polarity Interrupt Register 0, offset: 0xEC */
  __I  uint32_t SDR1;                              /**< DSI Serialization Data Register 1, offset: 0xF0 */
  __IO uint32_t ASDR1;                             /**< DSI Alternate Serialization Data Register 1, offset: 0xF4 */
  __I  uint32_t COMPR1;                            /**< DSI Transmit Comparison Register 1, offset: 0xF8 */
  __I  uint32_t DDR1;                              /**< DSI Deserialization Data Register 1, offset: 0xFC */
  __IO uint32_t SSR1;                              /**< DSI Serialization Source Select Register 1, offset: 0x100 */
  __IO uint32_t PISR4;                             /**< DSI Parallel Input Select Register 4, offset: 0x104 */
  __IO uint32_t PISR5;                             /**< DSI Parallel Input Select Register 5, offset: 0x108 */
  __IO uint32_t PISR6;                             /**< DSI Parallel Input Select Register 6, offset: 0x10C */
  __IO uint32_t PISR7;                             /**< DSI Parallel Input Select Register 7, offset: 0x110 */
  __IO uint32_t DIMR1;                             /**< DSI Deserialized Data Interrupt Mask Register 1, offset: 0x114 */
  __IO uint32_t DPIR1;                             /**< DSI Deserialized Data Polarity Interrupt Register 1, offset: 0x118 */
  __IO uint32_t CTARE[DSPI_CTARE_COUNT];           /**< Clock and Transfer Attributes Register Extended, array offset: 0x11C, array step: 0x4 */
       uint8_t RESERVED_4[8];
  __I  uint32_t SREX;                              /**< Status Register Extended, offset: 0x13C */
  __IO uint32_t TRIG;                              /**< Trigger Register, offset: 0x140 */
       uint8_t RESERVED_5[12];
  __IO uint32_t TSL;                               /**< Time Slot Length Register, offset: 0x150 */
  __IO uint32_t TS_CONF;                           /**< Time Slot Configuration Register, offset: 0x154 */
} DSPI_Type, *DSPI_MemMapPtr;

 /** Number of instances of the DSPI module. */
#define DSPI_INSTANCE_COUNT                      (4u)


/* DSPI - Peripheral instance base addresses */
/** Peripheral DSPI_0 base address */
#define DSPI_0_BASE                              (0xFFE70000u)
/** Peripheral DSPI_0 base pointer */
#define DSPI_0                                   ((DSPI_Type *)DSPI_0_BASE)
/** Peripheral DSPI_1 base address */
#define DSPI_1_BASE                              (0xFBE70000u)
/** Peripheral DSPI_1 base pointer */
#define DSPI_1                                   ((DSPI_Type *)DSPI_1_BASE)
/** Peripheral DSPI_2 base address */
#define DSPI_2_BASE                              (0xFFE74000u)
/** Peripheral DSPI_2 base pointer */
#define DSPI_2                                   ((DSPI_Type *)DSPI_2_BASE)
/** Peripheral DSPI_3 base address */
#define DSPI_3_BASE                              (0xFBE74000u)
/** Peripheral DSPI_3 base pointer */
#define DSPI_3                                   ((DSPI_Type *)DSPI_3_BASE)
/** Array initializer of DSPI peripheral base addresses */
#define DSPI_BASE_ADDRS                          { DSPI_0_BASE, DSPI_1_BASE, DSPI_2_BASE, DSPI_3_BASE }
/** Array initializer of DSPI peripheral base pointers */
#define DSPI_BASE_PTRS                           { DSPI_0, DSPI_1, DSPI_2, DSPI_3 }

/* ----------------------------------------------------------------------------
   -- DSPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup DSPI_Register_Masks DSPI Register Masks
 * @{
 */

/* MCR Bit Fields */
#define DSPI_MCR_HALT_MASK                       0x1u
#define DSPI_MCR_HALT_SHIFT                      0u
#define DSPI_MCR_HALT_WIDTH                      1u
#define DSPI_MCR_HALT(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_HALT_SHIFT))&DSPI_MCR_HALT_MASK)
#define DSPI_MCR_PES_MASK                        0x2u
#define DSPI_MCR_PES_SHIFT                       1u
#define DSPI_MCR_PES_WIDTH                       1u
#define DSPI_MCR_PES(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_PES_SHIFT))&DSPI_MCR_PES_MASK)
#define DSPI_MCR_FCPCS_MASK                      0x4u
#define DSPI_MCR_FCPCS_SHIFT                     2u
#define DSPI_MCR_FCPCS_WIDTH                     1u
#define DSPI_MCR_FCPCS(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_FCPCS_SHIFT))&DSPI_MCR_FCPCS_MASK)
#define DSPI_MCR_XSPI_MASK                       0x8u
#define DSPI_MCR_XSPI_SHIFT                      3u
#define DSPI_MCR_XSPI_WIDTH                      1u
#define DSPI_MCR_XSPI(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_XSPI_SHIFT))&DSPI_MCR_XSPI_MASK)
#define DSPI_MCR_SMPL_PT_MASK                    0x300u
#define DSPI_MCR_SMPL_PT_SHIFT                   8u
#define DSPI_MCR_SMPL_PT_WIDTH                   2u
#define DSPI_MCR_SMPL_PT(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_SMPL_PT_SHIFT))&DSPI_MCR_SMPL_PT_MASK)
#define DSPI_MCR_CLR_RXF_MASK                    0x400u
#define DSPI_MCR_CLR_RXF_SHIFT                   10u
#define DSPI_MCR_CLR_RXF_WIDTH                   1u
#define DSPI_MCR_CLR_RXF(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_CLR_RXF_SHIFT))&DSPI_MCR_CLR_RXF_MASK)
#define DSPI_MCR_CLR_TXF_MASK                    0x800u
#define DSPI_MCR_CLR_TXF_SHIFT                   11u
#define DSPI_MCR_CLR_TXF_WIDTH                   1u
#define DSPI_MCR_CLR_TXF(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_CLR_TXF_SHIFT))&DSPI_MCR_CLR_TXF_MASK)
#define DSPI_MCR_DIS_RXF_MASK                    0x1000u
#define DSPI_MCR_DIS_RXF_SHIFT                   12u
#define DSPI_MCR_DIS_RXF_WIDTH                   1u
#define DSPI_MCR_DIS_RXF(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_DIS_RXF_SHIFT))&DSPI_MCR_DIS_RXF_MASK)
#define DSPI_MCR_DIS_TXF_MASK                    0x2000u
#define DSPI_MCR_DIS_TXF_SHIFT                   13u
#define DSPI_MCR_DIS_TXF_WIDTH                   1u
#define DSPI_MCR_DIS_TXF(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_DIS_TXF_SHIFT))&DSPI_MCR_DIS_TXF_MASK)
#define DSPI_MCR_MDIS_MASK                       0x4000u
#define DSPI_MCR_MDIS_SHIFT                      14u
#define DSPI_MCR_MDIS_WIDTH                      1u
#define DSPI_MCR_MDIS(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_MDIS_SHIFT))&DSPI_MCR_MDIS_MASK)
#define DSPI_MCR_PCSIS_MASK                      0x3F0000u
#define DSPI_MCR_PCSIS_SHIFT                     16u
#define DSPI_MCR_PCSIS_WIDTH                     6u
#define DSPI_MCR_PCSIS(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_PCSIS_SHIFT))&DSPI_MCR_PCSIS_MASK)
#define DSPI_MCR_ROOE_MASK                       0x1000000u
#define DSPI_MCR_ROOE_SHIFT                      24u
#define DSPI_MCR_ROOE_WIDTH                      1u
#define DSPI_MCR_ROOE(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_ROOE_SHIFT))&DSPI_MCR_ROOE_MASK)
#define DSPI_MCR_PCSSE_MASK                      0x2000000u
#define DSPI_MCR_PCSSE_SHIFT                     25u
#define DSPI_MCR_PCSSE_WIDTH                     1u
#define DSPI_MCR_PCSSE(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_PCSSE_SHIFT))&DSPI_MCR_PCSSE_MASK)
#define DSPI_MCR_MTFE_MASK                       0x4000000u
#define DSPI_MCR_MTFE_SHIFT                      26u
#define DSPI_MCR_MTFE_WIDTH                      1u
#define DSPI_MCR_MTFE(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_MTFE_SHIFT))&DSPI_MCR_MTFE_MASK)
#define DSPI_MCR_FRZ_MASK                        0x8000000u
#define DSPI_MCR_FRZ_SHIFT                       27u
#define DSPI_MCR_FRZ_WIDTH                       1u
#define DSPI_MCR_FRZ(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_FRZ_SHIFT))&DSPI_MCR_FRZ_MASK)
#define DSPI_MCR_DCONF_MASK                      0x30000000u
#define DSPI_MCR_DCONF_SHIFT                     28u
#define DSPI_MCR_DCONF_WIDTH                     2u
#define DSPI_MCR_DCONF(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_DCONF_SHIFT))&DSPI_MCR_DCONF_MASK)
#define DSPI_MCR_CONT_SCKE_MASK                  0x40000000u
#define DSPI_MCR_CONT_SCKE_SHIFT                 30u
#define DSPI_MCR_CONT_SCKE_WIDTH                 1u
#define DSPI_MCR_CONT_SCKE(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_CONT_SCKE_SHIFT))&DSPI_MCR_CONT_SCKE_MASK)
#define DSPI_MCR_MSTR_MASK                       0x80000000u
#define DSPI_MCR_MSTR_SHIFT                      31u
#define DSPI_MCR_MSTR_WIDTH                      1u
#define DSPI_MCR_MSTR(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_MCR_MSTR_SHIFT))&DSPI_MCR_MSTR_MASK)
/* TCR Bit Fields */
#define DSPI_TCR_SPI_TCNT_MASK                   0xFFFF0000u
#define DSPI_TCR_SPI_TCNT_SHIFT                  16u
#define DSPI_TCR_SPI_TCNT_WIDTH                  16u
#define DSPI_TCR_SPI_TCNT(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_TCR_SPI_TCNT_SHIFT))&DSPI_TCR_SPI_TCNT_MASK)
/* CTAR Bit Fields */
#define DSPI_CTAR_BR_MASK                        0xFu
#define DSPI_CTAR_BR_SHIFT                       0u
#define DSPI_CTAR_BR_WIDTH                       4u
#define DSPI_CTAR_BR(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_BR_SHIFT))&DSPI_CTAR_BR_MASK)
#define DSPI_CTAR_DT_MASK                        0xF0u
#define DSPI_CTAR_DT_SHIFT                       4u
#define DSPI_CTAR_DT_WIDTH                       4u
#define DSPI_CTAR_DT(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_DT_SHIFT))&DSPI_CTAR_DT_MASK)
#define DSPI_CTAR_ASC_MASK                       0xF00u
#define DSPI_CTAR_ASC_SHIFT                      8u
#define DSPI_CTAR_ASC_WIDTH                      4u
#define DSPI_CTAR_ASC(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_ASC_SHIFT))&DSPI_CTAR_ASC_MASK)
#define DSPI_CTAR_CSSCK_MASK                     0xF000u
#define DSPI_CTAR_CSSCK_SHIFT                    12u
#define DSPI_CTAR_CSSCK_WIDTH                    4u
#define DSPI_CTAR_CSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_CSSCK_SHIFT))&DSPI_CTAR_CSSCK_MASK)
#define DSPI_CTAR_PBR_MASK                       0x30000u
#define DSPI_CTAR_PBR_SHIFT                      16u
#define DSPI_CTAR_PBR_WIDTH                      2u
#define DSPI_CTAR_PBR(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_PBR_SHIFT))&DSPI_CTAR_PBR_MASK)
#define DSPI_CTAR_PDT_MASK                       0xC0000u
#define DSPI_CTAR_PDT_SHIFT                      18u
#define DSPI_CTAR_PDT_WIDTH                      2u
#define DSPI_CTAR_PDT(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_PDT_SHIFT))&DSPI_CTAR_PDT_MASK)
#define DSPI_CTAR_PASC_MASK                      0x300000u
#define DSPI_CTAR_PASC_SHIFT                     20u
#define DSPI_CTAR_PASC_WIDTH                     2u
#define DSPI_CTAR_PASC(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_PASC_SHIFT))&DSPI_CTAR_PASC_MASK)
#define DSPI_CTAR_PCSSCK_MASK                    0xC00000u
#define DSPI_CTAR_PCSSCK_SHIFT                   22u
#define DSPI_CTAR_PCSSCK_WIDTH                   2u
#define DSPI_CTAR_PCSSCK(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_PCSSCK_SHIFT))&DSPI_CTAR_PCSSCK_MASK)
#define DSPI_CTAR_LSBFE_MASK                     0x1000000u
#define DSPI_CTAR_LSBFE_SHIFT                    24u
#define DSPI_CTAR_LSBFE_WIDTH                    1u
#define DSPI_CTAR_LSBFE(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_LSBFE_SHIFT))&DSPI_CTAR_LSBFE_MASK)
#define DSPI_CTAR_CPHA_MASK                      0x2000000u
#define DSPI_CTAR_CPHA_SHIFT                     25u
#define DSPI_CTAR_CPHA_WIDTH                     1u
#define DSPI_CTAR_CPHA(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_CPHA_SHIFT))&DSPI_CTAR_CPHA_MASK)
#define DSPI_CTAR_CPOL_MASK                      0x4000000u
#define DSPI_CTAR_CPOL_SHIFT                     26u
#define DSPI_CTAR_CPOL_WIDTH                     1u
#define DSPI_CTAR_CPOL(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_CPOL_SHIFT))&DSPI_CTAR_CPOL_MASK)
#define DSPI_CTAR_FMSZ_MASK                      0x78000000u
#define DSPI_CTAR_FMSZ_SHIFT                     27u
#define DSPI_CTAR_FMSZ_WIDTH                     4u
#define DSPI_CTAR_FMSZ(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_FMSZ_SHIFT))&DSPI_CTAR_FMSZ_MASK)
#define DSPI_CTAR_DBR_MASK                       0x80000000u
#define DSPI_CTAR_DBR_SHIFT                      31u
#define DSPI_CTAR_DBR_WIDTH                      1u
#define DSPI_CTAR_DBR(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_DBR_SHIFT))&DSPI_CTAR_DBR_MASK)
/* CTAR_SLAVE Bit Fields */
#define DSPI_CTAR_SLAVE_FMSZ5_MASK               0x400000u
#define DSPI_CTAR_SLAVE_FMSZ5_SHIFT              22u
#define DSPI_CTAR_SLAVE_FMSZ5_WIDTH              1u
#define DSPI_CTAR_SLAVE_FMSZ5(x)                 (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_SLAVE_FMSZ5_SHIFT))&DSPI_CTAR_SLAVE_FMSZ5_MASK)
#define DSPI_CTAR_SLAVE_PP_MASK                  0x800000u
#define DSPI_CTAR_SLAVE_PP_SHIFT                 23u
#define DSPI_CTAR_SLAVE_PP_WIDTH                 1u
#define DSPI_CTAR_SLAVE_PP(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_SLAVE_PP_SHIFT))&DSPI_CTAR_SLAVE_PP_MASK)
#define DSPI_CTAR_SLAVE_PE_MASK                  0x1000000u
#define DSPI_CTAR_SLAVE_PE_SHIFT                 24u
#define DSPI_CTAR_SLAVE_PE_WIDTH                 1u
#define DSPI_CTAR_SLAVE_PE(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_SLAVE_PE_SHIFT))&DSPI_CTAR_SLAVE_PE_MASK)
#define DSPI_CTAR_SLAVE_CPHA_MASK                0x2000000u
#define DSPI_CTAR_SLAVE_CPHA_SHIFT               25u
#define DSPI_CTAR_SLAVE_CPHA_WIDTH               1u
#define DSPI_CTAR_SLAVE_CPHA(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_SLAVE_CPHA_SHIFT))&DSPI_CTAR_SLAVE_CPHA_MASK)
#define DSPI_CTAR_SLAVE_CPOL_MASK                0x4000000u
#define DSPI_CTAR_SLAVE_CPOL_SHIFT               26u
#define DSPI_CTAR_SLAVE_CPOL_WIDTH               1u
#define DSPI_CTAR_SLAVE_CPOL(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_SLAVE_CPOL_SHIFT))&DSPI_CTAR_SLAVE_CPOL_MASK)
#define DSPI_CTAR_SLAVE_FMSZ_MASK                0xF8000000u
#define DSPI_CTAR_SLAVE_FMSZ_SHIFT               27u
#define DSPI_CTAR_SLAVE_FMSZ_WIDTH               5u
#define DSPI_CTAR_SLAVE_FMSZ(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_CTAR_SLAVE_FMSZ_SHIFT))&DSPI_CTAR_SLAVE_FMSZ_MASK)
/* SR Bit Fields */
#define DSPI_SR_POPNXTPTR_MASK                   0xFu
#define DSPI_SR_POPNXTPTR_SHIFT                  0u
#define DSPI_SR_POPNXTPTR_WIDTH                  4u
#define DSPI_SR_POPNXTPTR(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_SR_POPNXTPTR_SHIFT))&DSPI_SR_POPNXTPTR_MASK)
#define DSPI_SR_RXCTR_MASK                       0xF0u
#define DSPI_SR_RXCTR_SHIFT                      4u
#define DSPI_SR_RXCTR_WIDTH                      4u
#define DSPI_SR_RXCTR(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_SR_RXCTR_SHIFT))&DSPI_SR_RXCTR_MASK)
#define DSPI_SR_TXNXTPTR_MASK                    0xF00u
#define DSPI_SR_TXNXTPTR_SHIFT                   8u
#define DSPI_SR_TXNXTPTR_WIDTH                   4u
#define DSPI_SR_TXNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TXNXTPTR_SHIFT))&DSPI_SR_TXNXTPTR_MASK)
#define DSPI_SR_TXCTR_MASK                       0xF000u
#define DSPI_SR_TXCTR_SHIFT                      12u
#define DSPI_SR_TXCTR_WIDTH                      4u
#define DSPI_SR_TXCTR(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TXCTR_SHIFT))&DSPI_SR_TXCTR_MASK)
#define DSPI_SR_CMDFFF_MASK                      0x10000u
#define DSPI_SR_CMDFFF_SHIFT                     16u
#define DSPI_SR_CMDFFF_WIDTH                     1u
#define DSPI_SR_CMDFFF(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_SR_CMDFFF_SHIFT))&DSPI_SR_CMDFFF_MASK)
#define DSPI_SR_RFDF_MASK                        0x20000u
#define DSPI_SR_RFDF_SHIFT                       17u
#define DSPI_SR_RFDF_WIDTH                       1u
#define DSPI_SR_RFDF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_RFDF_SHIFT))&DSPI_SR_RFDF_MASK)
#define DSPI_SR_TFIWF_MASK                       0x40000u
#define DSPI_SR_TFIWF_SHIFT                      18u
#define DSPI_SR_TFIWF_WIDTH                      1u
#define DSPI_SR_TFIWF(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TFIWF_SHIFT))&DSPI_SR_TFIWF_MASK)
#define DSPI_SR_RFOF_MASK                        0x80000u
#define DSPI_SR_RFOF_SHIFT                       19u
#define DSPI_SR_RFOF_WIDTH                       1u
#define DSPI_SR_RFOF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_RFOF_SHIFT))&DSPI_SR_RFOF_MASK)
#define DSPI_SR_DDIF_MASK                        0x100000u
#define DSPI_SR_DDIF_SHIFT                       20u
#define DSPI_SR_DDIF_WIDTH                       1u
#define DSPI_SR_DDIF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_DDIF_SHIFT))&DSPI_SR_DDIF_MASK)
#define DSPI_SR_SPEF_MASK                        0x200000u
#define DSPI_SR_SPEF_SHIFT                       21u
#define DSPI_SR_SPEF_WIDTH                       1u
#define DSPI_SR_SPEF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_SPEF_SHIFT))&DSPI_SR_SPEF_MASK)
#define DSPI_SR_DPEF_MASK                        0x400000u
#define DSPI_SR_DPEF_SHIFT                       22u
#define DSPI_SR_DPEF_WIDTH                       1u
#define DSPI_SR_DPEF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_DPEF_SHIFT))&DSPI_SR_DPEF_MASK)
#define DSPI_SR_CMDTCF_MASK                      0x800000u
#define DSPI_SR_CMDTCF_SHIFT                     23u
#define DSPI_SR_CMDTCF_WIDTH                     1u
#define DSPI_SR_CMDTCF(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_SR_CMDTCF_SHIFT))&DSPI_SR_CMDTCF_MASK)
#define DSPI_SR_BSYF_MASK                        0x1000000u
#define DSPI_SR_BSYF_SHIFT                       24u
#define DSPI_SR_BSYF_WIDTH                       1u
#define DSPI_SR_BSYF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_BSYF_SHIFT))&DSPI_SR_BSYF_MASK)
#define DSPI_SR_TFFF_MASK                        0x2000000u
#define DSPI_SR_TFFF_SHIFT                       25u
#define DSPI_SR_TFFF_WIDTH                       1u
#define DSPI_SR_TFFF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TFFF_SHIFT))&DSPI_SR_TFFF_MASK)
#define DSPI_SR_DSITCF_MASK                      0x4000000u
#define DSPI_SR_DSITCF_SHIFT                     26u
#define DSPI_SR_DSITCF_WIDTH                     1u
#define DSPI_SR_DSITCF(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_SR_DSITCF_SHIFT))&DSPI_SR_DSITCF_MASK)
#define DSPI_SR_TFUF_MASK                        0x8000000u
#define DSPI_SR_TFUF_SHIFT                       27u
#define DSPI_SR_TFUF_WIDTH                       1u
#define DSPI_SR_TFUF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TFUF_SHIFT))&DSPI_SR_TFUF_MASK)
#define DSPI_SR_EOQF_MASK                        0x10000000u
#define DSPI_SR_EOQF_SHIFT                       28u
#define DSPI_SR_EOQF_WIDTH                       1u
#define DSPI_SR_EOQF(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SR_EOQF_SHIFT))&DSPI_SR_EOQF_MASK)
#define DSPI_SR_SPITCF_MASK                      0x20000000u
#define DSPI_SR_SPITCF_SHIFT                     29u
#define DSPI_SR_SPITCF_WIDTH                     1u
#define DSPI_SR_SPITCF(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_SR_SPITCF_SHIFT))&DSPI_SR_SPITCF_MASK)
#define DSPI_SR_TXRXS_MASK                       0x40000000u
#define DSPI_SR_TXRXS_SHIFT                      30u
#define DSPI_SR_TXRXS_WIDTH                      1u
#define DSPI_SR_TXRXS(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TXRXS_SHIFT))&DSPI_SR_TXRXS_MASK)
#define DSPI_SR_TCF_MASK                         0x80000000u
#define DSPI_SR_TCF_SHIFT                        31u
#define DSPI_SR_TCF_WIDTH                        1u
#define DSPI_SR_TCF(x)                           (((uint32_t)(((uint32_t)(x))<<DSPI_SR_TCF_SHIFT))&DSPI_SR_TCF_MASK)
/* RSER Bit Fields */
#define DSPI_RSER_DDIF_DIRS_MASK                 0x4000u
#define DSPI_RSER_DDIF_DIRS_SHIFT                14u
#define DSPI_RSER_DDIF_DIRS_WIDTH                1u
#define DSPI_RSER_DDIF_DIRS(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_DDIF_DIRS_SHIFT))&DSPI_RSER_DDIF_DIRS_MASK)
#define DSPI_RSER_CMDFFF_DIRS_MASK               0x8000u
#define DSPI_RSER_CMDFFF_DIRS_SHIFT              15u
#define DSPI_RSER_CMDFFF_DIRS_WIDTH              1u
#define DSPI_RSER_CMDFFF_DIRS(x)                 (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_CMDFFF_DIRS_SHIFT))&DSPI_RSER_CMDFFF_DIRS_MASK)
#define DSPI_RSER_RFDF_DIRS_MASK                 0x10000u
#define DSPI_RSER_RFDF_DIRS_SHIFT                16u
#define DSPI_RSER_RFDF_DIRS_WIDTH                1u
#define DSPI_RSER_RFDF_DIRS(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_RFDF_DIRS_SHIFT))&DSPI_RSER_RFDF_DIRS_MASK)
#define DSPI_RSER_RFDF_RE_MASK                   0x20000u
#define DSPI_RSER_RFDF_RE_SHIFT                  17u
#define DSPI_RSER_RFDF_RE_WIDTH                  1u
#define DSPI_RSER_RFDF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_RFDF_RE_SHIFT))&DSPI_RSER_RFDF_RE_MASK)
#define DSPI_RSER_TFIWF_RE_MASK                  0x40000u
#define DSPI_RSER_TFIWF_RE_SHIFT                 18u
#define DSPI_RSER_TFIWF_RE_WIDTH                 1u
#define DSPI_RSER_TFIWF_RE(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_TFIWF_RE_SHIFT))&DSPI_RSER_TFIWF_RE_MASK)
#define DSPI_RSER_RFOF_RE_MASK                   0x80000u
#define DSPI_RSER_RFOF_RE_SHIFT                  19u
#define DSPI_RSER_RFOF_RE_WIDTH                  1u
#define DSPI_RSER_RFOF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_RFOF_RE_SHIFT))&DSPI_RSER_RFOF_RE_MASK)
#define DSPI_RSER_DDIF_RE_MASK                   0x100000u
#define DSPI_RSER_DDIF_RE_SHIFT                  20u
#define DSPI_RSER_DDIF_RE_WIDTH                  1u
#define DSPI_RSER_DDIF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_DDIF_RE_SHIFT))&DSPI_RSER_DDIF_RE_MASK)
#define DSPI_RSER_SPEF_RE_MASK                   0x200000u
#define DSPI_RSER_SPEF_RE_SHIFT                  21u
#define DSPI_RSER_SPEF_RE_WIDTH                  1u
#define DSPI_RSER_SPEF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_SPEF_RE_SHIFT))&DSPI_RSER_SPEF_RE_MASK)
#define DSPI_RSER_DPEF_RE_MASK                   0x400000u
#define DSPI_RSER_DPEF_RE_SHIFT                  22u
#define DSPI_RSER_DPEF_RE_WIDTH                  1u
#define DSPI_RSER_DPEF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_DPEF_RE_SHIFT))&DSPI_RSER_DPEF_RE_MASK)
#define DSPI_RSER_CMDTCF_RE_MASK                 0x800000u
#define DSPI_RSER_CMDTCF_RE_SHIFT                23u
#define DSPI_RSER_CMDTCF_RE_WIDTH                1u
#define DSPI_RSER_CMDTCF_RE(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_CMDTCF_RE_SHIFT))&DSPI_RSER_CMDTCF_RE_MASK)
#define DSPI_RSER_TFFF_DIRS_MASK                 0x1000000u
#define DSPI_RSER_TFFF_DIRS_SHIFT                24u
#define DSPI_RSER_TFFF_DIRS_WIDTH                1u
#define DSPI_RSER_TFFF_DIRS(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_TFFF_DIRS_SHIFT))&DSPI_RSER_TFFF_DIRS_MASK)
#define DSPI_RSER_TFFF_RE_MASK                   0x2000000u
#define DSPI_RSER_TFFF_RE_SHIFT                  25u
#define DSPI_RSER_TFFF_RE_WIDTH                  1u
#define DSPI_RSER_TFFF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_TFFF_RE_SHIFT))&DSPI_RSER_TFFF_RE_MASK)
#define DSPI_RSER_DSITCF_RE_MASK                 0x4000000u
#define DSPI_RSER_DSITCF_RE_SHIFT                26u
#define DSPI_RSER_DSITCF_RE_WIDTH                1u
#define DSPI_RSER_DSITCF_RE(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_DSITCF_RE_SHIFT))&DSPI_RSER_DSITCF_RE_MASK)
#define DSPI_RSER_TFUF_RE_MASK                   0x8000000u
#define DSPI_RSER_TFUF_RE_SHIFT                  27u
#define DSPI_RSER_TFUF_RE_WIDTH                  1u
#define DSPI_RSER_TFUF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_TFUF_RE_SHIFT))&DSPI_RSER_TFUF_RE_MASK)
#define DSPI_RSER_EOQF_RE_MASK                   0x10000000u
#define DSPI_RSER_EOQF_RE_SHIFT                  28u
#define DSPI_RSER_EOQF_RE_WIDTH                  1u
#define DSPI_RSER_EOQF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_EOQF_RE_SHIFT))&DSPI_RSER_EOQF_RE_MASK)
#define DSPI_RSER_SPITCF_RE_MASK                 0x20000000u
#define DSPI_RSER_SPITCF_RE_SHIFT                29u
#define DSPI_RSER_SPITCF_RE_WIDTH                1u
#define DSPI_RSER_SPITCF_RE(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_SPITCF_RE_SHIFT))&DSPI_RSER_SPITCF_RE_MASK)
#define DSPI_RSER_CMDFFF_RE_MASK                 0x40000000u
#define DSPI_RSER_CMDFFF_RE_SHIFT                30u
#define DSPI_RSER_CMDFFF_RE_WIDTH                1u
#define DSPI_RSER_CMDFFF_RE(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_CMDFFF_RE_SHIFT))&DSPI_RSER_CMDFFF_RE_MASK)
#define DSPI_RSER_TCF_RE_MASK                    0x80000000u
#define DSPI_RSER_TCF_RE_SHIFT                   31u
#define DSPI_RSER_TCF_RE_WIDTH                   1u
#define DSPI_RSER_TCF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_RSER_TCF_RE_SHIFT))&DSPI_RSER_TCF_RE_MASK)
/* PUSHR_FIFO_CMD Bit Fields */
#define DSPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_MASK  0xFFFFu
#define DSPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_SHIFT 0u
#define DSPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_WIDTH 16u
#define DSPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD(x)    (((uint16_t)(((uint16_t)(x))<<DSPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_SHIFT))&DSPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_MASK)
/* PUSHR_FIFO_TX Bit Fields */
#define DSPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_MASK    0xFFFFu
#define DSPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_SHIFT   0u
#define DSPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_WIDTH   16u
#define DSPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX(x)      (((uint16_t)(((uint16_t)(x))<<DSPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_SHIFT))&DSPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_MASK)
/* PUSHR_PUSHR Bit Fields */
#define DSPI_PUSHR_PUSHR_TXDATA_MASK             0xFFFFu
#define DSPI_PUSHR_PUSHR_TXDATA_SHIFT            0u
#define DSPI_PUSHR_PUSHR_TXDATA_WIDTH            16u
#define DSPI_PUSHR_PUSHR_TXDATA(x)               (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_TXDATA_SHIFT))&DSPI_PUSHR_PUSHR_TXDATA_MASK)
#define DSPI_PUSHR_PUSHR_PCS_MASK                0x3F0000u
#define DSPI_PUSHR_PUSHR_PCS_SHIFT               16u
#define DSPI_PUSHR_PUSHR_PCS_WIDTH               6u
#define DSPI_PUSHR_PUSHR_PCS(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_PCS_SHIFT))&DSPI_PUSHR_PUSHR_PCS_MASK)
#define DSPI_PUSHR_PUSHR_PP_MCSC_MASK            0x1000000u
#define DSPI_PUSHR_PUSHR_PP_MCSC_SHIFT           24u
#define DSPI_PUSHR_PUSHR_PP_MCSC_WIDTH           1u
#define DSPI_PUSHR_PUSHR_PP_MCSC(x)              (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_PP_MCSC_SHIFT))&DSPI_PUSHR_PUSHR_PP_MCSC_MASK)
#define DSPI_PUSHR_PUSHR_PE_MASC_MASK            0x2000000u
#define DSPI_PUSHR_PUSHR_PE_MASC_SHIFT           25u
#define DSPI_PUSHR_PUSHR_PE_MASC_WIDTH           1u
#define DSPI_PUSHR_PUSHR_PE_MASC(x)              (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_PE_MASC_SHIFT))&DSPI_PUSHR_PUSHR_PE_MASC_MASK)
#define DSPI_PUSHR_PUSHR_CTCNT_MASK              0x4000000u
#define DSPI_PUSHR_PUSHR_CTCNT_SHIFT             26u
#define DSPI_PUSHR_PUSHR_CTCNT_WIDTH             1u
#define DSPI_PUSHR_PUSHR_CTCNT(x)                (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_CTCNT_SHIFT))&DSPI_PUSHR_PUSHR_CTCNT_MASK)
#define DSPI_PUSHR_PUSHR_EOQ_MASK                0x8000000u
#define DSPI_PUSHR_PUSHR_EOQ_SHIFT               27u
#define DSPI_PUSHR_PUSHR_EOQ_WIDTH               1u
#define DSPI_PUSHR_PUSHR_EOQ(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_EOQ_SHIFT))&DSPI_PUSHR_PUSHR_EOQ_MASK)
#define DSPI_PUSHR_PUSHR_CTAS_MASK               0x70000000u
#define DSPI_PUSHR_PUSHR_CTAS_SHIFT              28u
#define DSPI_PUSHR_PUSHR_CTAS_WIDTH              3u
#define DSPI_PUSHR_PUSHR_CTAS(x)                 (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_CTAS_SHIFT))&DSPI_PUSHR_PUSHR_CTAS_MASK)
#define DSPI_PUSHR_PUSHR_CONT_MASK               0x80000000u
#define DSPI_PUSHR_PUSHR_CONT_SHIFT              31u
#define DSPI_PUSHR_PUSHR_CONT_WIDTH              1u
#define DSPI_PUSHR_PUSHR_CONT(x)                 (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_PUSHR_CONT_SHIFT))&DSPI_PUSHR_PUSHR_CONT_MASK)
/* PUSHR_SLAVE Bit Fields */
#define DSPI_PUSHR_SLAVE_TXDATA_MASK             0xFFFFu
#define DSPI_PUSHR_SLAVE_TXDATA_SHIFT            0u
#define DSPI_PUSHR_SLAVE_TXDATA_WIDTH            16u
#define DSPI_PUSHR_SLAVE_TXDATA(x)               (((uint32_t)(((uint32_t)(x))<<DSPI_PUSHR_SLAVE_TXDATA_SHIFT))&DSPI_PUSHR_SLAVE_TXDATA_MASK)
/* POPR Bit Fields */
#define DSPI_POPR_RXDATA_MASK                    0xFFFFFFFFu
#define DSPI_POPR_RXDATA_SHIFT                   0u
#define DSPI_POPR_RXDATA_WIDTH                   32u
#define DSPI_POPR_RXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_POPR_RXDATA_SHIFT))&DSPI_POPR_RXDATA_MASK)
/* TXFR Bit Fields */
#define DSPI_TXFR_TXDATA_MASK                    0xFFFFu
#define DSPI_TXFR_TXDATA_SHIFT                   0u
#define DSPI_TXFR_TXDATA_WIDTH                   16u
#define DSPI_TXFR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TXFR_TXDATA_SHIFT))&DSPI_TXFR_TXDATA_MASK)
#define DSPI_TXFR_TXCMD_TXDATA_MASK              0xFFFF0000u
#define DSPI_TXFR_TXCMD_TXDATA_SHIFT             16u
#define DSPI_TXFR_TXCMD_TXDATA_WIDTH             16u
#define DSPI_TXFR_TXCMD_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<DSPI_TXFR_TXCMD_TXDATA_SHIFT))&DSPI_TXFR_TXCMD_TXDATA_MASK)
/* RXFR Bit Fields */
#define DSPI_RXFR_RXDATA_MASK                    0xFFFFFFFFu
#define DSPI_RXFR_RXDATA_SHIFT                   0u
#define DSPI_RXFR_RXDATA_WIDTH                   32u
#define DSPI_RXFR_RXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_RXFR_RXDATA_SHIFT))&DSPI_RXFR_RXDATA_MASK)
/* DSICR0 Bit Fields */
#define DSPI_DSICR0_DPCSx_MASK                   0xFFu
#define DSPI_DSICR0_DPCSx_SHIFT                  0u
#define DSPI_DSICR0_DPCSx_WIDTH                  8u
#define DSPI_DSICR0_DPCSx(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_DPCSx_SHIFT))&DSPI_DSICR0_DPCSx_MASK)
#define DSPI_DSICR0_PP_MASK                      0x100u
#define DSPI_DSICR0_PP_SHIFT                     8u
#define DSPI_DSICR0_PP_WIDTH                     1u
#define DSPI_DSICR0_PP(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_PP_SHIFT))&DSPI_DSICR0_PP_MASK)
#define DSPI_DSICR0_PE_MASK                      0x200u
#define DSPI_DSICR0_PE_SHIFT                     9u
#define DSPI_DSICR0_PE_WIDTH                     1u
#define DSPI_DSICR0_PE(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_PE_SHIFT))&DSPI_DSICR0_PE_MASK)
#define DSPI_DSICR0_PES_MASK                     0x400u
#define DSPI_DSICR0_PES_SHIFT                    10u
#define DSPI_DSICR0_PES_WIDTH                    1u
#define DSPI_DSICR0_PES(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_PES_SHIFT))&DSPI_DSICR0_PES_MASK)
#define DSPI_DSICR0_DMS_MASK                     0x800u
#define DSPI_DSICR0_DMS_SHIFT                    11u
#define DSPI_DSICR0_DMS_WIDTH                    1u
#define DSPI_DSICR0_DMS(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_DMS_SHIFT))&DSPI_DSICR0_DMS_MASK)
#define DSPI_DSICR0_DSICTAS_MASK                 0x7000u
#define DSPI_DSICR0_DSICTAS_SHIFT                12u
#define DSPI_DSICR0_DSICTAS_WIDTH                3u
#define DSPI_DSICR0_DSICTAS(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_DSICTAS_SHIFT))&DSPI_DSICR0_DSICTAS_MASK)
#define DSPI_DSICR0_DCONT_MASK                   0x8000u
#define DSPI_DSICR0_DCONT_SHIFT                  15u
#define DSPI_DSICR0_DCONT_WIDTH                  1u
#define DSPI_DSICR0_DCONT(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_DCONT_SHIFT))&DSPI_DSICR0_DCONT_MASK)
#define DSPI_DSICR0_CID_MASK                     0x10000u
#define DSPI_DSICR0_CID_SHIFT                    16u
#define DSPI_DSICR0_CID_WIDTH                    1u
#define DSPI_DSICR0_CID(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_CID_SHIFT))&DSPI_DSICR0_CID_MASK)
#define DSPI_DSICR0_TRRE_MASK                    0x20000u
#define DSPI_DSICR0_TRRE_SHIFT                   17u
#define DSPI_DSICR0_TRRE_WIDTH                   1u
#define DSPI_DSICR0_TRRE(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_TRRE_SHIFT))&DSPI_DSICR0_TRRE_MASK)
#define DSPI_DSICR0_TPOL_MASK                    0x40000u
#define DSPI_DSICR0_TPOL_SHIFT                   18u
#define DSPI_DSICR0_TPOL_WIDTH                   1u
#define DSPI_DSICR0_TPOL(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_TPOL_SHIFT))&DSPI_DSICR0_TPOL_MASK)
#define DSPI_DSICR0_TXSS_MASK                    0x80000u
#define DSPI_DSICR0_TXSS_SHIFT                   19u
#define DSPI_DSICR0_TXSS_WIDTH                   1u
#define DSPI_DSICR0_TXSS(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_TXSS_SHIFT))&DSPI_DSICR0_TXSS_MASK)
#define DSPI_DSICR0_TSBC_MASK                    0x100000u
#define DSPI_DSICR0_TSBC_SHIFT                   20u
#define DSPI_DSICR0_TSBC_WIDTH                   1u
#define DSPI_DSICR0_TSBC(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_TSBC_SHIFT))&DSPI_DSICR0_TSBC_MASK)
#define DSPI_DSICR0_ITSB_MASK                    0x200000u
#define DSPI_DSICR0_ITSB_SHIFT                   21u
#define DSPI_DSICR0_ITSB_WIDTH                   1u
#define DSPI_DSICR0_ITSB(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_ITSB_SHIFT))&DSPI_DSICR0_ITSB_MASK)
#define DSPI_DSICR0_FMSZ5_MASK                   0x800000u
#define DSPI_DSICR0_FMSZ5_SHIFT                  23u
#define DSPI_DSICR0_FMSZ5_WIDTH                  1u
#define DSPI_DSICR0_FMSZ5(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_FMSZ5_SHIFT))&DSPI_DSICR0_FMSZ5_MASK)
#define DSPI_DSICR0_MTOCNT_MASK                  0x3F000000u
#define DSPI_DSICR0_MTOCNT_SHIFT                 24u
#define DSPI_DSICR0_MTOCNT_WIDTH                 6u
#define DSPI_DSICR0_MTOCNT(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_MTOCNT_SHIFT))&DSPI_DSICR0_MTOCNT_MASK)
#define DSPI_DSICR0_FMSZ4_MASK                   0x40000000u
#define DSPI_DSICR0_FMSZ4_SHIFT                  30u
#define DSPI_DSICR0_FMSZ4_WIDTH                  1u
#define DSPI_DSICR0_FMSZ4(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_FMSZ4_SHIFT))&DSPI_DSICR0_FMSZ4_MASK)
#define DSPI_DSICR0_MTOE_MASK                    0x80000000u
#define DSPI_DSICR0_MTOE_SHIFT                   31u
#define DSPI_DSICR0_MTOE_WIDTH                   1u
#define DSPI_DSICR0_MTOE(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR0_MTOE_SHIFT))&DSPI_DSICR0_MTOE_MASK)
/* SDR0 Bit Fields */
#define DSPI_SDR0_SER_DATA_MASK                  0xFFFFFFFFu
#define DSPI_SDR0_SER_DATA_SHIFT                 0u
#define DSPI_SDR0_SER_DATA_WIDTH                 32u
#define DSPI_SDR0_SER_DATA(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_SDR0_SER_DATA_SHIFT))&DSPI_SDR0_SER_DATA_MASK)
/* ASDR0 Bit Fields */
#define DSPI_ASDR0_ASER_DATA_MASK                0xFFFFFFFFu
#define DSPI_ASDR0_ASER_DATA_SHIFT               0u
#define DSPI_ASDR0_ASER_DATA_WIDTH               32u
#define DSPI_ASDR0_ASER_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_ASDR0_ASER_DATA_SHIFT))&DSPI_ASDR0_ASER_DATA_MASK)
/* COMPR0 Bit Fields */
#define DSPI_COMPR0_COMP_DATA_MASK               0xFFFFFFFFu
#define DSPI_COMPR0_COMP_DATA_SHIFT              0u
#define DSPI_COMPR0_COMP_DATA_WIDTH              32u
#define DSPI_COMPR0_COMP_DATA(x)                 (((uint32_t)(((uint32_t)(x))<<DSPI_COMPR0_COMP_DATA_SHIFT))&DSPI_COMPR0_COMP_DATA_MASK)
/* DDR0 Bit Fields */
#define DSPI_DDR0_DESER_DATA_MASK                0xFFFFFFFFu
#define DSPI_DDR0_DESER_DATA_SHIFT               0u
#define DSPI_DDR0_DESER_DATA_WIDTH               32u
#define DSPI_DDR0_DESER_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_DDR0_DESER_DATA_SHIFT))&DSPI_DDR0_DESER_DATA_MASK)
/* DSICR1 Bit Fields */
#define DSPI_DSICR1_DPCS1_x_MASK                 0xFFu
#define DSPI_DSICR1_DPCS1_x_SHIFT                0u
#define DSPI_DSICR1_DPCS1_x_WIDTH                8u
#define DSPI_DSICR1_DPCS1_x(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_DPCS1_x_SHIFT))&DSPI_DSICR1_DPCS1_x_MASK)
#define DSPI_DSICR1_DSE0_MASK                    0x10000u
#define DSPI_DSICR1_DSE0_SHIFT                   16u
#define DSPI_DSICR1_DSE0_WIDTH                   1u
#define DSPI_DSICR1_DSE0(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_DSE0_SHIFT))&DSPI_DSICR1_DSE0_MASK)
#define DSPI_DSICR1_DSE1_MASK                    0x20000u
#define DSPI_DSICR1_DSE1_SHIFT                   17u
#define DSPI_DSICR1_DSE1_WIDTH                   1u
#define DSPI_DSICR1_DSE1(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_DSE1_SHIFT))&DSPI_DSICR1_DSE1_MASK)
#define DSPI_DSICR1_DSI64E_MASK                  0x40000u
#define DSPI_DSICR1_DSI64E_SHIFT                 18u
#define DSPI_DSICR1_DSI64E_WIDTH                 1u
#define DSPI_DSICR1_DSI64E(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_DSI64E_SHIFT))&DSPI_DSICR1_DSI64E_MASK)
#define DSPI_DSICR1_CSE_MASK                     0x80000u
#define DSPI_DSICR1_CSE_SHIFT                    19u
#define DSPI_DSICR1_CSE_WIDTH                    1u
#define DSPI_DSICR1_CSE(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_CSE_SHIFT))&DSPI_DSICR1_CSE_MASK)
#define DSPI_DSICR1_CSI_PRTY_MASK                0x100000u
#define DSPI_DSICR1_CSI_PRTY_SHIFT               20u
#define DSPI_DSICR1_CSI_PRTY_WIDTH               1u
#define DSPI_DSICR1_CSI_PRTY(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_CSI_PRTY_SHIFT))&DSPI_DSICR1_CSI_PRTY_MASK)
#define DSPI_DSICR1_TSBCNT_MASK                  0x3F000000u
#define DSPI_DSICR1_TSBCNT_SHIFT                 24u
#define DSPI_DSICR1_TSBCNT_WIDTH                 6u
#define DSPI_DSICR1_TSBCNT(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_DSICR1_TSBCNT_SHIFT))&DSPI_DSICR1_TSBCNT_MASK)
/* SSR0 Bit Fields */
#define DSPI_SSR0_SS_MASK                        0xFFFFFFFFu
#define DSPI_SSR0_SS_SHIFT                       0u
#define DSPI_SSR0_SS_WIDTH                       32u
#define DSPI_SSR0_SS(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SSR0_SS_SHIFT))&DSPI_SSR0_SS_MASK)
/* PISR0 Bit Fields */
#define DSPI_PISR0_IPS0_MASK                     0xFu
#define DSPI_PISR0_IPS0_SHIFT                    0u
#define DSPI_PISR0_IPS0_WIDTH                    4u
#define DSPI_PISR0_IPS0(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS0_SHIFT))&DSPI_PISR0_IPS0_MASK)
#define DSPI_PISR0_IPS1_MASK                     0xF0u
#define DSPI_PISR0_IPS1_SHIFT                    4u
#define DSPI_PISR0_IPS1_WIDTH                    4u
#define DSPI_PISR0_IPS1(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS1_SHIFT))&DSPI_PISR0_IPS1_MASK)
#define DSPI_PISR0_IPS2_MASK                     0xF00u
#define DSPI_PISR0_IPS2_SHIFT                    8u
#define DSPI_PISR0_IPS2_WIDTH                    4u
#define DSPI_PISR0_IPS2(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS2_SHIFT))&DSPI_PISR0_IPS2_MASK)
#define DSPI_PISR0_IPS3_MASK                     0xF000u
#define DSPI_PISR0_IPS3_SHIFT                    12u
#define DSPI_PISR0_IPS3_WIDTH                    4u
#define DSPI_PISR0_IPS3(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS3_SHIFT))&DSPI_PISR0_IPS3_MASK)
#define DSPI_PISR0_IPS4_MASK                     0xF0000u
#define DSPI_PISR0_IPS4_SHIFT                    16u
#define DSPI_PISR0_IPS4_WIDTH                    4u
#define DSPI_PISR0_IPS4(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS4_SHIFT))&DSPI_PISR0_IPS4_MASK)
#define DSPI_PISR0_IPS5_MASK                     0xF00000u
#define DSPI_PISR0_IPS5_SHIFT                    20u
#define DSPI_PISR0_IPS5_WIDTH                    4u
#define DSPI_PISR0_IPS5(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS5_SHIFT))&DSPI_PISR0_IPS5_MASK)
#define DSPI_PISR0_IPS6_MASK                     0xF000000u
#define DSPI_PISR0_IPS6_SHIFT                    24u
#define DSPI_PISR0_IPS6_WIDTH                    4u
#define DSPI_PISR0_IPS6(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS6_SHIFT))&DSPI_PISR0_IPS6_MASK)
#define DSPI_PISR0_IPS7_MASK                     0xF0000000u
#define DSPI_PISR0_IPS7_SHIFT                    28u
#define DSPI_PISR0_IPS7_WIDTH                    4u
#define DSPI_PISR0_IPS7(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR0_IPS7_SHIFT))&DSPI_PISR0_IPS7_MASK)
/* PISR1 Bit Fields */
#define DSPI_PISR1_IPS8_MASK                     0xFu
#define DSPI_PISR1_IPS8_SHIFT                    0u
#define DSPI_PISR1_IPS8_WIDTH                    4u
#define DSPI_PISR1_IPS8(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS8_SHIFT))&DSPI_PISR1_IPS8_MASK)
#define DSPI_PISR1_IPS9_MASK                     0xF0u
#define DSPI_PISR1_IPS9_SHIFT                    4u
#define DSPI_PISR1_IPS9_WIDTH                    4u
#define DSPI_PISR1_IPS9(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS9_SHIFT))&DSPI_PISR1_IPS9_MASK)
#define DSPI_PISR1_IPS10_MASK                    0xF00u
#define DSPI_PISR1_IPS10_SHIFT                   8u
#define DSPI_PISR1_IPS10_WIDTH                   4u
#define DSPI_PISR1_IPS10(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS10_SHIFT))&DSPI_PISR1_IPS10_MASK)
#define DSPI_PISR1_IPS11_MASK                    0xF000u
#define DSPI_PISR1_IPS11_SHIFT                   12u
#define DSPI_PISR1_IPS11_WIDTH                   4u
#define DSPI_PISR1_IPS11(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS11_SHIFT))&DSPI_PISR1_IPS11_MASK)
#define DSPI_PISR1_IPS12_MASK                    0xF0000u
#define DSPI_PISR1_IPS12_SHIFT                   16u
#define DSPI_PISR1_IPS12_WIDTH                   4u
#define DSPI_PISR1_IPS12(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS12_SHIFT))&DSPI_PISR1_IPS12_MASK)
#define DSPI_PISR1_IPS13_MASK                    0xF00000u
#define DSPI_PISR1_IPS13_SHIFT                   20u
#define DSPI_PISR1_IPS13_WIDTH                   4u
#define DSPI_PISR1_IPS13(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS13_SHIFT))&DSPI_PISR1_IPS13_MASK)
#define DSPI_PISR1_IPS14_MASK                    0xF000000u
#define DSPI_PISR1_IPS14_SHIFT                   24u
#define DSPI_PISR1_IPS14_WIDTH                   4u
#define DSPI_PISR1_IPS14(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS14_SHIFT))&DSPI_PISR1_IPS14_MASK)
#define DSPI_PISR1_IPS15_MASK                    0xF0000000u
#define DSPI_PISR1_IPS15_SHIFT                   28u
#define DSPI_PISR1_IPS15_WIDTH                   4u
#define DSPI_PISR1_IPS15(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR1_IPS15_SHIFT))&DSPI_PISR1_IPS15_MASK)
/* PISR2 Bit Fields */
#define DSPI_PISR2_IPS16_MASK                    0xFu
#define DSPI_PISR2_IPS16_SHIFT                   0u
#define DSPI_PISR2_IPS16_WIDTH                   4u
#define DSPI_PISR2_IPS16(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS16_SHIFT))&DSPI_PISR2_IPS16_MASK)
#define DSPI_PISR2_IPS17_MASK                    0xF0u
#define DSPI_PISR2_IPS17_SHIFT                   4u
#define DSPI_PISR2_IPS17_WIDTH                   4u
#define DSPI_PISR2_IPS17(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS17_SHIFT))&DSPI_PISR2_IPS17_MASK)
#define DSPI_PISR2_IPS18_MASK                    0xF00u
#define DSPI_PISR2_IPS18_SHIFT                   8u
#define DSPI_PISR2_IPS18_WIDTH                   4u
#define DSPI_PISR2_IPS18(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS18_SHIFT))&DSPI_PISR2_IPS18_MASK)
#define DSPI_PISR2_IPS19_MASK                    0xF000u
#define DSPI_PISR2_IPS19_SHIFT                   12u
#define DSPI_PISR2_IPS19_WIDTH                   4u
#define DSPI_PISR2_IPS19(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS19_SHIFT))&DSPI_PISR2_IPS19_MASK)
#define DSPI_PISR2_IPS20_MASK                    0xF0000u
#define DSPI_PISR2_IPS20_SHIFT                   16u
#define DSPI_PISR2_IPS20_WIDTH                   4u
#define DSPI_PISR2_IPS20(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS20_SHIFT))&DSPI_PISR2_IPS20_MASK)
#define DSPI_PISR2_IPS21_MASK                    0xF00000u
#define DSPI_PISR2_IPS21_SHIFT                   20u
#define DSPI_PISR2_IPS21_WIDTH                   4u
#define DSPI_PISR2_IPS21(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS21_SHIFT))&DSPI_PISR2_IPS21_MASK)
#define DSPI_PISR2_IPS22_MASK                    0xF000000u
#define DSPI_PISR2_IPS22_SHIFT                   24u
#define DSPI_PISR2_IPS22_WIDTH                   4u
#define DSPI_PISR2_IPS22(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS22_SHIFT))&DSPI_PISR2_IPS22_MASK)
#define DSPI_PISR2_IPS23_MASK                    0xF0000000u
#define DSPI_PISR2_IPS23_SHIFT                   28u
#define DSPI_PISR2_IPS23_WIDTH                   4u
#define DSPI_PISR2_IPS23(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR2_IPS23_SHIFT))&DSPI_PISR2_IPS23_MASK)
/* PISR3 Bit Fields */
#define DSPI_PISR3_IPS24_MASK                    0xFu
#define DSPI_PISR3_IPS24_SHIFT                   0u
#define DSPI_PISR3_IPS24_WIDTH                   4u
#define DSPI_PISR3_IPS24(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS24_SHIFT))&DSPI_PISR3_IPS24_MASK)
#define DSPI_PISR3_IPS25_MASK                    0xF0u
#define DSPI_PISR3_IPS25_SHIFT                   4u
#define DSPI_PISR3_IPS25_WIDTH                   4u
#define DSPI_PISR3_IPS25(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS25_SHIFT))&DSPI_PISR3_IPS25_MASK)
#define DSPI_PISR3_IPS26_MASK                    0xF00u
#define DSPI_PISR3_IPS26_SHIFT                   8u
#define DSPI_PISR3_IPS26_WIDTH                   4u
#define DSPI_PISR3_IPS26(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS26_SHIFT))&DSPI_PISR3_IPS26_MASK)
#define DSPI_PISR3_IPS27_MASK                    0xF000u
#define DSPI_PISR3_IPS27_SHIFT                   12u
#define DSPI_PISR3_IPS27_WIDTH                   4u
#define DSPI_PISR3_IPS27(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS27_SHIFT))&DSPI_PISR3_IPS27_MASK)
#define DSPI_PISR3_IPS28_MASK                    0xF0000u
#define DSPI_PISR3_IPS28_SHIFT                   16u
#define DSPI_PISR3_IPS28_WIDTH                   4u
#define DSPI_PISR3_IPS28(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS28_SHIFT))&DSPI_PISR3_IPS28_MASK)
#define DSPI_PISR3_IPS29_MASK                    0xF00000u
#define DSPI_PISR3_IPS29_SHIFT                   20u
#define DSPI_PISR3_IPS29_WIDTH                   4u
#define DSPI_PISR3_IPS29(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS29_SHIFT))&DSPI_PISR3_IPS29_MASK)
#define DSPI_PISR3_IPS30_MASK                    0xF000000u
#define DSPI_PISR3_IPS30_SHIFT                   24u
#define DSPI_PISR3_IPS30_WIDTH                   4u
#define DSPI_PISR3_IPS30(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS30_SHIFT))&DSPI_PISR3_IPS30_MASK)
#define DSPI_PISR3_IPS31_MASK                    0xF0000000u
#define DSPI_PISR3_IPS31_SHIFT                   28u
#define DSPI_PISR3_IPS31_WIDTH                   4u
#define DSPI_PISR3_IPS31(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR3_IPS31_SHIFT))&DSPI_PISR3_IPS31_MASK)
/* DIMR0 Bit Fields */
#define DSPI_DIMR0_MASK_MASK                     0xFFFFFFFFu
#define DSPI_DIMR0_MASK_SHIFT                    0u
#define DSPI_DIMR0_MASK_WIDTH                    32u
#define DSPI_DIMR0_MASK(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_DIMR0_MASK_SHIFT))&DSPI_DIMR0_MASK_MASK)
/* DPIR0 Bit Fields */
#define DSPI_DPIR0_DP_MASK                       0xFFFFFFFFu
#define DSPI_DPIR0_DP_SHIFT                      0u
#define DSPI_DPIR0_DP_WIDTH                      32u
#define DSPI_DPIR0_DP(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_DPIR0_DP_SHIFT))&DSPI_DPIR0_DP_MASK)
/* SDR1 Bit Fields */
#define DSPI_SDR1_SER_DATA_MASK                  0xFFFFFFFFu
#define DSPI_SDR1_SER_DATA_SHIFT                 0u
#define DSPI_SDR1_SER_DATA_WIDTH                 32u
#define DSPI_SDR1_SER_DATA(x)                    (((uint32_t)(((uint32_t)(x))<<DSPI_SDR1_SER_DATA_SHIFT))&DSPI_SDR1_SER_DATA_MASK)
/* ASDR1 Bit Fields */
#define DSPI_ASDR1_ASER_DATA_MASK                0xFFFFFFFFu
#define DSPI_ASDR1_ASER_DATA_SHIFT               0u
#define DSPI_ASDR1_ASER_DATA_WIDTH               32u
#define DSPI_ASDR1_ASER_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_ASDR1_ASER_DATA_SHIFT))&DSPI_ASDR1_ASER_DATA_MASK)
/* COMPR1 Bit Fields */
#define DSPI_COMPR1_COMP_DATA_MASK               0xFFFFFFFFu
#define DSPI_COMPR1_COMP_DATA_SHIFT              0u
#define DSPI_COMPR1_COMP_DATA_WIDTH              32u
#define DSPI_COMPR1_COMP_DATA(x)                 (((uint32_t)(((uint32_t)(x))<<DSPI_COMPR1_COMP_DATA_SHIFT))&DSPI_COMPR1_COMP_DATA_MASK)
/* DDR1 Bit Fields */
#define DSPI_DDR1_DESER_DATA_MASK                0xFFFFFFFFu
#define DSPI_DDR1_DESER_DATA_SHIFT               0u
#define DSPI_DDR1_DESER_DATA_WIDTH               32u
#define DSPI_DDR1_DESER_DATA(x)                  (((uint32_t)(((uint32_t)(x))<<DSPI_DDR1_DESER_DATA_SHIFT))&DSPI_DDR1_DESER_DATA_MASK)
/* SSR1 Bit Fields */
#define DSPI_SSR1_SS_MASK                        0xFFFFFFFFu
#define DSPI_SSR1_SS_SHIFT                       0u
#define DSPI_SSR1_SS_WIDTH                       32u
#define DSPI_SSR1_SS(x)                          (((uint32_t)(((uint32_t)(x))<<DSPI_SSR1_SS_SHIFT))&DSPI_SSR1_SS_MASK)
/* PISR4 Bit Fields */
#define DSPI_PISR4_IPS32_MASK                    0xFu
#define DSPI_PISR4_IPS32_SHIFT                   0u
#define DSPI_PISR4_IPS32_WIDTH                   4u
#define DSPI_PISR4_IPS32(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS32_SHIFT))&DSPI_PISR4_IPS32_MASK)
#define DSPI_PISR4_IPS33_MASK                    0xF0u
#define DSPI_PISR4_IPS33_SHIFT                   4u
#define DSPI_PISR4_IPS33_WIDTH                   4u
#define DSPI_PISR4_IPS33(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS33_SHIFT))&DSPI_PISR4_IPS33_MASK)
#define DSPI_PISR4_IPS34_MASK                    0xF00u
#define DSPI_PISR4_IPS34_SHIFT                   8u
#define DSPI_PISR4_IPS34_WIDTH                   4u
#define DSPI_PISR4_IPS34(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS34_SHIFT))&DSPI_PISR4_IPS34_MASK)
#define DSPI_PISR4_IPS35_MASK                    0xF000u
#define DSPI_PISR4_IPS35_SHIFT                   12u
#define DSPI_PISR4_IPS35_WIDTH                   4u
#define DSPI_PISR4_IPS35(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS35_SHIFT))&DSPI_PISR4_IPS35_MASK)
#define DSPI_PISR4_IPS36_MASK                    0xF0000u
#define DSPI_PISR4_IPS36_SHIFT                   16u
#define DSPI_PISR4_IPS36_WIDTH                   4u
#define DSPI_PISR4_IPS36(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS36_SHIFT))&DSPI_PISR4_IPS36_MASK)
#define DSPI_PISR4_IPS37_MASK                    0xF00000u
#define DSPI_PISR4_IPS37_SHIFT                   20u
#define DSPI_PISR4_IPS37_WIDTH                   4u
#define DSPI_PISR4_IPS37(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS37_SHIFT))&DSPI_PISR4_IPS37_MASK)
#define DSPI_PISR4_IPS38_MASK                    0xF000000u
#define DSPI_PISR4_IPS38_SHIFT                   24u
#define DSPI_PISR4_IPS38_WIDTH                   4u
#define DSPI_PISR4_IPS38(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS38_SHIFT))&DSPI_PISR4_IPS38_MASK)
#define DSPI_PISR4_IPS39_MASK                    0xF0000000u
#define DSPI_PISR4_IPS39_SHIFT                   28u
#define DSPI_PISR4_IPS39_WIDTH                   4u
#define DSPI_PISR4_IPS39(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR4_IPS39_SHIFT))&DSPI_PISR4_IPS39_MASK)
/* PISR5 Bit Fields */
#define DSPI_PISR5_IPS40_MASK                    0xFu
#define DSPI_PISR5_IPS40_SHIFT                   0u
#define DSPI_PISR5_IPS40_WIDTH                   4u
#define DSPI_PISR5_IPS40(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS40_SHIFT))&DSPI_PISR5_IPS40_MASK)
#define DSPI_PISR5_IPS41_MASK                    0xF0u
#define DSPI_PISR5_IPS41_SHIFT                   4u
#define DSPI_PISR5_IPS41_WIDTH                   4u
#define DSPI_PISR5_IPS41(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS41_SHIFT))&DSPI_PISR5_IPS41_MASK)
#define DSPI_PISR5_IPS42_MASK                    0xF00u
#define DSPI_PISR5_IPS42_SHIFT                   8u
#define DSPI_PISR5_IPS42_WIDTH                   4u
#define DSPI_PISR5_IPS42(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS42_SHIFT))&DSPI_PISR5_IPS42_MASK)
#define DSPI_PISR5_IPS43_MASK                    0xF000u
#define DSPI_PISR5_IPS43_SHIFT                   12u
#define DSPI_PISR5_IPS43_WIDTH                   4u
#define DSPI_PISR5_IPS43(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS43_SHIFT))&DSPI_PISR5_IPS43_MASK)
#define DSPI_PISR5_IPS44_MASK                    0xF0000u
#define DSPI_PISR5_IPS44_SHIFT                   16u
#define DSPI_PISR5_IPS44_WIDTH                   4u
#define DSPI_PISR5_IPS44(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS44_SHIFT))&DSPI_PISR5_IPS44_MASK)
#define DSPI_PISR5_IPS45_MASK                    0xF00000u
#define DSPI_PISR5_IPS45_SHIFT                   20u
#define DSPI_PISR5_IPS45_WIDTH                   4u
#define DSPI_PISR5_IPS45(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS45_SHIFT))&DSPI_PISR5_IPS45_MASK)
#define DSPI_PISR5_IPS46_MASK                    0xF000000u
#define DSPI_PISR5_IPS46_SHIFT                   24u
#define DSPI_PISR5_IPS46_WIDTH                   4u
#define DSPI_PISR5_IPS46(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS46_SHIFT))&DSPI_PISR5_IPS46_MASK)
#define DSPI_PISR5_IPS47_MASK                    0xF0000000u
#define DSPI_PISR5_IPS47_SHIFT                   28u
#define DSPI_PISR5_IPS47_WIDTH                   4u
#define DSPI_PISR5_IPS47(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR5_IPS47_SHIFT))&DSPI_PISR5_IPS47_MASK)
/* PISR6 Bit Fields */
#define DSPI_PISR6_IPS48_MASK                    0xFu
#define DSPI_PISR6_IPS48_SHIFT                   0u
#define DSPI_PISR6_IPS48_WIDTH                   4u
#define DSPI_PISR6_IPS48(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS48_SHIFT))&DSPI_PISR6_IPS48_MASK)
#define DSPI_PISR6_IPS49_MASK                    0xF0u
#define DSPI_PISR6_IPS49_SHIFT                   4u
#define DSPI_PISR6_IPS49_WIDTH                   4u
#define DSPI_PISR6_IPS49(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS49_SHIFT))&DSPI_PISR6_IPS49_MASK)
#define DSPI_PISR6_IPS50_MASK                    0xF00u
#define DSPI_PISR6_IPS50_SHIFT                   8u
#define DSPI_PISR6_IPS50_WIDTH                   4u
#define DSPI_PISR6_IPS50(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS50_SHIFT))&DSPI_PISR6_IPS50_MASK)
#define DSPI_PISR6_IPS51_MASK                    0xF000u
#define DSPI_PISR6_IPS51_SHIFT                   12u
#define DSPI_PISR6_IPS51_WIDTH                   4u
#define DSPI_PISR6_IPS51(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS51_SHIFT))&DSPI_PISR6_IPS51_MASK)
#define DSPI_PISR6_IPS52_MASK                    0xF0000u
#define DSPI_PISR6_IPS52_SHIFT                   16u
#define DSPI_PISR6_IPS52_WIDTH                   4u
#define DSPI_PISR6_IPS52(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS52_SHIFT))&DSPI_PISR6_IPS52_MASK)
#define DSPI_PISR6_IPS53_MASK                    0xF00000u
#define DSPI_PISR6_IPS53_SHIFT                   20u
#define DSPI_PISR6_IPS53_WIDTH                   4u
#define DSPI_PISR6_IPS53(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS53_SHIFT))&DSPI_PISR6_IPS53_MASK)
#define DSPI_PISR6_IPS54_MASK                    0xF000000u
#define DSPI_PISR6_IPS54_SHIFT                   24u
#define DSPI_PISR6_IPS54_WIDTH                   4u
#define DSPI_PISR6_IPS54(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS54_SHIFT))&DSPI_PISR6_IPS54_MASK)
#define DSPI_PISR6_IPS55_MASK                    0xF0000000u
#define DSPI_PISR6_IPS55_SHIFT                   28u
#define DSPI_PISR6_IPS55_WIDTH                   4u
#define DSPI_PISR6_IPS55(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR6_IPS55_SHIFT))&DSPI_PISR6_IPS55_MASK)
/* PISR7 Bit Fields */
#define DSPI_PISR7_IPS56_MASK                    0xFu
#define DSPI_PISR7_IPS56_SHIFT                   0u
#define DSPI_PISR7_IPS56_WIDTH                   4u
#define DSPI_PISR7_IPS56(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS56_SHIFT))&DSPI_PISR7_IPS56_MASK)
#define DSPI_PISR7_IPS57_MASK                    0xF0u
#define DSPI_PISR7_IPS57_SHIFT                   4u
#define DSPI_PISR7_IPS57_WIDTH                   4u
#define DSPI_PISR7_IPS57(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS57_SHIFT))&DSPI_PISR7_IPS57_MASK)
#define DSPI_PISR7_IPS58_MASK                    0xF00u
#define DSPI_PISR7_IPS58_SHIFT                   8u
#define DSPI_PISR7_IPS58_WIDTH                   4u
#define DSPI_PISR7_IPS58(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS58_SHIFT))&DSPI_PISR7_IPS58_MASK)
#define DSPI_PISR7_IPS59_MASK                    0xF000u
#define DSPI_PISR7_IPS59_SHIFT                   12u
#define DSPI_PISR7_IPS59_WIDTH                   4u
#define DSPI_PISR7_IPS59(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS59_SHIFT))&DSPI_PISR7_IPS59_MASK)
#define DSPI_PISR7_IPS60_MASK                    0xF0000u
#define DSPI_PISR7_IPS60_SHIFT                   16u
#define DSPI_PISR7_IPS60_WIDTH                   4u
#define DSPI_PISR7_IPS60(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS60_SHIFT))&DSPI_PISR7_IPS60_MASK)
#define DSPI_PISR7_IPS61_MASK                    0xF00000u
#define DSPI_PISR7_IPS61_SHIFT                   20u
#define DSPI_PISR7_IPS61_WIDTH                   4u
#define DSPI_PISR7_IPS61(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS61_SHIFT))&DSPI_PISR7_IPS61_MASK)
#define DSPI_PISR7_IPS62_MASK                    0xF000000u
#define DSPI_PISR7_IPS62_SHIFT                   24u
#define DSPI_PISR7_IPS62_WIDTH                   4u
#define DSPI_PISR7_IPS62(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS62_SHIFT))&DSPI_PISR7_IPS62_MASK)
#define DSPI_PISR7_IPS63_MASK                    0xF0000000u
#define DSPI_PISR7_IPS63_SHIFT                   28u
#define DSPI_PISR7_IPS63_WIDTH                   4u
#define DSPI_PISR7_IPS63(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_PISR7_IPS63_SHIFT))&DSPI_PISR7_IPS63_MASK)
/* DIMR1 Bit Fields */
#define DSPI_DIMR1_MASK_MASK                     0xFFFFFFFFu
#define DSPI_DIMR1_MASK_SHIFT                    0u
#define DSPI_DIMR1_MASK_WIDTH                    32u
#define DSPI_DIMR1_MASK(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_DIMR1_MASK_SHIFT))&DSPI_DIMR1_MASK_MASK)
/* DPIR1 Bit Fields */
#define DSPI_DPIR1_DP_MASK                       0xFFFFFFFFu
#define DSPI_DPIR1_DP_SHIFT                      0u
#define DSPI_DPIR1_DP_WIDTH                      32u
#define DSPI_DPIR1_DP(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_DPIR1_DP_SHIFT))&DSPI_DPIR1_DP_MASK)
/* CTARE Bit Fields */
#define DSPI_CTARE_DTCP_MASK                     0x7FFu
#define DSPI_CTARE_DTCP_SHIFT                    0u
#define DSPI_CTARE_DTCP_WIDTH                    11u
#define DSPI_CTARE_DTCP(x)                       (((uint32_t)(((uint32_t)(x))<<DSPI_CTARE_DTCP_SHIFT))&DSPI_CTARE_DTCP_MASK)
#define DSPI_CTARE_FMSZE_MASK                    0x10000u
#define DSPI_CTARE_FMSZE_SHIFT                   16u
#define DSPI_CTARE_FMSZE_WIDTH                   1u
#define DSPI_CTARE_FMSZE(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_CTARE_FMSZE_SHIFT))&DSPI_CTARE_FMSZE_MASK)
/* SREX Bit Fields */
#define DSPI_SREX_CMDNXTPTR_MASK                 0xFu
#define DSPI_SREX_CMDNXTPTR_SHIFT                0u
#define DSPI_SREX_CMDNXTPTR_WIDTH                4u
#define DSPI_SREX_CMDNXTPTR(x)                   (((uint32_t)(((uint32_t)(x))<<DSPI_SREX_CMDNXTPTR_SHIFT))&DSPI_SREX_CMDNXTPTR_MASK)
#define DSPI_SREX_CMDCTR_MASK                    0x1F0u
#define DSPI_SREX_CMDCTR_SHIFT                   4u
#define DSPI_SREX_CMDCTR_WIDTH                   5u
#define DSPI_SREX_CMDCTR(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_SREX_CMDCTR_SHIFT))&DSPI_SREX_CMDCTR_MASK)
#define DSPI_SREX_TXCTR4_MASK                    0x800u
#define DSPI_SREX_TXCTR4_SHIFT                   11u
#define DSPI_SREX_TXCTR4_WIDTH                   1u
#define DSPI_SREX_TXCTR4(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_SREX_TXCTR4_SHIFT))&DSPI_SREX_TXCTR4_MASK)
#define DSPI_SREX_RXCTR4_MASK                    0x4000u
#define DSPI_SREX_RXCTR4_SHIFT                   14u
#define DSPI_SREX_RXCTR4_WIDTH                   1u
#define DSPI_SREX_RXCTR4(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_SREX_RXCTR4_SHIFT))&DSPI_SREX_RXCTR4_MASK)
/* TRIG Bit Fields */
#define DSPI_TRIG_TRRE_MASK                      0x1u
#define DSPI_TRIG_TRRE_SHIFT                     0u
#define DSPI_TRIG_TRRE_WIDTH                     1u
#define DSPI_TRIG_TRRE(x)                        (((uint32_t)(((uint32_t)(x))<<DSPI_TRIG_TRRE_SHIFT))&DSPI_TRIG_TRRE_MASK)
#define DSPI_TRIG_CID_MASK                       0x2u
#define DSPI_TRIG_CID_SHIFT                      1u
#define DSPI_TRIG_CID_WIDTH                      1u
#define DSPI_TRIG_CID(x)                         (((uint32_t)(((uint32_t)(x))<<DSPI_TRIG_CID_SHIFT))&DSPI_TRIG_CID_MASK)
#define DSPI_TRIG_ASDR_WT_MASK                   0x4u
#define DSPI_TRIG_ASDR_WT_SHIFT                  2u
#define DSPI_TRIG_ASDR_WT_WIDTH                  1u
#define DSPI_TRIG_ASDR_WT(x)                     (((uint32_t)(((uint32_t)(x))<<DSPI_TRIG_ASDR_WT_SHIFT))&DSPI_TRIG_ASDR_WT_MASK)
#define DSPI_TRIG_ENABLE_MASK                    0x80000000u
#define DSPI_TRIG_ENABLE_SHIFT                   31u
#define DSPI_TRIG_ENABLE_WIDTH                   1u
#define DSPI_TRIG_ENABLE(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TRIG_ENABLE_SHIFT))&DSPI_TRIG_ENABLE_MASK)
/* TSL Bit Fields */
#define DSPI_TSL_TS0_LEN_MASK                    0x7Fu
#define DSPI_TSL_TS0_LEN_SHIFT                   0u
#define DSPI_TSL_TS0_LEN_WIDTH                   7u
#define DSPI_TSL_TS0_LEN(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TSL_TS0_LEN_SHIFT))&DSPI_TSL_TS0_LEN_MASK)
#define DSPI_TSL_TS1_LEN_MASK                    0x7F00u
#define DSPI_TSL_TS1_LEN_SHIFT                   8u
#define DSPI_TSL_TS1_LEN_WIDTH                   7u
#define DSPI_TSL_TS1_LEN(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TSL_TS1_LEN_SHIFT))&DSPI_TSL_TS1_LEN_MASK)
#define DSPI_TSL_TS2_LEN_MASK                    0x7F0000u
#define DSPI_TSL_TS2_LEN_SHIFT                   16u
#define DSPI_TSL_TS2_LEN_WIDTH                   7u
#define DSPI_TSL_TS2_LEN(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TSL_TS2_LEN_SHIFT))&DSPI_TSL_TS2_LEN_MASK)
#define DSPI_TSL_TS3_LEN_MASK                    0x7F000000u
#define DSPI_TSL_TS3_LEN_SHIFT                   24u
#define DSPI_TSL_TS3_LEN_WIDTH                   7u
#define DSPI_TSL_TS3_LEN(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TSL_TS3_LEN_SHIFT))&DSPI_TSL_TS3_LEN_MASK)
/* TS_CONF Bit Fields */
#define DSPI_TS_CONF_TS0_MASK                    0xFu
#define DSPI_TS_CONF_TS0_SHIFT                   0u
#define DSPI_TS_CONF_TS0_WIDTH                   4u
#define DSPI_TS_CONF_TS0(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TS_CONF_TS0_SHIFT))&DSPI_TS_CONF_TS0_MASK)
#define DSPI_TS_CONF_TS1_MASK                    0xF0u
#define DSPI_TS_CONF_TS1_SHIFT                   4u
#define DSPI_TS_CONF_TS1_WIDTH                   4u
#define DSPI_TS_CONF_TS1(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TS_CONF_TS1_SHIFT))&DSPI_TS_CONF_TS1_MASK)
#define DSPI_TS_CONF_TS2_MASK                    0xF00u
#define DSPI_TS_CONF_TS2_SHIFT                   8u
#define DSPI_TS_CONF_TS2_WIDTH                   4u
#define DSPI_TS_CONF_TS2(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TS_CONF_TS2_SHIFT))&DSPI_TS_CONF_TS2_MASK)
#define DSPI_TS_CONF_TS3_MASK                    0xF000u
#define DSPI_TS_CONF_TS3_SHIFT                   12u
#define DSPI_TS_CONF_TS3_WIDTH                   4u
#define DSPI_TS_CONF_TS3(x)                      (((uint32_t)(((uint32_t)(x))<<DSPI_TS_CONF_TS3_SHIFT))&DSPI_TS_CONF_TS3_MASK)

/*!
 * @}
 */ /* end of group DSPI_Register_Masks */


/*!
 * @}
 */ /* end of group DSPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ENET Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ENET_Peripheral_Access_Layer ENET Peripheral Access Layer
 * @{
 */


/** ENET - Size of Registers Arrays */
#define ENET_TXIC_COUNT                          3u
#define ENET_RXIC_COUNT                          3u
#define ENET_RCMR_COUNT                          2u
#define ENET_DMACFG_COUNT                        2u
#define ENET_CHANNEL_COUNT                       4u

/** ENET - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __IO uint32_t EIR;                               /**< Interrupt Event Register, offset: 0x4 */
  __IO uint32_t EIMR;                              /**< Interrupt Mask Register, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __IO uint32_t RDAR;                              /**< Receive Descriptor Active Register - Ring 0, offset: 0x10 */
  __IO uint32_t TDAR;                              /**< Transmit Descriptor Active Register - Ring 0, offset: 0x14 */
       uint8_t RESERVED_2[12];
  __IO uint32_t ECR;                               /**< Ethernet Control Register, offset: 0x24 */
       uint8_t RESERVED_3[24];
  __IO uint32_t MMFR;                              /**< MII Management Frame Register, offset: 0x40 */
  __IO uint32_t MSCR;                              /**< MII Speed Control Register, offset: 0x44 */
       uint8_t RESERVED_4[28];
  __IO uint32_t MIBC;                              /**< MIB Control Register, offset: 0x64 */
       uint8_t RESERVED_5[28];
  __IO uint32_t RCR;                               /**< Receive Control Register, offset: 0x84 */
       uint8_t RESERVED_6[60];
  __IO uint32_t TCR;                               /**< Transmit Control Register, offset: 0xC4 */
       uint8_t RESERVED_7[28];
  __IO uint32_t PALR;                              /**< Physical Address Lower Register, offset: 0xE4 */
  __IO uint32_t PAUR;                              /**< Physical Address Upper Register, offset: 0xE8 */
  __IO uint32_t OPD;                               /**< Opcode/Pause Duration Register, offset: 0xEC */
  __IO uint32_t TXIC[ENET_TXIC_COUNT];             /**< Transmit Interrupt Coalescing Register, array offset: 0xF0, array step: 0x4 */
       uint8_t RESERVED_8[4];
  __IO uint32_t RXIC[ENET_RXIC_COUNT];             /**< Receive Interrupt Coalescing Register, array offset: 0x100, array step: 0x4 */
       uint8_t RESERVED_9[12];
  __IO uint32_t IAUR;                              /**< Descriptor Individual Upper Address Register, offset: 0x118 */
  __IO uint32_t IALR;                              /**< Descriptor Individual Lower Address Register, offset: 0x11C */
  __IO uint32_t GAUR;                              /**< Descriptor Group Upper Address Register, offset: 0x120 */
  __IO uint32_t GALR;                              /**< Descriptor Group Lower Address Register, offset: 0x124 */
       uint8_t RESERVED_10[28];
  __IO uint32_t TFWR;                              /**< Transmit FIFO Watermark Register, offset: 0x144 */
       uint8_t RESERVED_11[24];
  __IO uint32_t RDSR1;                             /**< Receive Descriptor Ring 1 Start Register, offset: 0x160 */
  __IO uint32_t TDSR1;                             /**< Transmit Buffer Descriptor Ring 1 Start Register, offset: 0x164 */
  __IO uint32_t MRBR1;                             /**< Maximum Receive Buffer Size Register - Ring 1, offset: 0x168 */
  __IO uint32_t RDSR2;                             /**< Receive Descriptor Ring 2 Start Register, offset: 0x16C */
  __IO uint32_t TDSR2;                             /**< Transmit Buffer Descriptor Ring 2 Start Register, offset: 0x170 */
  __IO uint32_t MRBR2;                             /**< Maximum Receive Buffer Size Register - Ring 2, offset: 0x174 */
       uint8_t RESERVED_12[8];
  __IO uint32_t RDSR;                              /**< Receive Descriptor Ring 0 Start Register, offset: 0x180 */
  __IO uint32_t TDSR;                              /**< Transmit Buffer Descriptor Ring 0 Start Register, offset: 0x184 */
  __IO uint32_t MRBR;                              /**< Maximum Receive Buffer Size Register - Ring 0, offset: 0x188 */
       uint8_t RESERVED_13[4];
  __IO uint32_t RSFL;                              /**< Receive FIFO Section Full Threshold, offset: 0x190 */
  __IO uint32_t RSEM;                              /**< Receive FIFO Section Empty Threshold, offset: 0x194 */
  __IO uint32_t RAEM;                              /**< Receive FIFO Almost Empty Threshold, offset: 0x198 */
  __IO uint32_t RAFL;                              /**< Receive FIFO Almost Full Threshold, offset: 0x19C */
  __IO uint32_t TSEM;                              /**< Transmit FIFO Section Empty Threshold, offset: 0x1A0 */
  __IO uint32_t TAEM;                              /**< Transmit FIFO Almost Empty Threshold, offset: 0x1A4 */
  __IO uint32_t TAFL;                              /**< Transmit FIFO Almost Full Threshold, offset: 0x1A8 */
  __IO uint32_t TIPG;                              /**< Transmit Inter-Packet Gap, offset: 0x1AC */
  __IO uint32_t FTRL;                              /**< Frame Truncation Length, offset: 0x1B0 */
       uint8_t RESERVED_14[12];
  __IO uint32_t TACC;                              /**< Transmit Accelerator Function Configuration, offset: 0x1C0 */
  __IO uint32_t RACC;                              /**< Receive Accelerator Function Configuration, offset: 0x1C4 */
  __IO uint32_t RCMR[ENET_RCMR_COUNT];             /**< Receive Classification Match Register for Class n, array offset: 0x1C8, array step: 0x4 */
       uint8_t RESERVED_15[8];
  __IO uint32_t DMACFG[ENET_DMACFG_COUNT];         /**< DMA Class Based Configuration, array offset: 0x1D8, array step: 0x4 */
  __IO uint32_t RDAR1;                             /**< Receive Descriptor Active Register - Ring 1, offset: 0x1E0 */
  __IO uint32_t TDAR1;                             /**< Transmit Descriptor Active Register - Ring 1, offset: 0x1E4 */
  __IO uint32_t RDAR2;                             /**< Receive Descriptor Active Register - Ring 2, offset: 0x1E8 */
  __IO uint32_t TDAR2;                             /**< Transmit Descriptor Active Register - Ring 2, offset: 0x1EC */
  __IO uint32_t QOS;                               /**< QOS Scheme, offset: 0x1F0 */
       uint8_t RESERVED_16[12];
  __I  uint32_t RMON_T_DROP;                       /**< Reserved Statistic Register, offset: 0x200 */
  __I  uint32_t RMON_T_PACKETS;                    /**< Tx Packet Count Statistic Register, offset: 0x204 */
  __I  uint32_t RMON_T_BC_PKT;                     /**< Tx Broadcast Packets Statistic Register, offset: 0x208 */
  __I  uint32_t RMON_T_MC_PKT;                     /**< Tx Multicast Packets Statistic Register, offset: 0x20C */
  __I  uint32_t RMON_T_CRC_ALIGN;                  /**< Tx Packets with CRC/Align Error Statistic Register, offset: 0x210 */
  __I  uint32_t RMON_T_UNDERSIZE;                  /**< Tx Packets Less Than Bytes and Good CRC Statistic Register, offset: 0x214 */
  __I  uint32_t RMON_T_OVERSIZE;                   /**< Tx Packets GT MAX_FL bytes and Good CRC Statistic Register, offset: 0x218 */
  __I  uint32_t RMON_T_FRAG;                       /**< Tx Packets Less Than 64 Bytes and Bad CRC Statistic Register, offset: 0x21C */
  __I  uint32_t RMON_T_JAB;                        /**< Tx Packets Greater Than MAX_FL bytes and Bad CRC Statistic Register, offset: 0x220 */
  __I  uint32_t RMON_T_COL;                        /**< Tx Collision Count Statistic Register, offset: 0x224 */
  __I  uint32_t RMON_T_P64;                        /**< Tx 64-Byte Packets Statistic Register, offset: 0x228 */
  __I  uint32_t RMON_T_P65TO127;                   /**< Tx 65- to 127-byte Packets Statistic Register, offset: 0x22C */
  __I  uint32_t RMON_T_P128TO255;                  /**< Tx 128- to 255-byte Packets Statistic Register, offset: 0x230 */
  __I  uint32_t RMON_T_P256TO511;                  /**< Tx 256- to 511-byte Packets Statistic Register, offset: 0x234 */
  __I  uint32_t RMON_T_P512TO1023;                 /**< Tx 512- to 1023-byte Packets Statistic Register, offset: 0x238 */
  __I  uint32_t RMON_T_P1024TO2047;                /**< Tx 1024- to 2047-byte Packets Statistic Register, offset: 0x23C */
  __I  uint32_t RMON_T_P_GTE2048;                  /**< Tx Packets Greater Than 2048 Bytes Statistic Register, offset: 0x240 */
  __I  uint32_t RMON_T_OCTETS;                     /**< Tx Octets Statistic Register, offset: 0x244 */
  __I  uint32_t IEEE_T_DROP;                       /**< Reserved Statistic Register, offset: 0x248 */
  __I  uint32_t IEEE_T_FRAME_OK;                   /**< Frames Transmitted OK Statistic Register, offset: 0x24C */
  __I  uint32_t IEEE_T_1COL;                       /**< Frames Transmitted with Single Collision Statistic Register, offset: 0x250 */
  __I  uint32_t IEEE_T_MCOL;                       /**< Frames Transmitted with Multiple Collisions Statistic Register, offset: 0x254 */
  __I  uint32_t IEEE_T_DEF;                        /**< Frames Transmitted after Deferral Delay Statistic Register, offset: 0x258 */
  __I  uint32_t IEEE_T_LCOL;                       /**< Frames Transmitted with Late Collision Statistic Register, offset: 0x25C */
  __I  uint32_t IEEE_T_EXCOL;                      /**< Frames Transmitted with Excessive Collisions Statistic Register, offset: 0x260 */
  __I  uint32_t IEEE_T_MACERR;                     /**< Frames Transmitted with Tx FIFO Underrun Statistic Register, offset: 0x264 */
  __I  uint32_t IEEE_T_CSERR;                      /**< Frames Transmitted with Carrier Sense Error Statistic Register, offset: 0x268 */
  __I  uint32_t IEEE_T_SQE;                        /**< Reserved Statistic Register, offset: 0x26C */
  __I  uint32_t IEEE_T_FDXFC;                      /**< Flow Control Pause Frames Transmitted Statistic Register, offset: 0x270 */
  __I  uint32_t IEEE_T_OCTETS_OK;                  /**< Octet Count for Frames Transmitted w/o Error Statistic Register, offset: 0x274 */
       uint8_t RESERVED_17[12];
  __I  uint32_t RMON_R_PACKETS;                    /**< Rx Packet Count Statistic Register, offset: 0x284 */
  __I  uint32_t RMON_R_BC_PKT;                     /**< Rx Broadcast Packets Statistic Register, offset: 0x288 */
  __I  uint32_t RMON_R_MC_PKT;                     /**< Rx Multicast Packets Statistic Register, offset: 0x28C */
  __I  uint32_t RMON_R_CRC_ALIGN;                  /**< Rx Packets with CRC/Align Error Statistic Register, offset: 0x290 */
  __I  uint32_t RMON_R_UNDERSIZE;                  /**< Rx Packets with Less Than 64 Bytes and Good CRC Statistic Register, offset: 0x294 */
  __I  uint32_t RMON_R_OVERSIZE;                   /**< Rx Packets Greater Than MAX_FL and Good CRC Statistic Register, offset: 0x298 */
  __I  uint32_t RMON_R_FRAG;                       /**< Rx Packets Less Than 64 Bytes and Bad CRC Statistic Register, offset: 0x29C */
  __I  uint32_t RMON_R_JAB;                        /**< Rx Packets Greater Than MAX_FL Bytes and Bad CRC Statistic Register, offset: 0x2A0 */
  __I  uint32_t RMON_R_RESVD_0;                    /**< Reserved Statistic Register, offset: 0x2A4 */
  __I  uint32_t RMON_R_P64;                        /**< Rx 64-Byte Packets Statistic Register, offset: 0x2A8 */
  __I  uint32_t RMON_R_P65TO127;                   /**< Rx 65- to 127-Byte Packets Statistic Register, offset: 0x2AC */
  __I  uint32_t RMON_R_P128TO255;                  /**< Rx 128- to 255-Byte Packets Statistic Register, offset: 0x2B0 */
  __I  uint32_t RMON_R_P256TO511;                  /**< Rx 256- to 511-Byte Packets Statistic Register, offset: 0x2B4 */
  __I  uint32_t RMON_R_P512TO1023;                 /**< Rx 512- to 1023-Byte Packets Statistic Register, offset: 0x2B8 */
  __I  uint32_t RMON_R_P1024TO2047;                /**< Rx 1024- to 2047-Byte Packets Statistic Register, offset: 0x2BC */
  __I  uint32_t RMON_R_P_GTE2048;                  /**< Rx Packets Greater than 2048 Bytes Statistic Register, offset: 0x2C0 */
  __I  uint32_t RMON_R_OCTETS;                     /**< Rx Octets Statistic Register, offset: 0x2C4 */
  __I  uint32_t IEEE_R_DROP;                       /**< Frames not Counted Correctly Statistic Register, offset: 0x2C8 */
  __I  uint32_t IEEE_R_FRAME_OK;                   /**< Frames Received OK Statistic Register, offset: 0x2CC */
  __I  uint32_t IEEE_R_CRC;                        /**< Frames Received with CRC Error Statistic Register, offset: 0x2D0 */
  __I  uint32_t IEEE_R_ALIGN;                      /**< Frames Received with Alignment Error Statistic Register, offset: 0x2D4 */
  __I  uint32_t IEEE_R_MACERR;                     /**< Receive FIFO Overflow Count Statistic Register, offset: 0x2D8 */
  __I  uint32_t IEEE_R_FDXFC;                      /**< Flow Control Pause Frames Received Statistic Register, offset: 0x2DC */
  __I  uint32_t IEEE_R_OCTETS_OK;                  /**< Octet Count for Frames Received without Error Statistic Register, offset: 0x2E0 */
       uint8_t RESERVED_18[284];
  __IO uint32_t ATCR;                              /**< Adjustable Timer Control Register, offset: 0x400 */
  __IO uint32_t ATVR;                              /**< Timer Value Register, offset: 0x404 */
  __IO uint32_t ATOFF;                             /**< Timer Offset Register, offset: 0x408 */
  __IO uint32_t ATPER;                             /**< Timer Period Register, offset: 0x40C */
  __IO uint32_t ATCOR;                             /**< Timer Correction Register, offset: 0x410 */
  __IO uint32_t ATINC;                             /**< Time-Stamping Clock Period Register, offset: 0x414 */
  __I  uint32_t ATSTMP;                            /**< Timestamp of Last Transmitted Frame, offset: 0x418 */
       uint8_t RESERVED_19[356];
  __IO uint32_t MDATA;                             /**< Pattern Match Data Register, offset: 0x580 */
  __IO uint32_t MMASK;                             /**< Match Entry Mask Register, offset: 0x584 */
  __IO uint32_t MCONFIG;                           /**< Match Entry Rules Configuration Register, offset: 0x588 */
  __IO uint32_t MENTRYRW;                          /**< Match Entry Read/Write Command Register, offset: 0x58C */
  __IO uint32_t RXPCTL;                            /**< Receive Parser Control Register, offset: 0x590 */
  __IO uint32_t MAXFRMOFF;                         /**< Maximum Frame Offset, offset: 0x594 */
  __I  uint32_t RXPARST;                           /**< Receive Parser Status, offset: 0x598 */
       uint8_t RESERVED_20[4];
  __I  uint32_t PARSDSCD;                          /**< Parser Discard Count, offset: 0x5A0 */
  __I  uint32_t PRSACPT0;                          /**< Parser Accept Count 0, offset: 0x5A4 */
  __I  uint32_t PRSRJCT0;                          /**< Parser Reject Count 0, offset: 0x5A8 */
  __I  uint32_t PRSACPT1;                          /**< Parser Accept Count 1, offset: 0x5AC */
  __I  uint32_t PRSRJCT1;                          /**< Parser Reject Count 1, offset: 0x5B0 */
  __I  uint32_t PRSACPT2;                          /**< Parser Accept Count 2, offset: 0x5B4 */
  __I  uint32_t PRSRJCT2;                          /**< Parser Reject Count 2, offset: 0x5B8 */
       uint8_t RESERVED_21[72];
  __IO uint32_t TGSR;                              /**< Timer Global Status Register, offset: 0x604 */
  struct {                                         /* offset: 0x608, array step: 0x8 */
    __IO uint32_t TCSR;                              /**< Timer Control Status Register, array offset: 0x608, array step: 0x8 */
    __IO uint32_t TCCR;                              /**< Timer Compare Capture Register, array offset: 0x60C, array step: 0x8 */
  } CHANNEL[ENET_CHANNEL_COUNT];
} ENET_Type, *ENET_MemMapPtr;

 /** Number of instances of the ENET module. */
#define ENET_INSTANCE_COUNT                      (2u)


/* ENET - Peripheral instance base addresses */
/** Peripheral ENET_0 base address */
#define ENET_0_BASE                              (0xFFCC4000u)
/** Peripheral ENET_0 base pointer */
#define ENET_0                                   ((ENET_Type *)ENET_0_BASE)
/** Peripheral ENET_1 base address */
#define ENET_1_BASE                              (0xFFCC8000u)
/** Peripheral ENET_1 base pointer */
#define ENET_1                                   ((ENET_Type *)ENET_1_BASE)
/** Array initializer of ENET peripheral base addresses */
#define ENET_BASE_ADDRS                          { ENET_0_BASE, ENET_1_BASE }
/** Array initializer of ENET peripheral base pointers */
#define ENET_BASE_PTRS                           { ENET_0, ENET_1 }

/** Interrupt vectors for the ENET peripheral type */
#define ENET_Err_IRQS                     { ENET0_GROUP0_IRQn, ENET1_GROUP0_IRQn }
#define ENET_Rx_IRQS                      { ENET0_GROUP1_IRQn, ENET1_GROUP1_IRQn }
#define ENET_Tx_IRQS                      { ENET0_GROUP2_IRQn, ENET1_GROUP2_IRQn }
#define ENET_Parser_IRQS                  { ENET0_GROUP3_IRQn, ENET1_GROUP3_IRQn }
#define ENET_Timer_IRQS                   { ENET0_GROUP4_IRQn, ENET1_GROUP4_IRQn }
#define ENET_Rx_1_IRQS                    { ENET0_GROUP5_IRQn, ENET1_GROUP5_IRQn }
#define ENET_Tx_1_IRQS                    { ENET0_GROUP6_IRQn, ENET1_GROUP6_IRQn }
#define ENET_Rx_2_IRQS                    { ENET0_GROUP7_IRQn, ENET1_GROUP7_IRQn }
#define ENET_Tx_2_IRQS                    { ENET0_GROUP8_IRQn, ENET1_GROUP8_IRQn }

/* ----------------------------------------------------------------------------
   -- ENET Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ENET_Register_Masks ENET Register Masks
 * @{
 */

/* EIR Bit Fields */
#define ENET_EIR_RXB1_MASK                       0x1u
#define ENET_EIR_RXB1_SHIFT                      0u
#define ENET_EIR_RXB1_WIDTH                      1u
#define ENET_EIR_RXB1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXB1_SHIFT))&ENET_EIR_RXB1_MASK)
#define ENET_EIR_RXF1_MASK                       0x2u
#define ENET_EIR_RXF1_SHIFT                      1u
#define ENET_EIR_RXF1_WIDTH                      1u
#define ENET_EIR_RXF1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXF1_SHIFT))&ENET_EIR_RXF1_MASK)
#define ENET_EIR_TXB1_MASK                       0x4u
#define ENET_EIR_TXB1_SHIFT                      2u
#define ENET_EIR_TXB1_WIDTH                      1u
#define ENET_EIR_TXB1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXB1_SHIFT))&ENET_EIR_TXB1_MASK)
#define ENET_EIR_TXF1_MASK                       0x8u
#define ENET_EIR_TXF1_SHIFT                      3u
#define ENET_EIR_TXF1_WIDTH                      1u
#define ENET_EIR_TXF1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXF1_SHIFT))&ENET_EIR_TXF1_MASK)
#define ENET_EIR_RXB2_MASK                       0x10u
#define ENET_EIR_RXB2_SHIFT                      4u
#define ENET_EIR_RXB2_WIDTH                      1u
#define ENET_EIR_RXB2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXB2_SHIFT))&ENET_EIR_RXB2_MASK)
#define ENET_EIR_RXF2_MASK                       0x20u
#define ENET_EIR_RXF2_SHIFT                      5u
#define ENET_EIR_RXF2_WIDTH                      1u
#define ENET_EIR_RXF2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXF2_SHIFT))&ENET_EIR_RXF2_MASK)
#define ENET_EIR_TXB2_MASK                       0x40u
#define ENET_EIR_TXB2_SHIFT                      6u
#define ENET_EIR_TXB2_WIDTH                      1u
#define ENET_EIR_TXB2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXB2_SHIFT))&ENET_EIR_TXB2_MASK)
#define ENET_EIR_TXF2_MASK                       0x80u
#define ENET_EIR_TXF2_SHIFT                      7u
#define ENET_EIR_TXF2_WIDTH                      1u
#define ENET_EIR_TXF2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXF2_SHIFT))&ENET_EIR_TXF2_MASK)
#define ENET_EIR_PARSRF_MASK                     0x200u
#define ENET_EIR_PARSRF_SHIFT                    9u
#define ENET_EIR_PARSRF_WIDTH                    1u
#define ENET_EIR_PARSRF(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIR_PARSRF_SHIFT))&ENET_EIR_PARSRF_MASK)
#define ENET_EIR_PARSERR_MASK                    0x400u
#define ENET_EIR_PARSERR_SHIFT                   10u
#define ENET_EIR_PARSERR_WIDTH                   1u
#define ENET_EIR_PARSERR(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_EIR_PARSERR_SHIFT))&ENET_EIR_PARSERR_MASK)
#define ENET_EIR_RXFLUSH_0_MASK                  0x1000u
#define ENET_EIR_RXFLUSH_0_SHIFT                 12u
#define ENET_EIR_RXFLUSH_0_WIDTH                 1u
#define ENET_EIR_RXFLUSH_0(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXFLUSH_0_SHIFT))&ENET_EIR_RXFLUSH_0_MASK)
#define ENET_EIR_RXFLUSH_1_MASK                  0x2000u
#define ENET_EIR_RXFLUSH_1_SHIFT                 13u
#define ENET_EIR_RXFLUSH_1_WIDTH                 1u
#define ENET_EIR_RXFLUSH_1(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXFLUSH_1_SHIFT))&ENET_EIR_RXFLUSH_1_MASK)
#define ENET_EIR_RXFLUSH_2_MASK                  0x4000u
#define ENET_EIR_RXFLUSH_2_SHIFT                 14u
#define ENET_EIR_RXFLUSH_2_WIDTH                 1u
#define ENET_EIR_RXFLUSH_2(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXFLUSH_2_SHIFT))&ENET_EIR_RXFLUSH_2_MASK)
#define ENET_EIR_TS_TIMER_MASK                   0x8000u
#define ENET_EIR_TS_TIMER_SHIFT                  15u
#define ENET_EIR_TS_TIMER_WIDTH                  1u
#define ENET_EIR_TS_TIMER(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TS_TIMER_SHIFT))&ENET_EIR_TS_TIMER_MASK)
#define ENET_EIR_TS_AVAIL_MASK                   0x10000u
#define ENET_EIR_TS_AVAIL_SHIFT                  16u
#define ENET_EIR_TS_AVAIL_WIDTH                  1u
#define ENET_EIR_TS_AVAIL(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TS_AVAIL_SHIFT))&ENET_EIR_TS_AVAIL_MASK)
#define ENET_EIR_WAKEUP_MASK                     0x20000u
#define ENET_EIR_WAKEUP_SHIFT                    17u
#define ENET_EIR_WAKEUP_WIDTH                    1u
#define ENET_EIR_WAKEUP(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIR_WAKEUP_SHIFT))&ENET_EIR_WAKEUP_MASK)
#define ENET_EIR_PLR_MASK                        0x40000u
#define ENET_EIR_PLR_SHIFT                       18u
#define ENET_EIR_PLR_WIDTH                       1u
#define ENET_EIR_PLR(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_PLR_SHIFT))&ENET_EIR_PLR_MASK)
#define ENET_EIR_UN_MASK                         0x80000u
#define ENET_EIR_UN_SHIFT                        19u
#define ENET_EIR_UN_WIDTH                        1u
#define ENET_EIR_UN(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_UN_SHIFT))&ENET_EIR_UN_MASK)
#define ENET_EIR_RL_MASK                         0x100000u
#define ENET_EIR_RL_SHIFT                        20u
#define ENET_EIR_RL_WIDTH                        1u
#define ENET_EIR_RL(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RL_SHIFT))&ENET_EIR_RL_MASK)
#define ENET_EIR_LC_MASK                         0x200000u
#define ENET_EIR_LC_SHIFT                        21u
#define ENET_EIR_LC_WIDTH                        1u
#define ENET_EIR_LC(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_LC_SHIFT))&ENET_EIR_LC_MASK)
#define ENET_EIR_EBERR_MASK                      0x400000u
#define ENET_EIR_EBERR_SHIFT                     22u
#define ENET_EIR_EBERR_WIDTH                     1u
#define ENET_EIR_EBERR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIR_EBERR_SHIFT))&ENET_EIR_EBERR_MASK)
#define ENET_EIR_MII_MASK                        0x800000u
#define ENET_EIR_MII_SHIFT                       23u
#define ENET_EIR_MII_WIDTH                       1u
#define ENET_EIR_MII(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_MII_SHIFT))&ENET_EIR_MII_MASK)
#define ENET_EIR_RXB_MASK                        0x1000000u
#define ENET_EIR_RXB_SHIFT                       24u
#define ENET_EIR_RXB_WIDTH                       1u
#define ENET_EIR_RXB(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXB_SHIFT))&ENET_EIR_RXB_MASK)
#define ENET_EIR_RXF_MASK                        0x2000000u
#define ENET_EIR_RXF_SHIFT                       25u
#define ENET_EIR_RXF_WIDTH                       1u
#define ENET_EIR_RXF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXF_SHIFT))&ENET_EIR_RXF_MASK)
#define ENET_EIR_TXB_MASK                        0x4000000u
#define ENET_EIR_TXB_SHIFT                       26u
#define ENET_EIR_TXB_WIDTH                       1u
#define ENET_EIR_TXB(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXB_SHIFT))&ENET_EIR_TXB_MASK)
#define ENET_EIR_TXF_MASK                        0x8000000u
#define ENET_EIR_TXF_SHIFT                       27u
#define ENET_EIR_TXF_WIDTH                       1u
#define ENET_EIR_TXF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXF_SHIFT))&ENET_EIR_TXF_MASK)
#define ENET_EIR_GRA_MASK                        0x10000000u
#define ENET_EIR_GRA_SHIFT                       28u
#define ENET_EIR_GRA_WIDTH                       1u
#define ENET_EIR_GRA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_GRA_SHIFT))&ENET_EIR_GRA_MASK)
#define ENET_EIR_BABT_MASK                       0x20000000u
#define ENET_EIR_BABT_SHIFT                      29u
#define ENET_EIR_BABT_WIDTH                      1u
#define ENET_EIR_BABT(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_BABT_SHIFT))&ENET_EIR_BABT_MASK)
#define ENET_EIR_BABR_MASK                       0x40000000u
#define ENET_EIR_BABR_SHIFT                      30u
#define ENET_EIR_BABR_WIDTH                      1u
#define ENET_EIR_BABR(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_BABR_SHIFT))&ENET_EIR_BABR_MASK)
/* EIMR Bit Fields */
#define ENET_EIMR_RXB1_MASK                      0x1u
#define ENET_EIMR_RXB1_SHIFT                     0u
#define ENET_EIMR_RXB1_WIDTH                     1u
#define ENET_EIMR_RXB1(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXB1_SHIFT))&ENET_EIMR_RXB1_MASK)
#define ENET_EIMR_RXF1_MASK                      0x2u
#define ENET_EIMR_RXF1_SHIFT                     1u
#define ENET_EIMR_RXF1_WIDTH                     1u
#define ENET_EIMR_RXF1(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXF1_SHIFT))&ENET_EIMR_RXF1_MASK)
#define ENET_EIMR_TXB1_MASK                      0x4u
#define ENET_EIMR_TXB1_SHIFT                     2u
#define ENET_EIMR_TXB1_WIDTH                     1u
#define ENET_EIMR_TXB1(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXB1_SHIFT))&ENET_EIMR_TXB1_MASK)
#define ENET_EIMR_TXF1_MASK                      0x8u
#define ENET_EIMR_TXF1_SHIFT                     3u
#define ENET_EIMR_TXF1_WIDTH                     1u
#define ENET_EIMR_TXF1(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXF1_SHIFT))&ENET_EIMR_TXF1_MASK)
#define ENET_EIMR_RXB2_MASK                      0x10u
#define ENET_EIMR_RXB2_SHIFT                     4u
#define ENET_EIMR_RXB2_WIDTH                     1u
#define ENET_EIMR_RXB2(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXB2_SHIFT))&ENET_EIMR_RXB2_MASK)
#define ENET_EIMR_RXF2_MASK                      0x20u
#define ENET_EIMR_RXF2_SHIFT                     5u
#define ENET_EIMR_RXF2_WIDTH                     1u
#define ENET_EIMR_RXF2(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXF2_SHIFT))&ENET_EIMR_RXF2_MASK)
#define ENET_EIMR_TXB2_MASK                      0x40u
#define ENET_EIMR_TXB2_SHIFT                     6u
#define ENET_EIMR_TXB2_WIDTH                     1u
#define ENET_EIMR_TXB2(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXB2_SHIFT))&ENET_EIMR_TXB2_MASK)
#define ENET_EIMR_TXF2_MASK                      0x80u
#define ENET_EIMR_TXF2_SHIFT                     7u
#define ENET_EIMR_TXF2_WIDTH                     1u
#define ENET_EIMR_TXF2(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXF2_SHIFT))&ENET_EIMR_TXF2_MASK)
#define ENET_EIMR_PARSRF_MASK                    0x200u
#define ENET_EIMR_PARSRF_SHIFT                   9u
#define ENET_EIMR_PARSRF_WIDTH                   1u
#define ENET_EIMR_PARSRF(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_PARSRF_SHIFT))&ENET_EIMR_PARSRF_MASK)
#define ENET_EIMR_PARSERR_MASK                   0x400u
#define ENET_EIMR_PARSERR_SHIFT                  10u
#define ENET_EIMR_PARSERR_WIDTH                  1u
#define ENET_EIMR_PARSERR(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_PARSERR_SHIFT))&ENET_EIMR_PARSERR_MASK)
#define ENET_EIMR_RXFLUSH_0_MASK                 0x1000u
#define ENET_EIMR_RXFLUSH_0_SHIFT                12u
#define ENET_EIMR_RXFLUSH_0_WIDTH                1u
#define ENET_EIMR_RXFLUSH_0(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXFLUSH_0_SHIFT))&ENET_EIMR_RXFLUSH_0_MASK)
#define ENET_EIMR_RXFLUSH_1_MASK                 0x2000u
#define ENET_EIMR_RXFLUSH_1_SHIFT                13u
#define ENET_EIMR_RXFLUSH_1_WIDTH                1u
#define ENET_EIMR_RXFLUSH_1(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXFLUSH_1_SHIFT))&ENET_EIMR_RXFLUSH_1_MASK)
#define ENET_EIMR_RXFLUSH_2_MASK                 0x4000u
#define ENET_EIMR_RXFLUSH_2_SHIFT                14u
#define ENET_EIMR_RXFLUSH_2_WIDTH                1u
#define ENET_EIMR_RXFLUSH_2(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXFLUSH_2_SHIFT))&ENET_EIMR_RXFLUSH_2_MASK)
#define ENET_EIMR_TS_TIMER_MASK                  0x8000u
#define ENET_EIMR_TS_TIMER_SHIFT                 15u
#define ENET_EIMR_TS_TIMER_WIDTH                 1u
#define ENET_EIMR_TS_TIMER(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TS_TIMER_SHIFT))&ENET_EIMR_TS_TIMER_MASK)
#define ENET_EIMR_TS_AVAIL_MASK                  0x10000u
#define ENET_EIMR_TS_AVAIL_SHIFT                 16u
#define ENET_EIMR_TS_AVAIL_WIDTH                 1u
#define ENET_EIMR_TS_AVAIL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TS_AVAIL_SHIFT))&ENET_EIMR_TS_AVAIL_MASK)
#define ENET_EIMR_WAKEUP_MASK                    0x20000u
#define ENET_EIMR_WAKEUP_SHIFT                   17u
#define ENET_EIMR_WAKEUP_WIDTH                   1u
#define ENET_EIMR_WAKEUP(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_WAKEUP_SHIFT))&ENET_EIMR_WAKEUP_MASK)
#define ENET_EIMR_PLR_MASK                       0x40000u
#define ENET_EIMR_PLR_SHIFT                      18u
#define ENET_EIMR_PLR_WIDTH                      1u
#define ENET_EIMR_PLR(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_PLR_SHIFT))&ENET_EIMR_PLR_MASK)
#define ENET_EIMR_UN_MASK                        0x80000u
#define ENET_EIMR_UN_SHIFT                       19u
#define ENET_EIMR_UN_WIDTH                       1u
#define ENET_EIMR_UN(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_UN_SHIFT))&ENET_EIMR_UN_MASK)
#define ENET_EIMR_RL_MASK                        0x100000u
#define ENET_EIMR_RL_SHIFT                       20u
#define ENET_EIMR_RL_WIDTH                       1u
#define ENET_EIMR_RL(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RL_SHIFT))&ENET_EIMR_RL_MASK)
#define ENET_EIMR_LC_MASK                        0x200000u
#define ENET_EIMR_LC_SHIFT                       21u
#define ENET_EIMR_LC_WIDTH                       1u
#define ENET_EIMR_LC(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_LC_SHIFT))&ENET_EIMR_LC_MASK)
#define ENET_EIMR_EBERR_MASK                     0x400000u
#define ENET_EIMR_EBERR_SHIFT                    22u
#define ENET_EIMR_EBERR_WIDTH                    1u
#define ENET_EIMR_EBERR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_EBERR_SHIFT))&ENET_EIMR_EBERR_MASK)
#define ENET_EIMR_MII_MASK                       0x800000u
#define ENET_EIMR_MII_SHIFT                      23u
#define ENET_EIMR_MII_WIDTH                      1u
#define ENET_EIMR_MII(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_MII_SHIFT))&ENET_EIMR_MII_MASK)
#define ENET_EIMR_RXB_MASK                       0x1000000u
#define ENET_EIMR_RXB_SHIFT                      24u
#define ENET_EIMR_RXB_WIDTH                      1u
#define ENET_EIMR_RXB(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXB_SHIFT))&ENET_EIMR_RXB_MASK)
#define ENET_EIMR_RXF_MASK                       0x2000000u
#define ENET_EIMR_RXF_SHIFT                      25u
#define ENET_EIMR_RXF_WIDTH                      1u
#define ENET_EIMR_RXF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXF_SHIFT))&ENET_EIMR_RXF_MASK)
#define ENET_EIMR_TXB_MASK                       0x4000000u
#define ENET_EIMR_TXB_SHIFT                      26u
#define ENET_EIMR_TXB_WIDTH                      1u
#define ENET_EIMR_TXB(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXB_SHIFT))&ENET_EIMR_TXB_MASK)
#define ENET_EIMR_TXF_MASK                       0x8000000u
#define ENET_EIMR_TXF_SHIFT                      27u
#define ENET_EIMR_TXF_WIDTH                      1u
#define ENET_EIMR_TXF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXF_SHIFT))&ENET_EIMR_TXF_MASK)
#define ENET_EIMR_GRA_MASK                       0x10000000u
#define ENET_EIMR_GRA_SHIFT                      28u
#define ENET_EIMR_GRA_WIDTH                      1u
#define ENET_EIMR_GRA(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_GRA_SHIFT))&ENET_EIMR_GRA_MASK)
#define ENET_EIMR_BABT_MASK                      0x20000000u
#define ENET_EIMR_BABT_SHIFT                     29u
#define ENET_EIMR_BABT_WIDTH                     1u
#define ENET_EIMR_BABT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_BABT_SHIFT))&ENET_EIMR_BABT_MASK)
#define ENET_EIMR_BABR_MASK                      0x40000000u
#define ENET_EIMR_BABR_SHIFT                     30u
#define ENET_EIMR_BABR_WIDTH                     1u
#define ENET_EIMR_BABR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_BABR_SHIFT))&ENET_EIMR_BABR_MASK)
/* RDAR Bit Fields */
#define ENET_RDAR_RDAR_MASK                      0x1000000u
#define ENET_RDAR_RDAR_SHIFT                     24u
#define ENET_RDAR_RDAR_WIDTH                     1u
#define ENET_RDAR_RDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RDAR_RDAR_SHIFT))&ENET_RDAR_RDAR_MASK)
/* TDAR Bit Fields */
#define ENET_TDAR_TDAR_MASK                      0x1000000u
#define ENET_TDAR_TDAR_SHIFT                     24u
#define ENET_TDAR_TDAR_WIDTH                     1u
#define ENET_TDAR_TDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TDAR_TDAR_SHIFT))&ENET_TDAR_TDAR_MASK)
/* ECR Bit Fields */
#define ENET_ECR_RESET_MASK                      0x1u
#define ENET_ECR_RESET_SHIFT                     0u
#define ENET_ECR_RESET_WIDTH                     1u
#define ENET_ECR_RESET(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_RESET_SHIFT))&ENET_ECR_RESET_MASK)
#define ENET_ECR_ETHEREN_MASK                    0x2u
#define ENET_ECR_ETHEREN_SHIFT                   1u
#define ENET_ECR_ETHEREN_WIDTH                   1u
#define ENET_ECR_ETHEREN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_ETHEREN_SHIFT))&ENET_ECR_ETHEREN_MASK)
#define ENET_ECR_MAGICEN_MASK                    0x4u
#define ENET_ECR_MAGICEN_SHIFT                   2u
#define ENET_ECR_MAGICEN_WIDTH                   1u
#define ENET_ECR_MAGICEN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_MAGICEN_SHIFT))&ENET_ECR_MAGICEN_MASK)
#define ENET_ECR_SLEEP_MASK                      0x8u
#define ENET_ECR_SLEEP_SHIFT                     3u
#define ENET_ECR_SLEEP_WIDTH                     1u
#define ENET_ECR_SLEEP(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_SLEEP_SHIFT))&ENET_ECR_SLEEP_MASK)
#define ENET_ECR_EN1588_MASK                     0x10u
#define ENET_ECR_EN1588_SHIFT                    4u
#define ENET_ECR_EN1588_WIDTH                    1u
#define ENET_ECR_EN1588(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ECR_EN1588_SHIFT))&ENET_ECR_EN1588_MASK)
#define ENET_ECR_DBGEN_MASK                      0x40u
#define ENET_ECR_DBGEN_SHIFT                     6u
#define ENET_ECR_DBGEN_WIDTH                     1u
#define ENET_ECR_DBGEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_DBGEN_SHIFT))&ENET_ECR_DBGEN_MASK)
#define ENET_ECR_DBSWP_MASK                      0x100u
#define ENET_ECR_DBSWP_SHIFT                     8u
#define ENET_ECR_DBSWP_WIDTH                     1u
#define ENET_ECR_DBSWP(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_DBSWP_SHIFT))&ENET_ECR_DBSWP_MASK)
#define ENET_ECR_SVLANEN_MASK                    0x200u
#define ENET_ECR_SVLANEN_SHIFT                   9u
#define ENET_ECR_SVLANEN_WIDTH                   1u
#define ENET_ECR_SVLANEN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_SVLANEN_SHIFT))&ENET_ECR_SVLANEN_MASK)
#define ENET_ECR_VLANUSE2ND_MASK                 0x400u
#define ENET_ECR_VLANUSE2ND_SHIFT                10u
#define ENET_ECR_VLANUSE2ND_WIDTH                1u
#define ENET_ECR_VLANUSE2ND(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_ECR_VLANUSE2ND_SHIFT))&ENET_ECR_VLANUSE2ND_MASK)
#define ENET_ECR_SVLANDBL_MASK                   0x800u
#define ENET_ECR_SVLANDBL_SHIFT                  11u
#define ENET_ECR_SVLANDBL_WIDTH                  1u
#define ENET_ECR_SVLANDBL(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ECR_SVLANDBL_SHIFT))&ENET_ECR_SVLANDBL_MASK)
/* MMFR Bit Fields */
#define ENET_MMFR_DATA_MASK                      0xFFFFu
#define ENET_MMFR_DATA_SHIFT                     0u
#define ENET_MMFR_DATA_WIDTH                     16u
#define ENET_MMFR_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_DATA_SHIFT))&ENET_MMFR_DATA_MASK)
#define ENET_MMFR_TA_MASK                        0x30000u
#define ENET_MMFR_TA_SHIFT                       16u
#define ENET_MMFR_TA_WIDTH                       2u
#define ENET_MMFR_TA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_TA_SHIFT))&ENET_MMFR_TA_MASK)
#define ENET_MMFR_RA_MASK                        0x7C0000u
#define ENET_MMFR_RA_SHIFT                       18u
#define ENET_MMFR_RA_WIDTH                       5u
#define ENET_MMFR_RA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_RA_SHIFT))&ENET_MMFR_RA_MASK)
#define ENET_MMFR_PA_MASK                        0xF800000u
#define ENET_MMFR_PA_SHIFT                       23u
#define ENET_MMFR_PA_WIDTH                       5u
#define ENET_MMFR_PA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_PA_SHIFT))&ENET_MMFR_PA_MASK)
#define ENET_MMFR_OP_MASK                        0x30000000u
#define ENET_MMFR_OP_SHIFT                       28u
#define ENET_MMFR_OP_WIDTH                       2u
#define ENET_MMFR_OP(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_OP_SHIFT))&ENET_MMFR_OP_MASK)
#define ENET_MMFR_ST_MASK                        0xC0000000u
#define ENET_MMFR_ST_SHIFT                       30u
#define ENET_MMFR_ST_WIDTH                       2u
#define ENET_MMFR_ST(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_ST_SHIFT))&ENET_MMFR_ST_MASK)
/* MSCR Bit Fields */
#define ENET_MSCR_MII_SPEED_MASK                 0x7Eu
#define ENET_MSCR_MII_SPEED_SHIFT                1u
#define ENET_MSCR_MII_SPEED_WIDTH                6u
#define ENET_MSCR_MII_SPEED(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_MII_SPEED_SHIFT))&ENET_MSCR_MII_SPEED_MASK)
#define ENET_MSCR_DIS_PRE_MASK                   0x80u
#define ENET_MSCR_DIS_PRE_SHIFT                  7u
#define ENET_MSCR_DIS_PRE_WIDTH                  1u
#define ENET_MSCR_DIS_PRE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_DIS_PRE_SHIFT))&ENET_MSCR_DIS_PRE_MASK)
#define ENET_MSCR_HOLDTIME_MASK                  0x700u
#define ENET_MSCR_HOLDTIME_SHIFT                 8u
#define ENET_MSCR_HOLDTIME_WIDTH                 3u
#define ENET_MSCR_HOLDTIME(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_HOLDTIME_SHIFT))&ENET_MSCR_HOLDTIME_MASK)
/* MIBC Bit Fields */
#define ENET_MIBC_MIB_CLEAR_MASK                 0x20000000u
#define ENET_MIBC_MIB_CLEAR_SHIFT                29u
#define ENET_MIBC_MIB_CLEAR_WIDTH                1u
#define ENET_MIBC_MIB_CLEAR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_CLEAR_SHIFT))&ENET_MIBC_MIB_CLEAR_MASK)
#define ENET_MIBC_MIB_IDLE_MASK                  0x40000000u
#define ENET_MIBC_MIB_IDLE_SHIFT                 30u
#define ENET_MIBC_MIB_IDLE_WIDTH                 1u
#define ENET_MIBC_MIB_IDLE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_IDLE_SHIFT))&ENET_MIBC_MIB_IDLE_MASK)
#define ENET_MIBC_MIB_DIS_MASK                   0x80000000u
#define ENET_MIBC_MIB_DIS_SHIFT                  31u
#define ENET_MIBC_MIB_DIS_WIDTH                  1u
#define ENET_MIBC_MIB_DIS(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_DIS_SHIFT))&ENET_MIBC_MIB_DIS_MASK)
/* RCR Bit Fields */
#define ENET_RCR_LOOP_MASK                       0x1u
#define ENET_RCR_LOOP_SHIFT                      0u
#define ENET_RCR_LOOP_WIDTH                      1u
#define ENET_RCR_LOOP(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_LOOP_SHIFT))&ENET_RCR_LOOP_MASK)
#define ENET_RCR_DRT_MASK                        0x2u
#define ENET_RCR_DRT_SHIFT                       1u
#define ENET_RCR_DRT_WIDTH                       1u
#define ENET_RCR_DRT(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_DRT_SHIFT))&ENET_RCR_DRT_MASK)
#define ENET_RCR_MII_MODE_MASK                   0x4u
#define ENET_RCR_MII_MODE_SHIFT                  2u
#define ENET_RCR_MII_MODE_WIDTH                  1u
#define ENET_RCR_MII_MODE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MII_MODE_SHIFT))&ENET_RCR_MII_MODE_MASK)
#define ENET_RCR_PROM_MASK                       0x8u
#define ENET_RCR_PROM_SHIFT                      3u
#define ENET_RCR_PROM_WIDTH                      1u
#define ENET_RCR_PROM(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PROM_SHIFT))&ENET_RCR_PROM_MASK)
#define ENET_RCR_BC_REJ_MASK                     0x10u
#define ENET_RCR_BC_REJ_SHIFT                    4u
#define ENET_RCR_BC_REJ_WIDTH                    1u
#define ENET_RCR_BC_REJ(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_BC_REJ_SHIFT))&ENET_RCR_BC_REJ_MASK)
#define ENET_RCR_FCE_MASK                        0x20u
#define ENET_RCR_FCE_SHIFT                       5u
#define ENET_RCR_FCE_WIDTH                       1u
#define ENET_RCR_FCE(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_FCE_SHIFT))&ENET_RCR_FCE_MASK)
#define ENET_RCR_RMII_MODE_MASK                  0x100u
#define ENET_RCR_RMII_MODE_SHIFT                 8u
#define ENET_RCR_RMII_MODE_WIDTH                 1u
#define ENET_RCR_RMII_MODE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_RCR_RMII_MODE_SHIFT))&ENET_RCR_RMII_MODE_MASK)
#define ENET_RCR_RMII_10T_MASK                   0x200u
#define ENET_RCR_RMII_10T_SHIFT                  9u
#define ENET_RCR_RMII_10T_WIDTH                  1u
#define ENET_RCR_RMII_10T(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCR_RMII_10T_SHIFT))&ENET_RCR_RMII_10T_MASK)
#define ENET_RCR_PADEN_MASK                      0x1000u
#define ENET_RCR_PADEN_SHIFT                     12u
#define ENET_RCR_PADEN_WIDTH                     1u
#define ENET_RCR_PADEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PADEN_SHIFT))&ENET_RCR_PADEN_MASK)
#define ENET_RCR_PAUFWD_MASK                     0x2000u
#define ENET_RCR_PAUFWD_SHIFT                    13u
#define ENET_RCR_PAUFWD_WIDTH                    1u
#define ENET_RCR_PAUFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PAUFWD_SHIFT))&ENET_RCR_PAUFWD_MASK)
#define ENET_RCR_CRCFWD_MASK                     0x4000u
#define ENET_RCR_CRCFWD_SHIFT                    14u
#define ENET_RCR_CRCFWD_WIDTH                    1u
#define ENET_RCR_CRCFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_CRCFWD_SHIFT))&ENET_RCR_CRCFWD_MASK)
#define ENET_RCR_CFEN_MASK                       0x8000u
#define ENET_RCR_CFEN_SHIFT                      15u
#define ENET_RCR_CFEN_WIDTH                      1u
#define ENET_RCR_CFEN(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_CFEN_SHIFT))&ENET_RCR_CFEN_MASK)
#define ENET_RCR_MAX_FL_MASK                     0x3FFF0000u
#define ENET_RCR_MAX_FL_SHIFT                    16u
#define ENET_RCR_MAX_FL_WIDTH                    14u
#define ENET_RCR_MAX_FL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MAX_FL_SHIFT))&ENET_RCR_MAX_FL_MASK)
#define ENET_RCR_NLC_MASK                        0x40000000u
#define ENET_RCR_NLC_SHIFT                       30u
#define ENET_RCR_NLC_WIDTH                       1u
#define ENET_RCR_NLC(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_NLC_SHIFT))&ENET_RCR_NLC_MASK)
#define ENET_RCR_GRS_MASK                        0x80000000u
#define ENET_RCR_GRS_SHIFT                       31u
#define ENET_RCR_GRS_WIDTH                       1u
#define ENET_RCR_GRS(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_GRS_SHIFT))&ENET_RCR_GRS_MASK)
/* TCR Bit Fields */
#define ENET_TCR_GTS_MASK                        0x1u
#define ENET_TCR_GTS_SHIFT                       0u
#define ENET_TCR_GTS_WIDTH                       1u
#define ENET_TCR_GTS(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_TCR_GTS_SHIFT))&ENET_TCR_GTS_MASK)
#define ENET_TCR_FDEN_MASK                       0x4u
#define ENET_TCR_FDEN_SHIFT                      2u
#define ENET_TCR_FDEN_WIDTH                      1u
#define ENET_TCR_FDEN(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCR_FDEN_SHIFT))&ENET_TCR_FDEN_MASK)
#define ENET_TCR_TFC_PAUSE_MASK                  0x8u
#define ENET_TCR_TFC_PAUSE_SHIFT                 3u
#define ENET_TCR_TFC_PAUSE_WIDTH                 1u
#define ENET_TCR_TFC_PAUSE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_TCR_TFC_PAUSE_SHIFT))&ENET_TCR_TFC_PAUSE_MASK)
#define ENET_TCR_RFC_PAUSE_MASK                  0x10u
#define ENET_TCR_RFC_PAUSE_SHIFT                 4u
#define ENET_TCR_RFC_PAUSE_WIDTH                 1u
#define ENET_TCR_RFC_PAUSE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_TCR_RFC_PAUSE_SHIFT))&ENET_TCR_RFC_PAUSE_MASK)
#define ENET_TCR_ADDSEL_MASK                     0xE0u
#define ENET_TCR_ADDSEL_SHIFT                    5u
#define ENET_TCR_ADDSEL_WIDTH                    3u
#define ENET_TCR_ADDSEL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDSEL_SHIFT))&ENET_TCR_ADDSEL_MASK)
#define ENET_TCR_ADDINS_MASK                     0x100u
#define ENET_TCR_ADDINS_SHIFT                    8u
#define ENET_TCR_ADDINS_WIDTH                    1u
#define ENET_TCR_ADDINS(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDINS_SHIFT))&ENET_TCR_ADDINS_MASK)
#define ENET_TCR_CRCFWD_MASK                     0x200u
#define ENET_TCR_CRCFWD_SHIFT                    9u
#define ENET_TCR_CRCFWD_WIDTH                    1u
#define ENET_TCR_CRCFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_CRCFWD_SHIFT))&ENET_TCR_CRCFWD_MASK)
/* PALR Bit Fields */
#define ENET_PALR_PADDR1_MASK                    0xFFFFFFFFu
#define ENET_PALR_PADDR1_SHIFT                   0u
#define ENET_PALR_PADDR1_WIDTH                   32u
#define ENET_PALR_PADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PALR_PADDR1_SHIFT))&ENET_PALR_PADDR1_MASK)
/* PAUR Bit Fields */
#define ENET_PAUR_TYPE_MASK                      0xFFFFu
#define ENET_PAUR_TYPE_SHIFT                     0u
#define ENET_PAUR_TYPE_WIDTH                     16u
#define ENET_PAUR_TYPE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_TYPE_SHIFT))&ENET_PAUR_TYPE_MASK)
#define ENET_PAUR_PADDR2_MASK                    0xFFFF0000u
#define ENET_PAUR_PADDR2_SHIFT                   16u
#define ENET_PAUR_PADDR2_WIDTH                   16u
#define ENET_PAUR_PADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_PADDR2_SHIFT))&ENET_PAUR_PADDR2_MASK)
/* OPD Bit Fields */
#define ENET_OPD_PAUSE_DUR_MASK                  0xFFFFu
#define ENET_OPD_PAUSE_DUR_SHIFT                 0u
#define ENET_OPD_PAUSE_DUR_WIDTH                 16u
#define ENET_OPD_PAUSE_DUR(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_OPD_PAUSE_DUR_SHIFT))&ENET_OPD_PAUSE_DUR_MASK)
#define ENET_OPD_OPCODE_MASK                     0xFFFF0000u
#define ENET_OPD_OPCODE_SHIFT                    16u
#define ENET_OPD_OPCODE_WIDTH                    16u
#define ENET_OPD_OPCODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_OPD_OPCODE_SHIFT))&ENET_OPD_OPCODE_MASK)
/* TXIC Bit Fields */
#define ENET_TXIC_ICTT_MASK                      0xFFFFu
#define ENET_TXIC_ICTT_SHIFT                     0u
#define ENET_TXIC_ICTT_WIDTH                     16u
#define ENET_TXIC_ICTT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TXIC_ICTT_SHIFT))&ENET_TXIC_ICTT_MASK)
#define ENET_TXIC_ICFT_MASK                      0xFF00000u
#define ENET_TXIC_ICFT_SHIFT                     20u
#define ENET_TXIC_ICFT_WIDTH                     8u
#define ENET_TXIC_ICFT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TXIC_ICFT_SHIFT))&ENET_TXIC_ICFT_MASK)
#define ENET_TXIC_ICCS_MASK                      0x40000000u
#define ENET_TXIC_ICCS_SHIFT                     30u
#define ENET_TXIC_ICCS_WIDTH                     1u
#define ENET_TXIC_ICCS(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TXIC_ICCS_SHIFT))&ENET_TXIC_ICCS_MASK)
#define ENET_TXIC_ICEN_MASK                      0x80000000u
#define ENET_TXIC_ICEN_SHIFT                     31u
#define ENET_TXIC_ICEN_WIDTH                     1u
#define ENET_TXIC_ICEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TXIC_ICEN_SHIFT))&ENET_TXIC_ICEN_MASK)
/* RXIC Bit Fields */
#define ENET_RXIC_ICTT_MASK                      0xFFFFu
#define ENET_RXIC_ICTT_SHIFT                     0u
#define ENET_RXIC_ICTT_WIDTH                     16u
#define ENET_RXIC_ICTT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RXIC_ICTT_SHIFT))&ENET_RXIC_ICTT_MASK)
#define ENET_RXIC_ICFT_MASK                      0xFF00000u
#define ENET_RXIC_ICFT_SHIFT                     20u
#define ENET_RXIC_ICFT_WIDTH                     8u
#define ENET_RXIC_ICFT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RXIC_ICFT_SHIFT))&ENET_RXIC_ICFT_MASK)
#define ENET_RXIC_ICCS_MASK                      0x40000000u
#define ENET_RXIC_ICCS_SHIFT                     30u
#define ENET_RXIC_ICCS_WIDTH                     1u
#define ENET_RXIC_ICCS(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RXIC_ICCS_SHIFT))&ENET_RXIC_ICCS_MASK)
#define ENET_RXIC_ICEN_MASK                      0x80000000u
#define ENET_RXIC_ICEN_SHIFT                     31u
#define ENET_RXIC_ICEN_WIDTH                     1u
#define ENET_RXIC_ICEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RXIC_ICEN_SHIFT))&ENET_RXIC_ICEN_MASK)
/* IAUR Bit Fields */
#define ENET_IAUR_IADDR1_MASK                    0xFFFFFFFFu
#define ENET_IAUR_IADDR1_SHIFT                   0u
#define ENET_IAUR_IADDR1_WIDTH                   32u
#define ENET_IAUR_IADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IAUR_IADDR1_SHIFT))&ENET_IAUR_IADDR1_MASK)
/* IALR Bit Fields */
#define ENET_IALR_IADDR2_MASK                    0xFFFFFFFFu
#define ENET_IALR_IADDR2_SHIFT                   0u
#define ENET_IALR_IADDR2_WIDTH                   32u
#define ENET_IALR_IADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IALR_IADDR2_SHIFT))&ENET_IALR_IADDR2_MASK)
/* GAUR Bit Fields */
#define ENET_GAUR_GADDR1_MASK                    0xFFFFFFFFu
#define ENET_GAUR_GADDR1_SHIFT                   0u
#define ENET_GAUR_GADDR1_WIDTH                   32u
#define ENET_GAUR_GADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GAUR_GADDR1_SHIFT))&ENET_GAUR_GADDR1_MASK)
/* GALR Bit Fields */
#define ENET_GALR_GADDR2_MASK                    0xFFFFFFFFu
#define ENET_GALR_GADDR2_SHIFT                   0u
#define ENET_GALR_GADDR2_WIDTH                   32u
#define ENET_GALR_GADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GALR_GADDR2_SHIFT))&ENET_GALR_GADDR2_MASK)
/* TFWR Bit Fields */
#define ENET_TFWR_TFWR_MASK                      0x3Fu
#define ENET_TFWR_TFWR_SHIFT                     0u
#define ENET_TFWR_TFWR_WIDTH                     6u
#define ENET_TFWR_TFWR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_TFWR_SHIFT))&ENET_TFWR_TFWR_MASK)
#define ENET_TFWR_STRFWD_MASK                    0x100u
#define ENET_TFWR_STRFWD_SHIFT                   8u
#define ENET_TFWR_STRFWD_WIDTH                   1u
#define ENET_TFWR_STRFWD(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_STRFWD_SHIFT))&ENET_TFWR_STRFWD_MASK)
/* RDSR1 Bit Fields */
#define ENET_RDSR1_R_DES_START_MASK              0xFFFFFFF8u
#define ENET_RDSR1_R_DES_START_SHIFT             3u
#define ENET_RDSR1_R_DES_START_WIDTH             29u
#define ENET_RDSR1_R_DES_START(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RDSR1_R_DES_START_SHIFT))&ENET_RDSR1_R_DES_START_MASK)
/* TDSR1 Bit Fields */
#define ENET_TDSR1_X_DES_START_MASK              0xFFFFFFF8u
#define ENET_TDSR1_X_DES_START_SHIFT             3u
#define ENET_TDSR1_X_DES_START_WIDTH             29u
#define ENET_TDSR1_X_DES_START(x)                (((uint32_t)(((uint32_t)(x))<<ENET_TDSR1_X_DES_START_SHIFT))&ENET_TDSR1_X_DES_START_MASK)
/* MRBR1 Bit Fields */
#define ENET_MRBR1_R_BUF_SIZE_MASK               0x3FF0u
#define ENET_MRBR1_R_BUF_SIZE_SHIFT              4u
#define ENET_MRBR1_R_BUF_SIZE_WIDTH              10u
#define ENET_MRBR1_R_BUF_SIZE(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_MRBR1_R_BUF_SIZE_SHIFT))&ENET_MRBR1_R_BUF_SIZE_MASK)
/* RDSR2 Bit Fields */
#define ENET_RDSR2_R_DES_START_MASK              0xFFFFFFF8u
#define ENET_RDSR2_R_DES_START_SHIFT             3u
#define ENET_RDSR2_R_DES_START_WIDTH             29u
#define ENET_RDSR2_R_DES_START(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RDSR2_R_DES_START_SHIFT))&ENET_RDSR2_R_DES_START_MASK)
/* TDSR2 Bit Fields */
#define ENET_TDSR2_X_DES_START_MASK              0xFFFFFFF8u
#define ENET_TDSR2_X_DES_START_SHIFT             3u
#define ENET_TDSR2_X_DES_START_WIDTH             29u
#define ENET_TDSR2_X_DES_START(x)                (((uint32_t)(((uint32_t)(x))<<ENET_TDSR2_X_DES_START_SHIFT))&ENET_TDSR2_X_DES_START_MASK)
/* MRBR2 Bit Fields */
#define ENET_MRBR2_R_BUF_SIZE_MASK               0x3FF0u
#define ENET_MRBR2_R_BUF_SIZE_SHIFT              4u
#define ENET_MRBR2_R_BUF_SIZE_WIDTH              10u
#define ENET_MRBR2_R_BUF_SIZE(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_MRBR2_R_BUF_SIZE_SHIFT))&ENET_MRBR2_R_BUF_SIZE_MASK)
/* RDSR Bit Fields */
#define ENET_RDSR_R_DES_START_MASK               0xFFFFFFF8u
#define ENET_RDSR_R_DES_START_SHIFT              3u
#define ENET_RDSR_R_DES_START_WIDTH              29u
#define ENET_RDSR_R_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RDSR_R_DES_START_SHIFT))&ENET_RDSR_R_DES_START_MASK)
/* TDSR Bit Fields */
#define ENET_TDSR_X_DES_START_MASK               0xFFFFFFF8u
#define ENET_TDSR_X_DES_START_SHIFT              3u
#define ENET_TDSR_X_DES_START_WIDTH              29u
#define ENET_TDSR_X_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_TDSR_X_DES_START_SHIFT))&ENET_TDSR_X_DES_START_MASK)
/* MRBR Bit Fields */
#define ENET_MRBR_R_BUF_SIZE_MASK                0x3FF0u
#define ENET_MRBR_R_BUF_SIZE_SHIFT               4u
#define ENET_MRBR_R_BUF_SIZE_WIDTH               10u
#define ENET_MRBR_R_BUF_SIZE(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_MRBR_R_BUF_SIZE_SHIFT))&ENET_MRBR_R_BUF_SIZE_MASK)
/* RSFL Bit Fields */
#define ENET_RSFL_RX_SECTION_FULL_MASK           0xFFu
#define ENET_RSFL_RX_SECTION_FULL_SHIFT          0u
#define ENET_RSFL_RX_SECTION_FULL_WIDTH          8u
#define ENET_RSFL_RX_SECTION_FULL(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RSFL_RX_SECTION_FULL_SHIFT))&ENET_RSFL_RX_SECTION_FULL_MASK)
/* RSEM Bit Fields */
#define ENET_RSEM_RX_SECTION_EMPTY_MASK          0xFFu
#define ENET_RSEM_RX_SECTION_EMPTY_SHIFT         0u
#define ENET_RSEM_RX_SECTION_EMPTY_WIDTH         8u
#define ENET_RSEM_RX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RSEM_RX_SECTION_EMPTY_SHIFT))&ENET_RSEM_RX_SECTION_EMPTY_MASK)
#define ENET_RSEM_STAT_SECTION_EMPTY_MASK        0x1F0000u
#define ENET_RSEM_STAT_SECTION_EMPTY_SHIFT       16u
#define ENET_RSEM_STAT_SECTION_EMPTY_WIDTH       5u
#define ENET_RSEM_STAT_SECTION_EMPTY(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RSEM_STAT_SECTION_EMPTY_SHIFT))&ENET_RSEM_STAT_SECTION_EMPTY_MASK)
/* RAEM Bit Fields */
#define ENET_RAEM_RX_ALMOST_EMPTY_MASK           0xFFu
#define ENET_RAEM_RX_ALMOST_EMPTY_SHIFT          0u
#define ENET_RAEM_RX_ALMOST_EMPTY_WIDTH          8u
#define ENET_RAEM_RX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RAEM_RX_ALMOST_EMPTY_SHIFT))&ENET_RAEM_RX_ALMOST_EMPTY_MASK)
/* RAFL Bit Fields */
#define ENET_RAFL_RX_ALMOST_FULL_MASK            0xFFu
#define ENET_RAFL_RX_ALMOST_FULL_SHIFT           0u
#define ENET_RAFL_RX_ALMOST_FULL_WIDTH           8u
#define ENET_RAFL_RX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RAFL_RX_ALMOST_FULL_SHIFT))&ENET_RAFL_RX_ALMOST_FULL_MASK)
/* TSEM Bit Fields */
#define ENET_TSEM_TX_SECTION_EMPTY_MASK          0xFFu
#define ENET_TSEM_TX_SECTION_EMPTY_SHIFT         0u
#define ENET_TSEM_TX_SECTION_EMPTY_WIDTH         8u
#define ENET_TSEM_TX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_TSEM_TX_SECTION_EMPTY_SHIFT))&ENET_TSEM_TX_SECTION_EMPTY_MASK)
/* TAEM Bit Fields */
#define ENET_TAEM_TX_ALMOST_EMPTY_MASK           0xFFu
#define ENET_TAEM_TX_ALMOST_EMPTY_SHIFT          0u
#define ENET_TAEM_TX_ALMOST_EMPTY_WIDTH          8u
#define ENET_TAEM_TX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_TAEM_TX_ALMOST_EMPTY_SHIFT))&ENET_TAEM_TX_ALMOST_EMPTY_MASK)
/* TAFL Bit Fields */
#define ENET_TAFL_TX_ALMOST_FULL_MASK            0xFFu
#define ENET_TAFL_TX_ALMOST_FULL_SHIFT           0u
#define ENET_TAFL_TX_ALMOST_FULL_WIDTH           8u
#define ENET_TAFL_TX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_TAFL_TX_ALMOST_FULL_SHIFT))&ENET_TAFL_TX_ALMOST_FULL_MASK)
/* TIPG Bit Fields */
#define ENET_TIPG_IPG_MASK                       0x1Fu
#define ENET_TIPG_IPG_SHIFT                      0u
#define ENET_TIPG_IPG_WIDTH                      5u
#define ENET_TIPG_IPG(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TIPG_IPG_SHIFT))&ENET_TIPG_IPG_MASK)
/* FTRL Bit Fields */
#define ENET_FTRL_TRUNC_FL_MASK                  0x3FFFu
#define ENET_FTRL_TRUNC_FL_SHIFT                 0u
#define ENET_FTRL_TRUNC_FL_WIDTH                 14u
#define ENET_FTRL_TRUNC_FL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_FTRL_TRUNC_FL_SHIFT))&ENET_FTRL_TRUNC_FL_MASK)
/* TACC Bit Fields */
#define ENET_TACC_SHIFT16_MASK                   0x1u
#define ENET_TACC_SHIFT16_SHIFT                  0u
#define ENET_TACC_SHIFT16_WIDTH                  1u
#define ENET_TACC_SHIFT16(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_TACC_SHIFT16_SHIFT))&ENET_TACC_SHIFT16_MASK)
#define ENET_TACC_IPCHK_MASK                     0x8u
#define ENET_TACC_IPCHK_SHIFT                    3u
#define ENET_TACC_IPCHK_WIDTH                    1u
#define ENET_TACC_IPCHK(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TACC_IPCHK_SHIFT))&ENET_TACC_IPCHK_MASK)
#define ENET_TACC_PROCHK_MASK                    0x10u
#define ENET_TACC_PROCHK_SHIFT                   4u
#define ENET_TACC_PROCHK_WIDTH                   1u
#define ENET_TACC_PROCHK(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TACC_PROCHK_SHIFT))&ENET_TACC_PROCHK_MASK)
/* RACC Bit Fields */
#define ENET_RACC_PADREM_MASK                    0x1u
#define ENET_RACC_PADREM_SHIFT                   0u
#define ENET_RACC_PADREM_WIDTH                   1u
#define ENET_RACC_PADREM(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_RACC_PADREM_SHIFT))&ENET_RACC_PADREM_MASK)
#define ENET_RACC_IPDIS_MASK                     0x2u
#define ENET_RACC_IPDIS_SHIFT                    1u
#define ENET_RACC_IPDIS_WIDTH                    1u
#define ENET_RACC_IPDIS(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RACC_IPDIS_SHIFT))&ENET_RACC_IPDIS_MASK)
#define ENET_RACC_PRODIS_MASK                    0x4u
#define ENET_RACC_PRODIS_SHIFT                   2u
#define ENET_RACC_PRODIS_WIDTH                   1u
#define ENET_RACC_PRODIS(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_RACC_PRODIS_SHIFT))&ENET_RACC_PRODIS_MASK)
#define ENET_RACC_LINEDIS_MASK                   0x40u
#define ENET_RACC_LINEDIS_SHIFT                  6u
#define ENET_RACC_LINEDIS_WIDTH                  1u
#define ENET_RACC_LINEDIS(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RACC_LINEDIS_SHIFT))&ENET_RACC_LINEDIS_MASK)
#define ENET_RACC_SHIFT16_MASK                   0x80u
#define ENET_RACC_SHIFT16_SHIFT                  7u
#define ENET_RACC_SHIFT16_WIDTH                  1u
#define ENET_RACC_SHIFT16(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RACC_SHIFT16_SHIFT))&ENET_RACC_SHIFT16_MASK)
/* RCMR Bit Fields */
#define ENET_RCMR_CMP0_MASK                      0x7u
#define ENET_RCMR_CMP0_SHIFT                     0u
#define ENET_RCMR_CMP0_WIDTH                     3u
#define ENET_RCMR_CMP0(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCMR_CMP0_SHIFT))&ENET_RCMR_CMP0_MASK)
#define ENET_RCMR_CMP1_MASK                      0x70u
#define ENET_RCMR_CMP1_SHIFT                     4u
#define ENET_RCMR_CMP1_WIDTH                     3u
#define ENET_RCMR_CMP1(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCMR_CMP1_SHIFT))&ENET_RCMR_CMP1_MASK)
#define ENET_RCMR_CMP2_MASK                      0x700u
#define ENET_RCMR_CMP2_SHIFT                     8u
#define ENET_RCMR_CMP2_WIDTH                     3u
#define ENET_RCMR_CMP2(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCMR_CMP2_SHIFT))&ENET_RCMR_CMP2_MASK)
#define ENET_RCMR_CMP3_MASK                      0x7000u
#define ENET_RCMR_CMP3_SHIFT                     12u
#define ENET_RCMR_CMP3_WIDTH                     3u
#define ENET_RCMR_CMP3(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCMR_CMP3_SHIFT))&ENET_RCMR_CMP3_MASK)
#define ENET_RCMR_MATCHEN_MASK                   0x10000u
#define ENET_RCMR_MATCHEN_SHIFT                  16u
#define ENET_RCMR_MATCHEN_WIDTH                  1u
#define ENET_RCMR_MATCHEN(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCMR_MATCHEN_SHIFT))&ENET_RCMR_MATCHEN_MASK)
/* DMACFG Bit Fields */
#define ENET_DMACFG_IDLE_SLOPE_MASK              0xFFFFu
#define ENET_DMACFG_IDLE_SLOPE_SHIFT             0u
#define ENET_DMACFG_IDLE_SLOPE_WIDTH             16u
#define ENET_DMACFG_IDLE_SLOPE(x)                (((uint32_t)(((uint32_t)(x))<<ENET_DMACFG_IDLE_SLOPE_SHIFT))&ENET_DMACFG_IDLE_SLOPE_MASK)
#define ENET_DMACFG_DMA_CLASS_EN_MASK            0x10000u
#define ENET_DMACFG_DMA_CLASS_EN_SHIFT           16u
#define ENET_DMACFG_DMA_CLASS_EN_WIDTH           1u
#define ENET_DMACFG_DMA_CLASS_EN(x)              (((uint32_t)(((uint32_t)(x))<<ENET_DMACFG_DMA_CLASS_EN_SHIFT))&ENET_DMACFG_DMA_CLASS_EN_MASK)
#define ENET_DMACFG_CALC_NOIPG_MASK              0x20000u
#define ENET_DMACFG_CALC_NOIPG_SHIFT             17u
#define ENET_DMACFG_CALC_NOIPG_WIDTH             1u
#define ENET_DMACFG_CALC_NOIPG(x)                (((uint32_t)(((uint32_t)(x))<<ENET_DMACFG_CALC_NOIPG_SHIFT))&ENET_DMACFG_CALC_NOIPG_MASK)
/* RDAR1 Bit Fields */
#define ENET_RDAR1_RDAR_MASK                     0x1000000u
#define ENET_RDAR1_RDAR_SHIFT                    24u
#define ENET_RDAR1_RDAR_WIDTH                    1u
#define ENET_RDAR1_RDAR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RDAR1_RDAR_SHIFT))&ENET_RDAR1_RDAR_MASK)
/* TDAR1 Bit Fields */
#define ENET_TDAR1_TDAR_MASK                     0x1000000u
#define ENET_TDAR1_TDAR_SHIFT                    24u
#define ENET_TDAR1_TDAR_WIDTH                    1u
#define ENET_TDAR1_TDAR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TDAR1_TDAR_SHIFT))&ENET_TDAR1_TDAR_MASK)
/* RDAR2 Bit Fields */
#define ENET_RDAR2_RDAR_MASK                     0x1000000u
#define ENET_RDAR2_RDAR_SHIFT                    24u
#define ENET_RDAR2_RDAR_WIDTH                    1u
#define ENET_RDAR2_RDAR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RDAR2_RDAR_SHIFT))&ENET_RDAR2_RDAR_MASK)
/* TDAR2 Bit Fields */
#define ENET_TDAR2_TDAR_MASK                     0x1000000u
#define ENET_TDAR2_TDAR_SHIFT                    24u
#define ENET_TDAR2_TDAR_WIDTH                    1u
#define ENET_TDAR2_TDAR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TDAR2_TDAR_SHIFT))&ENET_TDAR2_TDAR_MASK)
/* QOS Bit Fields */
#define ENET_QOS_TX_SCHEME_MASK                  0x7u
#define ENET_QOS_TX_SCHEME_SHIFT                 0u
#define ENET_QOS_TX_SCHEME_WIDTH                 3u
#define ENET_QOS_TX_SCHEME(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_QOS_TX_SCHEME_SHIFT))&ENET_QOS_TX_SCHEME_MASK)
#define ENET_QOS_RX_FLUSH0_MASK                  0x8u
#define ENET_QOS_RX_FLUSH0_SHIFT                 3u
#define ENET_QOS_RX_FLUSH0_WIDTH                 1u
#define ENET_QOS_RX_FLUSH0(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_QOS_RX_FLUSH0_SHIFT))&ENET_QOS_RX_FLUSH0_MASK)
#define ENET_QOS_RX_FLUSH1_MASK                  0x10u
#define ENET_QOS_RX_FLUSH1_SHIFT                 4u
#define ENET_QOS_RX_FLUSH1_WIDTH                 1u
#define ENET_QOS_RX_FLUSH1(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_QOS_RX_FLUSH1_SHIFT))&ENET_QOS_RX_FLUSH1_MASK)
#define ENET_QOS_RX_FLUSH2_MASK                  0x20u
#define ENET_QOS_RX_FLUSH2_SHIFT                 5u
#define ENET_QOS_RX_FLUSH2_WIDTH                 1u
#define ENET_QOS_RX_FLUSH2(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_QOS_RX_FLUSH2_SHIFT))&ENET_QOS_RX_FLUSH2_MASK)
/* RMON_T_PACKETS Bit Fields */
#define ENET_RMON_T_PACKETS_TXPKTS_MASK          0xFFFFu
#define ENET_RMON_T_PACKETS_TXPKTS_SHIFT         0u
#define ENET_RMON_T_PACKETS_TXPKTS_WIDTH         16u
#define ENET_RMON_T_PACKETS_TXPKTS(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_PACKETS_TXPKTS_SHIFT))&ENET_RMON_T_PACKETS_TXPKTS_MASK)
/* RMON_T_BC_PKT Bit Fields */
#define ENET_RMON_T_BC_PKT_TXPKTS_MASK           0xFFFFu
#define ENET_RMON_T_BC_PKT_TXPKTS_SHIFT          0u
#define ENET_RMON_T_BC_PKT_TXPKTS_WIDTH          16u
#define ENET_RMON_T_BC_PKT_TXPKTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_BC_PKT_TXPKTS_SHIFT))&ENET_RMON_T_BC_PKT_TXPKTS_MASK)
/* RMON_T_MC_PKT Bit Fields */
#define ENET_RMON_T_MC_PKT_TXPKTS_MASK           0xFFFFu
#define ENET_RMON_T_MC_PKT_TXPKTS_SHIFT          0u
#define ENET_RMON_T_MC_PKT_TXPKTS_WIDTH          16u
#define ENET_RMON_T_MC_PKT_TXPKTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_MC_PKT_TXPKTS_SHIFT))&ENET_RMON_T_MC_PKT_TXPKTS_MASK)
/* RMON_T_CRC_ALIGN Bit Fields */
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_SHIFT       0u
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_WIDTH       16u
#define ENET_RMON_T_CRC_ALIGN_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_CRC_ALIGN_TXPKTS_SHIFT))&ENET_RMON_T_CRC_ALIGN_TXPKTS_MASK)
/* RMON_T_UNDERSIZE Bit Fields */
#define ENET_RMON_T_UNDERSIZE_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_UNDERSIZE_TXPKTS_SHIFT       0u
#define ENET_RMON_T_UNDERSIZE_TXPKTS_WIDTH       16u
#define ENET_RMON_T_UNDERSIZE_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_UNDERSIZE_TXPKTS_SHIFT))&ENET_RMON_T_UNDERSIZE_TXPKTS_MASK)
/* RMON_T_OVERSIZE Bit Fields */
#define ENET_RMON_T_OVERSIZE_TXPKTS_MASK         0xFFFFu
#define ENET_RMON_T_OVERSIZE_TXPKTS_SHIFT        0u
#define ENET_RMON_T_OVERSIZE_TXPKTS_WIDTH        16u
#define ENET_RMON_T_OVERSIZE_TXPKTS(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_OVERSIZE_TXPKTS_SHIFT))&ENET_RMON_T_OVERSIZE_TXPKTS_MASK)
/* RMON_T_FRAG Bit Fields */
#define ENET_RMON_T_FRAG_TXPKTS_MASK             0xFFFFu
#define ENET_RMON_T_FRAG_TXPKTS_SHIFT            0u
#define ENET_RMON_T_FRAG_TXPKTS_WIDTH            16u
#define ENET_RMON_T_FRAG_TXPKTS(x)               (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_FRAG_TXPKTS_SHIFT))&ENET_RMON_T_FRAG_TXPKTS_MASK)
/* RMON_T_JAB Bit Fields */
#define ENET_RMON_T_JAB_TXPKTS_MASK              0xFFFFu
#define ENET_RMON_T_JAB_TXPKTS_SHIFT             0u
#define ENET_RMON_T_JAB_TXPKTS_WIDTH             16u
#define ENET_RMON_T_JAB_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_JAB_TXPKTS_SHIFT))&ENET_RMON_T_JAB_TXPKTS_MASK)
/* RMON_T_COL Bit Fields */
#define ENET_RMON_T_COL_TXPKTS_MASK              0xFFFFu
#define ENET_RMON_T_COL_TXPKTS_SHIFT             0u
#define ENET_RMON_T_COL_TXPKTS_WIDTH             16u
#define ENET_RMON_T_COL_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_COL_TXPKTS_SHIFT))&ENET_RMON_T_COL_TXPKTS_MASK)
/* RMON_T_P64 Bit Fields */
#define ENET_RMON_T_P64_TXPKTS_MASK              0xFFFFu
#define ENET_RMON_T_P64_TXPKTS_SHIFT             0u
#define ENET_RMON_T_P64_TXPKTS_WIDTH             16u
#define ENET_RMON_T_P64_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P64_TXPKTS_SHIFT))&ENET_RMON_T_P64_TXPKTS_MASK)
/* RMON_T_P65TO127 Bit Fields */
#define ENET_RMON_T_P65TO127_TXPKTS_MASK         0xFFFFu
#define ENET_RMON_T_P65TO127_TXPKTS_SHIFT        0u
#define ENET_RMON_T_P65TO127_TXPKTS_WIDTH        16u
#define ENET_RMON_T_P65TO127_TXPKTS(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P65TO127_TXPKTS_SHIFT))&ENET_RMON_T_P65TO127_TXPKTS_MASK)
/* RMON_T_P128TO255 Bit Fields */
#define ENET_RMON_T_P128TO255_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_P128TO255_TXPKTS_SHIFT       0u
#define ENET_RMON_T_P128TO255_TXPKTS_WIDTH       16u
#define ENET_RMON_T_P128TO255_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P128TO255_TXPKTS_SHIFT))&ENET_RMON_T_P128TO255_TXPKTS_MASK)
/* RMON_T_P256TO511 Bit Fields */
#define ENET_RMON_T_P256TO511_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_P256TO511_TXPKTS_SHIFT       0u
#define ENET_RMON_T_P256TO511_TXPKTS_WIDTH       16u
#define ENET_RMON_T_P256TO511_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P256TO511_TXPKTS_SHIFT))&ENET_RMON_T_P256TO511_TXPKTS_MASK)
/* RMON_T_P512TO1023 Bit Fields */
#define ENET_RMON_T_P512TO1023_TXPKTS_MASK       0xFFFFu
#define ENET_RMON_T_P512TO1023_TXPKTS_SHIFT      0u
#define ENET_RMON_T_P512TO1023_TXPKTS_WIDTH      16u
#define ENET_RMON_T_P512TO1023_TXPKTS(x)         (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P512TO1023_TXPKTS_SHIFT))&ENET_RMON_T_P512TO1023_TXPKTS_MASK)
/* RMON_T_P1024TO2047 Bit Fields */
#define ENET_RMON_T_P1024TO2047_TXPKTS_MASK      0xFFFFu
#define ENET_RMON_T_P1024TO2047_TXPKTS_SHIFT     0u
#define ENET_RMON_T_P1024TO2047_TXPKTS_WIDTH     16u
#define ENET_RMON_T_P1024TO2047_TXPKTS(x)        (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P1024TO2047_TXPKTS_SHIFT))&ENET_RMON_T_P1024TO2047_TXPKTS_MASK)
/* RMON_T_P_GTE2048 Bit Fields */
#define ENET_RMON_T_P_GTE2048_TXPKTS_MASK        0xFFFFu
#define ENET_RMON_T_P_GTE2048_TXPKTS_SHIFT       0u
#define ENET_RMON_T_P_GTE2048_TXPKTS_WIDTH       16u
#define ENET_RMON_T_P_GTE2048_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P_GTE2048_TXPKTS_SHIFT))&ENET_RMON_T_P_GTE2048_TXPKTS_MASK)
/* RMON_T_OCTETS Bit Fields */
#define ENET_RMON_T_OCTETS_TXOCTS_MASK           0xFFFFFFFFu
#define ENET_RMON_T_OCTETS_TXOCTS_SHIFT          0u
#define ENET_RMON_T_OCTETS_TXOCTS_WIDTH          32u
#define ENET_RMON_T_OCTETS_TXOCTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_OCTETS_TXOCTS_SHIFT))&ENET_RMON_T_OCTETS_TXOCTS_MASK)
/* IEEE_T_FRAME_OK Bit Fields */
#define ENET_IEEE_T_FRAME_OK_COUNT_MASK          0xFFFFu
#define ENET_IEEE_T_FRAME_OK_COUNT_SHIFT         0u
#define ENET_IEEE_T_FRAME_OK_COUNT_WIDTH         16u
#define ENET_IEEE_T_FRAME_OK_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_FRAME_OK_COUNT_SHIFT))&ENET_IEEE_T_FRAME_OK_COUNT_MASK)
/* IEEE_T_1COL Bit Fields */
#define ENET_IEEE_T_1COL_COUNT_MASK              0xFFFFu
#define ENET_IEEE_T_1COL_COUNT_SHIFT             0u
#define ENET_IEEE_T_1COL_COUNT_WIDTH             16u
#define ENET_IEEE_T_1COL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_1COL_COUNT_SHIFT))&ENET_IEEE_T_1COL_COUNT_MASK)
/* IEEE_T_MCOL Bit Fields */
#define ENET_IEEE_T_MCOL_COUNT_MASK              0xFFFFu
#define ENET_IEEE_T_MCOL_COUNT_SHIFT             0u
#define ENET_IEEE_T_MCOL_COUNT_WIDTH             16u
#define ENET_IEEE_T_MCOL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_MCOL_COUNT_SHIFT))&ENET_IEEE_T_MCOL_COUNT_MASK)
/* IEEE_T_DEF Bit Fields */
#define ENET_IEEE_T_DEF_COUNT_MASK               0xFFFFu
#define ENET_IEEE_T_DEF_COUNT_SHIFT              0u
#define ENET_IEEE_T_DEF_COUNT_WIDTH              16u
#define ENET_IEEE_T_DEF_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_DEF_COUNT_SHIFT))&ENET_IEEE_T_DEF_COUNT_MASK)
/* IEEE_T_LCOL Bit Fields */
#define ENET_IEEE_T_LCOL_COUNT_MASK              0xFFFFu
#define ENET_IEEE_T_LCOL_COUNT_SHIFT             0u
#define ENET_IEEE_T_LCOL_COUNT_WIDTH             16u
#define ENET_IEEE_T_LCOL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_LCOL_COUNT_SHIFT))&ENET_IEEE_T_LCOL_COUNT_MASK)
/* IEEE_T_EXCOL Bit Fields */
#define ENET_IEEE_T_EXCOL_COUNT_MASK             0xFFFFu
#define ENET_IEEE_T_EXCOL_COUNT_SHIFT            0u
#define ENET_IEEE_T_EXCOL_COUNT_WIDTH            16u
#define ENET_IEEE_T_EXCOL_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_EXCOL_COUNT_SHIFT))&ENET_IEEE_T_EXCOL_COUNT_MASK)
/* IEEE_T_MACERR Bit Fields */
#define ENET_IEEE_T_MACERR_COUNT_MASK            0xFFFFu
#define ENET_IEEE_T_MACERR_COUNT_SHIFT           0u
#define ENET_IEEE_T_MACERR_COUNT_WIDTH           16u
#define ENET_IEEE_T_MACERR_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_MACERR_COUNT_SHIFT))&ENET_IEEE_T_MACERR_COUNT_MASK)
/* IEEE_T_CSERR Bit Fields */
#define ENET_IEEE_T_CSERR_COUNT_MASK             0xFFFFu
#define ENET_IEEE_T_CSERR_COUNT_SHIFT            0u
#define ENET_IEEE_T_CSERR_COUNT_WIDTH            16u
#define ENET_IEEE_T_CSERR_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_CSERR_COUNT_SHIFT))&ENET_IEEE_T_CSERR_COUNT_MASK)
/* IEEE_T_SQE Bit Fields */
#define ENET_IEEE_T_SQE_COUNT_MASK               0xFFFFu
#define ENET_IEEE_T_SQE_COUNT_SHIFT              0u
#define ENET_IEEE_T_SQE_COUNT_WIDTH              16u
#define ENET_IEEE_T_SQE_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_SQE_COUNT_SHIFT))&ENET_IEEE_T_SQE_COUNT_MASK)
/* IEEE_T_FDXFC Bit Fields */
#define ENET_IEEE_T_FDXFC_COUNT_MASK             0xFFFFu
#define ENET_IEEE_T_FDXFC_COUNT_SHIFT            0u
#define ENET_IEEE_T_FDXFC_COUNT_WIDTH            16u
#define ENET_IEEE_T_FDXFC_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_FDXFC_COUNT_SHIFT))&ENET_IEEE_T_FDXFC_COUNT_MASK)
/* IEEE_T_OCTETS_OK Bit Fields */
#define ENET_IEEE_T_OCTETS_OK_COUNT_MASK         0xFFFFFFFFu
#define ENET_IEEE_T_OCTETS_OK_COUNT_SHIFT        0u
#define ENET_IEEE_T_OCTETS_OK_COUNT_WIDTH        32u
#define ENET_IEEE_T_OCTETS_OK_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_OCTETS_OK_COUNT_SHIFT))&ENET_IEEE_T_OCTETS_OK_COUNT_MASK)
/* RMON_R_PACKETS Bit Fields */
#define ENET_RMON_R_PACKETS_COUNT_MASK           0xFFFFu
#define ENET_RMON_R_PACKETS_COUNT_SHIFT          0u
#define ENET_RMON_R_PACKETS_COUNT_WIDTH          16u
#define ENET_RMON_R_PACKETS_COUNT(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_PACKETS_COUNT_SHIFT))&ENET_RMON_R_PACKETS_COUNT_MASK)
/* RMON_R_BC_PKT Bit Fields */
#define ENET_RMON_R_BC_PKT_COUNT_MASK            0xFFFFu
#define ENET_RMON_R_BC_PKT_COUNT_SHIFT           0u
#define ENET_RMON_R_BC_PKT_COUNT_WIDTH           16u
#define ENET_RMON_R_BC_PKT_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_BC_PKT_COUNT_SHIFT))&ENET_RMON_R_BC_PKT_COUNT_MASK)
/* RMON_R_MC_PKT Bit Fields */
#define ENET_RMON_R_MC_PKT_COUNT_MASK            0xFFFFu
#define ENET_RMON_R_MC_PKT_COUNT_SHIFT           0u
#define ENET_RMON_R_MC_PKT_COUNT_WIDTH           16u
#define ENET_RMON_R_MC_PKT_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_MC_PKT_COUNT_SHIFT))&ENET_RMON_R_MC_PKT_COUNT_MASK)
/* RMON_R_CRC_ALIGN Bit Fields */
#define ENET_RMON_R_CRC_ALIGN_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_CRC_ALIGN_COUNT_SHIFT        0u
#define ENET_RMON_R_CRC_ALIGN_COUNT_WIDTH        16u
#define ENET_RMON_R_CRC_ALIGN_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_CRC_ALIGN_COUNT_SHIFT))&ENET_RMON_R_CRC_ALIGN_COUNT_MASK)
/* RMON_R_UNDERSIZE Bit Fields */
#define ENET_RMON_R_UNDERSIZE_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_UNDERSIZE_COUNT_SHIFT        0u
#define ENET_RMON_R_UNDERSIZE_COUNT_WIDTH        16u
#define ENET_RMON_R_UNDERSIZE_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_UNDERSIZE_COUNT_SHIFT))&ENET_RMON_R_UNDERSIZE_COUNT_MASK)
/* RMON_R_OVERSIZE Bit Fields */
#define ENET_RMON_R_OVERSIZE_COUNT_MASK          0xFFFFu
#define ENET_RMON_R_OVERSIZE_COUNT_SHIFT         0u
#define ENET_RMON_R_OVERSIZE_COUNT_WIDTH         16u
#define ENET_RMON_R_OVERSIZE_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_OVERSIZE_COUNT_SHIFT))&ENET_RMON_R_OVERSIZE_COUNT_MASK)
/* RMON_R_FRAG Bit Fields */
#define ENET_RMON_R_FRAG_COUNT_MASK              0xFFFFu
#define ENET_RMON_R_FRAG_COUNT_SHIFT             0u
#define ENET_RMON_R_FRAG_COUNT_WIDTH             16u
#define ENET_RMON_R_FRAG_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_FRAG_COUNT_SHIFT))&ENET_RMON_R_FRAG_COUNT_MASK)
/* RMON_R_JAB Bit Fields */
#define ENET_RMON_R_JAB_COUNT_MASK               0xFFFFu
#define ENET_RMON_R_JAB_COUNT_SHIFT              0u
#define ENET_RMON_R_JAB_COUNT_WIDTH              16u
#define ENET_RMON_R_JAB_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_JAB_COUNT_SHIFT))&ENET_RMON_R_JAB_COUNT_MASK)
/* RMON_R_P64 Bit Fields */
#define ENET_RMON_R_P64_COUNT_MASK               0xFFFFu
#define ENET_RMON_R_P64_COUNT_SHIFT              0u
#define ENET_RMON_R_P64_COUNT_WIDTH              16u
#define ENET_RMON_R_P64_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P64_COUNT_SHIFT))&ENET_RMON_R_P64_COUNT_MASK)
/* RMON_R_P65TO127 Bit Fields */
#define ENET_RMON_R_P65TO127_COUNT_MASK          0xFFFFu
#define ENET_RMON_R_P65TO127_COUNT_SHIFT         0u
#define ENET_RMON_R_P65TO127_COUNT_WIDTH         16u
#define ENET_RMON_R_P65TO127_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P65TO127_COUNT_SHIFT))&ENET_RMON_R_P65TO127_COUNT_MASK)
/* RMON_R_P128TO255 Bit Fields */
#define ENET_RMON_R_P128TO255_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_P128TO255_COUNT_SHIFT        0u
#define ENET_RMON_R_P128TO255_COUNT_WIDTH        16u
#define ENET_RMON_R_P128TO255_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P128TO255_COUNT_SHIFT))&ENET_RMON_R_P128TO255_COUNT_MASK)
/* RMON_R_P256TO511 Bit Fields */
#define ENET_RMON_R_P256TO511_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_P256TO511_COUNT_SHIFT        0u
#define ENET_RMON_R_P256TO511_COUNT_WIDTH        16u
#define ENET_RMON_R_P256TO511_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P256TO511_COUNT_SHIFT))&ENET_RMON_R_P256TO511_COUNT_MASK)
/* RMON_R_P512TO1023 Bit Fields */
#define ENET_RMON_R_P512TO1023_COUNT_MASK        0xFFFFu
#define ENET_RMON_R_P512TO1023_COUNT_SHIFT       0u
#define ENET_RMON_R_P512TO1023_COUNT_WIDTH       16u
#define ENET_RMON_R_P512TO1023_COUNT(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P512TO1023_COUNT_SHIFT))&ENET_RMON_R_P512TO1023_COUNT_MASK)
/* RMON_R_P1024TO2047 Bit Fields */
#define ENET_RMON_R_P1024TO2047_COUNT_MASK       0xFFFFu
#define ENET_RMON_R_P1024TO2047_COUNT_SHIFT      0u
#define ENET_RMON_R_P1024TO2047_COUNT_WIDTH      16u
#define ENET_RMON_R_P1024TO2047_COUNT(x)         (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P1024TO2047_COUNT_SHIFT))&ENET_RMON_R_P1024TO2047_COUNT_MASK)
/* RMON_R_P_GTE2048 Bit Fields */
#define ENET_RMON_R_P_GTE2048_COUNT_MASK         0xFFFFu
#define ENET_RMON_R_P_GTE2048_COUNT_SHIFT        0u
#define ENET_RMON_R_P_GTE2048_COUNT_WIDTH        16u
#define ENET_RMON_R_P_GTE2048_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P_GTE2048_COUNT_SHIFT))&ENET_RMON_R_P_GTE2048_COUNT_MASK)
/* RMON_R_OCTETS Bit Fields */
#define ENET_RMON_R_OCTETS_COUNT_MASK            0xFFFFFFFFu
#define ENET_RMON_R_OCTETS_COUNT_SHIFT           0u
#define ENET_RMON_R_OCTETS_COUNT_WIDTH           32u
#define ENET_RMON_R_OCTETS_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_OCTETS_COUNT_SHIFT))&ENET_RMON_R_OCTETS_COUNT_MASK)
/* IEEE_R_DROP Bit Fields */
#define ENET_IEEE_R_DROP_COUNT_MASK              0xFFFFu
#define ENET_IEEE_R_DROP_COUNT_SHIFT             0u
#define ENET_IEEE_R_DROP_COUNT_WIDTH             16u
#define ENET_IEEE_R_DROP_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_DROP_COUNT_SHIFT))&ENET_IEEE_R_DROP_COUNT_MASK)
/* IEEE_R_FRAME_OK Bit Fields */
#define ENET_IEEE_R_FRAME_OK_COUNT_MASK          0xFFFFu
#define ENET_IEEE_R_FRAME_OK_COUNT_SHIFT         0u
#define ENET_IEEE_R_FRAME_OK_COUNT_WIDTH         16u
#define ENET_IEEE_R_FRAME_OK_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_FRAME_OK_COUNT_SHIFT))&ENET_IEEE_R_FRAME_OK_COUNT_MASK)
/* IEEE_R_CRC Bit Fields */
#define ENET_IEEE_R_CRC_COUNT_MASK               0xFFFFu
#define ENET_IEEE_R_CRC_COUNT_SHIFT              0u
#define ENET_IEEE_R_CRC_COUNT_WIDTH              16u
#define ENET_IEEE_R_CRC_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_CRC_COUNT_SHIFT))&ENET_IEEE_R_CRC_COUNT_MASK)
/* IEEE_R_ALIGN Bit Fields */
#define ENET_IEEE_R_ALIGN_COUNT_MASK             0xFFFFu
#define ENET_IEEE_R_ALIGN_COUNT_SHIFT            0u
#define ENET_IEEE_R_ALIGN_COUNT_WIDTH            16u
#define ENET_IEEE_R_ALIGN_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_ALIGN_COUNT_SHIFT))&ENET_IEEE_R_ALIGN_COUNT_MASK)
/* IEEE_R_MACERR Bit Fields */
#define ENET_IEEE_R_MACERR_COUNT_MASK            0xFFFFu
#define ENET_IEEE_R_MACERR_COUNT_SHIFT           0u
#define ENET_IEEE_R_MACERR_COUNT_WIDTH           16u
#define ENET_IEEE_R_MACERR_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_MACERR_COUNT_SHIFT))&ENET_IEEE_R_MACERR_COUNT_MASK)
/* IEEE_R_FDXFC Bit Fields */
#define ENET_IEEE_R_FDXFC_COUNT_MASK             0xFFFFu
#define ENET_IEEE_R_FDXFC_COUNT_SHIFT            0u
#define ENET_IEEE_R_FDXFC_COUNT_WIDTH            16u
#define ENET_IEEE_R_FDXFC_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_FDXFC_COUNT_SHIFT))&ENET_IEEE_R_FDXFC_COUNT_MASK)
/* IEEE_R_OCTETS_OK Bit Fields */
#define ENET_IEEE_R_OCTETS_OK_COUNT_MASK         0xFFFFFFFFu
#define ENET_IEEE_R_OCTETS_OK_COUNT_SHIFT        0u
#define ENET_IEEE_R_OCTETS_OK_COUNT_WIDTH        32u
#define ENET_IEEE_R_OCTETS_OK_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_OCTETS_OK_COUNT_SHIFT))&ENET_IEEE_R_OCTETS_OK_COUNT_MASK)
/* ATCR Bit Fields */
#define ENET_ATCR_EN_MASK                        0x1u
#define ENET_ATCR_EN_SHIFT                       0u
#define ENET_ATCR_EN_WIDTH                       1u
#define ENET_ATCR_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_EN_SHIFT))&ENET_ATCR_EN_MASK)
#define ENET_ATCR_OFFEN_MASK                     0x4u
#define ENET_ATCR_OFFEN_SHIFT                    2u
#define ENET_ATCR_OFFEN_WIDTH                    1u
#define ENET_ATCR_OFFEN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_OFFEN_SHIFT))&ENET_ATCR_OFFEN_MASK)
#define ENET_ATCR_OFFRST_MASK                    0x8u
#define ENET_ATCR_OFFRST_SHIFT                   3u
#define ENET_ATCR_OFFRST_WIDTH                   1u
#define ENET_ATCR_OFFRST(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_OFFRST_SHIFT))&ENET_ATCR_OFFRST_MASK)
#define ENET_ATCR_PEREN_MASK                     0x10u
#define ENET_ATCR_PEREN_SHIFT                    4u
#define ENET_ATCR_PEREN_WIDTH                    1u
#define ENET_ATCR_PEREN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_PEREN_SHIFT))&ENET_ATCR_PEREN_MASK)
#define ENET_ATCR_PINPER_MASK                    0x80u
#define ENET_ATCR_PINPER_SHIFT                   7u
#define ENET_ATCR_PINPER_WIDTH                   1u
#define ENET_ATCR_PINPER(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_PINPER_SHIFT))&ENET_ATCR_PINPER_MASK)
#define ENET_ATCR_RESTART_MASK                   0x200u
#define ENET_ATCR_RESTART_SHIFT                  9u
#define ENET_ATCR_RESTART_WIDTH                  1u
#define ENET_ATCR_RESTART(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_RESTART_SHIFT))&ENET_ATCR_RESTART_MASK)
#define ENET_ATCR_CAPTURE_MASK                   0x800u
#define ENET_ATCR_CAPTURE_SHIFT                  11u
#define ENET_ATCR_CAPTURE_WIDTH                  1u
#define ENET_ATCR_CAPTURE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_CAPTURE_SHIFT))&ENET_ATCR_CAPTURE_MASK)
#define ENET_ATCR_SLAVE_MASK                     0x2000u
#define ENET_ATCR_SLAVE_SHIFT                    13u
#define ENET_ATCR_SLAVE_WIDTH                    1u
#define ENET_ATCR_SLAVE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_SLAVE_SHIFT))&ENET_ATCR_SLAVE_MASK)
/* ATVR Bit Fields */
#define ENET_ATVR_ATIME_MASK                     0xFFFFFFFFu
#define ENET_ATVR_ATIME_SHIFT                    0u
#define ENET_ATVR_ATIME_WIDTH                    32u
#define ENET_ATVR_ATIME(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATVR_ATIME_SHIFT))&ENET_ATVR_ATIME_MASK)
/* ATOFF Bit Fields */
#define ENET_ATOFF_OFFSET_MASK                   0xFFFFFFFFu
#define ENET_ATOFF_OFFSET_SHIFT                  0u
#define ENET_ATOFF_OFFSET_WIDTH                  32u
#define ENET_ATOFF_OFFSET(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATOFF_OFFSET_SHIFT))&ENET_ATOFF_OFFSET_MASK)
/* ATPER Bit Fields */
#define ENET_ATPER_PERIOD_MASK                   0xFFFFFFFFu
#define ENET_ATPER_PERIOD_SHIFT                  0u
#define ENET_ATPER_PERIOD_WIDTH                  32u
#define ENET_ATPER_PERIOD(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATPER_PERIOD_SHIFT))&ENET_ATPER_PERIOD_MASK)
/* ATCOR Bit Fields */
#define ENET_ATCOR_COR_MASK                      0x7FFFFFFFu
#define ENET_ATCOR_COR_SHIFT                     0u
#define ENET_ATCOR_COR_WIDTH                     31u
#define ENET_ATCOR_COR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATCOR_COR_SHIFT))&ENET_ATCOR_COR_MASK)
/* ATINC Bit Fields */
#define ENET_ATINC_INC_MASK                      0x7Fu
#define ENET_ATINC_INC_SHIFT                     0u
#define ENET_ATINC_INC_WIDTH                     7u
#define ENET_ATINC_INC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_SHIFT))&ENET_ATINC_INC_MASK)
#define ENET_ATINC_INC_CORR_MASK                 0x7F00u
#define ENET_ATINC_INC_CORR_SHIFT                8u
#define ENET_ATINC_INC_CORR_WIDTH                7u
#define ENET_ATINC_INC_CORR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_CORR_SHIFT))&ENET_ATINC_INC_CORR_MASK)
/* ATSTMP Bit Fields */
#define ENET_ATSTMP_TIMESTAMP_MASK               0xFFFFFFFFu
#define ENET_ATSTMP_TIMESTAMP_SHIFT              0u
#define ENET_ATSTMP_TIMESTAMP_WIDTH              32u
#define ENET_ATSTMP_TIMESTAMP(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_ATSTMP_TIMESTAMP_SHIFT))&ENET_ATSTMP_TIMESTAMP_MASK)
/* MDATA Bit Fields */
#define ENET_MDATA_MATCHDATA_MASK                0xFFFFFFFFu
#define ENET_MDATA_MATCHDATA_SHIFT               0u
#define ENET_MDATA_MATCHDATA_WIDTH               32u
#define ENET_MDATA_MATCHDATA(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_MDATA_MATCHDATA_SHIFT))&ENET_MDATA_MATCHDATA_MASK)
/* MMASK Bit Fields */
#define ENET_MMASK_MATCHMASK_MASK                0xFFFFFFFFu
#define ENET_MMASK_MATCHMASK_SHIFT               0u
#define ENET_MMASK_MATCHMASK_WIDTH               32u
#define ENET_MMASK_MATCHMASK(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_MMASK_MATCHMASK_SHIFT))&ENET_MMASK_MATCHMASK_MASK)
/* MCONFIG Bit Fields */
#define ENET_MCONFIG_FRMOFF_MASK                 0xFCu
#define ENET_MCONFIG_FRMOFF_SHIFT                2u
#define ENET_MCONFIG_FRMOFF_WIDTH                6u
#define ENET_MCONFIG_FRMOFF(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MCONFIG_FRMOFF_SHIFT))&ENET_MCONFIG_FRMOFF_MASK)
#define ENET_MCONFIG_OK_INDEX_MASK               0xFF0000u
#define ENET_MCONFIG_OK_INDEX_SHIFT              16u
#define ENET_MCONFIG_OK_INDEX_WIDTH              8u
#define ENET_MCONFIG_OK_INDEX(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_MCONFIG_OK_INDEX_SHIFT))&ENET_MCONFIG_OK_INDEX_MASK)
#define ENET_MCONFIG_IM_MASK                     0x20000000u
#define ENET_MCONFIG_IM_SHIFT                    29u
#define ENET_MCONFIG_IM_WIDTH                    1u
#define ENET_MCONFIG_IM(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_MCONFIG_IM_SHIFT))&ENET_MCONFIG_IM_MASK)
#define ENET_MCONFIG_RF_MASK                     0x40000000u
#define ENET_MCONFIG_RF_SHIFT                    30u
#define ENET_MCONFIG_RF_WIDTH                    1u
#define ENET_MCONFIG_RF(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_MCONFIG_RF_SHIFT))&ENET_MCONFIG_RF_MASK)
#define ENET_MCONFIG_AF_MASK                     0x80000000u
#define ENET_MCONFIG_AF_SHIFT                    31u
#define ENET_MCONFIG_AF_WIDTH                    1u
#define ENET_MCONFIG_AF(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_MCONFIG_AF_SHIFT))&ENET_MCONFIG_AF_MASK)
/* MENTRYRW Bit Fields */
#define ENET_MENTRYRW_ENTRYADD_MASK              0xFFu
#define ENET_MENTRYRW_ENTRYADD_SHIFT             0u
#define ENET_MENTRYRW_ENTRYADD_WIDTH             8u
#define ENET_MENTRYRW_ENTRYADD(x)                (((uint32_t)(((uint32_t)(x))<<ENET_MENTRYRW_ENTRYADD_SHIFT))&ENET_MENTRYRW_ENTRYADD_MASK)
#define ENET_MENTRYRW_WR_MASK                    0x100u
#define ENET_MENTRYRW_WR_SHIFT                   8u
#define ENET_MENTRYRW_WR_WIDTH                   1u
#define ENET_MENTRYRW_WR(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_MENTRYRW_WR_SHIFT))&ENET_MENTRYRW_WR_MASK)
#define ENET_MENTRYRW_RD_MASK                    0x200u
#define ENET_MENTRYRW_RD_SHIFT                   9u
#define ENET_MENTRYRW_RD_WIDTH                   1u
#define ENET_MENTRYRW_RD(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_MENTRYRW_RD_SHIFT))&ENET_MENTRYRW_RD_MASK)
/* RXPCTL Bit Fields */
#define ENET_RXPCTL_ENPARSER_MASK                0x1u
#define ENET_RXPCTL_ENPARSER_SHIFT               0u
#define ENET_RXPCTL_ENPARSER_WIDTH               1u
#define ENET_RXPCTL_ENPARSER(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_RXPCTL_ENPARSER_SHIFT))&ENET_RXPCTL_ENPARSER_MASK)
#define ENET_RXPCTL_INVBYTORD_MASK               0x2u
#define ENET_RXPCTL_INVBYTORD_SHIFT              1u
#define ENET_RXPCTL_INVBYTORD_WIDTH              1u
#define ENET_RXPCTL_INVBYTORD(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RXPCTL_INVBYTORD_SHIFT))&ENET_RXPCTL_INVBYTORD_MASK)
#define ENET_RXPCTL_PRSRSCLR_MASK                0x10u
#define ENET_RXPCTL_PRSRSCLR_SHIFT               4u
#define ENET_RXPCTL_PRSRSCLR_WIDTH               1u
#define ENET_RXPCTL_PRSRSCLR(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_RXPCTL_PRSRSCLR_SHIFT))&ENET_RXPCTL_PRSRSCLR_MASK)
#define ENET_RXPCTL_MAXINDEX_MASK                0xFF00u
#define ENET_RXPCTL_MAXINDEX_SHIFT               8u
#define ENET_RXPCTL_MAXINDEX_WIDTH               8u
#define ENET_RXPCTL_MAXINDEX(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_RXPCTL_MAXINDEX_SHIFT))&ENET_RXPCTL_MAXINDEX_MASK)
#define ENET_RXPCTL_ENDERRQ_MASK                 0xFF0000u
#define ENET_RXPCTL_ENDERRQ_SHIFT                16u
#define ENET_RXPCTL_ENDERRQ_WIDTH                8u
#define ENET_RXPCTL_ENDERRQ(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_RXPCTL_ENDERRQ_SHIFT))&ENET_RXPCTL_ENDERRQ_MASK)
#define ENET_RXPCTL_ACPTEERR_MASK                0x1000000u
#define ENET_RXPCTL_ACPTEERR_SHIFT               24u
#define ENET_RXPCTL_ACPTEERR_WIDTH               1u
#define ENET_RXPCTL_ACPTEERR(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_RXPCTL_ACPTEERR_SHIFT))&ENET_RXPCTL_ACPTEERR_MASK)
/* MAXFRMOFF Bit Fields */
#define ENET_MAXFRMOFF_MXFRMOFF_MASK             0x3Fu
#define ENET_MAXFRMOFF_MXFRMOFF_SHIFT            0u
#define ENET_MAXFRMOFF_MXFRMOFF_WIDTH            6u
#define ENET_MAXFRMOFF_MXFRMOFF(x)               (((uint32_t)(((uint32_t)(x))<<ENET_MAXFRMOFF_MXFRMOFF_SHIFT))&ENET_MAXFRMOFF_MXFRMOFF_MASK)
/* RXPARST Bit Fields */
#define ENET_RXPARST_MXINDERR_MASK               0x1u
#define ENET_RXPARST_MXINDERR_SHIFT              0u
#define ENET_RXPARST_MXINDERR_WIDTH              1u
#define ENET_RXPARST_MXINDERR(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_MXINDERR_SHIFT))&ENET_RXPARST_MXINDERR_MASK)
#define ENET_RXPARST_TBLDPTERR_MASK              0x2u
#define ENET_RXPARST_TBLDPTERR_SHIFT             1u
#define ENET_RXPARST_TBLDPTERR_WIDTH             1u
#define ENET_RXPARST_TBLDPTERR(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_TBLDPTERR_SHIFT))&ENET_RXPARST_TBLDPTERR_MASK)
#define ENET_RXPARST_NOMTCERR_MASK               0x4u
#define ENET_RXPARST_NOMTCERR_SHIFT              2u
#define ENET_RXPARST_NOMTCERR_WIDTH              1u
#define ENET_RXPARST_NOMTCERR(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_NOMTCERR_SHIFT))&ENET_RXPARST_NOMTCERR_MASK)
#define ENET_RXPARST_FMOFFERR_MASK               0x8u
#define ENET_RXPARST_FMOFFERR_SHIFT              3u
#define ENET_RXPARST_FMOFFERR_WIDTH              1u
#define ENET_RXPARST_FMOFFERR(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_FMOFFERR_SHIFT))&ENET_RXPARST_FMOFFERR_MASK)
#define ENET_RXPARST_PRSENDERR_MASK              0x10u
#define ENET_RXPARST_PRSENDERR_SHIFT             4u
#define ENET_RXPARST_PRSENDERR_WIDTH             1u
#define ENET_RXPARST_PRSENDERR(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_PRSENDERR_SHIFT))&ENET_RXPARST_PRSENDERR_MASK)
#define ENET_RXPARST_INVMAXIDX_MASK              0x20u
#define ENET_RXPARST_INVMAXIDX_SHIFT             5u
#define ENET_RXPARST_INVMAXIDX_WIDTH             1u
#define ENET_RXPARST_INVMAXIDX(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_INVMAXIDX_SHIFT))&ENET_RXPARST_INVMAXIDX_MASK)
#define ENET_RXPARST_RXPRSDN_MASK                0x100u
#define ENET_RXPARST_RXPRSDN_SHIFT               8u
#define ENET_RXPARST_RXPRSDN_WIDTH               1u
#define ENET_RXPARST_RXPRSDN(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_RXPARST_RXPRSDN_SHIFT))&ENET_RXPARST_RXPRSDN_MASK)
/* PARSDSCD Bit Fields */
#define ENET_PARSDSCD_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PARSDSCD_COUNT_SHIFT                0u
#define ENET_PARSDSCD_COUNT_WIDTH                32u
#define ENET_PARSDSCD_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PARSDSCD_COUNT_SHIFT))&ENET_PARSDSCD_COUNT_MASK)
/* PRSACPT0 Bit Fields */
#define ENET_PRSACPT0_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PRSACPT0_COUNT_SHIFT                0u
#define ENET_PRSACPT0_COUNT_WIDTH                32u
#define ENET_PRSACPT0_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PRSACPT0_COUNT_SHIFT))&ENET_PRSACPT0_COUNT_MASK)
/* PRSRJCT0 Bit Fields */
#define ENET_PRSRJCT0_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PRSRJCT0_COUNT_SHIFT                0u
#define ENET_PRSRJCT0_COUNT_WIDTH                32u
#define ENET_PRSRJCT0_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PRSRJCT0_COUNT_SHIFT))&ENET_PRSRJCT0_COUNT_MASK)
/* PRSACPT1 Bit Fields */
#define ENET_PRSACPT1_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PRSACPT1_COUNT_SHIFT                0u
#define ENET_PRSACPT1_COUNT_WIDTH                32u
#define ENET_PRSACPT1_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PRSACPT1_COUNT_SHIFT))&ENET_PRSACPT1_COUNT_MASK)
/* PRSRJCT1 Bit Fields */
#define ENET_PRSRJCT1_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PRSRJCT1_COUNT_SHIFT                0u
#define ENET_PRSRJCT1_COUNT_WIDTH                32u
#define ENET_PRSRJCT1_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PRSRJCT1_COUNT_SHIFT))&ENET_PRSRJCT1_COUNT_MASK)
/* PRSACPT2 Bit Fields */
#define ENET_PRSACPT2_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PRSACPT2_COUNT_SHIFT                0u
#define ENET_PRSACPT2_COUNT_WIDTH                32u
#define ENET_PRSACPT2_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PRSACPT2_COUNT_SHIFT))&ENET_PRSACPT2_COUNT_MASK)
/* PRSRJCT2 Bit Fields */
#define ENET_PRSRJCT2_COUNT_MASK                 0xFFFFFFFFu
#define ENET_PRSRJCT2_COUNT_SHIFT                0u
#define ENET_PRSRJCT2_COUNT_WIDTH                32u
#define ENET_PRSRJCT2_COUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_PRSRJCT2_COUNT_SHIFT))&ENET_PRSRJCT2_COUNT_MASK)
/* TGSR Bit Fields */
#define ENET_TGSR_TF0_MASK                       0x1u
#define ENET_TGSR_TF0_SHIFT                      0u
#define ENET_TGSR_TF0_WIDTH                      1u
#define ENET_TGSR_TF0(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF0_SHIFT))&ENET_TGSR_TF0_MASK)
#define ENET_TGSR_TF1_MASK                       0x2u
#define ENET_TGSR_TF1_SHIFT                      1u
#define ENET_TGSR_TF1_WIDTH                      1u
#define ENET_TGSR_TF1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF1_SHIFT))&ENET_TGSR_TF1_MASK)
#define ENET_TGSR_TF2_MASK                       0x4u
#define ENET_TGSR_TF2_SHIFT                      2u
#define ENET_TGSR_TF2_WIDTH                      1u
#define ENET_TGSR_TF2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF2_SHIFT))&ENET_TGSR_TF2_MASK)
#define ENET_TGSR_TF3_MASK                       0x8u
#define ENET_TGSR_TF3_SHIFT                      3u
#define ENET_TGSR_TF3_WIDTH                      1u
#define ENET_TGSR_TF3(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF3_SHIFT))&ENET_TGSR_TF3_MASK)
/* TCSR Bit Fields */
#define ENET_TCSR_TDRE_MASK                      0x1u
#define ENET_TCSR_TDRE_SHIFT                     0u
#define ENET_TCSR_TDRE_WIDTH                     1u
#define ENET_TCSR_TDRE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TDRE_SHIFT))&ENET_TCSR_TDRE_MASK)
#define ENET_TCSR_TMODE_MASK                     0x3Cu
#define ENET_TCSR_TMODE_SHIFT                    2u
#define ENET_TCSR_TMODE_WIDTH                    4u
#define ENET_TCSR_TMODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TMODE_SHIFT))&ENET_TCSR_TMODE_MASK)
#define ENET_TCSR_TIE_MASK                       0x40u
#define ENET_TCSR_TIE_SHIFT                      6u
#define ENET_TCSR_TIE_WIDTH                      1u
#define ENET_TCSR_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TIE_SHIFT))&ENET_TCSR_TIE_MASK)
#define ENET_TCSR_TF_MASK                        0x80u
#define ENET_TCSR_TF_SHIFT                       7u
#define ENET_TCSR_TF_WIDTH                       1u
#define ENET_TCSR_TF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TF_SHIFT))&ENET_TCSR_TF_MASK)
#define ENET_TCSR_TPWC_MASK                      0xF800u
#define ENET_TCSR_TPWC_SHIFT                     11u
#define ENET_TCSR_TPWC_WIDTH                     5u
#define ENET_TCSR_TPWC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR_TPWC_SHIFT))&ENET_TCSR_TPWC_MASK)
/* TCCR Bit Fields */
#define ENET_TCCR_TCC_MASK                       0xFFFFFFFFu
#define ENET_TCCR_TCC_SHIFT                      0u
#define ENET_TCCR_TCC_WIDTH                      32u
#define ENET_TCCR_TCC(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCCR_TCC_SHIFT))&ENET_TCCR_TCC_MASK)

/*!
 * @}
 */ /* end of group ENET_Register_Masks */


/*!
 * @}
 */ /* end of group ENET_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- ESW Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ESW_Peripheral_Access_Layer ESW Peripheral Access Layer
 * @{
 */


/** ESW - Size of Registers Arrays */
#define ESW_RCMR_COUNT                           2u
#define ESW_VRES_COUNT                           32u

/** ESW - Register Layout Typedef */
typedef struct {
  __I  uint32_t REV;                               /**< Revision, offset: 0x0 */
  __IO uint32_t SCR;                               /**< Scratch register, offset: 0x4 */
  __IO uint32_t PER;                               /**< Port enable register, offset: 0x8 */
  __IO uint32_t DUCR;                              /**< Default unicast resolution, offset: 0xC */
  __IO uint32_t VLANV;                             /**< VLAN verify, offset: 0x10 */
  __IO uint32_t DBCR;                              /**< Default broadcast resolution, offset: 0x14 */
  __IO uint32_t DMCR;                              /**< Default multicast resolution, offset: 0x18 */
  __IO uint32_t BKLR;                              /**< Blocking and learning enable, offset: 0x1C */
  __IO uint32_t BMPC;                              /**< Bridge management port configuration, offset: 0x20 */
  __IO uint32_t MODE;                              /**< Mode configuration, offset: 0x24 */
  __IO uint32_t VIMSEL;                            /**< VLAN input manipulation select, offset: 0x28 */
  __IO uint32_t VOMSEL;                            /**< VLAN output manipulation select, offset: 0x2C */
  __IO uint32_t VIMEN;                             /**< VLAN input manipulation enable, offset: 0x30 */
  __IO uint32_t VID;                               /**< VLAN tag ID, offset: 0x34 */
  __IO uint32_t RCMR[ESW_RCMR_COUNT];              /**< Receive Classification Match Register for Class n, array offset: 0x38, array step: 0x4 */
  __IO uint32_t MCR;                               /**< Mirror control register, offset: 0x40 */
  __IO uint32_t EGMAP;                             /**< Egress port definitions, offset: 0x44 */
  __IO uint32_t INGMAP;                            /**< Ingress port definitions, offset: 0x48 */
  __IO uint32_t INGSAL;                            /**< Ingress source MAC address low, offset: 0x4C */
  __IO uint32_t INGSAH;                            /**< Ingress source MAC address high, offset: 0x50 */
  __IO uint32_t INGDAL;                            /**< Ingress destination MAC address low, offset: 0x54 */
  __IO uint32_t INGDAH;                            /**< Ingress destination MAC address high, offset: 0x58 */
  __IO uint32_t EGSAL;                             /**< Egress source MAC address low, offset: 0x5C */
  __IO uint32_t EGSAH;                             /**< Egress source MAC address high, offset: 0x60 */
  __IO uint32_t EGDAL;                             /**< Egress destination MAC address low, offset: 0x64 */
  __IO uint32_t EGDAH;                             /**< Egress destination MAC address high, offset: 0x68 */
  __IO uint32_t MCVAL;                             /**< Mirror count value, offset: 0x6C */
       uint8_t RESERVED_0[16];
  __IO uint32_t MMSR;                              /**< Memory manager status, offset: 0x80 */
  __IO uint32_t LMT;                               /**< Low memory threshold, offset: 0x84 */
  __IO uint32_t LFC;                               /**< Lowest number of free cells, offset: 0x88 */
  __I  uint32_t PCSR;                              /**< Port congestion status, offset: 0x8C */
  __I  uint32_t IOSR;                              /**< Switch input and output interface status, offset: 0x90 */
  __IO uint32_t QWT;                               /**< Queue weights, offset: 0x94 */
       uint8_t RESERVED_1[4];
  __IO uint32_t P0BCT;                             /**< Port 0 Backpressure Congestion Threshold, offset: 0x9C */
       uint8_t RESERVED_2[28];
  __IO uint32_t FFEN;                              /**< Port 0 forced forwarding enable, offset: 0xBC */
  __IO uint32_t PSNP1;                             /**< Port snooping registers, offset: 0xC0 */
  __IO uint32_t PSNP2;                             /**< Port snooping registers, offset: 0xC4 */
  __IO uint32_t PSNP3;                             /**< Port snooping registers, offset: 0xC8 */
  __IO uint32_t PSNP4;                             /**< Port snooping registers, offset: 0xCC */
  __IO uint32_t PSNP5;                             /**< Port snooping registers, offset: 0xD0 */
  __IO uint32_t PSNP6;                             /**< Port snooping registers, offset: 0xD4 */
  __IO uint32_t PSNP7;                             /**< Port snooping registers, offset: 0xD8 */
  __IO uint32_t PSNP8;                             /**< Port snooping registers, offset: 0xDC */
  __IO uint32_t IPSNP1;                            /**< IP snooping registers, offset: 0xE0 */
  __IO uint32_t IPSNP2;                            /**< IP snooping registers, offset: 0xE4 */
  __IO uint32_t IPSNP3;                            /**< IP snooping registers, offset: 0xE8 */
  __IO uint32_t IPSNP4;                            /**< IP snooping registers, offset: 0xEC */
  __IO uint32_t IPSNP5;                            /**< IP snooping registers, offset: 0xF0 */
  __IO uint32_t IPSNP6;                            /**< IP snooping registers, offset: 0xF4 */
  __IO uint32_t IPSNP7;                            /**< IP snooping registers, offset: 0xF8 */
  __IO uint32_t IPSNP8;                            /**< IP snooping registers, offset: 0xFC */
  __IO uint32_t P0VRES;                            /**< Port 0 VLAN priority resolution map, offset: 0x100 */
  __IO uint32_t P1VRES;                            /**< Port 1 VLAN priority resolution map, offset: 0x104 */
  __IO uint32_t P2VRES;                            /**< Port 2 VLAN priority resolution map, offset: 0x108 */
       uint8_t RESERVED_3[52];
  __IO uint32_t IPRES;                             /**< IPv4/v6 priority resolution table, offset: 0x140 */
       uint8_t RESERVED_4[60];
  __IO uint32_t P0RES;                             /**< Port 0 priority resolution configuration, offset: 0x180 */
  __IO uint32_t P1RES;                             /**< Port 1 priority resolution configuration, offset: 0x184 */
  __IO uint32_t P2RES;                             /**< Port 2 priority resolution configuration, offset: 0x188 */
       uint8_t RESERVED_5[36];
  __IO uint32_t HSEED0;                            /**< Hash seed 0, offset: 0x1B0 */
  __IO uint32_t HSEED1;                            /**< Hash seed 1, offset: 0x1B4 */
       uint8_t RESERVED_6[72];
  __IO uint32_t P0ID;                              /**< Port 0 VLAN ID, offset: 0x200 */
  __IO uint32_t P1ID;                              /**< Port 1 VLAN ID, offset: 0x204 */
  __IO uint32_t P2ID;                              /**< Port 2 VLAN ID, offset: 0x208 */
       uint8_t RESERVED_7[116];
  __IO uint32_t VRES[ESW_VRES_COUNT];              /**< VLAN table, array offset: 0x280, array step: 0x4 */
  __I  uint32_t DISCN;                             /**< Number of discarded frames, offset: 0x300 */
  __I  uint32_t DISCB;                             /**< Bytes of discarded frames, offset: 0x304 */
  __I  uint32_t NDISCN;                            /**< Number of non-discarded frames, offset: 0x308 */
  __I  uint32_t NDISCB;                            /**< Bytes of non-discarded frames, offset: 0x30C */
  __I  uint32_t P0OQC;                             /**< Port 0 output queue congestion, offset: 0x310 */
  __I  uint32_t P0MVID;                            /**< Port 0 mismatching VLAN ID, offset: 0x314 */
  __I  uint32_t P0MVTAG;                           /**< Port 0 missing VLAN tag, offset: 0x318 */
  __I  uint32_t P0BL;                              /**< Port 0 blocked, offset: 0x31C */
  __I  uint32_t P1OQC;                             /**< Port 1 output queue congestion, offset: 0x320 */
  __I  uint32_t P1MVID;                            /**< Port 1 mismatching VLAN ID, offset: 0x324 */
  __I  uint32_t P1MVTAG;                           /**< Port 1 missing VLAN tag, offset: 0x328 */
  __I  uint32_t P1BL;                              /**< Port 1 blocked, offset: 0x32C */
  __I  uint32_t P2OQC;                             /**< Port 2 output queue congestion, offset: 0x330 */
  __I  uint32_t P2MVID;                            /**< Port 2 mismatching VLAN ID, offset: 0x334 */
  __I  uint32_t P2MVTAG;                           /**< Port 2 missing VLAN tag, offset: 0x338 */
  __I  uint32_t P2BL;                              /**< Port 2 blocked, offset: 0x33C */
       uint8_t RESERVED_8[192];
  __IO uint32_t ISR;                               /**< Interrupt status register, offset: 0x400 */
  __IO uint32_t IMR;                               /**< Interrupt mask register, offset: 0x404 */
  __IO uint32_t RDSR;                              /**< Receive descriptor ring pointer, offset: 0x408 */
  __IO uint32_t TDSR;                              /**< Transmit descriptor ring pointer, offset: 0x40C */
  __IO uint32_t MRBR;                              /**< Maximum receive buffer size, offset: 0x410 */
  __IO uint32_t RDAR;                              /**< Receive descriptor active - class0, offset: 0x414 */
  __IO uint32_t TDAR;                              /**< Transmit descriptor active - class0, offset: 0x418 */
  __IO uint32_t RDAR1;                             /**< Receive descriptor active - class1, offset: 0x41C */
  __IO uint32_t TDAR1;                             /**< Transmit descriptor active - class1, offset: 0x420 */
  __IO uint32_t RDAR2;                             /**< Receive descriptor active - class2, offset: 0x424 */
  __IO uint32_t TDAR2;                             /**< Transmit descriptor active - class2, offset: 0x428 */
       uint8_t RESERVED_9[84];
  __IO uint32_t TXIC;                              /**< Transmit interrupt coalesing register, offset: 0x480 */
  __IO uint32_t RXIC;                              /**< Receive interrupt coalesing register, offset: 0x484 */
       uint8_t RESERVED_10[8];
  __IO uint32_t SEL_CLASS;                         /**< Select register class for read/write access, offset: 0x490 */
       uint8_t RESERVED_11[108];
  __I  uint32_t LREC0;                             /**< Learning records A0 & B1, offset: 0x500 */
  __I  uint32_t LREC1;                             /**< Learning record B1, offset: 0x504 */
  __I  uint32_t LSR;                               /**< Learning data available status, offset: 0x508 */
} ESW_Type, *ESW_MemMapPtr;

 /** Number of instances of the ESW module. */
#define ESW_INSTANCE_COUNT                       (2u)


/* ESW - Peripheral instance base addresses */
/** Peripheral ESW_0 base address */
#define ESW_0_BASE                               (0xFFCCC000u)
/** Peripheral ESW_0 base pointer */
#define ESW_0                                    ((ESW_Type *)ESW_0_BASE)
/** Peripheral ESW_1 base address */
#define ESW_1_BASE                               (0xFFCD0000u)
/** Peripheral ESW_1 base pointer */
#define ESW_1                                    ((ESW_Type *)ESW_1_BASE)
/** Array initializer of ESW peripheral base addresses */
#define ESW_BASE_ADDRS                           { ESW_0_BASE, ESW_1_BASE }
/** Array initializer of ESW peripheral base pointers */
#define ESW_BASE_PTRS                            { ESW_0, ESW_1 }

/* ----------------------------------------------------------------------------
   -- ESW Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup ESW_Register_Masks ESW Register Masks
 * @{
 */

/* REV Bit Fields */
#define ESW_REV_REVISION_MASK                    0xFFFFFFFFu
#define ESW_REV_REVISION_SHIFT                   0u
#define ESW_REV_REVISION_WIDTH                   32u
#define ESW_REV_REVISION(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_REV_REVISION_SHIFT))&ESW_REV_REVISION_MASK)
/* SCR Bit Fields */
#define ESW_SCR_SCRATCH_MASK                     0xFFFFFFFFu
#define ESW_SCR_SCRATCH_SHIFT                    0u
#define ESW_SCR_SCRATCH_WIDTH                    32u
#define ESW_SCR_SCRATCH(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_SCR_SCRATCH_SHIFT))&ESW_SCR_SCRATCH_MASK)
/* PER Bit Fields */
#define ESW_PER_TE0_MASK                         0x1u
#define ESW_PER_TE0_SHIFT                        0u
#define ESW_PER_TE0_WIDTH                        1u
#define ESW_PER_TE0(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_PER_TE0_SHIFT))&ESW_PER_TE0_MASK)
#define ESW_PER_TE1_MASK                         0x2u
#define ESW_PER_TE1_SHIFT                        1u
#define ESW_PER_TE1_WIDTH                        1u
#define ESW_PER_TE1(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_PER_TE1_SHIFT))&ESW_PER_TE1_MASK)
#define ESW_PER_TE2_MASK                         0x4u
#define ESW_PER_TE2_SHIFT                        2u
#define ESW_PER_TE2_WIDTH                        1u
#define ESW_PER_TE2(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_PER_TE2_SHIFT))&ESW_PER_TE2_MASK)
#define ESW_PER_RE0_MASK                         0x10000u
#define ESW_PER_RE0_SHIFT                        16u
#define ESW_PER_RE0_WIDTH                        1u
#define ESW_PER_RE0(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_PER_RE0_SHIFT))&ESW_PER_RE0_MASK)
#define ESW_PER_RE1_MASK                         0x20000u
#define ESW_PER_RE1_SHIFT                        17u
#define ESW_PER_RE1_WIDTH                        1u
#define ESW_PER_RE1(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_PER_RE1_SHIFT))&ESW_PER_RE1_MASK)
#define ESW_PER_RE2_MASK                         0x40000u
#define ESW_PER_RE2_SHIFT                        18u
#define ESW_PER_RE2_WIDTH                        1u
#define ESW_PER_RE2(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_PER_RE2_SHIFT))&ESW_PER_RE2_MASK)
/* DUCR Bit Fields */
#define ESW_DUCR_UP0_MASK                        0x1u
#define ESW_DUCR_UP0_SHIFT                       0u
#define ESW_DUCR_UP0_WIDTH                       1u
#define ESW_DUCR_UP0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DUCR_UP0_SHIFT))&ESW_DUCR_UP0_MASK)
#define ESW_DUCR_UP1_MASK                        0x2u
#define ESW_DUCR_UP1_SHIFT                       1u
#define ESW_DUCR_UP1_WIDTH                       1u
#define ESW_DUCR_UP1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DUCR_UP1_SHIFT))&ESW_DUCR_UP1_MASK)
#define ESW_DUCR_UP2_MASK                        0x4u
#define ESW_DUCR_UP2_SHIFT                       2u
#define ESW_DUCR_UP2_WIDTH                       1u
#define ESW_DUCR_UP2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DUCR_UP2_SHIFT))&ESW_DUCR_UP2_MASK)
#define ESW_DUCR_TP0_MASK                        0x10000u
#define ESW_DUCR_TP0_SHIFT                       16u
#define ESW_DUCR_TP0_WIDTH                       1u
#define ESW_DUCR_TP0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DUCR_TP0_SHIFT))&ESW_DUCR_TP0_MASK)
#define ESW_DUCR_TP1_MASK                        0x20000u
#define ESW_DUCR_TP1_SHIFT                       17u
#define ESW_DUCR_TP1_WIDTH                       1u
#define ESW_DUCR_TP1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DUCR_TP1_SHIFT))&ESW_DUCR_TP1_MASK)
#define ESW_DUCR_TP2_MASK                        0x40000u
#define ESW_DUCR_TP2_SHIFT                       18u
#define ESW_DUCR_TP2_WIDTH                       1u
#define ESW_DUCR_TP2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DUCR_TP2_SHIFT))&ESW_DUCR_TP2_MASK)
/* VLANV Bit Fields */
#define ESW_VLANV_VV0_MASK                       0x1u
#define ESW_VLANV_VV0_SHIFT                      0u
#define ESW_VLANV_VV0_WIDTH                      1u
#define ESW_VLANV_VV0(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_VV0_SHIFT))&ESW_VLANV_VV0_MASK)
#define ESW_VLANV_VV1_MASK                       0x2u
#define ESW_VLANV_VV1_SHIFT                      1u
#define ESW_VLANV_VV1_WIDTH                      1u
#define ESW_VLANV_VV1(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_VV1_SHIFT))&ESW_VLANV_VV1_MASK)
#define ESW_VLANV_VV2_MASK                       0x4u
#define ESW_VLANV_VV2_SHIFT                      2u
#define ESW_VLANV_VV2_WIDTH                      1u
#define ESW_VLANV_VV2(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_VV2_SHIFT))&ESW_VLANV_VV2_MASK)
#define ESW_VLANV_DUV0_MASK                      0x100u
#define ESW_VLANV_DUV0_SHIFT                     8u
#define ESW_VLANV_DUV0_WIDTH                     1u
#define ESW_VLANV_DUV0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DUV0_SHIFT))&ESW_VLANV_DUV0_MASK)
#define ESW_VLANV_DUV1_MASK                      0x200u
#define ESW_VLANV_DUV1_SHIFT                     9u
#define ESW_VLANV_DUV1_WIDTH                     1u
#define ESW_VLANV_DUV1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DUV1_SHIFT))&ESW_VLANV_DUV1_MASK)
#define ESW_VLANV_DUV2_MASK                      0x400u
#define ESW_VLANV_DUV2_SHIFT                     10u
#define ESW_VLANV_DUV2_WIDTH                     1u
#define ESW_VLANV_DUV2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DUV2_SHIFT))&ESW_VLANV_DUV2_MASK)
#define ESW_VLANV_DU0_MASK                       0x10000u
#define ESW_VLANV_DU0_SHIFT                      16u
#define ESW_VLANV_DU0_WIDTH                      1u
#define ESW_VLANV_DU0(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DU0_SHIFT))&ESW_VLANV_DU0_MASK)
#define ESW_VLANV_DU1_MASK                       0x20000u
#define ESW_VLANV_DU1_SHIFT                      17u
#define ESW_VLANV_DU1_WIDTH                      1u
#define ESW_VLANV_DU1(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DU1_SHIFT))&ESW_VLANV_DU1_MASK)
#define ESW_VLANV_DU2_MASK                       0x40000u
#define ESW_VLANV_DU2_SHIFT                      18u
#define ESW_VLANV_DU2_WIDTH                      1u
#define ESW_VLANV_DU2(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DU2_SHIFT))&ESW_VLANV_DU2_MASK)
#define ESW_VLANV_DUT0_MASK                      0x1000000u
#define ESW_VLANV_DUT0_SHIFT                     24u
#define ESW_VLANV_DUT0_WIDTH                     1u
#define ESW_VLANV_DUT0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DUT0_SHIFT))&ESW_VLANV_DUT0_MASK)
#define ESW_VLANV_DUT1_MASK                      0x2000000u
#define ESW_VLANV_DUT1_SHIFT                     25u
#define ESW_VLANV_DUT1_WIDTH                     1u
#define ESW_VLANV_DUT1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DUT1_SHIFT))&ESW_VLANV_DUT1_MASK)
#define ESW_VLANV_DUT2_MASK                      0x4000000u
#define ESW_VLANV_DUT2_SHIFT                     26u
#define ESW_VLANV_DUT2_WIDTH                     1u
#define ESW_VLANV_DUT2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VLANV_DUT2_SHIFT))&ESW_VLANV_DUT2_MASK)
/* DBCR Bit Fields */
#define ESW_DBCR_UP0_MASK                        0x1u
#define ESW_DBCR_UP0_SHIFT                       0u
#define ESW_DBCR_UP0_WIDTH                       1u
#define ESW_DBCR_UP0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DBCR_UP0_SHIFT))&ESW_DBCR_UP0_MASK)
#define ESW_DBCR_UP1_MASK                        0x2u
#define ESW_DBCR_UP1_SHIFT                       1u
#define ESW_DBCR_UP1_WIDTH                       1u
#define ESW_DBCR_UP1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DBCR_UP1_SHIFT))&ESW_DBCR_UP1_MASK)
#define ESW_DBCR_UP2_MASK                        0x4u
#define ESW_DBCR_UP2_SHIFT                       2u
#define ESW_DBCR_UP2_WIDTH                       1u
#define ESW_DBCR_UP2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DBCR_UP2_SHIFT))&ESW_DBCR_UP2_MASK)
#define ESW_DBCR_TP0_MASK                        0x10000u
#define ESW_DBCR_TP0_SHIFT                       16u
#define ESW_DBCR_TP0_WIDTH                       1u
#define ESW_DBCR_TP0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DBCR_TP0_SHIFT))&ESW_DBCR_TP0_MASK)
#define ESW_DBCR_TP1_MASK                        0x20000u
#define ESW_DBCR_TP1_SHIFT                       17u
#define ESW_DBCR_TP1_WIDTH                       1u
#define ESW_DBCR_TP1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DBCR_TP1_SHIFT))&ESW_DBCR_TP1_MASK)
#define ESW_DBCR_TP2_MASK                        0x40000u
#define ESW_DBCR_TP2_SHIFT                       18u
#define ESW_DBCR_TP2_WIDTH                       1u
#define ESW_DBCR_TP2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DBCR_TP2_SHIFT))&ESW_DBCR_TP2_MASK)
/* DMCR Bit Fields */
#define ESW_DMCR_UP0_MASK                        0x1u
#define ESW_DMCR_UP0_SHIFT                       0u
#define ESW_DMCR_UP0_WIDTH                       1u
#define ESW_DMCR_UP0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DMCR_UP0_SHIFT))&ESW_DMCR_UP0_MASK)
#define ESW_DMCR_UP1_MASK                        0x2u
#define ESW_DMCR_UP1_SHIFT                       1u
#define ESW_DMCR_UP1_WIDTH                       1u
#define ESW_DMCR_UP1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DMCR_UP1_SHIFT))&ESW_DMCR_UP1_MASK)
#define ESW_DMCR_UP2_MASK                        0x4u
#define ESW_DMCR_UP2_SHIFT                       2u
#define ESW_DMCR_UP2_WIDTH                       1u
#define ESW_DMCR_UP2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DMCR_UP2_SHIFT))&ESW_DMCR_UP2_MASK)
#define ESW_DMCR_TP0_MASK                        0x10000u
#define ESW_DMCR_TP0_SHIFT                       16u
#define ESW_DMCR_TP0_WIDTH                       1u
#define ESW_DMCR_TP0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DMCR_TP0_SHIFT))&ESW_DMCR_TP0_MASK)
#define ESW_DMCR_TP1_MASK                        0x20000u
#define ESW_DMCR_TP1_SHIFT                       17u
#define ESW_DMCR_TP1_WIDTH                       1u
#define ESW_DMCR_TP1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DMCR_TP1_SHIFT))&ESW_DMCR_TP1_MASK)
#define ESW_DMCR_TP2_MASK                        0x40000u
#define ESW_DMCR_TP2_SHIFT                       18u
#define ESW_DMCR_TP2_WIDTH                       1u
#define ESW_DMCR_TP2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_DMCR_TP2_SHIFT))&ESW_DMCR_TP2_MASK)
/* BKLR Bit Fields */
#define ESW_BKLR_BE0_MASK                        0x1u
#define ESW_BKLR_BE0_SHIFT                       0u
#define ESW_BKLR_BE0_WIDTH                       1u
#define ESW_BKLR_BE0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BKLR_BE0_SHIFT))&ESW_BKLR_BE0_MASK)
#define ESW_BKLR_BE1_MASK                        0x2u
#define ESW_BKLR_BE1_SHIFT                       1u
#define ESW_BKLR_BE1_WIDTH                       1u
#define ESW_BKLR_BE1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BKLR_BE1_SHIFT))&ESW_BKLR_BE1_MASK)
#define ESW_BKLR_BE2_MASK                        0x4u
#define ESW_BKLR_BE2_SHIFT                       2u
#define ESW_BKLR_BE2_WIDTH                       1u
#define ESW_BKLR_BE2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BKLR_BE2_SHIFT))&ESW_BKLR_BE2_MASK)
#define ESW_BKLR_LD0_MASK                        0x10000u
#define ESW_BKLR_LD0_SHIFT                       16u
#define ESW_BKLR_LD0_WIDTH                       1u
#define ESW_BKLR_LD0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BKLR_LD0_SHIFT))&ESW_BKLR_LD0_MASK)
#define ESW_BKLR_LD1_MASK                        0x20000u
#define ESW_BKLR_LD1_SHIFT                       17u
#define ESW_BKLR_LD1_WIDTH                       1u
#define ESW_BKLR_LD1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BKLR_LD1_SHIFT))&ESW_BKLR_LD1_MASK)
#define ESW_BKLR_LD2_MASK                        0x40000u
#define ESW_BKLR_LD2_SHIFT                       18u
#define ESW_BKLR_LD2_WIDTH                       1u
#define ESW_BKLR_LD2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BKLR_LD2_SHIFT))&ESW_BKLR_LD2_MASK)
/* BMPC Bit Fields */
#define ESW_BMPC_PORT_MASK                       0xFu
#define ESW_BMPC_PORT_SHIFT                      0u
#define ESW_BMPC_PORT_WIDTH                      4u
#define ESW_BMPC_PORT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_PORT_SHIFT))&ESW_BMPC_PORT_MASK)
#define ESW_BMPC_MSGTX_MASK                      0x20u
#define ESW_BMPC_MSGTX_SHIFT                     5u
#define ESW_BMPC_MSGTX_WIDTH                     1u
#define ESW_BMPC_MSGTX(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_MSGTX_SHIFT))&ESW_BMPC_MSGTX_MASK)
#define ESW_BMPC_EN_MASK                         0x40u
#define ESW_BMPC_EN_SHIFT                        6u
#define ESW_BMPC_EN_WIDTH                        1u
#define ESW_BMPC_EN(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_EN_SHIFT))&ESW_BMPC_EN_MASK)
#define ESW_BMPC_DIS_MASK                        0x80u
#define ESW_BMPC_DIS_SHIFT                       7u
#define ESW_BMPC_DIS_WIDTH                       1u
#define ESW_BMPC_DIS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_DIS_SHIFT))&ESW_BMPC_DIS_MASK)
#define ESW_BMPC_PRIORITY_MASK                   0xE000u
#define ESW_BMPC_PRIORITY_SHIFT                  13u
#define ESW_BMPC_PRIORITY_WIDTH                  3u
#define ESW_BMPC_PRIORITY(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_PRIORITY_SHIFT))&ESW_BMPC_PRIORITY_MASK)
#define ESW_BMPC_PORTMASK_MASK                   0x70000u
#define ESW_BMPC_PORTMASK_SHIFT                  16u
#define ESW_BMPC_PORTMASK_WIDTH                  3u
#define ESW_BMPC_PORTMASK(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_BMPC_PORTMASK_SHIFT))&ESW_BMPC_PORTMASK_MASK)
/* MODE Bit Fields */
#define ESW_MODE_SWRST_MASK                      0x1u
#define ESW_MODE_SWRST_SHIFT                     0u
#define ESW_MODE_SWRST_WIDTH                     1u
#define ESW_MODE_SWRST(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_MODE_SWRST_SHIFT))&ESW_MODE_SWRST_MASK)
#define ESW_MODE_SWEN_MASK                       0x2u
#define ESW_MODE_SWEN_SHIFT                      1u
#define ESW_MODE_SWEN_WIDTH                      1u
#define ESW_MODE_SWEN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MODE_SWEN_SHIFT))&ESW_MODE_SWEN_MASK)
#define ESW_MODE_VIDTMEN_MASK                    0x4u
#define ESW_MODE_VIDTMEN_SHIFT                   2u
#define ESW_MODE_VIDTMEN_WIDTH                   1u
#define ESW_MODE_VIDTMEN(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_MODE_VIDTMEN_SHIFT))&ESW_MODE_VIDTMEN_MASK)
#define ESW_MODE_LFFC_MASK                       0x8u
#define ESW_MODE_LFFC_SHIFT                      3u
#define ESW_MODE_LFFC_WIDTH                      1u
#define ESW_MODE_LFFC(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MODE_LFFC_SHIFT))&ESW_MODE_LFFC_MASK)
#define ESW_MODE_LBPDUD_MASK                     0x10u
#define ESW_MODE_LBPDUD_SHIFT                    4u
#define ESW_MODE_LBPDUD_WIDTH                    1u
#define ESW_MODE_LBPDUD(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_MODE_LBPDUD_SHIFT))&ESW_MODE_LBPDUD_MASK)
#define ESW_MODE_CRCTRAN_MASK                    0x100u
#define ESW_MODE_CRCTRAN_SHIFT                   8u
#define ESW_MODE_CRCTRAN_WIDTH                   1u
#define ESW_MODE_CRCTRAN(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_MODE_CRCTRAN_SHIFT))&ESW_MODE_CRCTRAN_MASK)
#define ESW_MODE_P0CT_MASK                       0x200u
#define ESW_MODE_P0CT_SHIFT                      9u
#define ESW_MODE_P0CT_WIDTH                      1u
#define ESW_MODE_P0CT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MODE_P0CT_SHIFT))&ESW_MODE_P0CT_MASK)
#define ESW_MODE_UCASTD_MASK                     0x700000u
#define ESW_MODE_UCASTD_SHIFT                    20u
#define ESW_MODE_UCASTD_WIDTH                    3u
#define ESW_MODE_UCASTD(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_MODE_UCASTD_SHIFT))&ESW_MODE_UCASTD_MASK)
#define ESW_MODE_STATRST_MASK                    0x80000000u
#define ESW_MODE_STATRST_SHIFT                   31u
#define ESW_MODE_STATRST_WIDTH                   1u
#define ESW_MODE_STATRST(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_MODE_STATRST_SHIFT))&ESW_MODE_STATRST_MASK)
/* VIMSEL Bit Fields */
#define ESW_VIMSEL_IM0_MASK                      0x3u
#define ESW_VIMSEL_IM0_SHIFT                     0u
#define ESW_VIMSEL_IM0_WIDTH                     2u
#define ESW_VIMSEL_IM0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMSEL_IM0_SHIFT))&ESW_VIMSEL_IM0_MASK)
#define ESW_VIMSEL_IM1_MASK                      0xCu
#define ESW_VIMSEL_IM1_SHIFT                     2u
#define ESW_VIMSEL_IM1_WIDTH                     2u
#define ESW_VIMSEL_IM1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMSEL_IM1_SHIFT))&ESW_VIMSEL_IM1_MASK)
#define ESW_VIMSEL_IM2_MASK                      0x30u
#define ESW_VIMSEL_IM2_SHIFT                     4u
#define ESW_VIMSEL_IM2_WIDTH                     2u
#define ESW_VIMSEL_IM2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMSEL_IM2_SHIFT))&ESW_VIMSEL_IM2_MASK)
/* VOMSEL Bit Fields */
#define ESW_VOMSEL_OM0_MASK                      0x3u
#define ESW_VOMSEL_OM0_SHIFT                     0u
#define ESW_VOMSEL_OM0_WIDTH                     2u
#define ESW_VOMSEL_OM0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VOMSEL_OM0_SHIFT))&ESW_VOMSEL_OM0_MASK)
#define ESW_VOMSEL_OM1_MASK                      0xCu
#define ESW_VOMSEL_OM1_SHIFT                     2u
#define ESW_VOMSEL_OM1_WIDTH                     2u
#define ESW_VOMSEL_OM1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VOMSEL_OM1_SHIFT))&ESW_VOMSEL_OM1_MASK)
#define ESW_VOMSEL_OM2_MASK                      0x30u
#define ESW_VOMSEL_OM2_SHIFT                     4u
#define ESW_VOMSEL_OM2_WIDTH                     2u
#define ESW_VOMSEL_OM2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VOMSEL_OM2_SHIFT))&ESW_VOMSEL_OM2_MASK)
/* VIMEN Bit Fields */
#define ESW_VIMEN_EN0_MASK                       0x1u
#define ESW_VIMEN_EN0_SHIFT                      0u
#define ESW_VIMEN_EN0_WIDTH                      1u
#define ESW_VIMEN_EN0(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VIMEN_EN0_SHIFT))&ESW_VIMEN_EN0_MASK)
#define ESW_VIMEN_EN1_MASK                       0x2u
#define ESW_VIMEN_EN1_SHIFT                      1u
#define ESW_VIMEN_EN1_WIDTH                      1u
#define ESW_VIMEN_EN1(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VIMEN_EN1_SHIFT))&ESW_VIMEN_EN1_MASK)
#define ESW_VIMEN_EN2_MASK                       0x4u
#define ESW_VIMEN_EN2_SHIFT                      2u
#define ESW_VIMEN_EN2_WIDTH                      1u
#define ESW_VIMEN_EN2(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_VIMEN_EN2_SHIFT))&ESW_VIMEN_EN2_MASK)
#define ESW_VIMEN_ETO0_MASK                      0x10000u
#define ESW_VIMEN_ETO0_SHIFT                     16u
#define ESW_VIMEN_ETO0_WIDTH                     1u
#define ESW_VIMEN_ETO0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMEN_ETO0_SHIFT))&ESW_VIMEN_ETO0_MASK)
#define ESW_VIMEN_ETO1_MASK                      0x20000u
#define ESW_VIMEN_ETO1_SHIFT                     17u
#define ESW_VIMEN_ETO1_WIDTH                     1u
#define ESW_VIMEN_ETO1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMEN_ETO1_SHIFT))&ESW_VIMEN_ETO1_MASK)
#define ESW_VIMEN_ETO2_MASK                      0x40000u
#define ESW_VIMEN_ETO2_SHIFT                     18u
#define ESW_VIMEN_ETO2_WIDTH                     1u
#define ESW_VIMEN_ETO2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VIMEN_ETO2_SHIFT))&ESW_VIMEN_ETO2_MASK)
/* VID Bit Fields */
#define ESW_VID_TAG_MASK                         0xFFFFFFFFu
#define ESW_VID_TAG_SHIFT                        0u
#define ESW_VID_TAG_WIDTH                        32u
#define ESW_VID_TAG(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_VID_TAG_SHIFT))&ESW_VID_TAG_MASK)
/* RCMR Bit Fields */
#define ESW_RCMR_CMP0_MASK                       0x7u
#define ESW_RCMR_CMP0_SHIFT                      0u
#define ESW_RCMR_CMP0_WIDTH                      3u
#define ESW_RCMR_CMP0(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RCMR_CMP0_SHIFT))&ESW_RCMR_CMP0_MASK)
#define ESW_RCMR_CMP1_MASK                       0x70u
#define ESW_RCMR_CMP1_SHIFT                      4u
#define ESW_RCMR_CMP1_WIDTH                      3u
#define ESW_RCMR_CMP1(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RCMR_CMP1_SHIFT))&ESW_RCMR_CMP1_MASK)
#define ESW_RCMR_CMP2_MASK                       0x700u
#define ESW_RCMR_CMP2_SHIFT                      8u
#define ESW_RCMR_CMP2_WIDTH                      3u
#define ESW_RCMR_CMP2(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RCMR_CMP2_SHIFT))&ESW_RCMR_CMP2_MASK)
#define ESW_RCMR_CMP3_MASK                       0x7000u
#define ESW_RCMR_CMP3_SHIFT                      12u
#define ESW_RCMR_CMP3_WIDTH                      3u
#define ESW_RCMR_CMP3(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RCMR_CMP3_SHIFT))&ESW_RCMR_CMP3_MASK)
#define ESW_RCMR_MATCHEN_MASK                    0x10000u
#define ESW_RCMR_MATCHEN_SHIFT                   16u
#define ESW_RCMR_MATCHEN_WIDTH                   1u
#define ESW_RCMR_MATCHEN(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_RCMR_MATCHEN_SHIFT))&ESW_RCMR_MATCHEN_MASK)
/* MCR Bit Fields */
#define ESW_MCR_PORT_MASK                        0xFu
#define ESW_MCR_PORT_SHIFT                       0u
#define ESW_MCR_PORT_WIDTH                       4u
#define ESW_MCR_PORT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_MCR_PORT_SHIFT))&ESW_MCR_PORT_MASK)
#define ESW_MCR_MEN_MASK                         0x10u
#define ESW_MCR_MEN_SHIFT                        4u
#define ESW_MCR_MEN_WIDTH                        1u
#define ESW_MCR_MEN(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_MCR_MEN_SHIFT))&ESW_MCR_MEN_MASK)
#define ESW_MCR_INGMAP_MASK                      0x20u
#define ESW_MCR_INGMAP_SHIFT                     5u
#define ESW_MCR_INGMAP_WIDTH                     1u
#define ESW_MCR_INGMAP(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_MCR_INGMAP_SHIFT))&ESW_MCR_INGMAP_MASK)
#define ESW_MCR_EGMAP_MASK                       0x40u
#define ESW_MCR_EGMAP_SHIFT                      6u
#define ESW_MCR_EGMAP_WIDTH                      1u
#define ESW_MCR_EGMAP(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MCR_EGMAP_SHIFT))&ESW_MCR_EGMAP_MASK)
#define ESW_MCR_INGSA_MASK                       0x80u
#define ESW_MCR_INGSA_SHIFT                      7u
#define ESW_MCR_INGSA_WIDTH                      1u
#define ESW_MCR_INGSA(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MCR_INGSA_SHIFT))&ESW_MCR_INGSA_MASK)
#define ESW_MCR_INGDA_MASK                       0x100u
#define ESW_MCR_INGDA_SHIFT                      8u
#define ESW_MCR_INGDA_WIDTH                      1u
#define ESW_MCR_INGDA(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MCR_INGDA_SHIFT))&ESW_MCR_INGDA_MASK)
#define ESW_MCR_EGSA_MASK                        0x200u
#define ESW_MCR_EGSA_SHIFT                       9u
#define ESW_MCR_EGSA_WIDTH                       1u
#define ESW_MCR_EGSA(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_MCR_EGSA_SHIFT))&ESW_MCR_EGSA_MASK)
#define ESW_MCR_EGDA_MASK                        0x400u
#define ESW_MCR_EGDA_SHIFT                       10u
#define ESW_MCR_EGDA_WIDTH                       1u
#define ESW_MCR_EGDA(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_MCR_EGDA_SHIFT))&ESW_MCR_EGDA_MASK)
/* EGMAP Bit Fields */
#define ESW_EGMAP_EG0_MASK                       0x1u
#define ESW_EGMAP_EG0_SHIFT                      0u
#define ESW_EGMAP_EG0_WIDTH                      1u
#define ESW_EGMAP_EG0(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_EGMAP_EG0_SHIFT))&ESW_EGMAP_EG0_MASK)
#define ESW_EGMAP_EG1_MASK                       0x2u
#define ESW_EGMAP_EG1_SHIFT                      1u
#define ESW_EGMAP_EG1_WIDTH                      1u
#define ESW_EGMAP_EG1(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_EGMAP_EG1_SHIFT))&ESW_EGMAP_EG1_MASK)
#define ESW_EGMAP_EG2_MASK                       0x4u
#define ESW_EGMAP_EG2_SHIFT                      2u
#define ESW_EGMAP_EG2_WIDTH                      1u
#define ESW_EGMAP_EG2(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_EGMAP_EG2_SHIFT))&ESW_EGMAP_EG2_MASK)
/* INGMAP Bit Fields */
#define ESW_INGMAP_ING0_MASK                     0x1u
#define ESW_INGMAP_ING0_SHIFT                    0u
#define ESW_INGMAP_ING0_WIDTH                    1u
#define ESW_INGMAP_ING0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_INGMAP_ING0_SHIFT))&ESW_INGMAP_ING0_MASK)
#define ESW_INGMAP_ING1_MASK                     0x2u
#define ESW_INGMAP_ING1_SHIFT                    1u
#define ESW_INGMAP_ING1_WIDTH                    1u
#define ESW_INGMAP_ING1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_INGMAP_ING1_SHIFT))&ESW_INGMAP_ING1_MASK)
#define ESW_INGMAP_ING2_MASK                     0x4u
#define ESW_INGMAP_ING2_SHIFT                    2u
#define ESW_INGMAP_ING2_WIDTH                    1u
#define ESW_INGMAP_ING2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_INGMAP_ING2_SHIFT))&ESW_INGMAP_ING2_MASK)
/* INGSAL Bit Fields */
#define ESW_INGSAL_ADDLOW_MASK                   0xFFFFFFFFu
#define ESW_INGSAL_ADDLOW_SHIFT                  0u
#define ESW_INGSAL_ADDLOW_WIDTH                  32u
#define ESW_INGSAL_ADDLOW(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_INGSAL_ADDLOW_SHIFT))&ESW_INGSAL_ADDLOW_MASK)
/* INGSAH Bit Fields */
#define ESW_INGSAH_ADDHIGH_MASK                  0xFFFFu
#define ESW_INGSAH_ADDHIGH_SHIFT                 0u
#define ESW_INGSAH_ADDHIGH_WIDTH                 16u
#define ESW_INGSAH_ADDHIGH(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_INGSAH_ADDHIGH_SHIFT))&ESW_INGSAH_ADDHIGH_MASK)
/* INGDAL Bit Fields */
#define ESW_INGDAL_ADDLOW_MASK                   0xFFFFFFFFu
#define ESW_INGDAL_ADDLOW_SHIFT                  0u
#define ESW_INGDAL_ADDLOW_WIDTH                  32u
#define ESW_INGDAL_ADDLOW(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_INGDAL_ADDLOW_SHIFT))&ESW_INGDAL_ADDLOW_MASK)
/* INGDAH Bit Fields */
#define ESW_INGDAH_ADDHIGH_MASK                  0xFFFFu
#define ESW_INGDAH_ADDHIGH_SHIFT                 0u
#define ESW_INGDAH_ADDHIGH_WIDTH                 16u
#define ESW_INGDAH_ADDHIGH(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_INGDAH_ADDHIGH_SHIFT))&ESW_INGDAH_ADDHIGH_MASK)
/* EGSAL Bit Fields */
#define ESW_EGSAL_ADDLOW_MASK                    0xFFFFFFFFu
#define ESW_EGSAL_ADDLOW_SHIFT                   0u
#define ESW_EGSAL_ADDLOW_WIDTH                   32u
#define ESW_EGSAL_ADDLOW(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_EGSAL_ADDLOW_SHIFT))&ESW_EGSAL_ADDLOW_MASK)
/* EGSAH Bit Fields */
#define ESW_EGSAH_ADDHIGH_MASK                   0xFFFFu
#define ESW_EGSAH_ADDHIGH_SHIFT                  0u
#define ESW_EGSAH_ADDHIGH_WIDTH                  16u
#define ESW_EGSAH_ADDHIGH(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_EGSAH_ADDHIGH_SHIFT))&ESW_EGSAH_ADDHIGH_MASK)
/* EGDAL Bit Fields */
#define ESW_EGDAL_ADDLOW_MASK                    0xFFFFFFFFu
#define ESW_EGDAL_ADDLOW_SHIFT                   0u
#define ESW_EGDAL_ADDLOW_WIDTH                   32u
#define ESW_EGDAL_ADDLOW(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_EGDAL_ADDLOW_SHIFT))&ESW_EGDAL_ADDLOW_MASK)
/* EGDAH Bit Fields */
#define ESW_EGDAH_ADDHIGH_MASK                   0xFFFFu
#define ESW_EGDAH_ADDHIGH_SHIFT                  0u
#define ESW_EGDAH_ADDHIGH_WIDTH                  16u
#define ESW_EGDAH_ADDHIGH(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_EGDAH_ADDHIGH_SHIFT))&ESW_EGDAH_ADDHIGH_MASK)
/* MCVAL Bit Fields */
#define ESW_MCVAL_COUNT_MASK                     0xFFu
#define ESW_MCVAL_COUNT_SHIFT                    0u
#define ESW_MCVAL_COUNT_WIDTH                    8u
#define ESW_MCVAL_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_MCVAL_COUNT_SHIFT))&ESW_MCVAL_COUNT_MASK)
/* MMSR Bit Fields */
#define ESW_MMSR_BUSY_MASK                       0x1u
#define ESW_MMSR_BUSY_SHIFT                      0u
#define ESW_MMSR_BUSY_WIDTH                      1u
#define ESW_MMSR_BUSY(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_BUSY_SHIFT))&ESW_MMSR_BUSY_MASK)
#define ESW_MMSR_NOCELL_MASK                     0x2u
#define ESW_MMSR_NOCELL_SHIFT                    1u
#define ESW_MMSR_NOCELL_WIDTH                    1u
#define ESW_MMSR_NOCELL(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_NOCELL_SHIFT))&ESW_MMSR_NOCELL_MASK)
#define ESW_MMSR_MEMFULL_MASK                    0x4u
#define ESW_MMSR_MEMFULL_SHIFT                   2u
#define ESW_MMSR_MEMFULL_WIDTH                   1u
#define ESW_MMSR_MEMFULL(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_MEMFULL_SHIFT))&ESW_MMSR_MEMFULL_MASK)
#define ESW_MMSR_MFLATCH_MASK                    0x8u
#define ESW_MMSR_MFLATCH_SHIFT                   3u
#define ESW_MMSR_MFLATCH_WIDTH                   1u
#define ESW_MMSR_MFLATCH(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_MFLATCH_SHIFT))&ESW_MMSR_MFLATCH_MASK)
#define ESW_MMSR_DQGRNT_MASK                     0x40u
#define ESW_MMSR_DQGRNT_SHIFT                    6u
#define ESW_MMSR_DQGRNT_WIDTH                    1u
#define ESW_MMSR_DQGRNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_DQGRNT_SHIFT))&ESW_MMSR_DQGRNT_MASK)
#define ESW_MMSR_CELLS_AVAIL_MASK                0xFF0000u
#define ESW_MMSR_CELLS_AVAIL_SHIFT               16u
#define ESW_MMSR_CELLS_AVAIL_WIDTH               8u
#define ESW_MMSR_CELLS_AVAIL(x)                  (((uint32_t)(((uint32_t)(x))<<ESW_MMSR_CELLS_AVAIL_SHIFT))&ESW_MMSR_CELLS_AVAIL_MASK)
/* LMT Bit Fields */
#define ESW_LMT_THRESH_MASK                      0xFFu
#define ESW_LMT_THRESH_SHIFT                     0u
#define ESW_LMT_THRESH_WIDTH                     8u
#define ESW_LMT_THRESH(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_LMT_THRESH_SHIFT))&ESW_LMT_THRESH_MASK)
/* LFC Bit Fields */
#define ESW_LFC_COUNT_MASK                       0xFFFFFFFFu
#define ESW_LFC_COUNT_SHIFT                      0u
#define ESW_LFC_COUNT_WIDTH                      32u
#define ESW_LFC_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_LFC_COUNT_SHIFT))&ESW_LFC_COUNT_MASK)
/* PCSR Bit Fields */
#define ESW_PCSR_PC0_MASK                        0x1u
#define ESW_PCSR_PC0_SHIFT                       0u
#define ESW_PCSR_PC0_WIDTH                       1u
#define ESW_PCSR_PC0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PCSR_PC0_SHIFT))&ESW_PCSR_PC0_MASK)
#define ESW_PCSR_PC1_MASK                        0x2u
#define ESW_PCSR_PC1_SHIFT                       1u
#define ESW_PCSR_PC1_WIDTH                       1u
#define ESW_PCSR_PC1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PCSR_PC1_SHIFT))&ESW_PCSR_PC1_MASK)
#define ESW_PCSR_PC2_MASK                        0x4u
#define ESW_PCSR_PC2_SHIFT                       2u
#define ESW_PCSR_PC2_WIDTH                       1u
#define ESW_PCSR_PC2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PCSR_PC2_SHIFT))&ESW_PCSR_PC2_MASK)
/* IOSR Bit Fields */
#define ESW_IOSR_OR0_MASK                        0x1u
#define ESW_IOSR_OR0_SHIFT                       0u
#define ESW_IOSR_OR0_WIDTH                       1u
#define ESW_IOSR_OR0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IOSR_OR0_SHIFT))&ESW_IOSR_OR0_MASK)
#define ESW_IOSR_OR1_MASK                        0x2u
#define ESW_IOSR_OR1_SHIFT                       1u
#define ESW_IOSR_OR1_WIDTH                       1u
#define ESW_IOSR_OR1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IOSR_OR1_SHIFT))&ESW_IOSR_OR1_MASK)
#define ESW_IOSR_OR2_MASK                        0x4u
#define ESW_IOSR_OR2_SHIFT                       2u
#define ESW_IOSR_OR2_WIDTH                       1u
#define ESW_IOSR_OR2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IOSR_OR2_SHIFT))&ESW_IOSR_OR2_MASK)
#define ESW_IOSR_IR0_MASK                        0x10000u
#define ESW_IOSR_IR0_SHIFT                       16u
#define ESW_IOSR_IR0_WIDTH                       1u
#define ESW_IOSR_IR0(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IOSR_IR0_SHIFT))&ESW_IOSR_IR0_MASK)
#define ESW_IOSR_IR1_MASK                        0x20000u
#define ESW_IOSR_IR1_SHIFT                       17u
#define ESW_IOSR_IR1_WIDTH                       1u
#define ESW_IOSR_IR1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IOSR_IR1_SHIFT))&ESW_IOSR_IR1_MASK)
#define ESW_IOSR_IR2_MASK                        0x40000u
#define ESW_IOSR_IR2_SHIFT                       18u
#define ESW_IOSR_IR2_WIDTH                       1u
#define ESW_IOSR_IR2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IOSR_IR2_SHIFT))&ESW_IOSR_IR2_MASK)
/* QWT Bit Fields */
#define ESW_QWT_Q0WT_MASK                        0x1Fu
#define ESW_QWT_Q0WT_SHIFT                       0u
#define ESW_QWT_Q0WT_WIDTH                       5u
#define ESW_QWT_Q0WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q0WT_SHIFT))&ESW_QWT_Q0WT_MASK)
#define ESW_QWT_Q1WT_MASK                        0x1F00u
#define ESW_QWT_Q1WT_SHIFT                       8u
#define ESW_QWT_Q1WT_WIDTH                       5u
#define ESW_QWT_Q1WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q1WT_SHIFT))&ESW_QWT_Q1WT_MASK)
#define ESW_QWT_Q2WT_MASK                        0x1F0000u
#define ESW_QWT_Q2WT_SHIFT                       16u
#define ESW_QWT_Q2WT_WIDTH                       5u
#define ESW_QWT_Q2WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q2WT_SHIFT))&ESW_QWT_Q2WT_MASK)
#define ESW_QWT_Q3WT_MASK                        0x1F000000u
#define ESW_QWT_Q3WT_SHIFT                       24u
#define ESW_QWT_Q3WT_WIDTH                       5u
#define ESW_QWT_Q3WT(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_QWT_Q3WT_SHIFT))&ESW_QWT_Q3WT_MASK)
/* P0BCT Bit Fields */
#define ESW_P0BCT_THRESH_MASK                    0xFFu
#define ESW_P0BCT_THRESH_SHIFT                   0u
#define ESW_P0BCT_THRESH_WIDTH                   8u
#define ESW_P0BCT_THRESH(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P0BCT_THRESH_SHIFT))&ESW_P0BCT_THRESH_MASK)
/* FFEN Bit Fields */
#define ESW_FFEN_FEN_MASK                        0x1u
#define ESW_FFEN_FEN_SHIFT                       0u
#define ESW_FFEN_FEN_WIDTH                       1u
#define ESW_FFEN_FEN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_FFEN_FEN_SHIFT))&ESW_FFEN_FEN_MASK)
#define ESW_FFEN_FD_MASK                         0xCu
#define ESW_FFEN_FD_SHIFT                        2u
#define ESW_FFEN_FD_WIDTH                        2u
#define ESW_FFEN_FD(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_FFEN_FD_SHIFT))&ESW_FFEN_FD_MASK)
/* PSNP1 Bit Fields */
#define ESW_PSNP1_EN_MASK                        0x1u
#define ESW_PSNP1_EN_SHIFT                       0u
#define ESW_PSNP1_EN_WIDTH                       1u
#define ESW_PSNP1_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_EN_SHIFT))&ESW_PSNP1_EN_MASK)
#define ESW_PSNP1_MODE_MASK                      0x6u
#define ESW_PSNP1_MODE_SHIFT                     1u
#define ESW_PSNP1_MODE_WIDTH                     2u
#define ESW_PSNP1_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_MODE_SHIFT))&ESW_PSNP1_MODE_MASK)
#define ESW_PSNP1_CD_MASK                        0x8u
#define ESW_PSNP1_CD_SHIFT                       3u
#define ESW_PSNP1_CD_WIDTH                       1u
#define ESW_PSNP1_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_CD_SHIFT))&ESW_PSNP1_CD_MASK)
#define ESW_PSNP1_CS_MASK                        0x10u
#define ESW_PSNP1_CS_SHIFT                       4u
#define ESW_PSNP1_CS_WIDTH                       1u
#define ESW_PSNP1_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_CS_SHIFT))&ESW_PSNP1_CS_MASK)
#define ESW_PSNP1_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP1_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP1_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP1_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP1_PORT_COMPARE_SHIFT))&ESW_PSNP1_PORT_COMPARE_MASK)
/* PSNP2 Bit Fields */
#define ESW_PSNP2_EN_MASK                        0x1u
#define ESW_PSNP2_EN_SHIFT                       0u
#define ESW_PSNP2_EN_WIDTH                       1u
#define ESW_PSNP2_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_EN_SHIFT))&ESW_PSNP2_EN_MASK)
#define ESW_PSNP2_MODE_MASK                      0x6u
#define ESW_PSNP2_MODE_SHIFT                     1u
#define ESW_PSNP2_MODE_WIDTH                     2u
#define ESW_PSNP2_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_MODE_SHIFT))&ESW_PSNP2_MODE_MASK)
#define ESW_PSNP2_CD_MASK                        0x8u
#define ESW_PSNP2_CD_SHIFT                       3u
#define ESW_PSNP2_CD_WIDTH                       1u
#define ESW_PSNP2_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_CD_SHIFT))&ESW_PSNP2_CD_MASK)
#define ESW_PSNP2_CS_MASK                        0x10u
#define ESW_PSNP2_CS_SHIFT                       4u
#define ESW_PSNP2_CS_WIDTH                       1u
#define ESW_PSNP2_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_CS_SHIFT))&ESW_PSNP2_CS_MASK)
#define ESW_PSNP2_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP2_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP2_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP2_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP2_PORT_COMPARE_SHIFT))&ESW_PSNP2_PORT_COMPARE_MASK)
/* PSNP3 Bit Fields */
#define ESW_PSNP3_EN_MASK                        0x1u
#define ESW_PSNP3_EN_SHIFT                       0u
#define ESW_PSNP3_EN_WIDTH                       1u
#define ESW_PSNP3_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_EN_SHIFT))&ESW_PSNP3_EN_MASK)
#define ESW_PSNP3_MODE_MASK                      0x6u
#define ESW_PSNP3_MODE_SHIFT                     1u
#define ESW_PSNP3_MODE_WIDTH                     2u
#define ESW_PSNP3_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_MODE_SHIFT))&ESW_PSNP3_MODE_MASK)
#define ESW_PSNP3_CD_MASK                        0x8u
#define ESW_PSNP3_CD_SHIFT                       3u
#define ESW_PSNP3_CD_WIDTH                       1u
#define ESW_PSNP3_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_CD_SHIFT))&ESW_PSNP3_CD_MASK)
#define ESW_PSNP3_CS_MASK                        0x10u
#define ESW_PSNP3_CS_SHIFT                       4u
#define ESW_PSNP3_CS_WIDTH                       1u
#define ESW_PSNP3_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_CS_SHIFT))&ESW_PSNP3_CS_MASK)
#define ESW_PSNP3_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP3_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP3_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP3_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP3_PORT_COMPARE_SHIFT))&ESW_PSNP3_PORT_COMPARE_MASK)
/* PSNP4 Bit Fields */
#define ESW_PSNP4_EN_MASK                        0x1u
#define ESW_PSNP4_EN_SHIFT                       0u
#define ESW_PSNP4_EN_WIDTH                       1u
#define ESW_PSNP4_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_EN_SHIFT))&ESW_PSNP4_EN_MASK)
#define ESW_PSNP4_MODE_MASK                      0x6u
#define ESW_PSNP4_MODE_SHIFT                     1u
#define ESW_PSNP4_MODE_WIDTH                     2u
#define ESW_PSNP4_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_MODE_SHIFT))&ESW_PSNP4_MODE_MASK)
#define ESW_PSNP4_CD_MASK                        0x8u
#define ESW_PSNP4_CD_SHIFT                       3u
#define ESW_PSNP4_CD_WIDTH                       1u
#define ESW_PSNP4_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_CD_SHIFT))&ESW_PSNP4_CD_MASK)
#define ESW_PSNP4_CS_MASK                        0x10u
#define ESW_PSNP4_CS_SHIFT                       4u
#define ESW_PSNP4_CS_WIDTH                       1u
#define ESW_PSNP4_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_CS_SHIFT))&ESW_PSNP4_CS_MASK)
#define ESW_PSNP4_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP4_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP4_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP4_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP4_PORT_COMPARE_SHIFT))&ESW_PSNP4_PORT_COMPARE_MASK)
/* PSNP5 Bit Fields */
#define ESW_PSNP5_EN_MASK                        0x1u
#define ESW_PSNP5_EN_SHIFT                       0u
#define ESW_PSNP5_EN_WIDTH                       1u
#define ESW_PSNP5_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_EN_SHIFT))&ESW_PSNP5_EN_MASK)
#define ESW_PSNP5_MODE_MASK                      0x6u
#define ESW_PSNP5_MODE_SHIFT                     1u
#define ESW_PSNP5_MODE_WIDTH                     2u
#define ESW_PSNP5_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_MODE_SHIFT))&ESW_PSNP5_MODE_MASK)
#define ESW_PSNP5_CD_MASK                        0x8u
#define ESW_PSNP5_CD_SHIFT                       3u
#define ESW_PSNP5_CD_WIDTH                       1u
#define ESW_PSNP5_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_CD_SHIFT))&ESW_PSNP5_CD_MASK)
#define ESW_PSNP5_CS_MASK                        0x10u
#define ESW_PSNP5_CS_SHIFT                       4u
#define ESW_PSNP5_CS_WIDTH                       1u
#define ESW_PSNP5_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_CS_SHIFT))&ESW_PSNP5_CS_MASK)
#define ESW_PSNP5_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP5_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP5_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP5_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP5_PORT_COMPARE_SHIFT))&ESW_PSNP5_PORT_COMPARE_MASK)
/* PSNP6 Bit Fields */
#define ESW_PSNP6_EN_MASK                        0x1u
#define ESW_PSNP6_EN_SHIFT                       0u
#define ESW_PSNP6_EN_WIDTH                       1u
#define ESW_PSNP6_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_EN_SHIFT))&ESW_PSNP6_EN_MASK)
#define ESW_PSNP6_MODE_MASK                      0x6u
#define ESW_PSNP6_MODE_SHIFT                     1u
#define ESW_PSNP6_MODE_WIDTH                     2u
#define ESW_PSNP6_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_MODE_SHIFT))&ESW_PSNP6_MODE_MASK)
#define ESW_PSNP6_CD_MASK                        0x8u
#define ESW_PSNP6_CD_SHIFT                       3u
#define ESW_PSNP6_CD_WIDTH                       1u
#define ESW_PSNP6_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_CD_SHIFT))&ESW_PSNP6_CD_MASK)
#define ESW_PSNP6_CS_MASK                        0x10u
#define ESW_PSNP6_CS_SHIFT                       4u
#define ESW_PSNP6_CS_WIDTH                       1u
#define ESW_PSNP6_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_CS_SHIFT))&ESW_PSNP6_CS_MASK)
#define ESW_PSNP6_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP6_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP6_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP6_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP6_PORT_COMPARE_SHIFT))&ESW_PSNP6_PORT_COMPARE_MASK)
/* PSNP7 Bit Fields */
#define ESW_PSNP7_EN_MASK                        0x1u
#define ESW_PSNP7_EN_SHIFT                       0u
#define ESW_PSNP7_EN_WIDTH                       1u
#define ESW_PSNP7_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_EN_SHIFT))&ESW_PSNP7_EN_MASK)
#define ESW_PSNP7_MODE_MASK                      0x6u
#define ESW_PSNP7_MODE_SHIFT                     1u
#define ESW_PSNP7_MODE_WIDTH                     2u
#define ESW_PSNP7_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_MODE_SHIFT))&ESW_PSNP7_MODE_MASK)
#define ESW_PSNP7_CD_MASK                        0x8u
#define ESW_PSNP7_CD_SHIFT                       3u
#define ESW_PSNP7_CD_WIDTH                       1u
#define ESW_PSNP7_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_CD_SHIFT))&ESW_PSNP7_CD_MASK)
#define ESW_PSNP7_CS_MASK                        0x10u
#define ESW_PSNP7_CS_SHIFT                       4u
#define ESW_PSNP7_CS_WIDTH                       1u
#define ESW_PSNP7_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_CS_SHIFT))&ESW_PSNP7_CS_MASK)
#define ESW_PSNP7_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP7_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP7_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP7_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP7_PORT_COMPARE_SHIFT))&ESW_PSNP7_PORT_COMPARE_MASK)
/* PSNP8 Bit Fields */
#define ESW_PSNP8_EN_MASK                        0x1u
#define ESW_PSNP8_EN_SHIFT                       0u
#define ESW_PSNP8_EN_WIDTH                       1u
#define ESW_PSNP8_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_EN_SHIFT))&ESW_PSNP8_EN_MASK)
#define ESW_PSNP8_MODE_MASK                      0x6u
#define ESW_PSNP8_MODE_SHIFT                     1u
#define ESW_PSNP8_MODE_WIDTH                     2u
#define ESW_PSNP8_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_MODE_SHIFT))&ESW_PSNP8_MODE_MASK)
#define ESW_PSNP8_CD_MASK                        0x8u
#define ESW_PSNP8_CD_SHIFT                       3u
#define ESW_PSNP8_CD_WIDTH                       1u
#define ESW_PSNP8_CD(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_CD_SHIFT))&ESW_PSNP8_CD_MASK)
#define ESW_PSNP8_CS_MASK                        0x10u
#define ESW_PSNP8_CS_SHIFT                       4u
#define ESW_PSNP8_CS_WIDTH                       1u
#define ESW_PSNP8_CS(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_CS_SHIFT))&ESW_PSNP8_CS_MASK)
#define ESW_PSNP8_PORT_COMPARE_MASK              0xFFFF0000u
#define ESW_PSNP8_PORT_COMPARE_SHIFT             16u
#define ESW_PSNP8_PORT_COMPARE_WIDTH             16u
#define ESW_PSNP8_PORT_COMPARE(x)                (((uint32_t)(((uint32_t)(x))<<ESW_PSNP8_PORT_COMPARE_SHIFT))&ESW_PSNP8_PORT_COMPARE_MASK)
/* IPSNP1 Bit Fields */
#define ESW_IPSNP1_EN_MASK                       0x1u
#define ESW_IPSNP1_EN_SHIFT                      0u
#define ESW_IPSNP1_EN_WIDTH                      1u
#define ESW_IPSNP1_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP1_EN_SHIFT))&ESW_IPSNP1_EN_MASK)
#define ESW_IPSNP1_MODE_MASK                     0x6u
#define ESW_IPSNP1_MODE_SHIFT                    1u
#define ESW_IPSNP1_MODE_WIDTH                    2u
#define ESW_IPSNP1_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP1_MODE_SHIFT))&ESW_IPSNP1_MODE_MASK)
#define ESW_IPSNP1_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP1_PROTOCOL_SHIFT                8u
#define ESW_IPSNP1_PROTOCOL_WIDTH                8u
#define ESW_IPSNP1_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP1_PROTOCOL_SHIFT))&ESW_IPSNP1_PROTOCOL_MASK)
/* IPSNP2 Bit Fields */
#define ESW_IPSNP2_EN_MASK                       0x1u
#define ESW_IPSNP2_EN_SHIFT                      0u
#define ESW_IPSNP2_EN_WIDTH                      1u
#define ESW_IPSNP2_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP2_EN_SHIFT))&ESW_IPSNP2_EN_MASK)
#define ESW_IPSNP2_MODE_MASK                     0x6u
#define ESW_IPSNP2_MODE_SHIFT                    1u
#define ESW_IPSNP2_MODE_WIDTH                    2u
#define ESW_IPSNP2_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP2_MODE_SHIFT))&ESW_IPSNP2_MODE_MASK)
#define ESW_IPSNP2_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP2_PROTOCOL_SHIFT                8u
#define ESW_IPSNP2_PROTOCOL_WIDTH                8u
#define ESW_IPSNP2_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP2_PROTOCOL_SHIFT))&ESW_IPSNP2_PROTOCOL_MASK)
/* IPSNP3 Bit Fields */
#define ESW_IPSNP3_EN_MASK                       0x1u
#define ESW_IPSNP3_EN_SHIFT                      0u
#define ESW_IPSNP3_EN_WIDTH                      1u
#define ESW_IPSNP3_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP3_EN_SHIFT))&ESW_IPSNP3_EN_MASK)
#define ESW_IPSNP3_MODE_MASK                     0x6u
#define ESW_IPSNP3_MODE_SHIFT                    1u
#define ESW_IPSNP3_MODE_WIDTH                    2u
#define ESW_IPSNP3_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP3_MODE_SHIFT))&ESW_IPSNP3_MODE_MASK)
#define ESW_IPSNP3_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP3_PROTOCOL_SHIFT                8u
#define ESW_IPSNP3_PROTOCOL_WIDTH                8u
#define ESW_IPSNP3_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP3_PROTOCOL_SHIFT))&ESW_IPSNP3_PROTOCOL_MASK)
/* IPSNP4 Bit Fields */
#define ESW_IPSNP4_EN_MASK                       0x1u
#define ESW_IPSNP4_EN_SHIFT                      0u
#define ESW_IPSNP4_EN_WIDTH                      1u
#define ESW_IPSNP4_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP4_EN_SHIFT))&ESW_IPSNP4_EN_MASK)
#define ESW_IPSNP4_MODE_MASK                     0x6u
#define ESW_IPSNP4_MODE_SHIFT                    1u
#define ESW_IPSNP4_MODE_WIDTH                    2u
#define ESW_IPSNP4_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP4_MODE_SHIFT))&ESW_IPSNP4_MODE_MASK)
#define ESW_IPSNP4_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP4_PROTOCOL_SHIFT                8u
#define ESW_IPSNP4_PROTOCOL_WIDTH                8u
#define ESW_IPSNP4_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP4_PROTOCOL_SHIFT))&ESW_IPSNP4_PROTOCOL_MASK)
/* IPSNP5 Bit Fields */
#define ESW_IPSNP5_EN_MASK                       0x1u
#define ESW_IPSNP5_EN_SHIFT                      0u
#define ESW_IPSNP5_EN_WIDTH                      1u
#define ESW_IPSNP5_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP5_EN_SHIFT))&ESW_IPSNP5_EN_MASK)
#define ESW_IPSNP5_MODE_MASK                     0x6u
#define ESW_IPSNP5_MODE_SHIFT                    1u
#define ESW_IPSNP5_MODE_WIDTH                    2u
#define ESW_IPSNP5_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP5_MODE_SHIFT))&ESW_IPSNP5_MODE_MASK)
#define ESW_IPSNP5_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP5_PROTOCOL_SHIFT                8u
#define ESW_IPSNP5_PROTOCOL_WIDTH                8u
#define ESW_IPSNP5_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP5_PROTOCOL_SHIFT))&ESW_IPSNP5_PROTOCOL_MASK)
/* IPSNP6 Bit Fields */
#define ESW_IPSNP6_EN_MASK                       0x1u
#define ESW_IPSNP6_EN_SHIFT                      0u
#define ESW_IPSNP6_EN_WIDTH                      1u
#define ESW_IPSNP6_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP6_EN_SHIFT))&ESW_IPSNP6_EN_MASK)
#define ESW_IPSNP6_MODE_MASK                     0x6u
#define ESW_IPSNP6_MODE_SHIFT                    1u
#define ESW_IPSNP6_MODE_WIDTH                    2u
#define ESW_IPSNP6_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP6_MODE_SHIFT))&ESW_IPSNP6_MODE_MASK)
#define ESW_IPSNP6_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP6_PROTOCOL_SHIFT                8u
#define ESW_IPSNP6_PROTOCOL_WIDTH                8u
#define ESW_IPSNP6_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP6_PROTOCOL_SHIFT))&ESW_IPSNP6_PROTOCOL_MASK)
/* IPSNP7 Bit Fields */
#define ESW_IPSNP7_EN_MASK                       0x1u
#define ESW_IPSNP7_EN_SHIFT                      0u
#define ESW_IPSNP7_EN_WIDTH                      1u
#define ESW_IPSNP7_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP7_EN_SHIFT))&ESW_IPSNP7_EN_MASK)
#define ESW_IPSNP7_MODE_MASK                     0x6u
#define ESW_IPSNP7_MODE_SHIFT                    1u
#define ESW_IPSNP7_MODE_WIDTH                    2u
#define ESW_IPSNP7_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP7_MODE_SHIFT))&ESW_IPSNP7_MODE_MASK)
#define ESW_IPSNP7_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP7_PROTOCOL_SHIFT                8u
#define ESW_IPSNP7_PROTOCOL_WIDTH                8u
#define ESW_IPSNP7_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP7_PROTOCOL_SHIFT))&ESW_IPSNP7_PROTOCOL_MASK)
/* IPSNP8 Bit Fields */
#define ESW_IPSNP8_EN_MASK                       0x1u
#define ESW_IPSNP8_EN_SHIFT                      0u
#define ESW_IPSNP8_EN_WIDTH                      1u
#define ESW_IPSNP8_EN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP8_EN_SHIFT))&ESW_IPSNP8_EN_MASK)
#define ESW_IPSNP8_MODE_MASK                     0x6u
#define ESW_IPSNP8_MODE_SHIFT                    1u
#define ESW_IPSNP8_MODE_WIDTH                    2u
#define ESW_IPSNP8_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP8_MODE_SHIFT))&ESW_IPSNP8_MODE_MASK)
#define ESW_IPSNP8_PROTOCOL_MASK                 0xFF00u
#define ESW_IPSNP8_PROTOCOL_SHIFT                8u
#define ESW_IPSNP8_PROTOCOL_WIDTH                8u
#define ESW_IPSNP8_PROTOCOL(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_IPSNP8_PROTOCOL_SHIFT))&ESW_IPSNP8_PROTOCOL_MASK)
/* P0VRES Bit Fields */
#define ESW_P0VRES_PRI0_MASK                     0x7u
#define ESW_P0VRES_PRI0_SHIFT                    0u
#define ESW_P0VRES_PRI0_WIDTH                    3u
#define ESW_P0VRES_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI0_SHIFT))&ESW_P0VRES_PRI0_MASK)
#define ESW_P0VRES_PRI1_MASK                     0x38u
#define ESW_P0VRES_PRI1_SHIFT                    3u
#define ESW_P0VRES_PRI1_WIDTH                    3u
#define ESW_P0VRES_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI1_SHIFT))&ESW_P0VRES_PRI1_MASK)
#define ESW_P0VRES_PRI2_MASK                     0x1C0u
#define ESW_P0VRES_PRI2_SHIFT                    6u
#define ESW_P0VRES_PRI2_WIDTH                    3u
#define ESW_P0VRES_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI2_SHIFT))&ESW_P0VRES_PRI2_MASK)
#define ESW_P0VRES_PRI3_MASK                     0xE00u
#define ESW_P0VRES_PRI3_SHIFT                    9u
#define ESW_P0VRES_PRI3_WIDTH                    3u
#define ESW_P0VRES_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI3_SHIFT))&ESW_P0VRES_PRI3_MASK)
#define ESW_P0VRES_PRI4_MASK                     0x7000u
#define ESW_P0VRES_PRI4_SHIFT                    12u
#define ESW_P0VRES_PRI4_WIDTH                    3u
#define ESW_P0VRES_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI4_SHIFT))&ESW_P0VRES_PRI4_MASK)
#define ESW_P0VRES_PRI5_MASK                     0x38000u
#define ESW_P0VRES_PRI5_SHIFT                    15u
#define ESW_P0VRES_PRI5_WIDTH                    3u
#define ESW_P0VRES_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI5_SHIFT))&ESW_P0VRES_PRI5_MASK)
#define ESW_P0VRES_PRI6_MASK                     0x1C0000u
#define ESW_P0VRES_PRI6_SHIFT                    18u
#define ESW_P0VRES_PRI6_WIDTH                    3u
#define ESW_P0VRES_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI6_SHIFT))&ESW_P0VRES_PRI6_MASK)
#define ESW_P0VRES_PRI7_MASK                     0xE00000u
#define ESW_P0VRES_PRI7_SHIFT                    21u
#define ESW_P0VRES_PRI7_WIDTH                    3u
#define ESW_P0VRES_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0VRES_PRI7_SHIFT))&ESW_P0VRES_PRI7_MASK)
/* P1VRES Bit Fields */
#define ESW_P1VRES_PRI0_MASK                     0x7u
#define ESW_P1VRES_PRI0_SHIFT                    0u
#define ESW_P1VRES_PRI0_WIDTH                    3u
#define ESW_P1VRES_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI0_SHIFT))&ESW_P1VRES_PRI0_MASK)
#define ESW_P1VRES_PRI1_MASK                     0x38u
#define ESW_P1VRES_PRI1_SHIFT                    3u
#define ESW_P1VRES_PRI1_WIDTH                    3u
#define ESW_P1VRES_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI1_SHIFT))&ESW_P1VRES_PRI1_MASK)
#define ESW_P1VRES_PRI2_MASK                     0x1C0u
#define ESW_P1VRES_PRI2_SHIFT                    6u
#define ESW_P1VRES_PRI2_WIDTH                    3u
#define ESW_P1VRES_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI2_SHIFT))&ESW_P1VRES_PRI2_MASK)
#define ESW_P1VRES_PRI3_MASK                     0xE00u
#define ESW_P1VRES_PRI3_SHIFT                    9u
#define ESW_P1VRES_PRI3_WIDTH                    3u
#define ESW_P1VRES_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI3_SHIFT))&ESW_P1VRES_PRI3_MASK)
#define ESW_P1VRES_PRI4_MASK                     0x7000u
#define ESW_P1VRES_PRI4_SHIFT                    12u
#define ESW_P1VRES_PRI4_WIDTH                    3u
#define ESW_P1VRES_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI4_SHIFT))&ESW_P1VRES_PRI4_MASK)
#define ESW_P1VRES_PRI5_MASK                     0x38000u
#define ESW_P1VRES_PRI5_SHIFT                    15u
#define ESW_P1VRES_PRI5_WIDTH                    3u
#define ESW_P1VRES_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI5_SHIFT))&ESW_P1VRES_PRI5_MASK)
#define ESW_P1VRES_PRI6_MASK                     0x1C0000u
#define ESW_P1VRES_PRI6_SHIFT                    18u
#define ESW_P1VRES_PRI6_WIDTH                    3u
#define ESW_P1VRES_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI6_SHIFT))&ESW_P1VRES_PRI6_MASK)
#define ESW_P1VRES_PRI7_MASK                     0xE00000u
#define ESW_P1VRES_PRI7_SHIFT                    21u
#define ESW_P1VRES_PRI7_WIDTH                    3u
#define ESW_P1VRES_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1VRES_PRI7_SHIFT))&ESW_P1VRES_PRI7_MASK)
/* P2VRES Bit Fields */
#define ESW_P2VRES_PRI0_MASK                     0x7u
#define ESW_P2VRES_PRI0_SHIFT                    0u
#define ESW_P2VRES_PRI0_WIDTH                    3u
#define ESW_P2VRES_PRI0(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI0_SHIFT))&ESW_P2VRES_PRI0_MASK)
#define ESW_P2VRES_PRI1_MASK                     0x38u
#define ESW_P2VRES_PRI1_SHIFT                    3u
#define ESW_P2VRES_PRI1_WIDTH                    3u
#define ESW_P2VRES_PRI1(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI1_SHIFT))&ESW_P2VRES_PRI1_MASK)
#define ESW_P2VRES_PRI2_MASK                     0x1C0u
#define ESW_P2VRES_PRI2_SHIFT                    6u
#define ESW_P2VRES_PRI2_WIDTH                    3u
#define ESW_P2VRES_PRI2(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI2_SHIFT))&ESW_P2VRES_PRI2_MASK)
#define ESW_P2VRES_PRI3_MASK                     0xE00u
#define ESW_P2VRES_PRI3_SHIFT                    9u
#define ESW_P2VRES_PRI3_WIDTH                    3u
#define ESW_P2VRES_PRI3(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI3_SHIFT))&ESW_P2VRES_PRI3_MASK)
#define ESW_P2VRES_PRI4_MASK                     0x7000u
#define ESW_P2VRES_PRI4_SHIFT                    12u
#define ESW_P2VRES_PRI4_WIDTH                    3u
#define ESW_P2VRES_PRI4(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI4_SHIFT))&ESW_P2VRES_PRI4_MASK)
#define ESW_P2VRES_PRI5_MASK                     0x38000u
#define ESW_P2VRES_PRI5_SHIFT                    15u
#define ESW_P2VRES_PRI5_WIDTH                    3u
#define ESW_P2VRES_PRI5(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI5_SHIFT))&ESW_P2VRES_PRI5_MASK)
#define ESW_P2VRES_PRI6_MASK                     0x1C0000u
#define ESW_P2VRES_PRI6_SHIFT                    18u
#define ESW_P2VRES_PRI6_WIDTH                    3u
#define ESW_P2VRES_PRI6(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI6_SHIFT))&ESW_P2VRES_PRI6_MASK)
#define ESW_P2VRES_PRI7_MASK                     0xE00000u
#define ESW_P2VRES_PRI7_SHIFT                    21u
#define ESW_P2VRES_PRI7_WIDTH                    3u
#define ESW_P2VRES_PRI7(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2VRES_PRI7_SHIFT))&ESW_P2VRES_PRI7_MASK)
/* IPRES Bit Fields */
#define ESW_IPRES_ADDRESS_MASK                   0xFFu
#define ESW_IPRES_ADDRESS_SHIFT                  0u
#define ESW_IPRES_ADDRESS_WIDTH                  8u
#define ESW_IPRES_ADDRESS(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_ADDRESS_SHIFT))&ESW_IPRES_ADDRESS_MASK)
#define ESW_IPRES_IPV4SEL_MASK                   0x100u
#define ESW_IPRES_IPV4SEL_SHIFT                  8u
#define ESW_IPRES_IPV4SEL_WIDTH                  1u
#define ESW_IPRES_IPV4SEL(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_IPV4SEL_SHIFT))&ESW_IPRES_IPV4SEL_MASK)
#define ESW_IPRES_PRI0_MASK                      0x600u
#define ESW_IPRES_PRI0_SHIFT                     9u
#define ESW_IPRES_PRI0_WIDTH                     2u
#define ESW_IPRES_PRI0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_PRI0_SHIFT))&ESW_IPRES_PRI0_MASK)
#define ESW_IPRES_PRI1_MASK                      0x1800u
#define ESW_IPRES_PRI1_SHIFT                     11u
#define ESW_IPRES_PRI1_WIDTH                     2u
#define ESW_IPRES_PRI1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_PRI1_SHIFT))&ESW_IPRES_PRI1_MASK)
#define ESW_IPRES_PRI2_MASK                      0x6000u
#define ESW_IPRES_PRI2_SHIFT                     13u
#define ESW_IPRES_PRI2_WIDTH                     2u
#define ESW_IPRES_PRI2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_PRI2_SHIFT))&ESW_IPRES_PRI2_MASK)
#define ESW_IPRES_READ_MASK                      0x80000000u
#define ESW_IPRES_READ_SHIFT                     31u
#define ESW_IPRES_READ_WIDTH                     1u
#define ESW_IPRES_READ(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_IPRES_READ_SHIFT))&ESW_IPRES_READ_MASK)
/* P0RES Bit Fields */
#define ESW_P0RES_VLAN_MASK                      0x1u
#define ESW_P0RES_VLAN_SHIFT                     0u
#define ESW_P0RES_VLAN_WIDTH                     1u
#define ESW_P0RES_VLAN(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P0RES_VLAN_SHIFT))&ESW_P0RES_VLAN_MASK)
#define ESW_P0RES_IP_MASK                        0x2u
#define ESW_P0RES_IP_SHIFT                       1u
#define ESW_P0RES_IP_WIDTH                       1u
#define ESW_P0RES_IP(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_P0RES_IP_SHIFT))&ESW_P0RES_IP_MASK)
#define ESW_P0RES_MAC_MASK                       0x4u
#define ESW_P0RES_MAC_SHIFT                      2u
#define ESW_P0RES_MAC_WIDTH                      1u
#define ESW_P0RES_MAC(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_P0RES_MAC_SHIFT))&ESW_P0RES_MAC_MASK)
#define ESW_P0RES_DFLT_PRI_MASK                  0x70u
#define ESW_P0RES_DFLT_PRI_SHIFT                 4u
#define ESW_P0RES_DFLT_PRI_WIDTH                 3u
#define ESW_P0RES_DFLT_PRI(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_P0RES_DFLT_PRI_SHIFT))&ESW_P0RES_DFLT_PRI_MASK)
/* P1RES Bit Fields */
#define ESW_P1RES_VLAN_MASK                      0x1u
#define ESW_P1RES_VLAN_SHIFT                     0u
#define ESW_P1RES_VLAN_WIDTH                     1u
#define ESW_P1RES_VLAN(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P1RES_VLAN_SHIFT))&ESW_P1RES_VLAN_MASK)
#define ESW_P1RES_IP_MASK                        0x2u
#define ESW_P1RES_IP_SHIFT                       1u
#define ESW_P1RES_IP_WIDTH                       1u
#define ESW_P1RES_IP(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_P1RES_IP_SHIFT))&ESW_P1RES_IP_MASK)
#define ESW_P1RES_MAC_MASK                       0x4u
#define ESW_P1RES_MAC_SHIFT                      2u
#define ESW_P1RES_MAC_WIDTH                      1u
#define ESW_P1RES_MAC(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_P1RES_MAC_SHIFT))&ESW_P1RES_MAC_MASK)
#define ESW_P1RES_DFLT_PRI_MASK                  0x70u
#define ESW_P1RES_DFLT_PRI_SHIFT                 4u
#define ESW_P1RES_DFLT_PRI_WIDTH                 3u
#define ESW_P1RES_DFLT_PRI(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_P1RES_DFLT_PRI_SHIFT))&ESW_P1RES_DFLT_PRI_MASK)
/* P2RES Bit Fields */
#define ESW_P2RES_VLAN_MASK                      0x1u
#define ESW_P2RES_VLAN_SHIFT                     0u
#define ESW_P2RES_VLAN_WIDTH                     1u
#define ESW_P2RES_VLAN(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P2RES_VLAN_SHIFT))&ESW_P2RES_VLAN_MASK)
#define ESW_P2RES_IP_MASK                        0x2u
#define ESW_P2RES_IP_SHIFT                       1u
#define ESW_P2RES_IP_WIDTH                       1u
#define ESW_P2RES_IP(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_P2RES_IP_SHIFT))&ESW_P2RES_IP_MASK)
#define ESW_P2RES_MAC_MASK                       0x4u
#define ESW_P2RES_MAC_SHIFT                      2u
#define ESW_P2RES_MAC_WIDTH                      1u
#define ESW_P2RES_MAC(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_P2RES_MAC_SHIFT))&ESW_P2RES_MAC_MASK)
#define ESW_P2RES_DFLT_PRI_MASK                  0x70u
#define ESW_P2RES_DFLT_PRI_SHIFT                 4u
#define ESW_P2RES_DFLT_PRI_WIDTH                 3u
#define ESW_P2RES_DFLT_PRI(x)                    (((uint32_t)(((uint32_t)(x))<<ESW_P2RES_DFLT_PRI_SHIFT))&ESW_P2RES_DFLT_PRI_MASK)
/* HSEED0 Bit Fields */
#define ESW_HSEED0_HASHSEED_MASK                 0xFFFFFFFFu
#define ESW_HSEED0_HASHSEED_SHIFT                0u
#define ESW_HSEED0_HASHSEED_WIDTH                32u
#define ESW_HSEED0_HASHSEED(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_HSEED0_HASHSEED_SHIFT))&ESW_HSEED0_HASHSEED_MASK)
/* HSEED1 Bit Fields */
#define ESW_HSEED1_HASHSEED_MASK                 0xFFFFu
#define ESW_HSEED1_HASHSEED_SHIFT                0u
#define ESW_HSEED1_HASHSEED_WIDTH                16u
#define ESW_HSEED1_HASHSEED(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_HSEED1_HASHSEED_SHIFT))&ESW_HSEED1_HASHSEED_MASK)
/* P0ID Bit Fields */
#define ESW_P0ID_VLANID_MASK                     0xFFFFu
#define ESW_P0ID_VLANID_SHIFT                    0u
#define ESW_P0ID_VLANID_WIDTH                    16u
#define ESW_P0ID_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0ID_VLANID_SHIFT))&ESW_P0ID_VLANID_MASK)
#define ESW_P0ID_VLANOW_MASK                     0xFFFF0000u
#define ESW_P0ID_VLANOW_SHIFT                    16u
#define ESW_P0ID_VLANOW_WIDTH                    16u
#define ESW_P0ID_VLANOW(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0ID_VLANOW_SHIFT))&ESW_P0ID_VLANOW_MASK)
/* P1ID Bit Fields */
#define ESW_P1ID_VLANID_MASK                     0xFFFFu
#define ESW_P1ID_VLANID_SHIFT                    0u
#define ESW_P1ID_VLANID_WIDTH                    16u
#define ESW_P1ID_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1ID_VLANID_SHIFT))&ESW_P1ID_VLANID_MASK)
#define ESW_P1ID_VLANOW_MASK                     0xFFFF0000u
#define ESW_P1ID_VLANOW_SHIFT                    16u
#define ESW_P1ID_VLANOW_WIDTH                    16u
#define ESW_P1ID_VLANOW(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1ID_VLANOW_SHIFT))&ESW_P1ID_VLANOW_MASK)
/* P2ID Bit Fields */
#define ESW_P2ID_VLANID_MASK                     0xFFFFu
#define ESW_P2ID_VLANID_SHIFT                    0u
#define ESW_P2ID_VLANID_WIDTH                    16u
#define ESW_P2ID_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2ID_VLANID_SHIFT))&ESW_P2ID_VLANID_MASK)
#define ESW_P2ID_VLANOW_MASK                     0xFFFF0000u
#define ESW_P2ID_VLANOW_SHIFT                    16u
#define ESW_P2ID_VLANOW_WIDTH                    16u
#define ESW_P2ID_VLANOW(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2ID_VLANOW_SHIFT))&ESW_P2ID_VLANOW_MASK)
/* VRES Bit Fields */
#define ESW_VRES_P0_MASK                         0x1u
#define ESW_VRES_P0_SHIFT                        0u
#define ESW_VRES_P0_WIDTH                        1u
#define ESW_VRES_P0(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_VRES_P0_SHIFT))&ESW_VRES_P0_MASK)
#define ESW_VRES_P1_MASK                         0x2u
#define ESW_VRES_P1_SHIFT                        1u
#define ESW_VRES_P1_WIDTH                        1u
#define ESW_VRES_P1(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_VRES_P1_SHIFT))&ESW_VRES_P1_MASK)
#define ESW_VRES_P2_MASK                         0x4u
#define ESW_VRES_P2_SHIFT                        2u
#define ESW_VRES_P2_WIDTH                        1u
#define ESW_VRES_P2(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_VRES_P2_SHIFT))&ESW_VRES_P2_MASK)
#define ESW_VRES_VLANID_MASK                     0x7FF8u
#define ESW_VRES_VLANID_SHIFT                    3u
#define ESW_VRES_VLANID_WIDTH                    12u
#define ESW_VRES_VLANID(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_VRES_VLANID_SHIFT))&ESW_VRES_VLANID_MASK)
#define ESW_VRES_TAGM0_MASK                      0x100000u
#define ESW_VRES_TAGM0_SHIFT                     20u
#define ESW_VRES_TAGM0_WIDTH                     1u
#define ESW_VRES_TAGM0(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VRES_TAGM0_SHIFT))&ESW_VRES_TAGM0_MASK)
#define ESW_VRES_TAGM1_MASK                      0x200000u
#define ESW_VRES_TAGM1_SHIFT                     21u
#define ESW_VRES_TAGM1_WIDTH                     1u
#define ESW_VRES_TAGM1(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VRES_TAGM1_SHIFT))&ESW_VRES_TAGM1_MASK)
#define ESW_VRES_TAGM2_MASK                      0x400000u
#define ESW_VRES_TAGM2_SHIFT                     22u
#define ESW_VRES_TAGM2_WIDTH                     1u
#define ESW_VRES_TAGM2(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_VRES_TAGM2_SHIFT))&ESW_VRES_TAGM2_MASK)
/* DISCN Bit Fields */
#define ESW_DISCN_COUNT_MASK                     0xFFFFFFFFu
#define ESW_DISCN_COUNT_SHIFT                    0u
#define ESW_DISCN_COUNT_WIDTH                    32u
#define ESW_DISCN_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_DISCN_COUNT_SHIFT))&ESW_DISCN_COUNT_MASK)
/* DISCB Bit Fields */
#define ESW_DISCB_COUNT_MASK                     0xFFFFFFFFu
#define ESW_DISCB_COUNT_SHIFT                    0u
#define ESW_DISCB_COUNT_WIDTH                    32u
#define ESW_DISCB_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_DISCB_COUNT_SHIFT))&ESW_DISCB_COUNT_MASK)
/* NDISCN Bit Fields */
#define ESW_NDISCN_COUNT_MASK                    0xFFFFFFFFu
#define ESW_NDISCN_COUNT_SHIFT                   0u
#define ESW_NDISCN_COUNT_WIDTH                   32u
#define ESW_NDISCN_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_NDISCN_COUNT_SHIFT))&ESW_NDISCN_COUNT_MASK)
/* NDISCB Bit Fields */
#define ESW_NDISCB_COUNT_MASK                    0xFFFFFFFFu
#define ESW_NDISCB_COUNT_SHIFT                   0u
#define ESW_NDISCB_COUNT_WIDTH                   32u
#define ESW_NDISCB_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_NDISCB_COUNT_SHIFT))&ESW_NDISCB_COUNT_MASK)
/* P0OQC Bit Fields */
#define ESW_P0OQC_COUNT_MASK                     0xFFFFFFFFu
#define ESW_P0OQC_COUNT_SHIFT                    0u
#define ESW_P0OQC_COUNT_WIDTH                    32u
#define ESW_P0OQC_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P0OQC_COUNT_SHIFT))&ESW_P0OQC_COUNT_MASK)
/* P0MVID Bit Fields */
#define ESW_P0MVID_COUNT_MASK                    0xFFFFFFFFu
#define ESW_P0MVID_COUNT_SHIFT                   0u
#define ESW_P0MVID_COUNT_WIDTH                   32u
#define ESW_P0MVID_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P0MVID_COUNT_SHIFT))&ESW_P0MVID_COUNT_MASK)
/* P0MVTAG Bit Fields */
#define ESW_P0MVTAG_COUNT_MASK                   0xFFFFFFFFu
#define ESW_P0MVTAG_COUNT_SHIFT                  0u
#define ESW_P0MVTAG_COUNT_WIDTH                  32u
#define ESW_P0MVTAG_COUNT(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_P0MVTAG_COUNT_SHIFT))&ESW_P0MVTAG_COUNT_MASK)
/* P0BL Bit Fields */
#define ESW_P0BL_COUNT_MASK                      0xFFFFFFFFu
#define ESW_P0BL_COUNT_SHIFT                     0u
#define ESW_P0BL_COUNT_WIDTH                     32u
#define ESW_P0BL_COUNT(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P0BL_COUNT_SHIFT))&ESW_P0BL_COUNT_MASK)
/* P1OQC Bit Fields */
#define ESW_P1OQC_COUNT_MASK                     0xFFFFFFFFu
#define ESW_P1OQC_COUNT_SHIFT                    0u
#define ESW_P1OQC_COUNT_WIDTH                    32u
#define ESW_P1OQC_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P1OQC_COUNT_SHIFT))&ESW_P1OQC_COUNT_MASK)
/* P1MVID Bit Fields */
#define ESW_P1MVID_COUNT_MASK                    0xFFFFFFFFu
#define ESW_P1MVID_COUNT_SHIFT                   0u
#define ESW_P1MVID_COUNT_WIDTH                   32u
#define ESW_P1MVID_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P1MVID_COUNT_SHIFT))&ESW_P1MVID_COUNT_MASK)
/* P1MVTAG Bit Fields */
#define ESW_P1MVTAG_COUNT_MASK                   0xFFFFFFFFu
#define ESW_P1MVTAG_COUNT_SHIFT                  0u
#define ESW_P1MVTAG_COUNT_WIDTH                  32u
#define ESW_P1MVTAG_COUNT(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_P1MVTAG_COUNT_SHIFT))&ESW_P1MVTAG_COUNT_MASK)
/* P1BL Bit Fields */
#define ESW_P1BL_COUNT_MASK                      0xFFFFFFFFu
#define ESW_P1BL_COUNT_SHIFT                     0u
#define ESW_P1BL_COUNT_WIDTH                     32u
#define ESW_P1BL_COUNT(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P1BL_COUNT_SHIFT))&ESW_P1BL_COUNT_MASK)
/* P2OQC Bit Fields */
#define ESW_P2OQC_COUNT_MASK                     0xFFFFFFFFu
#define ESW_P2OQC_COUNT_SHIFT                    0u
#define ESW_P2OQC_COUNT_WIDTH                    32u
#define ESW_P2OQC_COUNT(x)                       (((uint32_t)(((uint32_t)(x))<<ESW_P2OQC_COUNT_SHIFT))&ESW_P2OQC_COUNT_MASK)
/* P2MVID Bit Fields */
#define ESW_P2MVID_COUNT_MASK                    0xFFFFFFFFu
#define ESW_P2MVID_COUNT_SHIFT                   0u
#define ESW_P2MVID_COUNT_WIDTH                   32u
#define ESW_P2MVID_COUNT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_P2MVID_COUNT_SHIFT))&ESW_P2MVID_COUNT_MASK)
/* P2MVTAG Bit Fields */
#define ESW_P2MVTAG_COUNT_MASK                   0xFFFFFFFFu
#define ESW_P2MVTAG_COUNT_SHIFT                  0u
#define ESW_P2MVTAG_COUNT_WIDTH                  32u
#define ESW_P2MVTAG_COUNT(x)                     (((uint32_t)(((uint32_t)(x))<<ESW_P2MVTAG_COUNT_SHIFT))&ESW_P2MVTAG_COUNT_MASK)
/* P2BL Bit Fields */
#define ESW_P2BL_COUNT_MASK                      0xFFFFFFFFu
#define ESW_P2BL_COUNT_SHIFT                     0u
#define ESW_P2BL_COUNT_WIDTH                     32u
#define ESW_P2BL_COUNT(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_P2BL_COUNT_SHIFT))&ESW_P2BL_COUNT_MASK)
/* ISR Bit Fields */
#define ESW_ISR_EBERR_MASK                       0x1u
#define ESW_ISR_EBERR_SHIFT                      0u
#define ESW_ISR_EBERR_WIDTH                      1u
#define ESW_ISR_EBERR(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_ISR_EBERR_SHIFT))&ESW_ISR_EBERR_MASK)
#define ESW_ISR_RXB_MASK                         0x2u
#define ESW_ISR_RXB_SHIFT                        1u
#define ESW_ISR_RXB_WIDTH                        1u
#define ESW_ISR_RXB(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXB_SHIFT))&ESW_ISR_RXB_MASK)
#define ESW_ISR_RXF_MASK                         0x4u
#define ESW_ISR_RXF_SHIFT                        2u
#define ESW_ISR_RXF_WIDTH                        1u
#define ESW_ISR_RXF(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXF_SHIFT))&ESW_ISR_RXF_MASK)
#define ESW_ISR_TXB_MASK                         0x8u
#define ESW_ISR_TXB_SHIFT                        3u
#define ESW_ISR_TXB_WIDTH                        1u
#define ESW_ISR_TXB(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_TXB_SHIFT))&ESW_ISR_TXB_MASK)
#define ESW_ISR_TXF_MASK                         0x10u
#define ESW_ISR_TXF_SHIFT                        4u
#define ESW_ISR_TXF_WIDTH                        1u
#define ESW_ISR_TXF(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_TXF_SHIFT))&ESW_ISR_TXF_MASK)
#define ESW_ISR_QM_MASK                          0x20u
#define ESW_ISR_QM_SHIFT                         5u
#define ESW_ISR_QM_WIDTH                         1u
#define ESW_ISR_QM(x)                            (((uint32_t)(((uint32_t)(x))<<ESW_ISR_QM_SHIFT))&ESW_ISR_QM_MASK)
#define ESW_ISR_OD0_MASK                         0x40u
#define ESW_ISR_OD0_SHIFT                        6u
#define ESW_ISR_OD0_WIDTH                        1u
#define ESW_ISR_OD0(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_OD0_SHIFT))&ESW_ISR_OD0_MASK)
#define ESW_ISR_OD1_MASK                         0x80u
#define ESW_ISR_OD1_SHIFT                        7u
#define ESW_ISR_OD1_WIDTH                        1u
#define ESW_ISR_OD1(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_OD1_SHIFT))&ESW_ISR_OD1_MASK)
#define ESW_ISR_OD2_MASK                         0x100u
#define ESW_ISR_OD2_SHIFT                        8u
#define ESW_ISR_OD2_WIDTH                        1u
#define ESW_ISR_OD2(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_OD2_SHIFT))&ESW_ISR_OD2_MASK)
#define ESW_ISR_LRN_MASK                         0x200u
#define ESW_ISR_LRN_SHIFT                        9u
#define ESW_ISR_LRN_WIDTH                        1u
#define ESW_ISR_LRN(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_ISR_LRN_SHIFT))&ESW_ISR_LRN_MASK)
#define ESW_ISR_RXB1_MASK                        0x400u
#define ESW_ISR_RXB1_SHIFT                       10u
#define ESW_ISR_RXB1_WIDTH                       1u
#define ESW_ISR_RXB1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXB1_SHIFT))&ESW_ISR_RXB1_MASK)
#define ESW_ISR_RXF1_MASK                        0x800u
#define ESW_ISR_RXF1_SHIFT                       11u
#define ESW_ISR_RXF1_WIDTH                       1u
#define ESW_ISR_RXF1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXF1_SHIFT))&ESW_ISR_RXF1_MASK)
#define ESW_ISR_TXB1_MASK                        0x1000u
#define ESW_ISR_TXB1_SHIFT                       12u
#define ESW_ISR_TXB1_WIDTH                       1u
#define ESW_ISR_TXB1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_TXB1_SHIFT))&ESW_ISR_TXB1_MASK)
#define ESW_ISR_TXF1_MASK                        0x2000u
#define ESW_ISR_TXF1_SHIFT                       13u
#define ESW_ISR_TXF1_WIDTH                       1u
#define ESW_ISR_TXF1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_TXF1_SHIFT))&ESW_ISR_TXF1_MASK)
#define ESW_ISR_RXB2_MASK                        0x4000u
#define ESW_ISR_RXB2_SHIFT                       14u
#define ESW_ISR_RXB2_WIDTH                       1u
#define ESW_ISR_RXB2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXB2_SHIFT))&ESW_ISR_RXB2_MASK)
#define ESW_ISR_RXF2_MASK                        0x8000u
#define ESW_ISR_RXF2_SHIFT                       15u
#define ESW_ISR_RXF2_WIDTH                       1u
#define ESW_ISR_RXF2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXF2_SHIFT))&ESW_ISR_RXF2_MASK)
#define ESW_ISR_TXB2_MASK                        0x10000u
#define ESW_ISR_TXB2_SHIFT                       16u
#define ESW_ISR_TXB2_WIDTH                       1u
#define ESW_ISR_TXB2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_TXB2_SHIFT))&ESW_ISR_TXB2_MASK)
#define ESW_ISR_TXF2_MASK                        0x20000u
#define ESW_ISR_TXF2_SHIFT                       17u
#define ESW_ISR_TXF2_WIDTH                       1u
#define ESW_ISR_TXF2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_ISR_TXF2_SHIFT))&ESW_ISR_TXF2_MASK)
#define ESW_ISR_RXFLUSH0_MASK                    0x40000u
#define ESW_ISR_RXFLUSH0_SHIFT                   18u
#define ESW_ISR_RXFLUSH0_WIDTH                   1u
#define ESW_ISR_RXFLUSH0(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXFLUSH0_SHIFT))&ESW_ISR_RXFLUSH0_MASK)
#define ESW_ISR_RXFLUSH1_MASK                    0x80000u
#define ESW_ISR_RXFLUSH1_SHIFT                   19u
#define ESW_ISR_RXFLUSH1_WIDTH                   1u
#define ESW_ISR_RXFLUSH1(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXFLUSH1_SHIFT))&ESW_ISR_RXFLUSH1_MASK)
#define ESW_ISR_RXFLUSH2_MASK                    0x100000u
#define ESW_ISR_RXFLUSH2_SHIFT                   20u
#define ESW_ISR_RXFLUSH2_WIDTH                   1u
#define ESW_ISR_RXFLUSH2(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_ISR_RXFLUSH2_SHIFT))&ESW_ISR_RXFLUSH2_MASK)
/* IMR Bit Fields */
#define ESW_IMR_EBERR_MASK                       0x1u
#define ESW_IMR_EBERR_SHIFT                      0u
#define ESW_IMR_EBERR_WIDTH                      1u
#define ESW_IMR_EBERR(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_IMR_EBERR_SHIFT))&ESW_IMR_EBERR_MASK)
#define ESW_IMR_RXB_MASK                         0x2u
#define ESW_IMR_RXB_SHIFT                        1u
#define ESW_IMR_RXB_WIDTH                        1u
#define ESW_IMR_RXB(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXB_SHIFT))&ESW_IMR_RXB_MASK)
#define ESW_IMR_RXF_MASK                         0x4u
#define ESW_IMR_RXF_SHIFT                        2u
#define ESW_IMR_RXF_WIDTH                        1u
#define ESW_IMR_RXF(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXF_SHIFT))&ESW_IMR_RXF_MASK)
#define ESW_IMR_TXB_MASK                         0x8u
#define ESW_IMR_TXB_SHIFT                        3u
#define ESW_IMR_TXB_WIDTH                        1u
#define ESW_IMR_TXB(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_TXB_SHIFT))&ESW_IMR_TXB_MASK)
#define ESW_IMR_TXF_MASK                         0x10u
#define ESW_IMR_TXF_SHIFT                        4u
#define ESW_IMR_TXF_WIDTH                        1u
#define ESW_IMR_TXF(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_TXF_SHIFT))&ESW_IMR_TXF_MASK)
#define ESW_IMR_QM_MASK                          0x20u
#define ESW_IMR_QM_SHIFT                         5u
#define ESW_IMR_QM_WIDTH                         1u
#define ESW_IMR_QM(x)                            (((uint32_t)(((uint32_t)(x))<<ESW_IMR_QM_SHIFT))&ESW_IMR_QM_MASK)
#define ESW_IMR_OD0_MASK                         0x40u
#define ESW_IMR_OD0_SHIFT                        6u
#define ESW_IMR_OD0_WIDTH                        1u
#define ESW_IMR_OD0(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_OD0_SHIFT))&ESW_IMR_OD0_MASK)
#define ESW_IMR_OD1_MASK                         0x80u
#define ESW_IMR_OD1_SHIFT                        7u
#define ESW_IMR_OD1_WIDTH                        1u
#define ESW_IMR_OD1(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_OD1_SHIFT))&ESW_IMR_OD1_MASK)
#define ESW_IMR_OD2_MASK                         0x100u
#define ESW_IMR_OD2_SHIFT                        8u
#define ESW_IMR_OD2_WIDTH                        1u
#define ESW_IMR_OD2(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_OD2_SHIFT))&ESW_IMR_OD2_MASK)
#define ESW_IMR_LRN_MASK                         0x200u
#define ESW_IMR_LRN_SHIFT                        9u
#define ESW_IMR_LRN_WIDTH                        1u
#define ESW_IMR_LRN(x)                           (((uint32_t)(((uint32_t)(x))<<ESW_IMR_LRN_SHIFT))&ESW_IMR_LRN_MASK)
#define ESW_IMR_RXB1_MASK                        0x400u
#define ESW_IMR_RXB1_SHIFT                       10u
#define ESW_IMR_RXB1_WIDTH                       1u
#define ESW_IMR_RXB1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXB1_SHIFT))&ESW_IMR_RXB1_MASK)
#define ESW_IMR_RXF1_MASK                        0x800u
#define ESW_IMR_RXF1_SHIFT                       11u
#define ESW_IMR_RXF1_WIDTH                       1u
#define ESW_IMR_RXF1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXF1_SHIFT))&ESW_IMR_RXF1_MASK)
#define ESW_IMR_TXB1_MASK                        0x1000u
#define ESW_IMR_TXB1_SHIFT                       12u
#define ESW_IMR_TXB1_WIDTH                       1u
#define ESW_IMR_TXB1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_TXB1_SHIFT))&ESW_IMR_TXB1_MASK)
#define ESW_IMR_TXF1_MASK                        0x2000u
#define ESW_IMR_TXF1_SHIFT                       13u
#define ESW_IMR_TXF1_WIDTH                       1u
#define ESW_IMR_TXF1(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_TXF1_SHIFT))&ESW_IMR_TXF1_MASK)
#define ESW_IMR_RXB2_MASK                        0x4000u
#define ESW_IMR_RXB2_SHIFT                       14u
#define ESW_IMR_RXB2_WIDTH                       1u
#define ESW_IMR_RXB2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXB2_SHIFT))&ESW_IMR_RXB2_MASK)
#define ESW_IMR_RXF2_MASK                        0x8000u
#define ESW_IMR_RXF2_SHIFT                       15u
#define ESW_IMR_RXF2_WIDTH                       1u
#define ESW_IMR_RXF2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXF2_SHIFT))&ESW_IMR_RXF2_MASK)
#define ESW_IMR_TXB2_MASK                        0x10000u
#define ESW_IMR_TXB2_SHIFT                       16u
#define ESW_IMR_TXB2_WIDTH                       1u
#define ESW_IMR_TXB2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_TXB2_SHIFT))&ESW_IMR_TXB2_MASK)
#define ESW_IMR_TXF2_MASK                        0x20000u
#define ESW_IMR_TXF2_SHIFT                       17u
#define ESW_IMR_TXF2_WIDTH                       1u
#define ESW_IMR_TXF2(x)                          (((uint32_t)(((uint32_t)(x))<<ESW_IMR_TXF2_SHIFT))&ESW_IMR_TXF2_MASK)
#define ESW_IMR_RXFLUSH0_MASK                    0x40000u
#define ESW_IMR_RXFLUSH0_SHIFT                   18u
#define ESW_IMR_RXFLUSH0_WIDTH                   1u
#define ESW_IMR_RXFLUSH0(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXFLUSH0_SHIFT))&ESW_IMR_RXFLUSH0_MASK)
#define ESW_IMR_RXFLUSH1_MASK                    0x80000u
#define ESW_IMR_RXFLUSH1_SHIFT                   19u
#define ESW_IMR_RXFLUSH1_WIDTH                   1u
#define ESW_IMR_RXFLUSH1(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXFLUSH1_SHIFT))&ESW_IMR_RXFLUSH1_MASK)
#define ESW_IMR_RXFLUSH2_MASK                    0x100000u
#define ESW_IMR_RXFLUSH2_SHIFT                   20u
#define ESW_IMR_RXFLUSH2_WIDTH                   1u
#define ESW_IMR_RXFLUSH2(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_IMR_RXFLUSH2_SHIFT))&ESW_IMR_RXFLUSH2_MASK)
/* RDSR Bit Fields */
#define ESW_RDSR_ADDRESS_MASK                    0xFFFFFFF8u
#define ESW_RDSR_ADDRESS_SHIFT                   3u
#define ESW_RDSR_ADDRESS_WIDTH                   29u
#define ESW_RDSR_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_RDSR_ADDRESS_SHIFT))&ESW_RDSR_ADDRESS_MASK)
/* TDSR Bit Fields */
#define ESW_TDSR_ADDRESS_MASK                    0xFFFFFFF8u
#define ESW_TDSR_ADDRESS_SHIFT                   3u
#define ESW_TDSR_ADDRESS_WIDTH                   29u
#define ESW_TDSR_ADDRESS(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_TDSR_ADDRESS_SHIFT))&ESW_TDSR_ADDRESS_MASK)
/* MRBR Bit Fields */
#define ESW_MRBR_SIZE_MASK                       0x3FF0u
#define ESW_MRBR_SIZE_SHIFT                      4u
#define ESW_MRBR_SIZE_WIDTH                      10u
#define ESW_MRBR_SIZE(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_MRBR_SIZE_SHIFT))&ESW_MRBR_SIZE_MASK)
/* RDAR Bit Fields */
#define ESW_RDAR_RDAR_MASK                       0x1000000u
#define ESW_RDAR_RDAR_SHIFT                      24u
#define ESW_RDAR_RDAR_WIDTH                      1u
#define ESW_RDAR_RDAR(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RDAR_RDAR_SHIFT))&ESW_RDAR_RDAR_MASK)
/* TDAR Bit Fields */
#define ESW_TDAR_TDAR_MASK                       0x1000000u
#define ESW_TDAR_TDAR_SHIFT                      24u
#define ESW_TDAR_TDAR_WIDTH                      1u
#define ESW_TDAR_TDAR(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_TDAR_TDAR_SHIFT))&ESW_TDAR_TDAR_MASK)
/* RDAR1 Bit Fields */
#define ESW_RDAR1_RDAR_MASK                      0x1000000u
#define ESW_RDAR1_RDAR_SHIFT                     24u
#define ESW_RDAR1_RDAR_WIDTH                     1u
#define ESW_RDAR1_RDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_RDAR1_RDAR_SHIFT))&ESW_RDAR1_RDAR_MASK)
/* TDAR1 Bit Fields */
#define ESW_TDAR1_TDAR_MASK                      0x1000000u
#define ESW_TDAR1_TDAR_SHIFT                     24u
#define ESW_TDAR1_TDAR_WIDTH                     1u
#define ESW_TDAR1_TDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_TDAR1_TDAR_SHIFT))&ESW_TDAR1_TDAR_MASK)
/* RDAR2 Bit Fields */
#define ESW_RDAR2_RDAR_MASK                      0x1000000u
#define ESW_RDAR2_RDAR_SHIFT                     24u
#define ESW_RDAR2_RDAR_WIDTH                     1u
#define ESW_RDAR2_RDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_RDAR2_RDAR_SHIFT))&ESW_RDAR2_RDAR_MASK)
/* TDAR2 Bit Fields */
#define ESW_TDAR2_TDAR_MASK                      0x1000000u
#define ESW_TDAR2_TDAR_SHIFT                     24u
#define ESW_TDAR2_TDAR_WIDTH                     1u
#define ESW_TDAR2_TDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_TDAR2_TDAR_SHIFT))&ESW_TDAR2_TDAR_MASK)
/* TXIC Bit Fields */
#define ESW_TXIC_ICTT_MASK                       0xFFFFu
#define ESW_TXIC_ICTT_SHIFT                      0u
#define ESW_TXIC_ICTT_WIDTH                      16u
#define ESW_TXIC_ICTT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_TXIC_ICTT_SHIFT))&ESW_TXIC_ICTT_MASK)
#define ESW_TXIC_ICFT_MASK                       0xFF00000u
#define ESW_TXIC_ICFT_SHIFT                      20u
#define ESW_TXIC_ICFT_WIDTH                      8u
#define ESW_TXIC_ICFT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_TXIC_ICFT_SHIFT))&ESW_TXIC_ICFT_MASK)
#define ESW_TXIC_ICCS_MASK                       0x40000000u
#define ESW_TXIC_ICCS_SHIFT                      30u
#define ESW_TXIC_ICCS_WIDTH                      1u
#define ESW_TXIC_ICCS(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_TXIC_ICCS_SHIFT))&ESW_TXIC_ICCS_MASK)
#define ESW_TXIC_ICEN_MASK                       0x80000000u
#define ESW_TXIC_ICEN_SHIFT                      31u
#define ESW_TXIC_ICEN_WIDTH                      1u
#define ESW_TXIC_ICEN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_TXIC_ICEN_SHIFT))&ESW_TXIC_ICEN_MASK)
/* RXIC Bit Fields */
#define ESW_RXIC_ICTT_MASK                       0xFFFFu
#define ESW_RXIC_ICTT_SHIFT                      0u
#define ESW_RXIC_ICTT_WIDTH                      16u
#define ESW_RXIC_ICTT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RXIC_ICTT_SHIFT))&ESW_RXIC_ICTT_MASK)
#define ESW_RXIC_ICFT_MASK                       0xFF00000u
#define ESW_RXIC_ICFT_SHIFT                      20u
#define ESW_RXIC_ICFT_WIDTH                      8u
#define ESW_RXIC_ICFT(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RXIC_ICFT_SHIFT))&ESW_RXIC_ICFT_MASK)
#define ESW_RXIC_ICCS_MASK                       0x40000000u
#define ESW_RXIC_ICCS_SHIFT                      30u
#define ESW_RXIC_ICCS_WIDTH                      1u
#define ESW_RXIC_ICCS(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RXIC_ICCS_SHIFT))&ESW_RXIC_ICCS_MASK)
#define ESW_RXIC_ICEN_MASK                       0x80000000u
#define ESW_RXIC_ICEN_SHIFT                      31u
#define ESW_RXIC_ICEN_WIDTH                      1u
#define ESW_RXIC_ICEN(x)                         (((uint32_t)(((uint32_t)(x))<<ESW_RXIC_ICEN_SHIFT))&ESW_RXIC_ICEN_MASK)
/* SEL_CLASS Bit Fields */
#define ESW_SEL_CLASS_SEL_CLASS_MASK             0x3u
#define ESW_SEL_CLASS_SEL_CLASS_SHIFT            0u
#define ESW_SEL_CLASS_SEL_CLASS_WIDTH            2u
#define ESW_SEL_CLASS_SEL_CLASS(x)               (((uint32_t)(((uint32_t)(x))<<ESW_SEL_CLASS_SEL_CLASS_SHIFT))&ESW_SEL_CLASS_SEL_CLASS_MASK)
/* LREC0 Bit Fields */
#define ESW_LREC0_MAC_ADDR0_MASK                 0xFFFFFFFFu
#define ESW_LREC0_MAC_ADDR0_SHIFT                0u
#define ESW_LREC0_MAC_ADDR0_WIDTH                32u
#define ESW_LREC0_MAC_ADDR0(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_LREC0_MAC_ADDR0_SHIFT))&ESW_LREC0_MAC_ADDR0_MASK)
/* LREC1 Bit Fields */
#define ESW_LREC1_MAC_ADDR1_MASK                 0xFFFFu
#define ESW_LREC1_MAC_ADDR1_SHIFT                0u
#define ESW_LREC1_MAC_ADDR1_WIDTH                16u
#define ESW_LREC1_MAC_ADDR1(x)                   (((uint32_t)(((uint32_t)(x))<<ESW_LREC1_MAC_ADDR1_SHIFT))&ESW_LREC1_MAC_ADDR1_MASK)
#define ESW_LREC1_HASH_MASK                      0xFF0000u
#define ESW_LREC1_HASH_SHIFT                     16u
#define ESW_LREC1_HASH_WIDTH                     8u
#define ESW_LREC1_HASH(x)                        (((uint32_t)(((uint32_t)(x))<<ESW_LREC1_HASH_SHIFT))&ESW_LREC1_HASH_MASK)
#define ESW_LREC1_SWPORT_MASK                    0x3000000u
#define ESW_LREC1_SWPORT_SHIFT                   24u
#define ESW_LREC1_SWPORT_WIDTH                   2u
#define ESW_LREC1_SWPORT(x)                      (((uint32_t)(((uint32_t)(x))<<ESW_LREC1_SWPORT_SHIFT))&ESW_LREC1_SWPORT_MASK)
/* LSR Bit Fields */
#define ESW_LSR_DA_MASK                          0x1u
#define ESW_LSR_DA_SHIFT                         0u
#define ESW_LSR_DA_WIDTH                         1u
#define ESW_LSR_DA(x)                            (((uint32_t)(((uint32_t)(x))<<ESW_LSR_DA_SHIFT))&ESW_LSR_DA_MASK)

/*!
 * @}
 */ /* end of group ESW_Register_Masks */


/*!
 * @}
 */ /* end of group ESW_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FCCU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FCCU_Peripheral_Access_Layer FCCU Peripheral Access Layer
 * @{
 */


/** FCCU - Size of Registers Arrays */
#define FCCU_NCF_CFG_COUNT                       3u
#define FCCU_NCFS_CFG_COUNT                      5u
#define FCCU_NCF_S_COUNT                         3u
#define FCCU_NCF_E_COUNT                         3u
#define FCCU_NCF_TOE_COUNT                       3u
#define FCCU_IRQ_ALARM_EN_COUNT                  3u
#define FCCU_NMI_EN_COUNT                        3u
#define FCCU_EOUT_SIG_EN_COUNT                   3u

/** FCCU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL;                              /**< Control, offset: 0x0 */
  __O  uint32_t CTRLK;                             /**< Control Key, offset: 0x4 */
  __IO uint32_t CFG;                               /**< Configuration, offset: 0x8 */
       uint8_t RESERVED_0[16];
  __IO uint32_t NCF_CFG[FCCU_NCF_CFG_COUNT];       /**< Noncritical Fault Configuration, array offset: 0x1C, array step: 0x4 */
       uint8_t RESERVED_1[36];
  __IO uint32_t NCFS_CFG[FCCU_NCFS_CFG_COUNT];     /**< Noncritical Fault State Configuration, array offset: 0x4C, array step: 0x4 */
       uint8_t RESERVED_2[32];
  __IO uint32_t NCF_S[FCCU_NCF_S_COUNT];           /**< Noncritical Fault Status, array offset: 0x80, array step: 0x4 */
       uint8_t RESERVED_3[4];
  __O  uint32_t NCFK;                              /**< Noncritical Fault Key, offset: 0x90 */
  __IO uint32_t NCF_E[FCCU_NCF_E_COUNT];           /**< Noncritical Fault Enable, array offset: 0x94, array step: 0x4 */
       uint8_t RESERVED_4[4];
  __IO uint32_t NCF_TOE[FCCU_NCF_TOE_COUNT];       /**< Noncritical Fault Timeout Enable, array offset: 0xA4, array step: 0x4 */
       uint8_t RESERVED_5[4];
  __IO uint32_t NCF_TO;                            /**< Noncritical Fault Timeout, offset: 0xB4 */
  __IO uint32_t CFG_TO;                            /**< Configuration-State Timer Interval, offset: 0xB8 */
  __IO uint32_t EINOUT;                            /**< IO Control, offset: 0xBC */
  __I  uint32_t STAT;                              /**< Status, offset: 0xC0 */
  __I  uint32_t N2AF_STATUS;                       /**< NA Freeze Status, offset: 0xC4 */
  __I  uint32_t A2FF_STATUS;                       /**< AF Freeze Status, offset: 0xC8 */
  __I  uint32_t N2FF_STATUS;                       /**< NF Freeze Status, offset: 0xCC */
  __I  uint32_t F2A_STATUS;                        /**< FA Freeze Status, offset: 0xD0 */
       uint8_t RESERVED_6[8];
  __IO uint32_t NCFF;                              /**< Noncritical Fault Fake, offset: 0xDC */
  __IO uint32_t IRQ_STAT;                          /**< IRQ Status, offset: 0xE0 */
  __IO uint32_t IRQ_EN;                            /**< IRQ Enable, offset: 0xE4 */
  __I  uint32_t XTMR;                              /**< XTMR, offset: 0xE8 */
  __I  uint32_t MCS;                               /**< Mode Controller Status, offset: 0xEC */
  __IO uint32_t TRANS_LOCK;                        /**< Transient Configuration Lock, offset: 0xF0 */
  __IO uint32_t PERMNT_LOCK;                       /**< Permanent Configuration Lock, offset: 0xF4 */
  __IO uint32_t DELTA_T;                           /**< Delta T, offset: 0xF8 */
  __IO uint32_t IRQ_ALARM_EN[FCCU_IRQ_ALARM_EN_COUNT]; /**< IRQ Alarm Enable, array offset: 0xFC, array step: 0x4 */
       uint8_t RESERVED_7[4];
  __IO uint32_t NMI_EN[FCCU_NMI_EN_COUNT];         /**< NMI Enable, array offset: 0x10C, array step: 0x4 */
       uint8_t RESERVED_8[4];
  __IO uint32_t EOUT_SIG_EN[FCCU_EOUT_SIG_EN_COUNT]; /**< Bistable Fault-Output (EOUT) Mode Signaling Enable, array offset: 0x11C, array step: 0x4 */
} FCCU_Type, *FCCU_MemMapPtr;

 /** Number of instances of the FCCU module. */
#define FCCU_INSTANCE_COUNT                      (1u)


/* FCCU - Peripheral instance base addresses */
/** Peripheral FCCU base address */
#define FCCU_BASE                                (0xFBF58000u)
/** Peripheral FCCU base pointer */
#define FCCU                                     ((FCCU_Type *)FCCU_BASE)
/** Array initializer of FCCU peripheral base addresses */
#define FCCU_BASE_ADDRS                          { FCCU_BASE }
/** Array initializer of FCCU peripheral base pointers */
#define FCCU_BASE_PTRS                           { FCCU }

/* ----------------------------------------------------------------------------
   -- FCCU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FCCU_Register_Masks FCCU Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define FCCU_CTRL_OPR_MASK                       0x1Fu
#define FCCU_CTRL_OPR_SHIFT                      0u
#define FCCU_CTRL_OPR_WIDTH                      5u
#define FCCU_CTRL_OPR(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_OPR_SHIFT))&FCCU_CTRL_OPR_MASK)
#define FCCU_CTRL_OPS_MASK                       0xC0u
#define FCCU_CTRL_OPS_SHIFT                      6u
#define FCCU_CTRL_OPS_WIDTH                      2u
#define FCCU_CTRL_OPS(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_OPS_SHIFT))&FCCU_CTRL_OPS_MASK)
#define FCCU_CTRL_DEBUG_MASK                     0x200u
#define FCCU_CTRL_DEBUG_SHIFT                    9u
#define FCCU_CTRL_DEBUG_WIDTH                    1u
#define FCCU_CTRL_DEBUG(x)                       (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_DEBUG_SHIFT))&FCCU_CTRL_DEBUG_MASK)
#define FCCU_CTRL_FILTER_WIDTH_MASK              0x60000000u
#define FCCU_CTRL_FILTER_WIDTH_SHIFT             29u
#define FCCU_CTRL_FILTER_WIDTH_WIDTH             2u
#define FCCU_CTRL_FILTER_WIDTH(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_FILTER_WIDTH_SHIFT))&FCCU_CTRL_FILTER_WIDTH_MASK)
#define FCCU_CTRL_FILTER_BYPASS_MASK             0x80000000u
#define FCCU_CTRL_FILTER_BYPASS_SHIFT            31u
#define FCCU_CTRL_FILTER_BYPASS_WIDTH            1u
#define FCCU_CTRL_FILTER_BYPASS(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_CTRL_FILTER_BYPASS_SHIFT))&FCCU_CTRL_FILTER_BYPASS_MASK)
/* CTRLK Bit Fields */
#define FCCU_CTRLK_CTRLK_MASK                    0xFFFFFFFFu
#define FCCU_CTRLK_CTRLK_SHIFT                   0u
#define FCCU_CTRLK_CTRLK_WIDTH                   32u
#define FCCU_CTRLK_CTRLK(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_CTRLK_CTRLK_SHIFT))&FCCU_CTRLK_CTRLK_MASK)
/* CFG Bit Fields */
#define FCCU_CFG_FOP_MASK                        0x3Fu
#define FCCU_CFG_FOP_SHIFT                       0u
#define FCCU_CFG_FOP_WIDTH                       6u
#define FCCU_CFG_FOP(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOP_SHIFT))&FCCU_CFG_FOP_MASK)
#define FCCU_CFG_FOM_MASK                        0x1C0u
#define FCCU_CFG_FOM_SHIFT                       6u
#define FCCU_CFG_FOM_WIDTH                       3u
#define FCCU_CFG_FOM(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOM_SHIFT))&FCCU_CFG_FOM_MASK)
#define FCCU_CFG_PS_MASK                         0x200u
#define FCCU_CFG_PS_SHIFT                        9u
#define FCCU_CFG_PS_WIDTH                        1u
#define FCCU_CFG_PS(x)                           (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_PS_SHIFT))&FCCU_CFG_PS_MASK)
#define FCCU_CFG_SM_MASK                         0x400u
#define FCCU_CFG_SM_SHIFT                        10u
#define FCCU_CFG_SM_WIDTH                        1u
#define FCCU_CFG_SM(x)                           (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_SM_SHIFT))&FCCU_CFG_SM_MASK)
#define FCCU_CFG_OD_MASK                         0x1000u
#define FCCU_CFG_OD_SHIFT                        12u
#define FCCU_CFG_OD_WIDTH                        1u
#define FCCU_CFG_OD(x)                           (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_OD_SHIFT))&FCCU_CFG_OD_MASK)
#define FCCU_CFG_FOME_MASK                       0x6000u
#define FCCU_CFG_FOME_SHIFT                      13u
#define FCCU_CFG_FOME_WIDTH                      2u
#define FCCU_CFG_FOME(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOME_SHIFT))&FCCU_CFG_FOME_MASK)
#define FCCU_CFG_FOPE_MASK                       0x8000u
#define FCCU_CFG_FOPE_SHIFT                      15u
#define FCCU_CFG_FOPE_WIDTH                      1u
#define FCCU_CFG_FOPE(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FOPE_SHIFT))&FCCU_CFG_FOPE_MASK)
#define FCCU_CFG_FCCU_SET_CLEAR_MASK             0xC00000u
#define FCCU_CFG_FCCU_SET_CLEAR_SHIFT            22u
#define FCCU_CFG_FCCU_SET_CLEAR_WIDTH            2u
#define FCCU_CFG_FCCU_SET_CLEAR(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FCCU_SET_CLEAR_SHIFT))&FCCU_CFG_FCCU_SET_CLEAR_MASK)
#define FCCU_CFG_FCCU_SET_AFTER_RESET_MASK       0x1000000u
#define FCCU_CFG_FCCU_SET_AFTER_RESET_SHIFT      24u
#define FCCU_CFG_FCCU_SET_AFTER_RESET_WIDTH      1u
#define FCCU_CFG_FCCU_SET_AFTER_RESET(x)         (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_FCCU_SET_AFTER_RESET_SHIFT))&FCCU_CFG_FCCU_SET_AFTER_RESET_MASK)
#define FCCU_CFG_TGL_MASK                        0xFE000000u
#define FCCU_CFG_TGL_SHIFT                       25u
#define FCCU_CFG_TGL_WIDTH                       7u
#define FCCU_CFG_TGL(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_TGL_SHIFT))&FCCU_CFG_TGL_MASK)
/* NCF_CFG Bit Fields */
#define FCCU_NCF_CFG_NCFCx_MASK                  0xFFFFFFFFu
#define FCCU_NCF_CFG_NCFCx_SHIFT                 0u
#define FCCU_NCF_CFG_NCFCx_WIDTH                 32u
#define FCCU_NCF_CFG_NCFCx(x)                    (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_CFG_NCFCx_SHIFT))&FCCU_NCF_CFG_NCFCx_MASK)
/* NCFS_CFG Bit Fields */
#define FCCU_NCFS_CFG_NCFSCx_MASK                0xFFFFFFFFu
#define FCCU_NCFS_CFG_NCFSCx_SHIFT               0u
#define FCCU_NCFS_CFG_NCFSCx_WIDTH               32u
#define FCCU_NCFS_CFG_NCFSCx(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_NCFS_CFG_NCFSCx_SHIFT))&FCCU_NCFS_CFG_NCFSCx_MASK)
/* NCF_S Bit Fields */
#define FCCU_NCF_S_NCFSx_MASK                    0xFFFFFFFFu
#define FCCU_NCF_S_NCFSx_SHIFT                   0u
#define FCCU_NCF_S_NCFSx_WIDTH                   32u
#define FCCU_NCF_S_NCFSx(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_S_NCFSx_SHIFT))&FCCU_NCF_S_NCFSx_MASK)
/* NCFK Bit Fields */
#define FCCU_NCFK_NCFK_MASK                      0xFFFFFFFFu
#define FCCU_NCFK_NCFK_SHIFT                     0u
#define FCCU_NCFK_NCFK_WIDTH                     32u
#define FCCU_NCFK_NCFK(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_NCFK_NCFK_SHIFT))&FCCU_NCFK_NCFK_MASK)
/* NCF_E Bit Fields */
#define FCCU_NCF_E_NCFEx_MASK                    0xFFFFFFFFu
#define FCCU_NCF_E_NCFEx_SHIFT                   0u
#define FCCU_NCF_E_NCFEx_WIDTH                   32u
#define FCCU_NCF_E_NCFEx(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_E_NCFEx_SHIFT))&FCCU_NCF_E_NCFEx_MASK)
/* NCF_TOE Bit Fields */
#define FCCU_NCF_TOE_NCFTOEx_MASK                0xFFFFFFFFu
#define FCCU_NCF_TOE_NCFTOEx_SHIFT               0u
#define FCCU_NCF_TOE_NCFTOEx_WIDTH               32u
#define FCCU_NCF_TOE_NCFTOEx(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_TOE_NCFTOEx_SHIFT))&FCCU_NCF_TOE_NCFTOEx_MASK)
/* NCF_TO Bit Fields */
#define FCCU_NCF_TO_TO_MASK                      0xFFFFFFFFu
#define FCCU_NCF_TO_TO_SHIFT                     0u
#define FCCU_NCF_TO_TO_WIDTH                     32u
#define FCCU_NCF_TO_TO(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_NCF_TO_TO_SHIFT))&FCCU_NCF_TO_TO_MASK)
/* CFG_TO Bit Fields */
#define FCCU_CFG_TO_TO_MASK                      0x7u
#define FCCU_CFG_TO_TO_SHIFT                     0u
#define FCCU_CFG_TO_TO_WIDTH                     3u
#define FCCU_CFG_TO_TO(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_CFG_TO_TO_SHIFT))&FCCU_CFG_TO_TO_MASK)
/* EINOUT Bit Fields */
#define FCCU_EINOUT_EOUTX_MASK                   0x3u
#define FCCU_EINOUT_EOUTX_SHIFT                  0u
#define FCCU_EINOUT_EOUTX_WIDTH                  2u
#define FCCU_EINOUT_EOUTX(x)                     (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EOUTX_SHIFT))&FCCU_EINOUT_EOUTX_MASK)
#define FCCU_EINOUT_EIN0_MASK                    0x10u
#define FCCU_EINOUT_EIN0_SHIFT                   4u
#define FCCU_EINOUT_EIN0_WIDTH                   1u
#define FCCU_EINOUT_EIN0(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EIN0_SHIFT))&FCCU_EINOUT_EIN0_MASK)
#define FCCU_EINOUT_EIN1_MASK                    0x20u
#define FCCU_EINOUT_EIN1_SHIFT                   5u
#define FCCU_EINOUT_EIN1_WIDTH                   1u
#define FCCU_EINOUT_EIN1(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_EINOUT_EIN1_SHIFT))&FCCU_EINOUT_EIN1_MASK)
/* STAT Bit Fields */
#define FCCU_STAT_STATUS_MASK                    0x7u
#define FCCU_STAT_STATUS_SHIFT                   0u
#define FCCU_STAT_STATUS_WIDTH                   3u
#define FCCU_STAT_STATUS(x)                      (((uint32_t)(((uint32_t)(x))<<FCCU_STAT_STATUS_SHIFT))&FCCU_STAT_STATUS_MASK)
#define FCCU_STAT_ESTAT_MASK                     0x8u
#define FCCU_STAT_ESTAT_SHIFT                    3u
#define FCCU_STAT_ESTAT_WIDTH                    1u
#define FCCU_STAT_ESTAT(x)                       (((uint32_t)(((uint32_t)(x))<<FCCU_STAT_ESTAT_SHIFT))&FCCU_STAT_ESTAT_MASK)
#define FCCU_STAT_PhysicErrorPin_MASK            0x30u
#define FCCU_STAT_PhysicErrorPin_SHIFT           4u
#define FCCU_STAT_PhysicErrorPin_WIDTH           2u
#define FCCU_STAT_PhysicErrorPin(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_STAT_PhysicErrorPin_SHIFT))&FCCU_STAT_PhysicErrorPin_MASK)
/* N2AF_STATUS Bit Fields */
#define FCCU_N2AF_STATUS_NAFS_MASK               0xFFu
#define FCCU_N2AF_STATUS_NAFS_SHIFT              0u
#define FCCU_N2AF_STATUS_NAFS_WIDTH              8u
#define FCCU_N2AF_STATUS_NAFS(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_N2AF_STATUS_NAFS_SHIFT))&FCCU_N2AF_STATUS_NAFS_MASK)
/* A2FF_STATUS Bit Fields */
#define FCCU_A2FF_STATUS_AFFS_MASK               0xFFu
#define FCCU_A2FF_STATUS_AFFS_SHIFT              0u
#define FCCU_A2FF_STATUS_AFFS_WIDTH              8u
#define FCCU_A2FF_STATUS_AFFS(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_A2FF_STATUS_AFFS_SHIFT))&FCCU_A2FF_STATUS_AFFS_MASK)
#define FCCU_A2FF_STATUS_AF_SRC_MASK             0x300u
#define FCCU_A2FF_STATUS_AF_SRC_SHIFT            8u
#define FCCU_A2FF_STATUS_AF_SRC_WIDTH            2u
#define FCCU_A2FF_STATUS_AF_SRC(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_A2FF_STATUS_AF_SRC_SHIFT))&FCCU_A2FF_STATUS_AF_SRC_MASK)
/* N2FF_STATUS Bit Fields */
#define FCCU_N2FF_STATUS_NFFS_MASK               0xFFu
#define FCCU_N2FF_STATUS_NFFS_SHIFT              0u
#define FCCU_N2FF_STATUS_NFFS_WIDTH              8u
#define FCCU_N2FF_STATUS_NFFS(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_N2FF_STATUS_NFFS_SHIFT))&FCCU_N2FF_STATUS_NFFS_MASK)
#define FCCU_N2FF_STATUS_NF_SRC_MASK             0x300u
#define FCCU_N2FF_STATUS_NF_SRC_SHIFT            8u
#define FCCU_N2FF_STATUS_NF_SRC_WIDTH            2u
#define FCCU_N2FF_STATUS_NF_SRC(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_N2FF_STATUS_NF_SRC_SHIFT))&FCCU_N2FF_STATUS_NF_SRC_MASK)
/* F2A_STATUS Bit Fields */
#define FCCU_F2A_STATUS_FAFS_MASK                0x1FFu
#define FCCU_F2A_STATUS_FAFS_SHIFT               0u
#define FCCU_F2A_STATUS_FAFS_WIDTH               9u
#define FCCU_F2A_STATUS_FAFS(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_F2A_STATUS_FAFS_SHIFT))&FCCU_F2A_STATUS_FAFS_MASK)
/* NCFF Bit Fields */
#define FCCU_NCFF_FNCFC_MASK                     0x7Fu
#define FCCU_NCFF_FNCFC_SHIFT                    0u
#define FCCU_NCFF_FNCFC_WIDTH                    7u
#define FCCU_NCFF_FNCFC(x)                       (((uint32_t)(((uint32_t)(x))<<FCCU_NCFF_FNCFC_SHIFT))&FCCU_NCFF_FNCFC_MASK)
/* IRQ_STAT Bit Fields */
#define FCCU_IRQ_STAT_CFG_TO_STAT_MASK           0x1u
#define FCCU_IRQ_STAT_CFG_TO_STAT_SHIFT          0u
#define FCCU_IRQ_STAT_CFG_TO_STAT_WIDTH          1u
#define FCCU_IRQ_STAT_CFG_TO_STAT(x)             (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_CFG_TO_STAT_SHIFT))&FCCU_IRQ_STAT_CFG_TO_STAT_MASK)
#define FCCU_IRQ_STAT_ALRM_STAT_MASK             0x2u
#define FCCU_IRQ_STAT_ALRM_STAT_SHIFT            1u
#define FCCU_IRQ_STAT_ALRM_STAT_WIDTH            1u
#define FCCU_IRQ_STAT_ALRM_STAT(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_ALRM_STAT_SHIFT))&FCCU_IRQ_STAT_ALRM_STAT_MASK)
#define FCCU_IRQ_STAT_NMI_STAT_MASK              0x4u
#define FCCU_IRQ_STAT_NMI_STAT_SHIFT             2u
#define FCCU_IRQ_STAT_NMI_STAT_WIDTH             1u
#define FCCU_IRQ_STAT_NMI_STAT(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_NMI_STAT_SHIFT))&FCCU_IRQ_STAT_NMI_STAT_MASK)
#define FCCU_IRQ_STAT_IRQ_EOUT_MASK              0x8u
#define FCCU_IRQ_STAT_IRQ_EOUT_SHIFT             3u
#define FCCU_IRQ_STAT_IRQ_EOUT_WIDTH             1u
#define FCCU_IRQ_STAT_IRQ_EOUT(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_IRQ_EOUT_SHIFT))&FCCU_IRQ_STAT_IRQ_EOUT_MASK)
#define FCCU_IRQ_STAT_DMA_REQ_MASK               0x10u
#define FCCU_IRQ_STAT_DMA_REQ_SHIFT              4u
#define FCCU_IRQ_STAT_DMA_REQ_WIDTH              1u
#define FCCU_IRQ_STAT_DMA_REQ(x)                 (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_STAT_DMA_REQ_SHIFT))&FCCU_IRQ_STAT_DMA_REQ_MASK)
/* IRQ_EN Bit Fields */
#define FCCU_IRQ_EN_CFG_TO_IEN_MASK              0x1u
#define FCCU_IRQ_EN_CFG_TO_IEN_SHIFT             0u
#define FCCU_IRQ_EN_CFG_TO_IEN_WIDTH             1u
#define FCCU_IRQ_EN_CFG_TO_IEN(x)                (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_EN_CFG_TO_IEN_SHIFT))&FCCU_IRQ_EN_CFG_TO_IEN_MASK)
#define FCCU_IRQ_EN_IRQ_EOUT_EN_MASK             0x8u
#define FCCU_IRQ_EN_IRQ_EOUT_EN_SHIFT            3u
#define FCCU_IRQ_EN_IRQ_EOUT_EN_WIDTH            1u
#define FCCU_IRQ_EN_IRQ_EOUT_EN(x)               (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_EN_IRQ_EOUT_EN_SHIFT))&FCCU_IRQ_EN_IRQ_EOUT_EN_MASK)
/* XTMR Bit Fields */
#define FCCU_XTMR_XTMR_MASK                      0xFFFFFFFFu
#define FCCU_XTMR_XTMR_SHIFT                     0u
#define FCCU_XTMR_XTMR_WIDTH                     32u
#define FCCU_XTMR_XTMR(x)                        (((uint32_t)(((uint32_t)(x))<<FCCU_XTMR_XTMR_SHIFT))&FCCU_XTMR_XTMR_MASK)
/* MCS Bit Fields */
#define FCCU_MCS_MCS0_MASK                       0xFu
#define FCCU_MCS_MCS0_SHIFT                      0u
#define FCCU_MCS_MCS0_WIDTH                      4u
#define FCCU_MCS_MCS0(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS0_SHIFT))&FCCU_MCS_MCS0_MASK)
#define FCCU_MCS_FS0_MASK                        0x40u
#define FCCU_MCS_FS0_SHIFT                       6u
#define FCCU_MCS_FS0_WIDTH                       1u
#define FCCU_MCS_FS0(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS0_SHIFT))&FCCU_MCS_FS0_MASK)
#define FCCU_MCS_VL0_MASK                        0x80u
#define FCCU_MCS_VL0_SHIFT                       7u
#define FCCU_MCS_VL0_WIDTH                       1u
#define FCCU_MCS_VL0(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL0_SHIFT))&FCCU_MCS_VL0_MASK)
#define FCCU_MCS_MCS1_MASK                       0xF00u
#define FCCU_MCS_MCS1_SHIFT                      8u
#define FCCU_MCS_MCS1_WIDTH                      4u
#define FCCU_MCS_MCS1(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS1_SHIFT))&FCCU_MCS_MCS1_MASK)
#define FCCU_MCS_FS1_MASK                        0x4000u
#define FCCU_MCS_FS1_SHIFT                       14u
#define FCCU_MCS_FS1_WIDTH                       1u
#define FCCU_MCS_FS1(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS1_SHIFT))&FCCU_MCS_FS1_MASK)
#define FCCU_MCS_VL1_MASK                        0x8000u
#define FCCU_MCS_VL1_SHIFT                       15u
#define FCCU_MCS_VL1_WIDTH                       1u
#define FCCU_MCS_VL1(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL1_SHIFT))&FCCU_MCS_VL1_MASK)
#define FCCU_MCS_MCS2_MASK                       0xF0000u
#define FCCU_MCS_MCS2_SHIFT                      16u
#define FCCU_MCS_MCS2_WIDTH                      4u
#define FCCU_MCS_MCS2(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS2_SHIFT))&FCCU_MCS_MCS2_MASK)
#define FCCU_MCS_FS2_MASK                        0x400000u
#define FCCU_MCS_FS2_SHIFT                       22u
#define FCCU_MCS_FS2_WIDTH                       1u
#define FCCU_MCS_FS2(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS2_SHIFT))&FCCU_MCS_FS2_MASK)
#define FCCU_MCS_VL2_MASK                        0x800000u
#define FCCU_MCS_VL2_SHIFT                       23u
#define FCCU_MCS_VL2_WIDTH                       1u
#define FCCU_MCS_VL2(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL2_SHIFT))&FCCU_MCS_VL2_MASK)
#define FCCU_MCS_MCS3_MASK                       0xF000000u
#define FCCU_MCS_MCS3_SHIFT                      24u
#define FCCU_MCS_MCS3_WIDTH                      4u
#define FCCU_MCS_MCS3(x)                         (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_MCS3_SHIFT))&FCCU_MCS_MCS3_MASK)
#define FCCU_MCS_FS3_MASK                        0x40000000u
#define FCCU_MCS_FS3_SHIFT                       30u
#define FCCU_MCS_FS3_WIDTH                       1u
#define FCCU_MCS_FS3(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_FS3_SHIFT))&FCCU_MCS_FS3_MASK)
#define FCCU_MCS_VL3_MASK                        0x80000000u
#define FCCU_MCS_VL3_SHIFT                       31u
#define FCCU_MCS_VL3_WIDTH                       1u
#define FCCU_MCS_VL3(x)                          (((uint32_t)(((uint32_t)(x))<<FCCU_MCS_VL3_SHIFT))&FCCU_MCS_VL3_MASK)
/* TRANS_LOCK Bit Fields */
#define FCCU_TRANS_LOCK_TRANSKEY_MASK            0x1FFu
#define FCCU_TRANS_LOCK_TRANSKEY_SHIFT           0u
#define FCCU_TRANS_LOCK_TRANSKEY_WIDTH           9u
#define FCCU_TRANS_LOCK_TRANSKEY(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_TRANS_LOCK_TRANSKEY_SHIFT))&FCCU_TRANS_LOCK_TRANSKEY_MASK)
/* PERMNT_LOCK Bit Fields */
#define FCCU_PERMNT_LOCK_PERMNTKEY_MASK          0x1FFu
#define FCCU_PERMNT_LOCK_PERMNTKEY_SHIFT         0u
#define FCCU_PERMNT_LOCK_PERMNTKEY_WIDTH         9u
#define FCCU_PERMNT_LOCK_PERMNTKEY(x)            (((uint32_t)(((uint32_t)(x))<<FCCU_PERMNT_LOCK_PERMNTKEY_SHIFT))&FCCU_PERMNT_LOCK_PERMNTKEY_MASK)
/* DELTA_T Bit Fields */
#define FCCU_DELTA_T_DELTA_T_MASK                0x3FFFu
#define FCCU_DELTA_T_DELTA_T_SHIFT               0u
#define FCCU_DELTA_T_DELTA_T_WIDTH               14u
#define FCCU_DELTA_T_DELTA_T(x)                  (((uint32_t)(((uint32_t)(x))<<FCCU_DELTA_T_DELTA_T_SHIFT))&FCCU_DELTA_T_DELTA_T_MASK)
#define FCCU_DELTA_T_T_TRG_MASK                  0x3FFF0000u
#define FCCU_DELTA_T_T_TRG_SHIFT                 16u
#define FCCU_DELTA_T_T_TRG_WIDTH                 14u
#define FCCU_DELTA_T_T_TRG(x)                    (((uint32_t)(((uint32_t)(x))<<FCCU_DELTA_T_T_TRG_SHIFT))&FCCU_DELTA_T_T_TRG_MASK)
/* IRQ_ALARM_EN Bit Fields */
#define FCCU_IRQ_ALARM_EN_IRQENx_MASK            0xFFFFFFFFu
#define FCCU_IRQ_ALARM_EN_IRQENx_SHIFT           0u
#define FCCU_IRQ_ALARM_EN_IRQENx_WIDTH           32u
#define FCCU_IRQ_ALARM_EN_IRQENx(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_IRQ_ALARM_EN_IRQENx_SHIFT))&FCCU_IRQ_ALARM_EN_IRQENx_MASK)
/* NMI_EN Bit Fields */
#define FCCU_NMI_EN_NMIENx_MASK                  0xFFFFFFFFu
#define FCCU_NMI_EN_NMIENx_SHIFT                 0u
#define FCCU_NMI_EN_NMIENx_WIDTH                 32u
#define FCCU_NMI_EN_NMIENx(x)                    (((uint32_t)(((uint32_t)(x))<<FCCU_NMI_EN_NMIENx_SHIFT))&FCCU_NMI_EN_NMIENx_MASK)
/* EOUT_SIG_EN Bit Fields */
#define FCCU_EOUT_SIG_EN_EOUTENx_MASK            0xFFFFFFFFu
#define FCCU_EOUT_SIG_EN_EOUTENx_SHIFT           0u
#define FCCU_EOUT_SIG_EN_EOUTENx_WIDTH           32u
#define FCCU_EOUT_SIG_EN_EOUTENx(x)              (((uint32_t)(((uint32_t)(x))<<FCCU_EOUT_SIG_EN_EOUTENx_SHIFT))&FCCU_EOUT_SIG_EN_EOUTENx_MASK)

/*!
 * @}
 */ /* end of group FCCU_Register_Masks */


/*!
 * @}
 */ /* end of group FCCU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FIRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FIRC_Peripheral_Access_Layer FIRC Peripheral Access Layer
 * @{
 */


/** FIRC - Size of Registers Arrays */

/** FIRC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< Control register, offset: 0x0 */
} FIRC_Type, *FIRC_MemMapPtr;

 /** Number of instances of the FIRC module. */
#define FIRC_INSTANCE_COUNT                      (1u)


/* FIRC - Peripheral instance base addresses */
/** Peripheral FIRC base address */
#define FIRC_BASE                                (0xFFFB0000u)
/** Peripheral FIRC base pointer */
#define FIRC                                     ((FIRC_Type *)FIRC_BASE)
/** Array initializer of FIRC peripheral base addresses */
#define FIRC_BASE_ADDRS                          { FIRC_BASE }
/** Array initializer of FIRC peripheral base pointers */
#define FIRC_BASE_PTRS                           { FIRC }

/* ----------------------------------------------------------------------------
   -- FIRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FIRC_Register_Masks FIRC Register Masks
 * @{
 */

/* CTL Bit Fields */
#define FIRC_CTL_FIRCS_MASK                      0x10u
#define FIRC_CTL_FIRCS_SHIFT                     4u
#define FIRC_CTL_FIRCS_WIDTH                     1u
#define FIRC_CTL_FIRCS(x)                        (((uint32_t)(((uint32_t)(x))<<FIRC_CTL_FIRCS_SHIFT))&FIRC_CTL_FIRCS_MASK)
#define FIRC_CTL_FIRCDIV_MASK                    0x1F00u
#define FIRC_CTL_FIRCDIV_SHIFT                   8u
#define FIRC_CTL_FIRCDIV_WIDTH                   5u
#define FIRC_CTL_FIRCDIV(x)                      (((uint32_t)(((uint32_t)(x))<<FIRC_CTL_FIRCDIV_SHIFT))&FIRC_CTL_FIRCDIV_MASK)

/*!
 * @}
 */ /* end of group FIRC_Register_Masks */


/*!
 * @}
 */ /* end of group FIRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- FR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FR_Peripheral_Access_Layer FR Peripheral Access Layer
 * @{
 */


/** FR - Size of Registers Arrays */
#define FR_NMVR_COUNT                            6u
#define FR_SSR_COUNT                             8u
#define FR_SSCR_COUNT                            4u
#define FR_MB_COUNT                              128u
#define FR_MBDOR_COUNT                           132u
#define FR_LEETR_COUNT                           6u

/** FR - Register Layout Typedef */
typedef struct {
  __I  uint16_t MVR;                               /**< Module Version Register, offset: 0x0 */
  __IO uint16_t MCR;                               /**< Module Configuration Register, offset: 0x2 */
  __IO uint16_t SYMBADHR;                          /**< System Memory Base Address High Register, offset: 0x4 */
  __IO uint16_t SYMBADLR;                          /**< System Memory Base Address Low Register, offset: 0x6 */
  __IO uint16_t STBSCR;                            /**< Strobe Signal Control Register, offset: 0x8 */
       uint8_t RESERVED_0[2];
  __IO uint16_t MBDSR;                             /**< Message Buffer Data Size Register, offset: 0xC */
  __IO uint16_t MBSSUTR;                           /**< Message Buffer Segment Size and Utilization Register, offset: 0xE */
  __IO uint16_t PEDRAR;                            /**< PE DRAM Access Register, offset: 0x10 */
  __IO uint16_t PEDRDR;                            /**< PE DRAM Data Register, offset: 0x12 */
  __IO uint16_t POCR;                              /**< Protocol Operation Control Register, offset: 0x14 */
  __IO uint16_t GIFER;                             /**< Global Interrupt Flag and Enable Register, offset: 0x16 */
  __IO uint16_t PIFR0;                             /**< Protocol Interrupt Flag Register 0, offset: 0x18 */
  __IO uint16_t PIFR1;                             /**< Protocol Interrupt Flag Register 1, offset: 0x1A */
  __IO uint16_t PIER0;                             /**< Protocol Interrupt Enable Register 0, offset: 0x1C */
  __IO uint16_t PIER1;                             /**< Protocol Interrupt Enable Register 1, offset: 0x1E */
  __IO uint16_t CHIERFR;                           /**< CHI Error Flag Register, offset: 0x20 */
  __IO uint16_t MBIVEC;                            /**< Message Buffer Interrupt Vector Register, offset: 0x22 */
  __I  uint16_t CASERCR;                           /**< Channel A Status Error Counter Register, offset: 0x24 */
  __I  uint16_t CBSERCR;                           /**< Channel B Status Error Counter Register, offset: 0x26 */
  __I  uint16_t PSR0;                              /**< Protocol Status Register 0, offset: 0x28 */
  __IO uint16_t PSR1;                              /**< Protocol Status Register 1, offset: 0x2A */
  __I  uint16_t PSR2;                              /**< Protocol Status Register 2, offset: 0x2C */
  __IO uint16_t PSR3;                              /**< Protocol Status Register 3, offset: 0x2E */
  __I  uint16_t MTCTR;                             /**< Macrotick Counter Register, offset: 0x30 */
  __I  uint16_t CYCTR;                             /**< Cycle Counter Register, offset: 0x32 */
  __I  uint16_t SLTCTAR;                           /**< Slot Counter Channel A Register, offset: 0x34 */
  __I  uint16_t SLTCTBR;                           /**< Slot Counter Channel B Register, offset: 0x36 */
  __I  uint16_t RTCORVR;                           /**< Rate Correction Value Register, offset: 0x38 */
  __I  uint16_t OFCORVR;                           /**< Offset Correction Value Register, offset: 0x3A */
  __I  uint16_t CIFR;                              /**< Combined Interrupt Flag Register, offset: 0x3C */
  __IO uint16_t SYMATOR;                           /**< System Memory Access Time-Out Register, offset: 0x3E */
  __I  uint16_t SFCNTR;                            /**< Sync Frame Counter Register, offset: 0x40 */
  __IO uint16_t SFTOR;                             /**< Sync Frame Table Offset Register, offset: 0x42 */
  __IO uint16_t SFTCCSR;                           /**< Sync Frame Table Configuration, Control, Status Register, offset: 0x44 */
  __IO uint16_t SFIDRFR;                           /**< Sync Frame ID Rejection Filter Register, offset: 0x46 */
  __IO uint16_t SFIDAFVR;                          /**< Sync Frame ID Acceptance Filter Value Register, offset: 0x48 */
  __IO uint16_t SFIDAFMR;                          /**< Sync Frame ID Acceptance Filter Mask Register, offset: 0x4A */
  __I  uint16_t NMVR[FR_NMVR_COUNT];               /**< Network Management Vector Register, array offset: 0x4C, array step: 0x2 */
  __IO uint16_t NMVLR;                             /**< Network Management Vector Length Register, offset: 0x58 */
  __IO uint16_t TICCR;                             /**< Timer Configuration and Control Register, offset: 0x5A */
  __IO uint16_t TI1CYSR;                           /**< Timer 1 Cycle Set Register, offset: 0x5C */
  __IO uint16_t TI1MTOR;                           /**< Timer 1 Macrotick Offset Register, offset: 0x5E */
  union {                                          /* offset: 0x60 */
    __IO uint16_t ABS;                               /**< Timer 2 Configuration Register 0 (Absolute Timer Configuration), offset: 0x60 */
    __IO uint16_t REL;                               /**< Timer 2 Configuration Register 0 (Relative Timer Configuration), offset: 0x60 */
  } TI2CR0;
  union {                                          /* offset: 0x62 */
    __IO uint16_t ABS;                               /**< Timer 2 Configuration Register 1 (Absolute Timer Configuration), offset: 0x62 */
    __IO uint16_t REL;                               /**< Timer 2 Configuration Register 1 (Relative Timer Configuration), offset: 0x62 */
  } TI2CR1;
  __IO uint16_t SSSR;                              /**< Slot Status Selection Register, offset: 0x64 */
  __IO uint16_t SSCCR;                             /**< Slot Status Counter Condition Register, offset: 0x66 */
  __I  uint16_t SSR[FR_SSR_COUNT];                 /**< Slot Status Register, array offset: 0x68, array step: 0x2 */
  __I  uint16_t SSCR[FR_SSCR_COUNT];               /**< Slot Status Counter Register, array offset: 0x78, array step: 0x2 */
  __IO uint16_t MTSACFR;                           /**< MTS A Configuration Register, offset: 0x80 */
  __IO uint16_t MTSBCFR;                           /**< MTS B Configuration Register, offset: 0x82 */
  __IO uint16_t RSBIR;                             /**< Receive Shadow Buffer Index Register, offset: 0x84 */
  __IO uint16_t RFWMSR;                            /**< Receive FIFO Watermark and Selection Register, offset: 0x86 */
  __IO uint16_t RFSIR;                             /**< Receive FIFO Start Index Register, offset: 0x88 */
  __IO uint16_t RFDSR;                             /**< Receive FIFO Depth and Size Register, offset: 0x8A */
  __I  uint16_t RFARIR;                            /**< Receive FIFO A Read Index Register, offset: 0x8C */
  __I  uint16_t RFBRIR;                            /**< Receive FIFO B Read Index Register, offset: 0x8E */
  __IO uint16_t RFMIDAFVR;                         /**< Receive FIFO Message ID Acceptance Filter Value Register, offset: 0x90 */
  __IO uint16_t RFMIDAFMR;                         /**< Receive FIFO Message ID Acceptance Filter Mask Register, offset: 0x92 */
  __IO uint16_t RFFIDRFVR;                         /**< Receive FIFO Frame ID Rejection Filter Value Register, offset: 0x94 */
  __IO uint16_t RFFIDRFMR;                         /**< Receive FIFO Frame ID Rejection Filter Mask Register, offset: 0x96 */
  __IO uint16_t RFRFCFR;                           /**< Receive FIFO Range Filter Configuration Register, offset: 0x98 */
  __IO uint16_t RFRFCTR;                           /**< Receive FIFO Range Filter Control Register, offset: 0x9A */
  __I  uint16_t LDTXSLAR;                          /**< Last Dynamic Transmit Slot Channel A Register, offset: 0x9C */
  __I  uint16_t LDTXSLBR;                          /**< Last Dynamic Transmit Slot Channel B Register, offset: 0x9E */
  __IO uint16_t PCR0;                              /**< Protocol Configuration Register 0, offset: 0xA0 */
  __IO uint16_t PCR1;                              /**< Protocol Configuration Register 1, offset: 0xA2 */
  __IO uint16_t PCR2;                              /**< Protocol Configuration Register 2, offset: 0xA4 */
  __IO uint16_t PCR3;                              /**< Protocol Configuration Register 3, offset: 0xA6 */
  __IO uint16_t PCR4;                              /**< Protocol Configuration Register 4, offset: 0xA8 */
  __IO uint16_t PCR5;                              /**< Protocol Configuration Register 5, offset: 0xAA */
  __IO uint16_t PCR6;                              /**< Protocol Configuration Register 6, offset: 0xAC */
  __IO uint16_t PCR7;                              /**< Protocol Configuration Register 7, offset: 0xAE */
  __IO uint16_t PCR8;                              /**< Protocol Configuration Register 8, offset: 0xB0 */
  __IO uint16_t PCR9;                              /**< Protocol Configuration Register 9, offset: 0xB2 */
  __IO uint16_t PCR10;                             /**< Protocol Configuration Register 10, offset: 0xB4 */
  __IO uint16_t PCR11;                             /**< Protocol Configuration Register 11, offset: 0xB6 */
  __IO uint16_t PCR12;                             /**< Protocol Configuration Register 12, offset: 0xB8 */
  __IO uint16_t PCR13;                             /**< Protocol Configuration Register 13, offset: 0xBA */
  __IO uint16_t PCR14;                             /**< Protocol Configuration Register 14, offset: 0xBC */
  __IO uint16_t PCR15;                             /**< Protocol Configuration Register 15, offset: 0xBE */
  __IO uint16_t PCR16;                             /**< Protocol Configuration Register 16, offset: 0xC0 */
  __IO uint16_t PCR17;                             /**< Protocol Configuration Register 17, offset: 0xC2 */
  __IO uint16_t PCR18;                             /**< Protocol Configuration Register 18, offset: 0xC4 */
  __IO uint16_t PCR19;                             /**< Protocol Configuration Register 19, offset: 0xC6 */
  __IO uint16_t PCR20;                             /**< Protocol Configuration Register 20, offset: 0xC8 */
  __IO uint16_t PCR21;                             /**< Protocol Configuration Register 21, offset: 0xCA */
  __IO uint16_t PCR22;                             /**< Protocol Configuration Register 22, offset: 0xCC */
  __IO uint16_t PCR23;                             /**< Protocol Configuration Register 23, offset: 0xCE */
  __IO uint16_t PCR24;                             /**< Protocol Configuration Register 24, offset: 0xD0 */
  __IO uint16_t PCR25;                             /**< Protocol Configuration Register 25, offset: 0xD2 */
  __IO uint16_t PCR26;                             /**< Protocol Configuration Register 26, offset: 0xD4 */
  __IO uint16_t PCR27;                             /**< Protocol Configuration Register 27, offset: 0xD6 */
  __IO uint16_t PCR28;                             /**< Protocol Configuration Register 28, offset: 0xD8 */
  __IO uint16_t PCR29;                             /**< Protocol Configuration Register 29, offset: 0xDA */
  __IO uint16_t PCR30;                             /**< Protocol Configuration Register 30, offset: 0xDC */
  __IO uint16_t STPWHR;                            /**< StopWatch Count High Register, offset: 0xDE */
  __IO uint16_t STPWLR;                            /**< Stop Watch Count Low Register, offset: 0xE0 */
  __IO uint16_t PEOER;                             /**< Protocol Event Output Enable and StopWatch Control Register, offset: 0xE2 */
       uint8_t RESERVED_1[2];
  __IO uint16_t RFSDOR;                            /**< Receive FIFO Start Data Offset Register, offset: 0xE6 */
  __IO uint16_t RFSYMBADHR;                        /**< Receive FIFO System Memory Base Address High Register, offset: 0xE8 */
  __IO uint16_t RFSYMBADLR;                        /**< Receive FIFO System Memory Base Address Low Register, offset: 0xEA */
  __IO uint16_t RFPTR;                             /**< Receive FIFO Periodic Timer Register, offset: 0xEC */
  __IO uint16_t RFFLPCR;                           /**< Receive FIFO Fill Level and POP Count Register, offset: 0xEE */
  __IO uint16_t EEIFER;                            /**< ECC Error Interrupt Flag and Enable Register, offset: 0xF0 */
  __IO uint16_t EERICR;                            /**< ECC Error Report and Injection Control Register, offset: 0xF2 */
  __I  uint16_t EERAR;                             /**< ECC Error Report Address Register, offset: 0xF4 */
  __I  uint16_t EERDR;                             /**< ECC Error Report Data Register, offset: 0xF6 */
  __I  uint16_t EERCR;                             /**< ECC Error Report Code Register, offset: 0xF8 */
  __IO uint16_t EEIAR;                             /**< ECC Error Injection Address Register, offset: 0xFA */
  __IO uint16_t EEIDR;                             /**< ECC Error Injection Data Register, offset: 0xFC */
  __IO uint16_t EEICR;                             /**< ECC Error Injection Code Register, offset: 0xFE */
       uint8_t RESERVED_2[1792];
  struct {                                         /* offset: 0x800, array step: 0x8 */
    __IO uint16_t CCSR;                              /**< Message Buffer Configuration, Control, Status Register, array offset: 0x800, array step: 0x8 */
    __IO uint16_t CCFR;                              /**< Message Buffer Cycle Counter Filter Register, array offset: 0x802, array step: 0x8 */
    __IO uint16_t FIDR;                              /**< Message Buffer Frame ID Register, array offset: 0x804, array step: 0x8 */
    __IO uint16_t IDXR;                              /**< Message Buffer Index Register, array offset: 0x806, array step: 0x8 */
  } MB[FR_MB_COUNT];
       uint8_t RESERVED_3[1024];
  __IO uint16_t MBDOR[FR_MBDOR_COUNT];             /**< Message Buffer Data Field Offset Register, array offset: 0x1000, array step: 0x2 */
  __IO uint16_t LEETR[FR_LEETR_COUNT];             /**< LRAM ECC Error Test Register, array offset: 0x1108, array step: 0x2 */
} FR_Type, *FR_MemMapPtr;

 /** Number of instances of the FR module. */
#define FR_INSTANCE_COUNT                        (1u)


/* FR - Peripheral instance base addresses */
/** Peripheral FR base address */
#define FR_BASE                                  (0xFFE50000u)
/** Peripheral FR base pointer */
#define FR                                       ((FR_Type *)FR_BASE)
/** Array initializer of FR peripheral base addresses */
#define FR_BASE_ADDRS                            { FR_BASE }
/** Array initializer of FR peripheral base pointers */
#define FR_BASE_PTRS                             { FR }

/* ----------------------------------------------------------------------------
   -- FR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup FR_Register_Masks FR Register Masks
 * @{
 */

/* MVR Bit Fields */
#define FR_MVR_PEVER_MASK                        0xFFu
#define FR_MVR_PEVER_SHIFT                       0u
#define FR_MVR_PEVER_WIDTH                       8u
#define FR_MVR_PEVER(x)                          (((uint16_t)(((uint16_t)(x))<<FR_MVR_PEVER_SHIFT))&FR_MVR_PEVER_MASK)
#define FR_MVR_CHIVER_MASK                       0xFF00u
#define FR_MVR_CHIVER_SHIFT                      8u
#define FR_MVR_CHIVER_WIDTH                      8u
#define FR_MVR_CHIVER(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MVR_CHIVER_SHIFT))&FR_MVR_CHIVER_MASK)
/* MCR Bit Fields */
#define FR_MCR_BITRATE_MASK                      0xEu
#define FR_MCR_BITRATE_SHIFT                     1u
#define FR_MCR_BITRATE_WIDTH                     3u
#define FR_MCR_BITRATE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_MCR_BITRATE_SHIFT))&FR_MCR_BITRATE_MASK)
#define FR_MCR_CLKSEL_MASK                       0x10u
#define FR_MCR_CLKSEL_SHIFT                      4u
#define FR_MCR_CLKSEL_WIDTH                      1u
#define FR_MCR_CLKSEL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MCR_CLKSEL_SHIFT))&FR_MCR_CLKSEL_MASK)
#define FR_MCR_FAM_MASK                          0x40u
#define FR_MCR_FAM_SHIFT                         6u
#define FR_MCR_FAM_WIDTH                         1u
#define FR_MCR_FAM(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_FAM_SHIFT))&FR_MCR_FAM_MASK)
#define FR_MCR_FUM_MASK                          0x80u
#define FR_MCR_FUM_SHIFT                         7u
#define FR_MCR_FUM_WIDTH                         1u
#define FR_MCR_FUM(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_FUM_SHIFT))&FR_MCR_FUM_MASK)
#define FR_MCR_ECCE_MASK                         0x200u
#define FR_MCR_ECCE_SHIFT                        9u
#define FR_MCR_ECCE_WIDTH                        1u
#define FR_MCR_ECCE(x)                           (((uint16_t)(((uint16_t)(x))<<FR_MCR_ECCE_SHIFT))&FR_MCR_ECCE_MASK)
#define FR_MCR_SFFE_MASK                         0x400u
#define FR_MCR_SFFE_SHIFT                        10u
#define FR_MCR_SFFE_WIDTH                        1u
#define FR_MCR_SFFE(x)                           (((uint16_t)(((uint16_t)(x))<<FR_MCR_SFFE_SHIFT))&FR_MCR_SFFE_MASK)
#define FR_MCR_CHA_MASK                          0x800u
#define FR_MCR_CHA_SHIFT                         11u
#define FR_MCR_CHA_WIDTH                         1u
#define FR_MCR_CHA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_CHA_SHIFT))&FR_MCR_CHA_MASK)
#define FR_MCR_CHB_MASK                          0x1000u
#define FR_MCR_CHB_SHIFT                         12u
#define FR_MCR_CHB_WIDTH                         1u
#define FR_MCR_CHB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_CHB_SHIFT))&FR_MCR_CHB_MASK)
#define FR_MCR_SCM_MASK                          0x2000u
#define FR_MCR_SCM_SHIFT                         13u
#define FR_MCR_SCM_WIDTH                         1u
#define FR_MCR_SCM(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_SCM_SHIFT))&FR_MCR_SCM_MASK)
#define FR_MCR_SBFF_MASK                         0x4000u
#define FR_MCR_SBFF_SHIFT                        14u
#define FR_MCR_SBFF_WIDTH                        1u
#define FR_MCR_SBFF(x)                           (((uint16_t)(((uint16_t)(x))<<FR_MCR_SBFF_SHIFT))&FR_MCR_SBFF_MASK)
#define FR_MCR_MEN_MASK                          0x8000u
#define FR_MCR_MEN_SHIFT                         15u
#define FR_MCR_MEN_WIDTH                         1u
#define FR_MCR_MEN(x)                            (((uint16_t)(((uint16_t)(x))<<FR_MCR_MEN_SHIFT))&FR_MCR_MEN_MASK)
/* SYMBADHR Bit Fields */
#define FR_SYMBADHR_SMBA_MASK                    0xFFFFu
#define FR_SYMBADHR_SMBA_SHIFT                   0u
#define FR_SYMBADHR_SMBA_WIDTH                   16u
#define FR_SYMBADHR_SMBA(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SYMBADHR_SMBA_SHIFT))&FR_SYMBADHR_SMBA_MASK)
/* SYMBADLR Bit Fields */
#define FR_SYMBADLR_SMBA_MASK                    0xFFF0u
#define FR_SYMBADLR_SMBA_SHIFT                   4u
#define FR_SYMBADLR_SMBA_WIDTH                   12u
#define FR_SYMBADLR_SMBA(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SYMBADLR_SMBA_SHIFT))&FR_SYMBADLR_SMBA_MASK)
/* STBSCR Bit Fields */
#define FR_STBSCR_STBPSEL_MASK                   0x3u
#define FR_STBSCR_STBPSEL_SHIFT                  0u
#define FR_STBSCR_STBPSEL_WIDTH                  2u
#define FR_STBSCR_STBPSEL(x)                     (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_STBPSEL_SHIFT))&FR_STBSCR_STBPSEL_MASK)
#define FR_STBSCR_ENB_MASK                       0x10u
#define FR_STBSCR_ENB_SHIFT                      4u
#define FR_STBSCR_ENB_WIDTH                      1u
#define FR_STBSCR_ENB(x)                         (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_ENB_SHIFT))&FR_STBSCR_ENB_MASK)
#define FR_STBSCR_SEL_MASK                       0xF00u
#define FR_STBSCR_SEL_SHIFT                      8u
#define FR_STBSCR_SEL_WIDTH                      4u
#define FR_STBSCR_SEL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_SEL_SHIFT))&FR_STBSCR_SEL_MASK)
#define FR_STBSCR_WMD_MASK                       0x8000u
#define FR_STBSCR_WMD_SHIFT                      15u
#define FR_STBSCR_WMD_WIDTH                      1u
#define FR_STBSCR_WMD(x)                         (((uint16_t)(((uint16_t)(x))<<FR_STBSCR_WMD_SHIFT))&FR_STBSCR_WMD_MASK)
/* MBDSR Bit Fields */
#define FR_MBDSR_MBSEG1DS_MASK                   0x7Fu
#define FR_MBDSR_MBSEG1DS_SHIFT                  0u
#define FR_MBDSR_MBSEG1DS_WIDTH                  7u
#define FR_MBDSR_MBSEG1DS(x)                     (((uint16_t)(((uint16_t)(x))<<FR_MBDSR_MBSEG1DS_SHIFT))&FR_MBDSR_MBSEG1DS_MASK)
#define FR_MBDSR_MBSEG2DS_MASK                   0x7F00u
#define FR_MBDSR_MBSEG2DS_SHIFT                  8u
#define FR_MBDSR_MBSEG2DS_WIDTH                  7u
#define FR_MBDSR_MBSEG2DS(x)                     (((uint16_t)(((uint16_t)(x))<<FR_MBDSR_MBSEG2DS_SHIFT))&FR_MBDSR_MBSEG2DS_MASK)
/* MBSSUTR Bit Fields */
#define FR_MBSSUTR_LAST_MB_UTIL_MASK             0x7Fu
#define FR_MBSSUTR_LAST_MB_UTIL_SHIFT            0u
#define FR_MBSSUTR_LAST_MB_UTIL_WIDTH            7u
#define FR_MBSSUTR_LAST_MB_UTIL(x)               (((uint16_t)(((uint16_t)(x))<<FR_MBSSUTR_LAST_MB_UTIL_SHIFT))&FR_MBSSUTR_LAST_MB_UTIL_MASK)
#define FR_MBSSUTR_LAST_MB_SEG1_MASK             0x7F00u
#define FR_MBSSUTR_LAST_MB_SEG1_SHIFT            8u
#define FR_MBSSUTR_LAST_MB_SEG1_WIDTH            7u
#define FR_MBSSUTR_LAST_MB_SEG1(x)               (((uint16_t)(((uint16_t)(x))<<FR_MBSSUTR_LAST_MB_SEG1_SHIFT))&FR_MBSSUTR_LAST_MB_SEG1_MASK)
/* PEDRAR Bit Fields */
#define FR_PEDRAR_DAD_MASK                       0x1u
#define FR_PEDRAR_DAD_SHIFT                      0u
#define FR_PEDRAR_DAD_WIDTH                      1u
#define FR_PEDRAR_DAD(x)                         (((uint16_t)(((uint16_t)(x))<<FR_PEDRAR_DAD_SHIFT))&FR_PEDRAR_DAD_MASK)
#define FR_PEDRAR_ADDR_MASK                      0xFFEu
#define FR_PEDRAR_ADDR_SHIFT                     1u
#define FR_PEDRAR_ADDR_WIDTH                     11u
#define FR_PEDRAR_ADDR(x)                        (((uint16_t)(((uint16_t)(x))<<FR_PEDRAR_ADDR_SHIFT))&FR_PEDRAR_ADDR_MASK)
#define FR_PEDRAR_INST_MASK                      0xF000u
#define FR_PEDRAR_INST_SHIFT                     12u
#define FR_PEDRAR_INST_WIDTH                     4u
#define FR_PEDRAR_INST(x)                        (((uint16_t)(((uint16_t)(x))<<FR_PEDRAR_INST_SHIFT))&FR_PEDRAR_INST_MASK)
/* PEDRDR Bit Fields */
#define FR_PEDRDR_DATA_MASK                      0xFFFFu
#define FR_PEDRDR_DATA_SHIFT                     0u
#define FR_PEDRDR_DATA_WIDTH                     16u
#define FR_PEDRDR_DATA(x)                        (((uint16_t)(((uint16_t)(x))<<FR_PEDRDR_DATA_SHIFT))&FR_PEDRDR_DATA_MASK)
/* POCR Bit Fields */
#define FR_POCR_POCCMD_MASK                      0xFu
#define FR_POCR_POCCMD_SHIFT                     0u
#define FR_POCR_POCCMD_WIDTH                     4u
#define FR_POCR_POCCMD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_POCR_POCCMD_SHIFT))&FR_POCR_POCCMD_MASK)
#define FR_POCR_BSY_WMC_MASK                     0x80u
#define FR_POCR_BSY_WMC_SHIFT                    7u
#define FR_POCR_BSY_WMC_WIDTH                    1u
#define FR_POCR_BSY_WMC(x)                       (((uint16_t)(((uint16_t)(x))<<FR_POCR_BSY_WMC_SHIFT))&FR_POCR_BSY_WMC_MASK)
#define FR_POCR_ERC_AP_MASK                      0x300u
#define FR_POCR_ERC_AP_SHIFT                     8u
#define FR_POCR_ERC_AP_WIDTH                     2u
#define FR_POCR_ERC_AP(x)                        (((uint16_t)(((uint16_t)(x))<<FR_POCR_ERC_AP_SHIFT))&FR_POCR_ERC_AP_MASK)
#define FR_POCR_EOC_AP_MASK                      0xC00u
#define FR_POCR_EOC_AP_SHIFT                     10u
#define FR_POCR_EOC_AP_WIDTH                     2u
#define FR_POCR_EOC_AP(x)                        (((uint16_t)(((uint16_t)(x))<<FR_POCR_EOC_AP_SHIFT))&FR_POCR_EOC_AP_MASK)
#define FR_POCR_WME_MASK                         0x8000u
#define FR_POCR_WME_SHIFT                        15u
#define FR_POCR_WME_WIDTH                        1u
#define FR_POCR_WME(x)                           (((uint16_t)(((uint16_t)(x))<<FR_POCR_WME_SHIFT))&FR_POCR_WME_MASK)
/* GIFER Bit Fields */
#define FR_GIFER_TBIE_MASK                       0x1u
#define FR_GIFER_TBIE_SHIFT                      0u
#define FR_GIFER_TBIE_WIDTH                      1u
#define FR_GIFER_TBIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_TBIE_SHIFT))&FR_GIFER_TBIE_MASK)
#define FR_GIFER_RBIE_MASK                       0x2u
#define FR_GIFER_RBIE_SHIFT                      1u
#define FR_GIFER_RBIE_WIDTH                      1u
#define FR_GIFER_RBIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_RBIE_SHIFT))&FR_GIFER_RBIE_MASK)
#define FR_GIFER_FAFAIE_MASK                     0x4u
#define FR_GIFER_FAFAIE_SHIFT                    2u
#define FR_GIFER_FAFAIE_WIDTH                    1u
#define FR_GIFER_FAFAIE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFAIE_SHIFT))&FR_GIFER_FAFAIE_MASK)
#define FR_GIFER_FAFBIE_MASK                     0x8u
#define FR_GIFER_FAFBIE_SHIFT                    3u
#define FR_GIFER_FAFBIE_WIDTH                    1u
#define FR_GIFER_FAFBIE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFBIE_SHIFT))&FR_GIFER_FAFBIE_MASK)
#define FR_GIFER_WUPIE_MASK                      0x10u
#define FR_GIFER_WUPIE_SHIFT                     4u
#define FR_GIFER_WUPIE_WIDTH                     1u
#define FR_GIFER_WUPIE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_GIFER_WUPIE_SHIFT))&FR_GIFER_WUPIE_MASK)
#define FR_GIFER_CHIE_MASK                       0x20u
#define FR_GIFER_CHIE_SHIFT                      5u
#define FR_GIFER_CHIE_WIDTH                      1u
#define FR_GIFER_CHIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_CHIE_SHIFT))&FR_GIFER_CHIE_MASK)
#define FR_GIFER_PRIE_MASK                       0x40u
#define FR_GIFER_PRIE_SHIFT                      6u
#define FR_GIFER_PRIE_WIDTH                      1u
#define FR_GIFER_PRIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_PRIE_SHIFT))&FR_GIFER_PRIE_MASK)
#define FR_GIFER_MIE_MASK                        0x80u
#define FR_GIFER_MIE_SHIFT                       7u
#define FR_GIFER_MIE_WIDTH                       1u
#define FR_GIFER_MIE(x)                          (((uint16_t)(((uint16_t)(x))<<FR_GIFER_MIE_SHIFT))&FR_GIFER_MIE_MASK)
#define FR_GIFER_TBIF_MASK                       0x100u
#define FR_GIFER_TBIF_SHIFT                      8u
#define FR_GIFER_TBIF_WIDTH                      1u
#define FR_GIFER_TBIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_TBIF_SHIFT))&FR_GIFER_TBIF_MASK)
#define FR_GIFER_RBIF_MASK                       0x200u
#define FR_GIFER_RBIF_SHIFT                      9u
#define FR_GIFER_RBIF_WIDTH                      1u
#define FR_GIFER_RBIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_RBIF_SHIFT))&FR_GIFER_RBIF_MASK)
#define FR_GIFER_FAFAIF_MASK                     0x400u
#define FR_GIFER_FAFAIF_SHIFT                    10u
#define FR_GIFER_FAFAIF_WIDTH                    1u
#define FR_GIFER_FAFAIF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFAIF_SHIFT))&FR_GIFER_FAFAIF_MASK)
#define FR_GIFER_FAFBIF_MASK                     0x800u
#define FR_GIFER_FAFBIF_SHIFT                    11u
#define FR_GIFER_FAFBIF_WIDTH                    1u
#define FR_GIFER_FAFBIF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_GIFER_FAFBIF_SHIFT))&FR_GIFER_FAFBIF_MASK)
#define FR_GIFER_WUPIF_MASK                      0x1000u
#define FR_GIFER_WUPIF_SHIFT                     12u
#define FR_GIFER_WUPIF_WIDTH                     1u
#define FR_GIFER_WUPIF(x)                        (((uint16_t)(((uint16_t)(x))<<FR_GIFER_WUPIF_SHIFT))&FR_GIFER_WUPIF_MASK)
#define FR_GIFER_CHIF_MASK                       0x2000u
#define FR_GIFER_CHIF_SHIFT                      13u
#define FR_GIFER_CHIF_WIDTH                      1u
#define FR_GIFER_CHIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_CHIF_SHIFT))&FR_GIFER_CHIF_MASK)
#define FR_GIFER_PRIF_MASK                       0x4000u
#define FR_GIFER_PRIF_SHIFT                      14u
#define FR_GIFER_PRIF_WIDTH                      1u
#define FR_GIFER_PRIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_GIFER_PRIF_SHIFT))&FR_GIFER_PRIF_MASK)
#define FR_GIFER_MIF_MASK                        0x8000u
#define FR_GIFER_MIF_SHIFT                       15u
#define FR_GIFER_MIF_WIDTH                       1u
#define FR_GIFER_MIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_GIFER_MIF_SHIFT))&FR_GIFER_MIF_MASK)
/* PIFR0 Bit Fields */
#define FR_PIFR0_CYS_IF_MASK                     0x1u
#define FR_PIFR0_CYS_IF_SHIFT                    0u
#define FR_PIFR0_CYS_IF_WIDTH                    1u
#define FR_PIFR0_CYS_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_CYS_IF_SHIFT))&FR_PIFR0_CYS_IF_MASK)
#define FR_PIFR0_TI1_IF_MASK                     0x2u
#define FR_PIFR0_TI1_IF_SHIFT                    1u
#define FR_PIFR0_TI1_IF_WIDTH                    1u
#define FR_PIFR0_TI1_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TI1_IF_SHIFT))&FR_PIFR0_TI1_IF_MASK)
#define FR_PIFR0_TI2_IF_MASK                     0x4u
#define FR_PIFR0_TI2_IF_SHIFT                    2u
#define FR_PIFR0_TI2_IF_WIDTH                    1u
#define FR_PIFR0_TI2_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TI2_IF_SHIFT))&FR_PIFR0_TI2_IF_MASK)
#define FR_PIFR0_TBVA_IF_MASK                    0x8u
#define FR_PIFR0_TBVA_IF_SHIFT                   3u
#define FR_PIFR0_TBVA_IF_WIDTH                   1u
#define FR_PIFR0_TBVA_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TBVA_IF_SHIFT))&FR_PIFR0_TBVA_IF_MASK)
#define FR_PIFR0_TBVB_IF_MASK                    0x10u
#define FR_PIFR0_TBVB_IF_SHIFT                   4u
#define FR_PIFR0_TBVB_IF_WIDTH                   1u
#define FR_PIFR0_TBVB_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_TBVB_IF_SHIFT))&FR_PIFR0_TBVB_IF_MASK)
#define FR_PIFR0_LTXA_IF_MASK                    0x20u
#define FR_PIFR0_LTXA_IF_SHIFT                   5u
#define FR_PIFR0_LTXA_IF_WIDTH                   1u
#define FR_PIFR0_LTXA_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_LTXA_IF_SHIFT))&FR_PIFR0_LTXA_IF_MASK)
#define FR_PIFR0_LTXB_IF_MASK                    0x40u
#define FR_PIFR0_LTXB_IF_SHIFT                   6u
#define FR_PIFR0_LTXB_IF_WIDTH                   1u
#define FR_PIFR0_LTXB_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_LTXB_IF_SHIFT))&FR_PIFR0_LTXB_IF_MASK)
#define FR_PIFR0_MTX_IF_MASK                     0x80u
#define FR_PIFR0_MTX_IF_SHIFT                    7u
#define FR_PIFR0_MTX_IF_WIDTH                    1u
#define FR_PIFR0_MTX_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MTX_IF_SHIFT))&FR_PIFR0_MTX_IF_MASK)
#define FR_PIFR0_MXS_IF_MASK                     0x100u
#define FR_PIFR0_MXS_IF_SHIFT                    8u
#define FR_PIFR0_MXS_IF_WIDTH                    1u
#define FR_PIFR0_MXS_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MXS_IF_SHIFT))&FR_PIFR0_MXS_IF_MASK)
#define FR_PIFR0_CCL_IF_MASK                     0x200u
#define FR_PIFR0_CCL_IF_SHIFT                    9u
#define FR_PIFR0_CCL_IF_WIDTH                    1u
#define FR_PIFR0_CCL_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_CCL_IF_SHIFT))&FR_PIFR0_CCL_IF_MASK)
#define FR_PIFR0_MOC_IF_MASK                     0x400u
#define FR_PIFR0_MOC_IF_SHIFT                    10u
#define FR_PIFR0_MOC_IF_WIDTH                    1u
#define FR_PIFR0_MOC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MOC_IF_SHIFT))&FR_PIFR0_MOC_IF_MASK)
#define FR_PIFR0_MRC_IF_MASK                     0x800u
#define FR_PIFR0_MRC_IF_SHIFT                    11u
#define FR_PIFR0_MRC_IF_WIDTH                    1u
#define FR_PIFR0_MRC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_MRC_IF_SHIFT))&FR_PIFR0_MRC_IF_MASK)
#define FR_PIFR0_CSA_IF_MASK                     0x1000u
#define FR_PIFR0_CSA_IF_SHIFT                    12u
#define FR_PIFR0_CSA_IF_WIDTH                    1u
#define FR_PIFR0_CSA_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_CSA_IF_SHIFT))&FR_PIFR0_CSA_IF_MASK)
#define FR_PIFR0_ILCF_IF_MASK                    0x2000u
#define FR_PIFR0_ILCF_IF_SHIFT                   13u
#define FR_PIFR0_ILCF_IF_WIDTH                   1u
#define FR_PIFR0_ILCF_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_ILCF_IF_SHIFT))&FR_PIFR0_ILCF_IF_MASK)
#define FR_PIFR0_INTL_IF_MASK                    0x4000u
#define FR_PIFR0_INTL_IF_SHIFT                   14u
#define FR_PIFR0_INTL_IF_WIDTH                   1u
#define FR_PIFR0_INTL_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_INTL_IF_SHIFT))&FR_PIFR0_INTL_IF_MASK)
#define FR_PIFR0_FATL_IF_MASK                    0x8000u
#define FR_PIFR0_FATL_IF_SHIFT                   15u
#define FR_PIFR0_FATL_IF_WIDTH                   1u
#define FR_PIFR0_FATL_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR0_FATL_IF_SHIFT))&FR_PIFR0_FATL_IF_MASK)
/* PIFR1 Bit Fields */
#define FR_PIFR1_ODT_IF_MASK                     0x10u
#define FR_PIFR1_ODT_IF_SHIFT                    4u
#define FR_PIFR1_ODT_IF_WIDTH                    1u
#define FR_PIFR1_ODT_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_ODT_IF_SHIFT))&FR_PIFR1_ODT_IF_MASK)
#define FR_PIFR1_EVT_IF_MASK                     0x20u
#define FR_PIFR1_EVT_IF_SHIFT                    5u
#define FR_PIFR1_EVT_IF_WIDTH                    1u
#define FR_PIFR1_EVT_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_EVT_IF_SHIFT))&FR_PIFR1_EVT_IF_MASK)
#define FR_PIFR1_SSI0_IF_MASK                    0x100u
#define FR_PIFR1_SSI0_IF_SHIFT                   8u
#define FR_PIFR1_SSI0_IF_WIDTH                   1u
#define FR_PIFR1_SSI0_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI0_IF_SHIFT))&FR_PIFR1_SSI0_IF_MASK)
#define FR_PIFR1_SSI1_IF_MASK                    0x200u
#define FR_PIFR1_SSI1_IF_SHIFT                   9u
#define FR_PIFR1_SSI1_IF_WIDTH                   1u
#define FR_PIFR1_SSI1_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI1_IF_SHIFT))&FR_PIFR1_SSI1_IF_MASK)
#define FR_PIFR1_SSI2_IF_MASK                    0x400u
#define FR_PIFR1_SSI2_IF_SHIFT                   10u
#define FR_PIFR1_SSI2_IF_WIDTH                   1u
#define FR_PIFR1_SSI2_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI2_IF_SHIFT))&FR_PIFR1_SSI2_IF_MASK)
#define FR_PIFR1_SSI3_IF_MASK                    0x800u
#define FR_PIFR1_SSI3_IF_SHIFT                   11u
#define FR_PIFR1_SSI3_IF_WIDTH                   1u
#define FR_PIFR1_SSI3_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_SSI3_IF_SHIFT))&FR_PIFR1_SSI3_IF_MASK)
#define FR_PIFR1_PSC_IF_MASK                     0x1000u
#define FR_PIFR1_PSC_IF_SHIFT                    12u
#define FR_PIFR1_PSC_IF_WIDTH                    1u
#define FR_PIFR1_PSC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_PSC_IF_SHIFT))&FR_PIFR1_PSC_IF_MASK)
#define FR_PIFR1_PECF_IF_MASK                    0x2000u
#define FR_PIFR1_PECF_IF_SHIFT                   13u
#define FR_PIFR1_PECF_IF_WIDTH                   1u
#define FR_PIFR1_PECF_IF(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_PECF_IF_SHIFT))&FR_PIFR1_PECF_IF_MASK)
#define FR_PIFR1_IPC_IF_MASK                     0x4000u
#define FR_PIFR1_IPC_IF_SHIFT                    14u
#define FR_PIFR1_IPC_IF_WIDTH                    1u
#define FR_PIFR1_IPC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_IPC_IF_SHIFT))&FR_PIFR1_IPC_IF_MASK)
#define FR_PIFR1_EMC_IF_MASK                     0x8000u
#define FR_PIFR1_EMC_IF_SHIFT                    15u
#define FR_PIFR1_EMC_IF_WIDTH                    1u
#define FR_PIFR1_EMC_IF(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIFR1_EMC_IF_SHIFT))&FR_PIFR1_EMC_IF_MASK)
/* PIER0 Bit Fields */
#define FR_PIER0_CYS_IE_MASK                     0x1u
#define FR_PIER0_CYS_IE_SHIFT                    0u
#define FR_PIER0_CYS_IE_WIDTH                    1u
#define FR_PIER0_CYS_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_CYS_IE_SHIFT))&FR_PIER0_CYS_IE_MASK)
#define FR_PIER0_TI1_IE_MASK                     0x2u
#define FR_PIER0_TI1_IE_SHIFT                    1u
#define FR_PIER0_TI1_IE_WIDTH                    1u
#define FR_PIER0_TI1_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TI1_IE_SHIFT))&FR_PIER0_TI1_IE_MASK)
#define FR_PIER0_TI2_IE_MASK                     0x4u
#define FR_PIER0_TI2_IE_SHIFT                    2u
#define FR_PIER0_TI2_IE_WIDTH                    1u
#define FR_PIER0_TI2_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TI2_IE_SHIFT))&FR_PIER0_TI2_IE_MASK)
#define FR_PIER0_TBVA_IE_MASK                    0x8u
#define FR_PIER0_TBVA_IE_SHIFT                   3u
#define FR_PIER0_TBVA_IE_WIDTH                   1u
#define FR_PIER0_TBVA_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TBVA_IE_SHIFT))&FR_PIER0_TBVA_IE_MASK)
#define FR_PIER0_TBVB_IE_MASK                    0x10u
#define FR_PIER0_TBVB_IE_SHIFT                   4u
#define FR_PIER0_TBVB_IE_WIDTH                   1u
#define FR_PIER0_TBVB_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_TBVB_IE_SHIFT))&FR_PIER0_TBVB_IE_MASK)
#define FR_PIER0_LTXA_IE_MASK                    0x20u
#define FR_PIER0_LTXA_IE_SHIFT                   5u
#define FR_PIER0_LTXA_IE_WIDTH                   1u
#define FR_PIER0_LTXA_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_LTXA_IE_SHIFT))&FR_PIER0_LTXA_IE_MASK)
#define FR_PIER0_LTXB_IE_MASK                    0x40u
#define FR_PIER0_LTXB_IE_SHIFT                   6u
#define FR_PIER0_LTXB_IE_WIDTH                   1u
#define FR_PIER0_LTXB_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_LTXB_IE_SHIFT))&FR_PIER0_LTXB_IE_MASK)
#define FR_PIER0_MTX_IE_MASK                     0x80u
#define FR_PIER0_MTX_IE_SHIFT                    7u
#define FR_PIER0_MTX_IE_WIDTH                    1u
#define FR_PIER0_MTX_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MTX_IE_SHIFT))&FR_PIER0_MTX_IE_MASK)
#define FR_PIER0_MXS_IE_MASK                     0x100u
#define FR_PIER0_MXS_IE_SHIFT                    8u
#define FR_PIER0_MXS_IE_WIDTH                    1u
#define FR_PIER0_MXS_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MXS_IE_SHIFT))&FR_PIER0_MXS_IE_MASK)
#define FR_PIER0_CCL_IE_MASK                     0x200u
#define FR_PIER0_CCL_IE_SHIFT                    9u
#define FR_PIER0_CCL_IE_WIDTH                    1u
#define FR_PIER0_CCL_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_CCL_IE_SHIFT))&FR_PIER0_CCL_IE_MASK)
#define FR_PIER0_MOC_IE_MASK                     0x400u
#define FR_PIER0_MOC_IE_SHIFT                    10u
#define FR_PIER0_MOC_IE_WIDTH                    1u
#define FR_PIER0_MOC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MOC_IE_SHIFT))&FR_PIER0_MOC_IE_MASK)
#define FR_PIER0_MRC_IE_MASK                     0x800u
#define FR_PIER0_MRC_IE_SHIFT                    11u
#define FR_PIER0_MRC_IE_WIDTH                    1u
#define FR_PIER0_MRC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_MRC_IE_SHIFT))&FR_PIER0_MRC_IE_MASK)
#define FR_PIER0_CSA_IE_MASK                     0x1000u
#define FR_PIER0_CSA_IE_SHIFT                    12u
#define FR_PIER0_CSA_IE_WIDTH                    1u
#define FR_PIER0_CSA_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER0_CSA_IE_SHIFT))&FR_PIER0_CSA_IE_MASK)
#define FR_PIER0_ILCF_IE_MASK                    0x2000u
#define FR_PIER0_ILCF_IE_SHIFT                   13u
#define FR_PIER0_ILCF_IE_WIDTH                   1u
#define FR_PIER0_ILCF_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_ILCF_IE_SHIFT))&FR_PIER0_ILCF_IE_MASK)
#define FR_PIER0_INTL_IE_MASK                    0x4000u
#define FR_PIER0_INTL_IE_SHIFT                   14u
#define FR_PIER0_INTL_IE_WIDTH                   1u
#define FR_PIER0_INTL_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_INTL_IE_SHIFT))&FR_PIER0_INTL_IE_MASK)
#define FR_PIER0_FATL_IE_MASK                    0x8000u
#define FR_PIER0_FATL_IE_SHIFT                   15u
#define FR_PIER0_FATL_IE_WIDTH                   1u
#define FR_PIER0_FATL_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER0_FATL_IE_SHIFT))&FR_PIER0_FATL_IE_MASK)
/* PIER1 Bit Fields */
#define FR_PIER1_ODT_IE_MASK                     0x10u
#define FR_PIER1_ODT_IE_SHIFT                    4u
#define FR_PIER1_ODT_IE_WIDTH                    1u
#define FR_PIER1_ODT_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_ODT_IE_SHIFT))&FR_PIER1_ODT_IE_MASK)
#define FR_PIER1_EVT_IE_MASK                     0x20u
#define FR_PIER1_EVT_IE_SHIFT                    5u
#define FR_PIER1_EVT_IE_WIDTH                    1u
#define FR_PIER1_EVT_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_EVT_IE_SHIFT))&FR_PIER1_EVT_IE_MASK)
#define FR_PIER1_SSI0_IE_MASK                    0x100u
#define FR_PIER1_SSI0_IE_SHIFT                   8u
#define FR_PIER1_SSI0_IE_WIDTH                   1u
#define FR_PIER1_SSI0_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI0_IE_SHIFT))&FR_PIER1_SSI0_IE_MASK)
#define FR_PIER1_SSI1_IE_MASK                    0x200u
#define FR_PIER1_SSI1_IE_SHIFT                   9u
#define FR_PIER1_SSI1_IE_WIDTH                   1u
#define FR_PIER1_SSI1_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI1_IE_SHIFT))&FR_PIER1_SSI1_IE_MASK)
#define FR_PIER1_SSI2_IE_MASK                    0x400u
#define FR_PIER1_SSI2_IE_SHIFT                   10u
#define FR_PIER1_SSI2_IE_WIDTH                   1u
#define FR_PIER1_SSI2_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI2_IE_SHIFT))&FR_PIER1_SSI2_IE_MASK)
#define FR_PIER1_SSI3_IE_MASK                    0x800u
#define FR_PIER1_SSI3_IE_SHIFT                   11u
#define FR_PIER1_SSI3_IE_WIDTH                   1u
#define FR_PIER1_SSI3_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_SSI3_IE_SHIFT))&FR_PIER1_SSI3_IE_MASK)
#define FR_PIER1_PSC_IE_MASK                     0x1000u
#define FR_PIER1_PSC_IE_SHIFT                    12u
#define FR_PIER1_PSC_IE_WIDTH                    1u
#define FR_PIER1_PSC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_PSC_IE_SHIFT))&FR_PIER1_PSC_IE_MASK)
#define FR_PIER1_PECF_IE_MASK                    0x2000u
#define FR_PIER1_PECF_IE_SHIFT                   13u
#define FR_PIER1_PECF_IE_WIDTH                   1u
#define FR_PIER1_PECF_IE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PIER1_PECF_IE_SHIFT))&FR_PIER1_PECF_IE_MASK)
#define FR_PIER1_IPC_IE_MASK                     0x4000u
#define FR_PIER1_IPC_IE_SHIFT                    14u
#define FR_PIER1_IPC_IE_WIDTH                    1u
#define FR_PIER1_IPC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_IPC_IE_SHIFT))&FR_PIER1_IPC_IE_MASK)
#define FR_PIER1_EMC_IE_MASK                     0x8000u
#define FR_PIER1_EMC_IE_SHIFT                    15u
#define FR_PIER1_EMC_IE_WIDTH                    1u
#define FR_PIER1_EMC_IE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PIER1_EMC_IE_SHIFT))&FR_PIER1_EMC_IE_MASK)
/* CHIERFR Bit Fields */
#define FR_CHIERFR_ILSA_EF_MASK                  0x1u
#define FR_CHIERFR_ILSA_EF_SHIFT                 0u
#define FR_CHIERFR_ILSA_EF_WIDTH                 1u
#define FR_CHIERFR_ILSA_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_ILSA_EF_SHIFT))&FR_CHIERFR_ILSA_EF_MASK)
#define FR_CHIERFR_NMF_EF_MASK                   0x2u
#define FR_CHIERFR_NMF_EF_SHIFT                  1u
#define FR_CHIERFR_NMF_EF_WIDTH                  1u
#define FR_CHIERFR_NMF_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_NMF_EF_SHIFT))&FR_CHIERFR_NMF_EF_MASK)
#define FR_CHIERFR_NML_EF_MASK                   0x4u
#define FR_CHIERFR_NML_EF_SHIFT                  2u
#define FR_CHIERFR_NML_EF_WIDTH                  1u
#define FR_CHIERFR_NML_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_NML_EF_SHIFT))&FR_CHIERFR_NML_EF_MASK)
#define FR_CHIERFR_SPL_EF_MASK                   0x8u
#define FR_CHIERFR_SPL_EF_SHIFT                  3u
#define FR_CHIERFR_SPL_EF_WIDTH                  1u
#define FR_CHIERFR_SPL_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_SPL_EF_SHIFT))&FR_CHIERFR_SPL_EF_MASK)
#define FR_CHIERFR_DPL_EF_MASK                   0x10u
#define FR_CHIERFR_DPL_EF_SHIFT                  4u
#define FR_CHIERFR_DPL_EF_WIDTH                  1u
#define FR_CHIERFR_DPL_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_DPL_EF_SHIFT))&FR_CHIERFR_DPL_EF_MASK)
#define FR_CHIERFR_FID_EF_MASK                   0x20u
#define FR_CHIERFR_FID_EF_SHIFT                  5u
#define FR_CHIERFR_FID_EF_WIDTH                  1u
#define FR_CHIERFR_FID_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FID_EF_SHIFT))&FR_CHIERFR_FID_EF_MASK)
#define FR_CHIERFR_SBCF_EF_MASK                  0x40u
#define FR_CHIERFR_SBCF_EF_SHIFT                 6u
#define FR_CHIERFR_SBCF_EF_WIDTH                 1u
#define FR_CHIERFR_SBCF_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_SBCF_EF_SHIFT))&FR_CHIERFR_SBCF_EF_MASK)
#define FR_CHIERFR_LCK_EF_MASK                   0x100u
#define FR_CHIERFR_LCK_EF_SHIFT                  8u
#define FR_CHIERFR_LCK_EF_WIDTH                  1u
#define FR_CHIERFR_LCK_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_LCK_EF_SHIFT))&FR_CHIERFR_LCK_EF_MASK)
#define FR_CHIERFR_MBU_EF_MASK                   0x200u
#define FR_CHIERFR_MBU_EF_SHIFT                  9u
#define FR_CHIERFR_MBU_EF_WIDTH                  1u
#define FR_CHIERFR_MBU_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_MBU_EF_SHIFT))&FR_CHIERFR_MBU_EF_MASK)
#define FR_CHIERFR_MBS_EF_MASK                   0x400u
#define FR_CHIERFR_MBS_EF_SHIFT                  10u
#define FR_CHIERFR_MBS_EF_WIDTH                  1u
#define FR_CHIERFR_MBS_EF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_MBS_EF_SHIFT))&FR_CHIERFR_MBS_EF_MASK)
#define FR_CHIERFR_FOVA_EF_MASK                  0x800u
#define FR_CHIERFR_FOVA_EF_SHIFT                 11u
#define FR_CHIERFR_FOVA_EF_WIDTH                 1u
#define FR_CHIERFR_FOVA_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FOVA_EF_SHIFT))&FR_CHIERFR_FOVA_EF_MASK)
#define FR_CHIERFR_FOVB_EF_MASK                  0x1000u
#define FR_CHIERFR_FOVB_EF_SHIFT                 12u
#define FR_CHIERFR_FOVB_EF_WIDTH                 1u
#define FR_CHIERFR_FOVB_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FOVB_EF_SHIFT))&FR_CHIERFR_FOVB_EF_MASK)
#define FR_CHIERFR_PCMI_EF_MASK                  0x2000u
#define FR_CHIERFR_PCMI_EF_SHIFT                 13u
#define FR_CHIERFR_PCMI_EF_WIDTH                 1u
#define FR_CHIERFR_PCMI_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_PCMI_EF_SHIFT))&FR_CHIERFR_PCMI_EF_MASK)
#define FR_CHIERFR_FRLA_EF_MASK                  0x4000u
#define FR_CHIERFR_FRLA_EF_SHIFT                 14u
#define FR_CHIERFR_FRLA_EF_WIDTH                 1u
#define FR_CHIERFR_FRLA_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FRLA_EF_SHIFT))&FR_CHIERFR_FRLA_EF_MASK)
#define FR_CHIERFR_FRLB_EF_MASK                  0x8000u
#define FR_CHIERFR_FRLB_EF_SHIFT                 15u
#define FR_CHIERFR_FRLB_EF_WIDTH                 1u
#define FR_CHIERFR_FRLB_EF(x)                    (((uint16_t)(((uint16_t)(x))<<FR_CHIERFR_FRLB_EF_SHIFT))&FR_CHIERFR_FRLB_EF_MASK)
/* MBIVEC Bit Fields */
#define FR_MBIVEC_RBIVEC_MASK                    0x7Fu
#define FR_MBIVEC_RBIVEC_SHIFT                   0u
#define FR_MBIVEC_RBIVEC_WIDTH                   7u
#define FR_MBIVEC_RBIVEC(x)                      (((uint16_t)(((uint16_t)(x))<<FR_MBIVEC_RBIVEC_SHIFT))&FR_MBIVEC_RBIVEC_MASK)
#define FR_MBIVEC_TBIVEC_MASK                    0x7F00u
#define FR_MBIVEC_TBIVEC_SHIFT                   8u
#define FR_MBIVEC_TBIVEC_WIDTH                   7u
#define FR_MBIVEC_TBIVEC(x)                      (((uint16_t)(((uint16_t)(x))<<FR_MBIVEC_TBIVEC_SHIFT))&FR_MBIVEC_TBIVEC_MASK)
/* CASERCR Bit Fields */
#define FR_CASERCR_CHAERSCNT_MASK                0xFFFFu
#define FR_CASERCR_CHAERSCNT_SHIFT               0u
#define FR_CASERCR_CHAERSCNT_WIDTH               16u
#define FR_CASERCR_CHAERSCNT(x)                  (((uint16_t)(((uint16_t)(x))<<FR_CASERCR_CHAERSCNT_SHIFT))&FR_CASERCR_CHAERSCNT_MASK)
/* CBSERCR Bit Fields */
#define FR_CBSERCR_CHBERSCNT_MASK                0xFFFFu
#define FR_CBSERCR_CHBERSCNT_SHIFT               0u
#define FR_CBSERCR_CHBERSCNT_WIDTH               16u
#define FR_CBSERCR_CHBERSCNT(x)                  (((uint16_t)(((uint16_t)(x))<<FR_CBSERCR_CHBERSCNT_SHIFT))&FR_CBSERCR_CHBERSCNT_MASK)
/* PSR0 Bit Fields */
#define FR_PSR0_WAKEUPSTATUS_MASK                0x7u
#define FR_PSR0_WAKEUPSTATUS_SHIFT               0u
#define FR_PSR0_WAKEUPSTATUS_WIDTH               3u
#define FR_PSR0_WAKEUPSTATUS(x)                  (((uint16_t)(((uint16_t)(x))<<FR_PSR0_WAKEUPSTATUS_SHIFT))&FR_PSR0_WAKEUPSTATUS_MASK)
#define FR_PSR0_STARTUPSTATE_MASK                0xF0u
#define FR_PSR0_STARTUPSTATE_SHIFT               4u
#define FR_PSR0_STARTUPSTATE_WIDTH               4u
#define FR_PSR0_STARTUPSTATE(x)                  (((uint16_t)(((uint16_t)(x))<<FR_PSR0_STARTUPSTATE_SHIFT))&FR_PSR0_STARTUPSTATE_MASK)
#define FR_PSR0_PROTSTATE_MASK                   0x700u
#define FR_PSR0_PROTSTATE_SHIFT                  8u
#define FR_PSR0_PROTSTATE_WIDTH                  3u
#define FR_PSR0_PROTSTATE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_PSR0_PROTSTATE_SHIFT))&FR_PSR0_PROTSTATE_MASK)
#define FR_PSR0_SLOTMODE_MASK                    0x3000u
#define FR_PSR0_SLOTMODE_SHIFT                   12u
#define FR_PSR0_SLOTMODE_WIDTH                   2u
#define FR_PSR0_SLOTMODE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PSR0_SLOTMODE_SHIFT))&FR_PSR0_SLOTMODE_MASK)
#define FR_PSR0_ERRMODE_MASK                     0xC000u
#define FR_PSR0_ERRMODE_SHIFT                    14u
#define FR_PSR0_ERRMODE_WIDTH                    2u
#define FR_PSR0_ERRMODE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PSR0_ERRMODE_SHIFT))&FR_PSR0_ERRMODE_MASK)
/* PSR1 Bit Fields */
#define FR_PSR1_APTAC_MASK                       0x1Fu
#define FR_PSR1_APTAC_SHIFT                      0u
#define FR_PSR1_APTAC_WIDTH                      5u
#define FR_PSR1_APTAC(x)                         (((uint16_t)(((uint16_t)(x))<<FR_PSR1_APTAC_SHIFT))&FR_PSR1_APTAC_MASK)
#define FR_PSR1_FRZ_MASK                         0x20u
#define FR_PSR1_FRZ_SHIFT                        5u
#define FR_PSR1_FRZ_WIDTH                        1u
#define FR_PSR1_FRZ(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_FRZ_SHIFT))&FR_PSR1_FRZ_MASK)
#define FR_PSR1_HHR_MASK                         0x40u
#define FR_PSR1_HHR_SHIFT                        6u
#define FR_PSR1_HHR_WIDTH                        1u
#define FR_PSR1_HHR(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_HHR_SHIFT))&FR_PSR1_HHR_MASK)
#define FR_PSR1_CPN_MASK                         0x80u
#define FR_PSR1_CPN_SHIFT                        7u
#define FR_PSR1_CPN_WIDTH                        1u
#define FR_PSR1_CPN(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_CPN_SHIFT))&FR_PSR1_CPN_MASK)
#define FR_PSR1_REMCSAT_MASK                     0x1F00u
#define FR_PSR1_REMCSAT_SHIFT                    8u
#define FR_PSR1_REMCSAT_WIDTH                    5u
#define FR_PSR1_REMCSAT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PSR1_REMCSAT_SHIFT))&FR_PSR1_REMCSAT_MASK)
#define FR_PSR1_CSP_MASK                         0x4000u
#define FR_PSR1_CSP_SHIFT                        14u
#define FR_PSR1_CSP_WIDTH                        1u
#define FR_PSR1_CSP(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR1_CSP_SHIFT))&FR_PSR1_CSP_MASK)
#define FR_PSR1_CSAA_MASK                        0x8000u
#define FR_PSR1_CSAA_SHIFT                       15u
#define FR_PSR1_CSAA_WIDTH                       1u
#define FR_PSR1_CSAA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR1_CSAA_SHIFT))&FR_PSR1_CSAA_MASK)
/* PSR2 Bit Fields */
#define FR_PSR2_CKCORFCNT_MASK                   0xFu
#define FR_PSR2_CKCORFCNT_SHIFT                  0u
#define FR_PSR2_CKCORFCNT_WIDTH                  4u
#define FR_PSR2_CKCORFCNT(x)                     (((uint16_t)(((uint16_t)(x))<<FR_PSR2_CKCORFCNT_SHIFT))&FR_PSR2_CKCORFCNT_MASK)
#define FR_PSR2_MTA_MASK                         0x10u
#define FR_PSR2_MTA_SHIFT                        4u
#define FR_PSR2_MTA_WIDTH                        1u
#define FR_PSR2_MTA(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR2_MTA_SHIFT))&FR_PSR2_MTA_MASK)
#define FR_PSR2_SSEA_MASK                        0x20u
#define FR_PSR2_SSEA_SHIFT                       5u
#define FR_PSR2_SSEA_WIDTH                       1u
#define FR_PSR2_SSEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SSEA_SHIFT))&FR_PSR2_SSEA_MASK)
#define FR_PSR2_SBVA_MASK                        0x40u
#define FR_PSR2_SBVA_SHIFT                       6u
#define FR_PSR2_SBVA_WIDTH                       1u
#define FR_PSR2_SBVA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SBVA_SHIFT))&FR_PSR2_SBVA_MASK)
#define FR_PSR2_STCA_MASK                        0x80u
#define FR_PSR2_STCA_SHIFT                       7u
#define FR_PSR2_STCA_WIDTH                       1u
#define FR_PSR2_STCA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_STCA_SHIFT))&FR_PSR2_STCA_MASK)
#define FR_PSR2_NSEA_MASK                        0x100u
#define FR_PSR2_NSEA_SHIFT                       8u
#define FR_PSR2_NSEA_WIDTH                       1u
#define FR_PSR2_NSEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NSEA_SHIFT))&FR_PSR2_NSEA_MASK)
#define FR_PSR2_NBVA_MASK                        0x200u
#define FR_PSR2_NBVA_SHIFT                       9u
#define FR_PSR2_NBVA_WIDTH                       1u
#define FR_PSR2_NBVA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NBVA_SHIFT))&FR_PSR2_NBVA_MASK)
#define FR_PSR2_MTB_MASK                         0x400u
#define FR_PSR2_MTB_SHIFT                        10u
#define FR_PSR2_MTB_WIDTH                        1u
#define FR_PSR2_MTB(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR2_MTB_SHIFT))&FR_PSR2_MTB_MASK)
#define FR_PSR2_SSEB_MASK                        0x800u
#define FR_PSR2_SSEB_SHIFT                       11u
#define FR_PSR2_SSEB_WIDTH                       1u
#define FR_PSR2_SSEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SSEB_SHIFT))&FR_PSR2_SSEB_MASK)
#define FR_PSR2_SBVB_MASK                        0x1000u
#define FR_PSR2_SBVB_SHIFT                       12u
#define FR_PSR2_SBVB_WIDTH                       1u
#define FR_PSR2_SBVB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_SBVB_SHIFT))&FR_PSR2_SBVB_MASK)
#define FR_PSR2_STCB_MASK                        0x2000u
#define FR_PSR2_STCB_SHIFT                       13u
#define FR_PSR2_STCB_WIDTH                       1u
#define FR_PSR2_STCB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_STCB_SHIFT))&FR_PSR2_STCB_MASK)
#define FR_PSR2_NSEB_MASK                        0x4000u
#define FR_PSR2_NSEB_SHIFT                       14u
#define FR_PSR2_NSEB_WIDTH                       1u
#define FR_PSR2_NSEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NSEB_SHIFT))&FR_PSR2_NSEB_MASK)
#define FR_PSR2_NBVB_MASK                        0x8000u
#define FR_PSR2_NBVB_SHIFT                       15u
#define FR_PSR2_NBVB_WIDTH                       1u
#define FR_PSR2_NBVB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR2_NBVB_SHIFT))&FR_PSR2_NBVB_MASK)
/* PSR3 Bit Fields */
#define FR_PSR3_AVFA_MASK                        0x1u
#define FR_PSR3_AVFA_SHIFT                       0u
#define FR_PSR3_AVFA_WIDTH                       1u
#define FR_PSR3_AVFA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AVFA_SHIFT))&FR_PSR3_AVFA_MASK)
#define FR_PSR3_ASEA_MASK                        0x2u
#define FR_PSR3_ASEA_SHIFT                       1u
#define FR_PSR3_ASEA_WIDTH                       1u
#define FR_PSR3_ASEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ASEA_SHIFT))&FR_PSR3_ASEA_MASK)
#define FR_PSR3_ACEA_MASK                        0x4u
#define FR_PSR3_ACEA_SHIFT                       2u
#define FR_PSR3_ACEA_WIDTH                       1u
#define FR_PSR3_ACEA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ACEA_SHIFT))&FR_PSR3_ACEA_MASK)
#define FR_PSR3_AACA_MASK                        0x8u
#define FR_PSR3_AACA_SHIFT                       3u
#define FR_PSR3_AACA_WIDTH                       1u
#define FR_PSR3_AACA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AACA_SHIFT))&FR_PSR3_AACA_MASK)
#define FR_PSR3_ABVA_MASK                        0x10u
#define FR_PSR3_ABVA_SHIFT                       4u
#define FR_PSR3_ABVA_WIDTH                       1u
#define FR_PSR3_ABVA(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ABVA_SHIFT))&FR_PSR3_ABVA_MASK)
#define FR_PSR3_WUA_MASK                         0x20u
#define FR_PSR3_WUA_SHIFT                        5u
#define FR_PSR3_WUA_WIDTH                        1u
#define FR_PSR3_WUA(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR3_WUA_SHIFT))&FR_PSR3_WUA_MASK)
#define FR_PSR3_AVFB_MASK                        0x100u
#define FR_PSR3_AVFB_SHIFT                       8u
#define FR_PSR3_AVFB_WIDTH                       1u
#define FR_PSR3_AVFB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AVFB_SHIFT))&FR_PSR3_AVFB_MASK)
#define FR_PSR3_ASEB_MASK                        0x200u
#define FR_PSR3_ASEB_SHIFT                       9u
#define FR_PSR3_ASEB_WIDTH                       1u
#define FR_PSR3_ASEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ASEB_SHIFT))&FR_PSR3_ASEB_MASK)
#define FR_PSR3_ACEB_MASK                        0x400u
#define FR_PSR3_ACEB_SHIFT                       10u
#define FR_PSR3_ACEB_WIDTH                       1u
#define FR_PSR3_ACEB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ACEB_SHIFT))&FR_PSR3_ACEB_MASK)
#define FR_PSR3_AACB_MASK                        0x800u
#define FR_PSR3_AACB_SHIFT                       11u
#define FR_PSR3_AACB_WIDTH                       1u
#define FR_PSR3_AACB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_AACB_SHIFT))&FR_PSR3_AACB_MASK)
#define FR_PSR3_ABVB_MASK                        0x1000u
#define FR_PSR3_ABVB_SHIFT                       12u
#define FR_PSR3_ABVB_WIDTH                       1u
#define FR_PSR3_ABVB(x)                          (((uint16_t)(((uint16_t)(x))<<FR_PSR3_ABVB_SHIFT))&FR_PSR3_ABVB_MASK)
#define FR_PSR3_WUB_MASK                         0x2000u
#define FR_PSR3_WUB_SHIFT                        13u
#define FR_PSR3_WUB_WIDTH                        1u
#define FR_PSR3_WUB(x)                           (((uint16_t)(((uint16_t)(x))<<FR_PSR3_WUB_SHIFT))&FR_PSR3_WUB_MASK)
/* MTCTR Bit Fields */
#define FR_MTCTR_MTCT_MASK                       0x3FFFu
#define FR_MTCTR_MTCT_SHIFT                      0u
#define FR_MTCTR_MTCT_WIDTH                      14u
#define FR_MTCTR_MTCT(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MTCTR_MTCT_SHIFT))&FR_MTCTR_MTCT_MASK)
/* CYCTR Bit Fields */
#define FR_CYCTR_CYCCNT_MASK                     0x3Fu
#define FR_CYCTR_CYCCNT_SHIFT                    0u
#define FR_CYCTR_CYCCNT_WIDTH                    6u
#define FR_CYCTR_CYCCNT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_CYCTR_CYCCNT_SHIFT))&FR_CYCTR_CYCCNT_MASK)
/* SLTCTAR Bit Fields */
#define FR_SLTCTAR_SLOTCNTA_MASK                 0x7FFu
#define FR_SLTCTAR_SLOTCNTA_SHIFT                0u
#define FR_SLTCTAR_SLOTCNTA_WIDTH                11u
#define FR_SLTCTAR_SLOTCNTA(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SLTCTAR_SLOTCNTA_SHIFT))&FR_SLTCTAR_SLOTCNTA_MASK)
/* SLTCTBR Bit Fields */
#define FR_SLTCTBR_SLOTCNTB_MASK                 0x7FFu
#define FR_SLTCTBR_SLOTCNTB_SHIFT                0u
#define FR_SLTCTBR_SLOTCNTB_WIDTH                11u
#define FR_SLTCTBR_SLOTCNTB(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SLTCTBR_SLOTCNTB_SHIFT))&FR_SLTCTBR_SLOTCNTB_MASK)
/* RTCORVR Bit Fields */
#define FR_RTCORVR_RATECORR_MASK                 0xFFFFu
#define FR_RTCORVR_RATECORR_SHIFT                0u
#define FR_RTCORVR_RATECORR_WIDTH                16u
#define FR_RTCORVR_RATECORR(x)                   (((uint16_t)(((uint16_t)(x))<<FR_RTCORVR_RATECORR_SHIFT))&FR_RTCORVR_RATECORR_MASK)
/* OFCORVR Bit Fields */
#define FR_OFCORVR_OFFSETCORR_MASK               0xFFFFu
#define FR_OFCORVR_OFFSETCORR_SHIFT              0u
#define FR_OFCORVR_OFFSETCORR_WIDTH              16u
#define FR_OFCORVR_OFFSETCORR(x)                 (((uint16_t)(((uint16_t)(x))<<FR_OFCORVR_OFFSETCORR_SHIFT))&FR_OFCORVR_OFFSETCORR_MASK)
/* CIFR Bit Fields */
#define FR_CIFR_TBIF_MASK                        0x1u
#define FR_CIFR_TBIF_SHIFT                       0u
#define FR_CIFR_TBIF_WIDTH                       1u
#define FR_CIFR_TBIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_TBIF_SHIFT))&FR_CIFR_TBIF_MASK)
#define FR_CIFR_RBIF_MASK                        0x2u
#define FR_CIFR_RBIF_SHIFT                       1u
#define FR_CIFR_RBIF_WIDTH                       1u
#define FR_CIFR_RBIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_RBIF_SHIFT))&FR_CIFR_RBIF_MASK)
#define FR_CIFR_FAFAIF_MASK                      0x4u
#define FR_CIFR_FAFAIF_SHIFT                     2u
#define FR_CIFR_FAFAIF_WIDTH                     1u
#define FR_CIFR_FAFAIF(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CIFR_FAFAIF_SHIFT))&FR_CIFR_FAFAIF_MASK)
#define FR_CIFR_FAFBIF_MASK                      0x8u
#define FR_CIFR_FAFBIF_SHIFT                     3u
#define FR_CIFR_FAFBIF_WIDTH                     1u
#define FR_CIFR_FAFBIF(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CIFR_FAFBIF_SHIFT))&FR_CIFR_FAFBIF_MASK)
#define FR_CIFR_WUPIF_MASK                       0x10u
#define FR_CIFR_WUPIF_SHIFT                      4u
#define FR_CIFR_WUPIF_WIDTH                      1u
#define FR_CIFR_WUPIF(x)                         (((uint16_t)(((uint16_t)(x))<<FR_CIFR_WUPIF_SHIFT))&FR_CIFR_WUPIF_MASK)
#define FR_CIFR_CHIF_MASK                        0x20u
#define FR_CIFR_CHIF_SHIFT                       5u
#define FR_CIFR_CHIF_WIDTH                       1u
#define FR_CIFR_CHIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_CHIF_SHIFT))&FR_CIFR_CHIF_MASK)
#define FR_CIFR_PRIF_MASK                        0x40u
#define FR_CIFR_PRIF_SHIFT                       6u
#define FR_CIFR_PRIF_WIDTH                       1u
#define FR_CIFR_PRIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CIFR_PRIF_SHIFT))&FR_CIFR_PRIF_MASK)
#define FR_CIFR_MIF_MASK                         0x80u
#define FR_CIFR_MIF_SHIFT                        7u
#define FR_CIFR_MIF_WIDTH                        1u
#define FR_CIFR_MIF(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CIFR_MIF_SHIFT))&FR_CIFR_MIF_MASK)
/* SYMATOR Bit Fields */
#define FR_SYMATOR_TIMEOUT_MASK                  0xFFu
#define FR_SYMATOR_TIMEOUT_SHIFT                 0u
#define FR_SYMATOR_TIMEOUT_WIDTH                 8u
#define FR_SYMATOR_TIMEOUT(x)                    (((uint16_t)(((uint16_t)(x))<<FR_SYMATOR_TIMEOUT_SHIFT))&FR_SYMATOR_TIMEOUT_MASK)
/* SFCNTR Bit Fields */
#define FR_SFCNTR_SFODA_MASK                     0xFu
#define FR_SFCNTR_SFODA_SHIFT                    0u
#define FR_SFCNTR_SFODA_WIDTH                    4u
#define FR_SFCNTR_SFODA(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFODA_SHIFT))&FR_SFCNTR_SFODA_MASK)
#define FR_SFCNTR_SFODB_MASK                     0xF0u
#define FR_SFCNTR_SFODB_SHIFT                    4u
#define FR_SFCNTR_SFODB_WIDTH                    4u
#define FR_SFCNTR_SFODB(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFODB_SHIFT))&FR_SFCNTR_SFODB_MASK)
#define FR_SFCNTR_SFEVA_MASK                     0xF00u
#define FR_SFCNTR_SFEVA_SHIFT                    8u
#define FR_SFCNTR_SFEVA_WIDTH                    4u
#define FR_SFCNTR_SFEVA(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFEVA_SHIFT))&FR_SFCNTR_SFEVA_MASK)
#define FR_SFCNTR_SFEVB_MASK                     0xF000u
#define FR_SFCNTR_SFEVB_SHIFT                    12u
#define FR_SFCNTR_SFEVB_WIDTH                    4u
#define FR_SFCNTR_SFEVB(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFCNTR_SFEVB_SHIFT))&FR_SFCNTR_SFEVB_MASK)
/* SFTOR Bit Fields */
#define FR_SFTOR_SFT_OFFSET_MASK                 0xFFFEu
#define FR_SFTOR_SFT_OFFSET_SHIFT                1u
#define FR_SFTOR_SFT_OFFSET_WIDTH                15u
#define FR_SFTOR_SFT_OFFSET(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SFTOR_SFT_OFFSET_SHIFT))&FR_SFTOR_SFT_OFFSET_MASK)
/* SFTCCSR Bit Fields */
#define FR_SFTCCSR_SIDEN_MASK                    0x1u
#define FR_SFTCCSR_SIDEN_SHIFT                   0u
#define FR_SFTCCSR_SIDEN_WIDTH                   1u
#define FR_SFTCCSR_SIDEN(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_SIDEN_SHIFT))&FR_SFTCCSR_SIDEN_MASK)
#define FR_SFTCCSR_SDVEN_MASK                    0x2u
#define FR_SFTCCSR_SDVEN_SHIFT                   1u
#define FR_SFTCCSR_SDVEN_WIDTH                   1u
#define FR_SFTCCSR_SDVEN(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_SDVEN_SHIFT))&FR_SFTCCSR_SDVEN_MASK)
#define FR_SFTCCSR_OPT_MASK                      0x4u
#define FR_SFTCCSR_OPT_SHIFT                     2u
#define FR_SFTCCSR_OPT_WIDTH                     1u
#define FR_SFTCCSR_OPT(x)                        (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OPT_SHIFT))&FR_SFTCCSR_OPT_MASK)
#define FR_SFTCCSR_OVAL_MASK                     0x10u
#define FR_SFTCCSR_OVAL_SHIFT                    4u
#define FR_SFTCCSR_OVAL_WIDTH                    1u
#define FR_SFTCCSR_OVAL(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OVAL_SHIFT))&FR_SFTCCSR_OVAL_MASK)
#define FR_SFTCCSR_EVAL_MASK                     0x20u
#define FR_SFTCCSR_EVAL_SHIFT                    5u
#define FR_SFTCCSR_EVAL_WIDTH                    1u
#define FR_SFTCCSR_EVAL(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_EVAL_SHIFT))&FR_SFTCCSR_EVAL_MASK)
#define FR_SFTCCSR_OLKS_MASK                     0x40u
#define FR_SFTCCSR_OLKS_SHIFT                    6u
#define FR_SFTCCSR_OLKS_WIDTH                    1u
#define FR_SFTCCSR_OLKS(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OLKS_SHIFT))&FR_SFTCCSR_OLKS_MASK)
#define FR_SFTCCSR_ELKS_MASK                     0x80u
#define FR_SFTCCSR_ELKS_SHIFT                    7u
#define FR_SFTCCSR_ELKS_WIDTH                    1u
#define FR_SFTCCSR_ELKS(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_ELKS_SHIFT))&FR_SFTCCSR_ELKS_MASK)
#define FR_SFTCCSR_CYCNUM_MASK                   0x3F00u
#define FR_SFTCCSR_CYCNUM_SHIFT                  8u
#define FR_SFTCCSR_CYCNUM_WIDTH                  6u
#define FR_SFTCCSR_CYCNUM(x)                     (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_CYCNUM_SHIFT))&FR_SFTCCSR_CYCNUM_MASK)
#define FR_SFTCCSR_OLKT_MASK                     0x4000u
#define FR_SFTCCSR_OLKT_SHIFT                    14u
#define FR_SFTCCSR_OLKT_WIDTH                    1u
#define FR_SFTCCSR_OLKT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_OLKT_SHIFT))&FR_SFTCCSR_OLKT_MASK)
#define FR_SFTCCSR_ELKT_MASK                     0x8000u
#define FR_SFTCCSR_ELKT_SHIFT                    15u
#define FR_SFTCCSR_ELKT_WIDTH                    1u
#define FR_SFTCCSR_ELKT(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SFTCCSR_ELKT_SHIFT))&FR_SFTCCSR_ELKT_MASK)
/* SFIDRFR Bit Fields */
#define FR_SFIDRFR_SYNFRID_MASK                  0x3FFu
#define FR_SFIDRFR_SYNFRID_SHIFT                 0u
#define FR_SFIDRFR_SYNFRID_WIDTH                 10u
#define FR_SFIDRFR_SYNFRID(x)                    (((uint16_t)(((uint16_t)(x))<<FR_SFIDRFR_SYNFRID_SHIFT))&FR_SFIDRFR_SYNFRID_MASK)
/* SFIDAFVR Bit Fields */
#define FR_SFIDAFVR_FVAL_MASK                    0x3FFu
#define FR_SFIDAFVR_FVAL_SHIFT                   0u
#define FR_SFIDAFVR_FVAL_WIDTH                   10u
#define FR_SFIDAFVR_FVAL(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFIDAFVR_FVAL_SHIFT))&FR_SFIDAFVR_FVAL_MASK)
/* SFIDAFMR Bit Fields */
#define FR_SFIDAFMR_FMSK_MASK                    0x3FFu
#define FR_SFIDAFMR_FMSK_SHIFT                   0u
#define FR_SFIDAFMR_FMSK_WIDTH                   10u
#define FR_SFIDAFMR_FMSK(x)                      (((uint16_t)(((uint16_t)(x))<<FR_SFIDAFMR_FMSK_SHIFT))&FR_SFIDAFMR_FMSK_MASK)
/* NMVR Bit Fields */
#define FR_NMVR_NMVP_MASK                        0xFFFFu
#define FR_NMVR_NMVP_SHIFT                       0u
#define FR_NMVR_NMVP_WIDTH                       16u
#define FR_NMVR_NMVP(x)                          (((uint16_t)(((uint16_t)(x))<<FR_NMVR_NMVP_SHIFT))&FR_NMVR_NMVP_MASK)
/* NMVLR Bit Fields */
#define FR_NMVLR_NMVL_MASK                       0xFu
#define FR_NMVLR_NMVL_SHIFT                      0u
#define FR_NMVLR_NMVL_WIDTH                      4u
#define FR_NMVLR_NMVL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_NMVLR_NMVL_SHIFT))&FR_NMVLR_NMVL_MASK)
/* TICCR Bit Fields */
#define FR_TICCR_T1ST_MASK                       0x1u
#define FR_TICCR_T1ST_SHIFT                      0u
#define FR_TICCR_T1ST_WIDTH                      1u
#define FR_TICCR_T1ST(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1ST_SHIFT))&FR_TICCR_T1ST_MASK)
#define FR_TICCR_T1TR_MASK                       0x2u
#define FR_TICCR_T1TR_SHIFT                      1u
#define FR_TICCR_T1TR_WIDTH                      1u
#define FR_TICCR_T1TR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1TR_SHIFT))&FR_TICCR_T1TR_MASK)
#define FR_TICCR_T1SP_MASK                       0x4u
#define FR_TICCR_T1SP_SHIFT                      2u
#define FR_TICCR_T1SP_WIDTH                      1u
#define FR_TICCR_T1SP(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1SP_SHIFT))&FR_TICCR_T1SP_MASK)
#define FR_TICCR_T1_REP_MASK                     0x10u
#define FR_TICCR_T1_REP_SHIFT                    4u
#define FR_TICCR_T1_REP_WIDTH                    1u
#define FR_TICCR_T1_REP(x)                       (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T1_REP_SHIFT))&FR_TICCR_T1_REP_MASK)
#define FR_TICCR_T2ST_MASK                       0x100u
#define FR_TICCR_T2ST_SHIFT                      8u
#define FR_TICCR_T2ST_WIDTH                      1u
#define FR_TICCR_T2ST(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2ST_SHIFT))&FR_TICCR_T2ST_MASK)
#define FR_TICCR_T2TR_MASK                       0x200u
#define FR_TICCR_T2TR_SHIFT                      9u
#define FR_TICCR_T2TR_WIDTH                      1u
#define FR_TICCR_T2TR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2TR_SHIFT))&FR_TICCR_T2TR_MASK)
#define FR_TICCR_T2SP_MASK                       0x400u
#define FR_TICCR_T2SP_SHIFT                      10u
#define FR_TICCR_T2SP_WIDTH                      1u
#define FR_TICCR_T2SP(x)                         (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2SP_SHIFT))&FR_TICCR_T2SP_MASK)
#define FR_TICCR_T2_REP_MASK                     0x1000u
#define FR_TICCR_T2_REP_SHIFT                    12u
#define FR_TICCR_T2_REP_WIDTH                    1u
#define FR_TICCR_T2_REP(x)                       (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2_REP_SHIFT))&FR_TICCR_T2_REP_MASK)
#define FR_TICCR_T2_CFG_MASK                     0x2000u
#define FR_TICCR_T2_CFG_SHIFT                    13u
#define FR_TICCR_T2_CFG_WIDTH                    1u
#define FR_TICCR_T2_CFG(x)                       (((uint16_t)(((uint16_t)(x))<<FR_TICCR_T2_CFG_SHIFT))&FR_TICCR_T2_CFG_MASK)
/* TI1CYSR Bit Fields */
#define FR_TI1CYSR_T1_CYC_MSK_MASK               0x3Fu
#define FR_TI1CYSR_T1_CYC_MSK_SHIFT              0u
#define FR_TI1CYSR_T1_CYC_MSK_WIDTH              6u
#define FR_TI1CYSR_T1_CYC_MSK(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI1CYSR_T1_CYC_MSK_SHIFT))&FR_TI1CYSR_T1_CYC_MSK_MASK)
#define FR_TI1CYSR_T1_CYC_VAL_MASK               0x3F00u
#define FR_TI1CYSR_T1_CYC_VAL_SHIFT              8u
#define FR_TI1CYSR_T1_CYC_VAL_WIDTH              6u
#define FR_TI1CYSR_T1_CYC_VAL(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI1CYSR_T1_CYC_VAL_SHIFT))&FR_TI1CYSR_T1_CYC_VAL_MASK)
/* TI1MTOR Bit Fields */
#define FR_TI1MTOR_T1_MTOFFSET_MASK              0x3FFFu
#define FR_TI1MTOR_T1_MTOFFSET_SHIFT             0u
#define FR_TI1MTOR_T1_MTOFFSET_WIDTH             14u
#define FR_TI1MTOR_T1_MTOFFSET(x)                (((uint16_t)(((uint16_t)(x))<<FR_TI1MTOR_T1_MTOFFSET_SHIFT))&FR_TI1MTOR_T1_MTOFFSET_MASK)
/* TI2CR0_ABS Bit Fields */
#define FR_TI2CR0_ABS_T2CYCMSK_MASK              0x3Fu
#define FR_TI2CR0_ABS_T2CYCMSK_SHIFT             0u
#define FR_TI2CR0_ABS_T2CYCMSK_WIDTH             6u
#define FR_TI2CR0_ABS_T2CYCMSK(x)                (((uint16_t)(((uint16_t)(x))<<FR_TI2CR0_ABS_T2CYCMSK_SHIFT))&FR_TI2CR0_ABS_T2CYCMSK_MASK)
#define FR_TI2CR0_ABS_T2CYCVAL_MASK              0x3F00u
#define FR_TI2CR0_ABS_T2CYCVAL_SHIFT             8u
#define FR_TI2CR0_ABS_T2CYCVAL_WIDTH             6u
#define FR_TI2CR0_ABS_T2CYCVAL(x)                (((uint16_t)(((uint16_t)(x))<<FR_TI2CR0_ABS_T2CYCVAL_SHIFT))&FR_TI2CR0_ABS_T2CYCVAL_MASK)
/* TI2CR0_REL Bit Fields */
#define FR_TI2CR0_REL_T2MTCNT_MASK               0xFFFFu
#define FR_TI2CR0_REL_T2MTCNT_SHIFT              0u
#define FR_TI2CR0_REL_T2MTCNT_WIDTH              16u
#define FR_TI2CR0_REL_T2MTCNT(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI2CR0_REL_T2MTCNT_SHIFT))&FR_TI2CR0_REL_T2MTCNT_MASK)
/* TI2CR1_ABS Bit Fields */
#define FR_TI2CR1_ABS_T2MOFF_MASK                0x3FFFu
#define FR_TI2CR1_ABS_T2MOFF_SHIFT               0u
#define FR_TI2CR1_ABS_T2MOFF_WIDTH               14u
#define FR_TI2CR1_ABS_T2MOFF(x)                  (((uint16_t)(((uint16_t)(x))<<FR_TI2CR1_ABS_T2MOFF_SHIFT))&FR_TI2CR1_ABS_T2MOFF_MASK)
/* TI2CR1_REL Bit Fields */
#define FR_TI2CR1_REL_T2MTCNT_MASK               0xFFFFu
#define FR_TI2CR1_REL_T2MTCNT_SHIFT              0u
#define FR_TI2CR1_REL_T2MTCNT_WIDTH              16u
#define FR_TI2CR1_REL_T2MTCNT(x)                 (((uint16_t)(((uint16_t)(x))<<FR_TI2CR1_REL_T2MTCNT_SHIFT))&FR_TI2CR1_REL_T2MTCNT_MASK)
/* SSSR Bit Fields */
#define FR_SSSR_SLOTNUMBER_MASK                  0x7FFu
#define FR_SSSR_SLOTNUMBER_SHIFT                 0u
#define FR_SSSR_SLOTNUMBER_WIDTH                 11u
#define FR_SSSR_SLOTNUMBER(x)                    (((uint16_t)(((uint16_t)(x))<<FR_SSSR_SLOTNUMBER_SHIFT))&FR_SSSR_SLOTNUMBER_MASK)
#define FR_SSSR_SEL_MASK                         0x3000u
#define FR_SSSR_SEL_SHIFT                        12u
#define FR_SSSR_SEL_WIDTH                        2u
#define FR_SSSR_SEL(x)                           (((uint16_t)(((uint16_t)(x))<<FR_SSSR_SEL_SHIFT))&FR_SSSR_SEL_MASK)
#define FR_SSSR_WMD_MASK                         0x8000u
#define FR_SSSR_WMD_SHIFT                        15u
#define FR_SSSR_WMD_WIDTH                        1u
#define FR_SSSR_WMD(x)                           (((uint16_t)(((uint16_t)(x))<<FR_SSSR_WMD_SHIFT))&FR_SSSR_WMD_MASK)
/* SSCCR Bit Fields */
#define FR_SSCCR_STATUSMASK_MASK                 0xFu
#define FR_SSCCR_STATUSMASK_SHIFT                0u
#define FR_SSCCR_STATUSMASK_WIDTH                4u
#define FR_SSCCR_STATUSMASK(x)                   (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_STATUSMASK_SHIFT))&FR_SSCCR_STATUSMASK_MASK)
#define FR_SSCCR_SUF_MASK                        0x10u
#define FR_SSCCR_SUF_SHIFT                       4u
#define FR_SSCCR_SUF_WIDTH                       1u
#define FR_SSCCR_SUF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_SUF_SHIFT))&FR_SSCCR_SUF_MASK)
#define FR_SSCCR_NUF_MASK                        0x20u
#define FR_SSCCR_NUF_SHIFT                       5u
#define FR_SSCCR_NUF_WIDTH                       1u
#define FR_SSCCR_NUF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_NUF_SHIFT))&FR_SSCCR_NUF_MASK)
#define FR_SSCCR_SYF_MASK                        0x40u
#define FR_SSCCR_SYF_SHIFT                       6u
#define FR_SSCCR_SYF_WIDTH                       1u
#define FR_SSCCR_SYF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_SYF_SHIFT))&FR_SSCCR_SYF_MASK)
#define FR_SSCCR_VFR_MASK                        0x80u
#define FR_SSCCR_VFR_SHIFT                       7u
#define FR_SSCCR_VFR_WIDTH                       1u
#define FR_SSCCR_VFR(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_VFR_SHIFT))&FR_SSCCR_VFR_MASK)
#define FR_SSCCR_MCY_MASK                        0x100u
#define FR_SSCCR_MCY_SHIFT                       8u
#define FR_SSCCR_MCY_WIDTH                       1u
#define FR_SSCCR_MCY(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_MCY_SHIFT))&FR_SSCCR_MCY_MASK)
#define FR_SSCCR_CNTCFG_MASK                     0x600u
#define FR_SSCCR_CNTCFG_SHIFT                    9u
#define FR_SSCCR_CNTCFG_WIDTH                    2u
#define FR_SSCCR_CNTCFG(x)                       (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_CNTCFG_SHIFT))&FR_SSCCR_CNTCFG_MASK)
#define FR_SSCCR_SEL_MASK                        0x3000u
#define FR_SSCCR_SEL_SHIFT                       12u
#define FR_SSCCR_SEL_WIDTH                       2u
#define FR_SSCCR_SEL(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_SEL_SHIFT))&FR_SSCCR_SEL_MASK)
#define FR_SSCCR_WMD_MASK                        0x8000u
#define FR_SSCCR_WMD_SHIFT                       15u
#define FR_SSCCR_WMD_WIDTH                       1u
#define FR_SSCCR_WMD(x)                          (((uint16_t)(((uint16_t)(x))<<FR_SSCCR_WMD_SHIFT))&FR_SSCCR_WMD_MASK)
/* SSR Bit Fields */
#define FR_SSR_TCA_MASK                          0x1u
#define FR_SSR_TCA_SHIFT                         0u
#define FR_SSR_TCA_WIDTH                         1u
#define FR_SSR_TCA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_TCA_SHIFT))&FR_SSR_TCA_MASK)
#define FR_SSR_BVA_MASK                          0x2u
#define FR_SSR_BVA_SHIFT                         1u
#define FR_SSR_BVA_WIDTH                         1u
#define FR_SSR_BVA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_BVA_SHIFT))&FR_SSR_BVA_MASK)
#define FR_SSR_CEA_MASK                          0x4u
#define FR_SSR_CEA_SHIFT                         2u
#define FR_SSR_CEA_WIDTH                         1u
#define FR_SSR_CEA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_CEA_SHIFT))&FR_SSR_CEA_MASK)
#define FR_SSR_SEA_MASK                          0x8u
#define FR_SSR_SEA_SHIFT                         3u
#define FR_SSR_SEA_WIDTH                         1u
#define FR_SSR_SEA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SEA_SHIFT))&FR_SSR_SEA_MASK)
#define FR_SSR_SUA_MASK                          0x10u
#define FR_SSR_SUA_SHIFT                         4u
#define FR_SSR_SUA_WIDTH                         1u
#define FR_SSR_SUA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SUA_SHIFT))&FR_SSR_SUA_MASK)
#define FR_SSR_NFA_MASK                          0x20u
#define FR_SSR_NFA_SHIFT                         5u
#define FR_SSR_NFA_WIDTH                         1u
#define FR_SSR_NFA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_NFA_SHIFT))&FR_SSR_NFA_MASK)
#define FR_SSR_SYA_MASK                          0x40u
#define FR_SSR_SYA_SHIFT                         6u
#define FR_SSR_SYA_WIDTH                         1u
#define FR_SSR_SYA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SYA_SHIFT))&FR_SSR_SYA_MASK)
#define FR_SSR_VFA_MASK                          0x80u
#define FR_SSR_VFA_SHIFT                         7u
#define FR_SSR_VFA_WIDTH                         1u
#define FR_SSR_VFA(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_VFA_SHIFT))&FR_SSR_VFA_MASK)
#define FR_SSR_TCB_MASK                          0x100u
#define FR_SSR_TCB_SHIFT                         8u
#define FR_SSR_TCB_WIDTH                         1u
#define FR_SSR_TCB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_TCB_SHIFT))&FR_SSR_TCB_MASK)
#define FR_SSR_BVB_MASK                          0x200u
#define FR_SSR_BVB_SHIFT                         9u
#define FR_SSR_BVB_WIDTH                         1u
#define FR_SSR_BVB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_BVB_SHIFT))&FR_SSR_BVB_MASK)
#define FR_SSR_CEB_MASK                          0x400u
#define FR_SSR_CEB_SHIFT                         10u
#define FR_SSR_CEB_WIDTH                         1u
#define FR_SSR_CEB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_CEB_SHIFT))&FR_SSR_CEB_MASK)
#define FR_SSR_SEB_MASK                          0x800u
#define FR_SSR_SEB_SHIFT                         11u
#define FR_SSR_SEB_WIDTH                         1u
#define FR_SSR_SEB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SEB_SHIFT))&FR_SSR_SEB_MASK)
#define FR_SSR_SUB_MASK                          0x1000u
#define FR_SSR_SUB_SHIFT                         12u
#define FR_SSR_SUB_WIDTH                         1u
#define FR_SSR_SUB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SUB_SHIFT))&FR_SSR_SUB_MASK)
#define FR_SSR_NFB_MASK                          0x2000u
#define FR_SSR_NFB_SHIFT                         13u
#define FR_SSR_NFB_WIDTH                         1u
#define FR_SSR_NFB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_NFB_SHIFT))&FR_SSR_NFB_MASK)
#define FR_SSR_SYB_MASK                          0x4000u
#define FR_SSR_SYB_SHIFT                         14u
#define FR_SSR_SYB_WIDTH                         1u
#define FR_SSR_SYB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_SYB_SHIFT))&FR_SSR_SYB_MASK)
#define FR_SSR_VFB_MASK                          0x8000u
#define FR_SSR_VFB_SHIFT                         15u
#define FR_SSR_VFB_WIDTH                         1u
#define FR_SSR_VFB(x)                            (((uint16_t)(((uint16_t)(x))<<FR_SSR_VFB_SHIFT))&FR_SSR_VFB_MASK)
/* SSCR Bit Fields */
#define FR_SSCR_SLOTSTATUSCNT_MASK               0xFFFFu
#define FR_SSCR_SLOTSTATUSCNT_SHIFT              0u
#define FR_SSCR_SLOTSTATUSCNT_WIDTH              16u
#define FR_SSCR_SLOTSTATUSCNT(x)                 (((uint16_t)(((uint16_t)(x))<<FR_SSCR_SLOTSTATUSCNT_SHIFT))&FR_SSCR_SLOTSTATUSCNT_MASK)
/* MTSACFR Bit Fields */
#define FR_MTSACFR_CYCCNTVAL_MASK                0x3Fu
#define FR_MTSACFR_CYCCNTVAL_SHIFT               0u
#define FR_MTSACFR_CYCCNTVAL_WIDTH               6u
#define FR_MTSACFR_CYCCNTVAL(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSACFR_CYCCNTVAL_SHIFT))&FR_MTSACFR_CYCCNTVAL_MASK)
#define FR_MTSACFR_CYCCNTMSK_MASK                0x3F00u
#define FR_MTSACFR_CYCCNTMSK_SHIFT               8u
#define FR_MTSACFR_CYCCNTMSK_WIDTH               6u
#define FR_MTSACFR_CYCCNTMSK(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSACFR_CYCCNTMSK_SHIFT))&FR_MTSACFR_CYCCNTMSK_MASK)
#define FR_MTSACFR_MTE_MASK                      0x8000u
#define FR_MTSACFR_MTE_SHIFT                     15u
#define FR_MTSACFR_MTE_WIDTH                     1u
#define FR_MTSACFR_MTE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_MTSACFR_MTE_SHIFT))&FR_MTSACFR_MTE_MASK)
/* MTSBCFR Bit Fields */
#define FR_MTSBCFR_CYCCNTVAL_MASK                0x3Fu
#define FR_MTSBCFR_CYCCNTVAL_SHIFT               0u
#define FR_MTSBCFR_CYCCNTVAL_WIDTH               6u
#define FR_MTSBCFR_CYCCNTVAL(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSBCFR_CYCCNTVAL_SHIFT))&FR_MTSBCFR_CYCCNTVAL_MASK)
#define FR_MTSBCFR_CYCCNTMSK_MASK                0x3F00u
#define FR_MTSBCFR_CYCCNTMSK_SHIFT               8u
#define FR_MTSBCFR_CYCCNTMSK_WIDTH               6u
#define FR_MTSBCFR_CYCCNTMSK(x)                  (((uint16_t)(((uint16_t)(x))<<FR_MTSBCFR_CYCCNTMSK_SHIFT))&FR_MTSBCFR_CYCCNTMSK_MASK)
#define FR_MTSBCFR_MTE_MASK                      0x8000u
#define FR_MTSBCFR_MTE_SHIFT                     15u
#define FR_MTSBCFR_MTE_WIDTH                     1u
#define FR_MTSBCFR_MTE(x)                        (((uint16_t)(((uint16_t)(x))<<FR_MTSBCFR_MTE_SHIFT))&FR_MTSBCFR_MTE_MASK)
/* RSBIR Bit Fields */
#define FR_RSBIR_RSBIDX_MASK                     0xFFu
#define FR_RSBIR_RSBIDX_SHIFT                    0u
#define FR_RSBIR_RSBIDX_WIDTH                    8u
#define FR_RSBIR_RSBIDX(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RSBIR_RSBIDX_SHIFT))&FR_RSBIR_RSBIDX_MASK)
#define FR_RSBIR_SEL_MASK                        0x3000u
#define FR_RSBIR_SEL_SHIFT                       12u
#define FR_RSBIR_SEL_WIDTH                       2u
#define FR_RSBIR_SEL(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RSBIR_SEL_SHIFT))&FR_RSBIR_SEL_MASK)
#define FR_RSBIR_WMD_MASK                        0x8000u
#define FR_RSBIR_WMD_SHIFT                       15u
#define FR_RSBIR_WMD_WIDTH                       1u
#define FR_RSBIR_WMD(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RSBIR_WMD_SHIFT))&FR_RSBIR_WMD_MASK)
/* RFWMSR Bit Fields */
#define FR_RFWMSR_SEL_MASK                       0x1u
#define FR_RFWMSR_SEL_SHIFT                      0u
#define FR_RFWMSR_SEL_WIDTH                      1u
#define FR_RFWMSR_SEL(x)                         (((uint16_t)(((uint16_t)(x))<<FR_RFWMSR_SEL_SHIFT))&FR_RFWMSR_SEL_MASK)
#define FR_RFWMSR_WM_MASK                        0xFF00u
#define FR_RFWMSR_WM_SHIFT                       8u
#define FR_RFWMSR_WM_WIDTH                       8u
#define FR_RFWMSR_WM(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RFWMSR_WM_SHIFT))&FR_RFWMSR_WM_MASK)
/* RFSIR Bit Fields */
#define FR_RFSIR_SIDX_MASK                       0x3FFu
#define FR_RFSIR_SIDX_SHIFT                      0u
#define FR_RFSIR_SIDX_WIDTH                      10u
#define FR_RFSIR_SIDX(x)                         (((uint16_t)(((uint16_t)(x))<<FR_RFSIR_SIDX_SHIFT))&FR_RFSIR_SIDX_MASK)
/* RFDSR Bit Fields */
#define FR_RFDSR_ENTRY_SIZE_MASK                 0x7Fu
#define FR_RFDSR_ENTRY_SIZE_SHIFT                0u
#define FR_RFDSR_ENTRY_SIZE_WIDTH                7u
#define FR_RFDSR_ENTRY_SIZE(x)                   (((uint16_t)(((uint16_t)(x))<<FR_RFDSR_ENTRY_SIZE_SHIFT))&FR_RFDSR_ENTRY_SIZE_MASK)
#define FR_RFDSR_FIFO_DEPTH_MASK                 0xFF00u
#define FR_RFDSR_FIFO_DEPTH_SHIFT                8u
#define FR_RFDSR_FIFO_DEPTH_WIDTH                8u
#define FR_RFDSR_FIFO_DEPTH(x)                   (((uint16_t)(((uint16_t)(x))<<FR_RFDSR_FIFO_DEPTH_SHIFT))&FR_RFDSR_FIFO_DEPTH_MASK)
/* RFARIR Bit Fields */
#define FR_RFARIR_RDIDX_MASK                     0x3FFu
#define FR_RFARIR_RDIDX_SHIFT                    0u
#define FR_RFARIR_RDIDX_WIDTH                    10u
#define FR_RFARIR_RDIDX(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFARIR_RDIDX_SHIFT))&FR_RFARIR_RDIDX_MASK)
/* RFBRIR Bit Fields */
#define FR_RFBRIR_RDIDX_MASK                     0x3FFu
#define FR_RFBRIR_RDIDX_SHIFT                    0u
#define FR_RFBRIR_RDIDX_WIDTH                    10u
#define FR_RFBRIR_RDIDX(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFBRIR_RDIDX_SHIFT))&FR_RFBRIR_RDIDX_MASK)
/* RFMIDAFVR Bit Fields */
#define FR_RFMIDAFVR_MIDAFVAL_MASK               0xFFFFu
#define FR_RFMIDAFVR_MIDAFVAL_SHIFT              0u
#define FR_RFMIDAFVR_MIDAFVAL_WIDTH              16u
#define FR_RFMIDAFVR_MIDAFVAL(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFMIDAFVR_MIDAFVAL_SHIFT))&FR_RFMIDAFVR_MIDAFVAL_MASK)
/* RFMIDAFMR Bit Fields */
#define FR_RFMIDAFMR_MIDAFMSK_MASK               0xFFFFu
#define FR_RFMIDAFMR_MIDAFMSK_SHIFT              0u
#define FR_RFMIDAFMR_MIDAFMSK_WIDTH              16u
#define FR_RFMIDAFMR_MIDAFMSK(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFMIDAFMR_MIDAFMSK_SHIFT))&FR_RFMIDAFMR_MIDAFMSK_MASK)
/* RFFIDRFVR Bit Fields */
#define FR_RFFIDRFVR_FIDRFVAL_MASK               0x7FFu
#define FR_RFFIDRFVR_FIDRFVAL_SHIFT              0u
#define FR_RFFIDRFVR_FIDRFVAL_WIDTH              11u
#define FR_RFFIDRFVR_FIDRFVAL(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFIDRFVR_FIDRFVAL_SHIFT))&FR_RFFIDRFVR_FIDRFVAL_MASK)
/* RFFIDRFMR Bit Fields */
#define FR_RFFIDRFMR_FIDRFMSK_MASK               0x7FFu
#define FR_RFFIDRFMR_FIDRFMSK_SHIFT              0u
#define FR_RFFIDRFMR_FIDRFMSK_WIDTH              11u
#define FR_RFFIDRFMR_FIDRFMSK(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFIDRFMR_FIDRFMSK_SHIFT))&FR_RFFIDRFMR_FIDRFMSK_MASK)
/* RFRFCFR Bit Fields */
#define FR_RFRFCFR_SID_MASK                      0x7FFu
#define FR_RFRFCFR_SID_SHIFT                     0u
#define FR_RFRFCFR_SID_WIDTH                     11u
#define FR_RFRFCFR_SID(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_SID_SHIFT))&FR_RFRFCFR_SID_MASK)
#define FR_RFRFCFR_SEL_MASK                      0x3000u
#define FR_RFRFCFR_SEL_SHIFT                     12u
#define FR_RFRFCFR_SEL_WIDTH                     2u
#define FR_RFRFCFR_SEL(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_SEL_SHIFT))&FR_RFRFCFR_SEL_MASK)
#define FR_RFRFCFR_IBD_MASK                      0x4000u
#define FR_RFRFCFR_IBD_SHIFT                     14u
#define FR_RFRFCFR_IBD_WIDTH                     1u
#define FR_RFRFCFR_IBD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_IBD_SHIFT))&FR_RFRFCFR_IBD_MASK)
#define FR_RFRFCFR_WMD_MASK                      0x8000u
#define FR_RFRFCFR_WMD_SHIFT                     15u
#define FR_RFRFCFR_WMD_WIDTH                     1u
#define FR_RFRFCFR_WMD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_RFRFCFR_WMD_SHIFT))&FR_RFRFCFR_WMD_MASK)
/* RFRFCTR Bit Fields */
#define FR_RFRFCTR_F0EN_MASK                     0x1u
#define FR_RFRFCTR_F0EN_SHIFT                    0u
#define FR_RFRFCTR_F0EN_WIDTH                    1u
#define FR_RFRFCTR_F0EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F0EN_SHIFT))&FR_RFRFCTR_F0EN_MASK)
#define FR_RFRFCTR_F1EN_MASK                     0x2u
#define FR_RFRFCTR_F1EN_SHIFT                    1u
#define FR_RFRFCTR_F1EN_WIDTH                    1u
#define FR_RFRFCTR_F1EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F1EN_SHIFT))&FR_RFRFCTR_F1EN_MASK)
#define FR_RFRFCTR_F2EN_MASK                     0x4u
#define FR_RFRFCTR_F2EN_SHIFT                    2u
#define FR_RFRFCTR_F2EN_WIDTH                    1u
#define FR_RFRFCTR_F2EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F2EN_SHIFT))&FR_RFRFCTR_F2EN_MASK)
#define FR_RFRFCTR_F3EN_MASK                     0x8u
#define FR_RFRFCTR_F3EN_SHIFT                    3u
#define FR_RFRFCTR_F3EN_WIDTH                    1u
#define FR_RFRFCTR_F3EN(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F3EN_SHIFT))&FR_RFRFCTR_F3EN_MASK)
#define FR_RFRFCTR_F0MD_MASK                     0x100u
#define FR_RFRFCTR_F0MD_SHIFT                    8u
#define FR_RFRFCTR_F0MD_WIDTH                    1u
#define FR_RFRFCTR_F0MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F0MD_SHIFT))&FR_RFRFCTR_F0MD_MASK)
#define FR_RFRFCTR_F1MD_MASK                     0x200u
#define FR_RFRFCTR_F1MD_SHIFT                    9u
#define FR_RFRFCTR_F1MD_WIDTH                    1u
#define FR_RFRFCTR_F1MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F1MD_SHIFT))&FR_RFRFCTR_F1MD_MASK)
#define FR_RFRFCTR_F2MD_MASK                     0x400u
#define FR_RFRFCTR_F2MD_SHIFT                    10u
#define FR_RFRFCTR_F2MD_WIDTH                    1u
#define FR_RFRFCTR_F2MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F2MD_SHIFT))&FR_RFRFCTR_F2MD_MASK)
#define FR_RFRFCTR_F3MD_MASK                     0x800u
#define FR_RFRFCTR_F3MD_SHIFT                    11u
#define FR_RFRFCTR_F3MD_WIDTH                    1u
#define FR_RFRFCTR_F3MD(x)                       (((uint16_t)(((uint16_t)(x))<<FR_RFRFCTR_F3MD_SHIFT))&FR_RFRFCTR_F3MD_MASK)
/* LDTXSLAR Bit Fields */
#define FR_LDTXSLAR_LDYNTXSLOTA_MASK             0x7FFu
#define FR_LDTXSLAR_LDYNTXSLOTA_SHIFT            0u
#define FR_LDTXSLAR_LDYNTXSLOTA_WIDTH            11u
#define FR_LDTXSLAR_LDYNTXSLOTA(x)               (((uint16_t)(((uint16_t)(x))<<FR_LDTXSLAR_LDYNTXSLOTA_SHIFT))&FR_LDTXSLAR_LDYNTXSLOTA_MASK)
/* LDTXSLBR Bit Fields */
#define FR_LDTXSLBR_LDYNTXSLOTB_MASK             0x7FFu
#define FR_LDTXSLBR_LDYNTXSLOTB_SHIFT            0u
#define FR_LDTXSLBR_LDYNTXSLOTB_WIDTH            11u
#define FR_LDTXSLBR_LDYNTXSLOTB(x)               (((uint16_t)(((uint16_t)(x))<<FR_LDTXSLBR_LDYNTXSLOTB_SHIFT))&FR_LDTXSLBR_LDYNTXSLOTB_MASK)
/* PCR0 Bit Fields */
#define FR_PCR0_static_slot_length_MASK          0x3FFu
#define FR_PCR0_static_slot_length_SHIFT         0u
#define FR_PCR0_static_slot_length_WIDTH         10u
#define FR_PCR0_static_slot_length(x)            (((uint16_t)(((uint16_t)(x))<<FR_PCR0_static_slot_length_SHIFT))&FR_PCR0_static_slot_length_MASK)
#define FR_PCR0_action_point_offset_MASK         0xFC00u
#define FR_PCR0_action_point_offset_SHIFT        10u
#define FR_PCR0_action_point_offset_WIDTH        6u
#define FR_PCR0_action_point_offset(x)           (((uint16_t)(((uint16_t)(x))<<FR_PCR0_action_point_offset_SHIFT))&FR_PCR0_action_point_offset_MASK)
/* PCR1 Bit Fields */
#define FR_PCR1_macro_after_first_static_slot_MASK 0x3FFFu
#define FR_PCR1_macro_after_first_static_slot_SHIFT 0u
#define FR_PCR1_macro_after_first_static_slot_WIDTH 14u
#define FR_PCR1_macro_after_first_static_slot(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR1_macro_after_first_static_slot_SHIFT))&FR_PCR1_macro_after_first_static_slot_MASK)
/* PCR2 Bit Fields */
#define FR_PCR2_number_of_static_slots_MASK      0x3FFu
#define FR_PCR2_number_of_static_slots_SHIFT     0u
#define FR_PCR2_number_of_static_slots_WIDTH     10u
#define FR_PCR2_number_of_static_slots(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR2_number_of_static_slots_SHIFT))&FR_PCR2_number_of_static_slots_MASK)
#define FR_PCR2_minislot_after_action_point_MASK 0xFC00u
#define FR_PCR2_minislot_after_action_point_SHIFT 10u
#define FR_PCR2_minislot_after_action_point_WIDTH 6u
#define FR_PCR2_minislot_after_action_point(x)   (((uint16_t)(((uint16_t)(x))<<FR_PCR2_minislot_after_action_point_SHIFT))&FR_PCR2_minislot_after_action_point_MASK)
/* PCR3 Bit Fields */
#define FR_PCR3_coldstart_attempts_MASK          0x1Fu
#define FR_PCR3_coldstart_attempts_SHIFT         0u
#define FR_PCR3_coldstart_attempts_WIDTH         5u
#define FR_PCR3_coldstart_attempts(x)            (((uint16_t)(((uint16_t)(x))<<FR_PCR3_coldstart_attempts_SHIFT))&FR_PCR3_coldstart_attempts_MASK)
#define FR_PCR3_minislot_action_point_offset_MASK 0x3E0u
#define FR_PCR3_minislot_action_point_offset_SHIFT 5u
#define FR_PCR3_minislot_action_point_offset_WIDTH 5u
#define FR_PCR3_minislot_action_point_offset(x)  (((uint16_t)(((uint16_t)(x))<<FR_PCR3_minislot_action_point_offset_SHIFT))&FR_PCR3_minislot_action_point_offset_MASK)
#define FR_PCR3_wakeup_symbol_rx_low_MASK        0xFC00u
#define FR_PCR3_wakeup_symbol_rx_low_SHIFT       10u
#define FR_PCR3_wakeup_symbol_rx_low_WIDTH       6u
#define FR_PCR3_wakeup_symbol_rx_low(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR3_wakeup_symbol_rx_low_SHIFT))&FR_PCR3_wakeup_symbol_rx_low_MASK)
/* PCR4 Bit Fields */
#define FR_PCR4_wakeup_symbol_rx_window_MASK     0x1FFu
#define FR_PCR4_wakeup_symbol_rx_window_SHIFT    0u
#define FR_PCR4_wakeup_symbol_rx_window_WIDTH    9u
#define FR_PCR4_wakeup_symbol_rx_window(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR4_wakeup_symbol_rx_window_SHIFT))&FR_PCR4_wakeup_symbol_rx_window_MASK)
#define FR_PCR4_cas_rx_low_max_MASK              0xFE00u
#define FR_PCR4_cas_rx_low_max_SHIFT             9u
#define FR_PCR4_cas_rx_low_max_WIDTH             7u
#define FR_PCR4_cas_rx_low_max(x)                (((uint16_t)(((uint16_t)(x))<<FR_PCR4_cas_rx_low_max_SHIFT))&FR_PCR4_cas_rx_low_max_MASK)
/* PCR5 Bit Fields */
#define FR_PCR5_wakeup_symbol_rx_idle_MASK       0x3Fu
#define FR_PCR5_wakeup_symbol_rx_idle_SHIFT      0u
#define FR_PCR5_wakeup_symbol_rx_idle_WIDTH      6u
#define FR_PCR5_wakeup_symbol_rx_idle(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR5_wakeup_symbol_rx_idle_SHIFT))&FR_PCR5_wakeup_symbol_rx_idle_MASK)
#define FR_PCR5_wakeup_symbol_tx_low_MASK        0xFC0u
#define FR_PCR5_wakeup_symbol_tx_low_SHIFT       6u
#define FR_PCR5_wakeup_symbol_tx_low_WIDTH       6u
#define FR_PCR5_wakeup_symbol_tx_low(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR5_wakeup_symbol_tx_low_SHIFT))&FR_PCR5_wakeup_symbol_tx_low_MASK)
#define FR_PCR5_tss_transmitter_MASK             0xF000u
#define FR_PCR5_tss_transmitter_SHIFT            12u
#define FR_PCR5_tss_transmitter_WIDTH            4u
#define FR_PCR5_tss_transmitter(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR5_tss_transmitter_SHIFT))&FR_PCR5_tss_transmitter_MASK)
/* PCR6 Bit Fields */
#define FR_PCR6_macro_initial_offset_a_MASK      0x7Fu
#define FR_PCR6_macro_initial_offset_a_SHIFT     0u
#define FR_PCR6_macro_initial_offset_a_WIDTH     7u
#define FR_PCR6_macro_initial_offset_a(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR6_macro_initial_offset_a_SHIFT))&FR_PCR6_macro_initial_offset_a_MASK)
#define FR_PCR6_symbol_window_after_action_point_MASK 0x7F80u
#define FR_PCR6_symbol_window_after_action_point_SHIFT 7u
#define FR_PCR6_symbol_window_after_action_point_WIDTH 8u
#define FR_PCR6_symbol_window_after_action_point(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR6_symbol_window_after_action_point_SHIFT))&FR_PCR6_symbol_window_after_action_point_MASK)
/* PCR7 Bit Fields */
#define FR_PCR7_micro_per_macro_nom_half_MASK    0x7Fu
#define FR_PCR7_micro_per_macro_nom_half_SHIFT   0u
#define FR_PCR7_micro_per_macro_nom_half_WIDTH   7u
#define FR_PCR7_micro_per_macro_nom_half(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR7_micro_per_macro_nom_half_SHIFT))&FR_PCR7_micro_per_macro_nom_half_MASK)
#define FR_PCR7_decoding_correction_b_MASK       0xFF80u
#define FR_PCR7_decoding_correction_b_SHIFT      7u
#define FR_PCR7_decoding_correction_b_WIDTH      9u
#define FR_PCR7_decoding_correction_b(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR7_decoding_correction_b_SHIFT))&FR_PCR7_decoding_correction_b_MASK)
/* PCR8 Bit Fields */
#define FR_PCR8_wakeup_symbol_tx_idle_MASK       0xFFu
#define FR_PCR8_wakeup_symbol_tx_idle_SHIFT      0u
#define FR_PCR8_wakeup_symbol_tx_idle_WIDTH      8u
#define FR_PCR8_wakeup_symbol_tx_idle(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR8_wakeup_symbol_tx_idle_SHIFT))&FR_PCR8_wakeup_symbol_tx_idle_MASK)
#define FR_PCR8_max_without_clock_correction_passive_MASK 0xF00u
#define FR_PCR8_max_without_clock_correction_passive_SHIFT 8u
#define FR_PCR8_max_without_clock_correction_passive_WIDTH 4u
#define FR_PCR8_max_without_clock_correction_passive(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR8_max_without_clock_correction_passive_SHIFT))&FR_PCR8_max_without_clock_correction_passive_MASK)
#define FR_PCR8_max_without_clock_correction_fatal_MASK 0xF000u
#define FR_PCR8_max_without_clock_correction_fatal_SHIFT 12u
#define FR_PCR8_max_without_clock_correction_fatal_WIDTH 4u
#define FR_PCR8_max_without_clock_correction_fatal(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR8_max_without_clock_correction_fatal_SHIFT))&FR_PCR8_max_without_clock_correction_fatal_MASK)
/* PCR9 Bit Fields */
#define FR_PCR9_offset_correction_out_MASK       0x3FFFu
#define FR_PCR9_offset_correction_out_SHIFT      0u
#define FR_PCR9_offset_correction_out_WIDTH      14u
#define FR_PCR9_offset_correction_out(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR9_offset_correction_out_SHIFT))&FR_PCR9_offset_correction_out_MASK)
#define FR_PCR9_symbol_window_exists_MASK        0x4000u
#define FR_PCR9_symbol_window_exists_SHIFT       14u
#define FR_PCR9_symbol_window_exists_WIDTH       1u
#define FR_PCR9_symbol_window_exists(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR9_symbol_window_exists_SHIFT))&FR_PCR9_symbol_window_exists_MASK)
#define FR_PCR9_minislot_exists_MASK             0x8000u
#define FR_PCR9_minislot_exists_SHIFT            15u
#define FR_PCR9_minislot_exists_WIDTH            1u
#define FR_PCR9_minislot_exists(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR9_minislot_exists_SHIFT))&FR_PCR9_minislot_exists_MASK)
/* PCR10 Bit Fields */
#define FR_PCR10_macro_per_cycle_MASK            0x3FFFu
#define FR_PCR10_macro_per_cycle_SHIFT           0u
#define FR_PCR10_macro_per_cycle_WIDTH           14u
#define FR_PCR10_macro_per_cycle(x)              (((uint16_t)(((uint16_t)(x))<<FR_PCR10_macro_per_cycle_SHIFT))&FR_PCR10_macro_per_cycle_MASK)
#define FR_PCR10_wakeup_channel_MASK             0x4000u
#define FR_PCR10_wakeup_channel_SHIFT            14u
#define FR_PCR10_wakeup_channel_WIDTH            1u
#define FR_PCR10_wakeup_channel(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR10_wakeup_channel_SHIFT))&FR_PCR10_wakeup_channel_MASK)
#define FR_PCR10_single_slot_enabled_MASK        0x8000u
#define FR_PCR10_single_slot_enabled_SHIFT       15u
#define FR_PCR10_single_slot_enabled_WIDTH       1u
#define FR_PCR10_single_slot_enabled(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR10_single_slot_enabled_SHIFT))&FR_PCR10_single_slot_enabled_MASK)
/* PCR11 Bit Fields */
#define FR_PCR11_offset_correction_start_MASK    0x3FFFu
#define FR_PCR11_offset_correction_start_SHIFT   0u
#define FR_PCR11_offset_correction_start_WIDTH   14u
#define FR_PCR11_offset_correction_start(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR11_offset_correction_start_SHIFT))&FR_PCR11_offset_correction_start_MASK)
#define FR_PCR11_key_slot_used_for_sync_MASK     0x4000u
#define FR_PCR11_key_slot_used_for_sync_SHIFT    14u
#define FR_PCR11_key_slot_used_for_sync_WIDTH    1u
#define FR_PCR11_key_slot_used_for_sync(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR11_key_slot_used_for_sync_SHIFT))&FR_PCR11_key_slot_used_for_sync_MASK)
#define FR_PCR11_key_slot_used_for_startup_MASK  0x8000u
#define FR_PCR11_key_slot_used_for_startup_SHIFT 15u
#define FR_PCR11_key_slot_used_for_startup_WIDTH 1u
#define FR_PCR11_key_slot_used_for_startup(x)    (((uint16_t)(((uint16_t)(x))<<FR_PCR11_key_slot_used_for_startup_SHIFT))&FR_PCR11_key_slot_used_for_startup_MASK)
/* PCR12 Bit Fields */
#define FR_PCR12_key_slot_header_crc_MASK        0x7FFu
#define FR_PCR12_key_slot_header_crc_SHIFT       0u
#define FR_PCR12_key_slot_header_crc_WIDTH       11u
#define FR_PCR12_key_slot_header_crc(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR12_key_slot_header_crc_SHIFT))&FR_PCR12_key_slot_header_crc_MASK)
#define FR_PCR12_allow_passive_to_active_MASK    0xF800u
#define FR_PCR12_allow_passive_to_active_SHIFT   11u
#define FR_PCR12_allow_passive_to_active_WIDTH   5u
#define FR_PCR12_allow_passive_to_active(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR12_allow_passive_to_active_SHIFT))&FR_PCR12_allow_passive_to_active_MASK)
/* PCR13 Bit Fields */
#define FR_PCR13_static_slot_after_action_point_MASK 0x3FFu
#define FR_PCR13_static_slot_after_action_point_SHIFT 0u
#define FR_PCR13_static_slot_after_action_point_WIDTH 10u
#define FR_PCR13_static_slot_after_action_point(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR13_static_slot_after_action_point_SHIFT))&FR_PCR13_static_slot_after_action_point_MASK)
#define FR_PCR13_first_minislot_action_point_offset_MASK 0xFC00u
#define FR_PCR13_first_minislot_action_point_offset_SHIFT 10u
#define FR_PCR13_first_minislot_action_point_offset_WIDTH 6u
#define FR_PCR13_first_minislot_action_point_offset(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR13_first_minislot_action_point_offset_SHIFT))&FR_PCR13_first_minislot_action_point_offset_MASK)
/* PCR14 Bit Fields */
#define FR_PCR14_listen_timeout_MASK             0x1Fu
#define FR_PCR14_listen_timeout_SHIFT            0u
#define FR_PCR14_listen_timeout_WIDTH            5u
#define FR_PCR14_listen_timeout(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR14_listen_timeout_SHIFT))&FR_PCR14_listen_timeout_MASK)
#define FR_PCR14_rate_correction_out_MASK        0xFFE0u
#define FR_PCR14_rate_correction_out_SHIFT       5u
#define FR_PCR14_rate_correction_out_WIDTH       11u
#define FR_PCR14_rate_correction_out(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR14_rate_correction_out_SHIFT))&FR_PCR14_rate_correction_out_MASK)
/* PCR15 Bit Fields */
#define FR_PCR15_listen_timeout_MASK             0xFFFFu
#define FR_PCR15_listen_timeout_SHIFT            0u
#define FR_PCR15_listen_timeout_WIDTH            16u
#define FR_PCR15_listen_timeout(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR15_listen_timeout_SHIFT))&FR_PCR15_listen_timeout_MASK)
/* PCR16 Bit Fields */
#define FR_PCR16_noise_listen_timeout_MASK       0x1FFu
#define FR_PCR16_noise_listen_timeout_SHIFT      0u
#define FR_PCR16_noise_listen_timeout_WIDTH      9u
#define FR_PCR16_noise_listen_timeout(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR16_noise_listen_timeout_SHIFT))&FR_PCR16_noise_listen_timeout_MASK)
#define FR_PCR16_macro_initial_offset_b_MASK     0xFE00u
#define FR_PCR16_macro_initial_offset_b_SHIFT    9u
#define FR_PCR16_macro_initial_offset_b_WIDTH    7u
#define FR_PCR16_macro_initial_offset_b(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR16_macro_initial_offset_b_SHIFT))&FR_PCR16_macro_initial_offset_b_MASK)
/* PCR17 Bit Fields */
#define FR_PCR17_noise_listen_timeout_MASK       0xFFFFu
#define FR_PCR17_noise_listen_timeout_SHIFT      0u
#define FR_PCR17_noise_listen_timeout_WIDTH      16u
#define FR_PCR17_noise_listen_timeout(x)         (((uint16_t)(((uint16_t)(x))<<FR_PCR17_noise_listen_timeout_SHIFT))&FR_PCR17_noise_listen_timeout_MASK)
/* PCR18 Bit Fields */
#define FR_PCR18_key_slot_id_MASK                0x3FFu
#define FR_PCR18_key_slot_id_SHIFT               0u
#define FR_PCR18_key_slot_id_WIDTH               10u
#define FR_PCR18_key_slot_id(x)                  (((uint16_t)(((uint16_t)(x))<<FR_PCR18_key_slot_id_SHIFT))&FR_PCR18_key_slot_id_MASK)
#define FR_PCR18_wakeup_pattern_MASK             0xFC00u
#define FR_PCR18_wakeup_pattern_SHIFT            10u
#define FR_PCR18_wakeup_pattern_WIDTH            6u
#define FR_PCR18_wakeup_pattern(x)               (((uint16_t)(((uint16_t)(x))<<FR_PCR18_wakeup_pattern_SHIFT))&FR_PCR18_wakeup_pattern_MASK)
/* PCR19 Bit Fields */
#define FR_PCR19_payload_length_static_MASK      0x7Fu
#define FR_PCR19_payload_length_static_SHIFT     0u
#define FR_PCR19_payload_length_static_WIDTH     7u
#define FR_PCR19_payload_length_static(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR19_payload_length_static_SHIFT))&FR_PCR19_payload_length_static_MASK)
#define FR_PCR19_decoding_correction_a_MASK      0xFF80u
#define FR_PCR19_decoding_correction_a_SHIFT     7u
#define FR_PCR19_decoding_correction_a_WIDTH     9u
#define FR_PCR19_decoding_correction_a(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR19_decoding_correction_a_SHIFT))&FR_PCR19_decoding_correction_a_MASK)
/* PCR20 Bit Fields */
#define FR_PCR20_micro_initial_offset_a_MASK     0xFFu
#define FR_PCR20_micro_initial_offset_a_SHIFT    0u
#define FR_PCR20_micro_initial_offset_a_WIDTH    8u
#define FR_PCR20_micro_initial_offset_a(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR20_micro_initial_offset_a_SHIFT))&FR_PCR20_micro_initial_offset_a_MASK)
#define FR_PCR20_micro_initial_offset_b_MASK     0xFF00u
#define FR_PCR20_micro_initial_offset_b_SHIFT    8u
#define FR_PCR20_micro_initial_offset_b_WIDTH    8u
#define FR_PCR20_micro_initial_offset_b(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR20_micro_initial_offset_b_SHIFT))&FR_PCR20_micro_initial_offset_b_MASK)
/* PCR21 Bit Fields */
#define FR_PCR21_latest_tx_MASK                  0x1FFFu
#define FR_PCR21_latest_tx_SHIFT                 0u
#define FR_PCR21_latest_tx_WIDTH                 13u
#define FR_PCR21_latest_tx(x)                    (((uint16_t)(((uint16_t)(x))<<FR_PCR21_latest_tx_SHIFT))&FR_PCR21_latest_tx_MASK)
#define FR_PCR21_extern_rate_correction_MASK     0xE000u
#define FR_PCR21_extern_rate_correction_SHIFT    13u
#define FR_PCR21_extern_rate_correction_WIDTH    3u
#define FR_PCR21_extern_rate_correction(x)       (((uint16_t)(((uint16_t)(x))<<FR_PCR21_extern_rate_correction_SHIFT))&FR_PCR21_extern_rate_correction_MASK)
/* PCR22 Bit Fields */
#define FR_PCR22_micro_per_cycle_MASK            0xFu
#define FR_PCR22_micro_per_cycle_SHIFT           0u
#define FR_PCR22_micro_per_cycle_WIDTH           4u
#define FR_PCR22_micro_per_cycle(x)              (((uint16_t)(((uint16_t)(x))<<FR_PCR22_micro_per_cycle_SHIFT))&FR_PCR22_micro_per_cycle_MASK)
#define FR_PCR22_comp_accepted_startup_range_a_MASK 0x7FF0u
#define FR_PCR22_comp_accepted_startup_range_a_SHIFT 4u
#define FR_PCR22_comp_accepted_startup_range_a_WIDTH 11u
#define FR_PCR22_comp_accepted_startup_range_a(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR22_comp_accepted_startup_range_a_SHIFT))&FR_PCR22_comp_accepted_startup_range_a_MASK)
/* PCR23 Bit Fields */
#define FR_PCR23_micro_per_cycle_MASK            0xFFFFu
#define FR_PCR23_micro_per_cycle_SHIFT           0u
#define FR_PCR23_micro_per_cycle_WIDTH           16u
#define FR_PCR23_micro_per_cycle(x)              (((uint16_t)(((uint16_t)(x))<<FR_PCR23_micro_per_cycle_SHIFT))&FR_PCR23_micro_per_cycle_MASK)
/* PCR24 Bit Fields */
#define FR_PCR24_micro_per_cycle_min_MASK        0xFu
#define FR_PCR24_micro_per_cycle_min_SHIFT       0u
#define FR_PCR24_micro_per_cycle_min_WIDTH       4u
#define FR_PCR24_micro_per_cycle_min(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR24_micro_per_cycle_min_SHIFT))&FR_PCR24_micro_per_cycle_min_MASK)
#define FR_PCR24_max_payload_length_dynamic_MASK 0x7F0u
#define FR_PCR24_max_payload_length_dynamic_SHIFT 4u
#define FR_PCR24_max_payload_length_dynamic_WIDTH 7u
#define FR_PCR24_max_payload_length_dynamic(x)   (((uint16_t)(((uint16_t)(x))<<FR_PCR24_max_payload_length_dynamic_SHIFT))&FR_PCR24_max_payload_length_dynamic_MASK)
#define FR_PCR24_cluster_drift_damping_MASK      0xF800u
#define FR_PCR24_cluster_drift_damping_SHIFT     11u
#define FR_PCR24_cluster_drift_damping_WIDTH     5u
#define FR_PCR24_cluster_drift_damping(x)        (((uint16_t)(((uint16_t)(x))<<FR_PCR24_cluster_drift_damping_SHIFT))&FR_PCR24_cluster_drift_damping_MASK)
/* PCR25 Bit Fields */
#define FR_PCR25_micro_per_cycle_min_MASK        0xFFFFu
#define FR_PCR25_micro_per_cycle_min_SHIFT       0u
#define FR_PCR25_micro_per_cycle_min_WIDTH       16u
#define FR_PCR25_micro_per_cycle_min(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR25_micro_per_cycle_min_SHIFT))&FR_PCR25_micro_per_cycle_min_MASK)
/* PCR26 Bit Fields */
#define FR_PCR26_micro_per_cycle_max_MASK        0xFu
#define FR_PCR26_micro_per_cycle_max_SHIFT       0u
#define FR_PCR26_micro_per_cycle_max_WIDTH       4u
#define FR_PCR26_micro_per_cycle_max(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR26_micro_per_cycle_max_SHIFT))&FR_PCR26_micro_per_cycle_max_MASK)
#define FR_PCR26_comp_accepted_startup_range_b_MASK 0x7FF0u
#define FR_PCR26_comp_accepted_startup_range_b_SHIFT 4u
#define FR_PCR26_comp_accepted_startup_range_b_WIDTH 11u
#define FR_PCR26_comp_accepted_startup_range_b(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR26_comp_accepted_startup_range_b_SHIFT))&FR_PCR26_comp_accepted_startup_range_b_MASK)
#define FR_PCR26_allow_halt_due_to_clock_MASK    0x8000u
#define FR_PCR26_allow_halt_due_to_clock_SHIFT   15u
#define FR_PCR26_allow_halt_due_to_clock_WIDTH   1u
#define FR_PCR26_allow_halt_due_to_clock(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR26_allow_halt_due_to_clock_SHIFT))&FR_PCR26_allow_halt_due_to_clock_MASK)
/* PCR27 Bit Fields */
#define FR_PCR27_micro_per_cycle_max_MASK        0xFFFFu
#define FR_PCR27_micro_per_cycle_max_SHIFT       0u
#define FR_PCR27_micro_per_cycle_max_WIDTH       16u
#define FR_PCR27_micro_per_cycle_max(x)          (((uint16_t)(((uint16_t)(x))<<FR_PCR27_micro_per_cycle_max_SHIFT))&FR_PCR27_micro_per_cycle_max_MASK)
/* PCR28 Bit Fields */
#define FR_PCR28_macro_after_offset_correction_MASK 0x3FFFu
#define FR_PCR28_macro_after_offset_correction_SHIFT 0u
#define FR_PCR28_macro_after_offset_correction_WIDTH 14u
#define FR_PCR28_macro_after_offset_correction(x) (((uint16_t)(((uint16_t)(x))<<FR_PCR28_macro_after_offset_correction_SHIFT))&FR_PCR28_macro_after_offset_correction_MASK)
#define FR_PCR28_dynamic_slot_idle_phase_MASK    0xC000u
#define FR_PCR28_dynamic_slot_idle_phase_SHIFT   14u
#define FR_PCR28_dynamic_slot_idle_phase_WIDTH   2u
#define FR_PCR28_dynamic_slot_idle_phase(x)      (((uint16_t)(((uint16_t)(x))<<FR_PCR28_dynamic_slot_idle_phase_SHIFT))&FR_PCR28_dynamic_slot_idle_phase_MASK)
/* PCR29 Bit Fields */
#define FR_PCR29_minislots_max_MASK              0x1FFFu
#define FR_PCR29_minislots_max_SHIFT             0u
#define FR_PCR29_minislots_max_WIDTH             13u
#define FR_PCR29_minislots_max(x)                (((uint16_t)(((uint16_t)(x))<<FR_PCR29_minislots_max_SHIFT))&FR_PCR29_minislots_max_MASK)
#define FR_PCR29_extern_offset_correction_MASK   0xE000u
#define FR_PCR29_extern_offset_correction_SHIFT  13u
#define FR_PCR29_extern_offset_correction_WIDTH  3u
#define FR_PCR29_extern_offset_correction(x)     (((uint16_t)(((uint16_t)(x))<<FR_PCR29_extern_offset_correction_SHIFT))&FR_PCR29_extern_offset_correction_MASK)
/* PCR30 Bit Fields */
#define FR_PCR30_sync_node_max_MASK              0xFu
#define FR_PCR30_sync_node_max_SHIFT             0u
#define FR_PCR30_sync_node_max_WIDTH             4u
#define FR_PCR30_sync_node_max(x)                (((uint16_t)(((uint16_t)(x))<<FR_PCR30_sync_node_max_SHIFT))&FR_PCR30_sync_node_max_MASK)
/* STPWHR Bit Fields */
#define FR_STPWHR_STPW_S_H_MASK                  0xFFFFu
#define FR_STPWHR_STPW_S_H_SHIFT                 0u
#define FR_STPWHR_STPW_S_H_WIDTH                 16u
#define FR_STPWHR_STPW_S_H(x)                    (((uint16_t)(((uint16_t)(x))<<FR_STPWHR_STPW_S_H_SHIFT))&FR_STPWHR_STPW_S_H_MASK)
/* STPWLR Bit Fields */
#define FR_STPWLR_STPW_S_L_MASK                  0xFFFFu
#define FR_STPWLR_STPW_S_L_SHIFT                 0u
#define FR_STPWLR_STPW_S_L_WIDTH                 16u
#define FR_STPWLR_STPW_S_L(x)                    (((uint16_t)(((uint16_t)(x))<<FR_STPWLR_STPW_S_L_SHIFT))&FR_STPWLR_STPW_S_L_MASK)
/* PEOER Bit Fields */
#define FR_PEOER_CYC_EE_MASK                     0x1u
#define FR_PEOER_CYC_EE_SHIFT                    0u
#define FR_PEOER_CYC_EE_WIDTH                    1u
#define FR_PEOER_CYC_EE(x)                       (((uint16_t)(((uint16_t)(x))<<FR_PEOER_CYC_EE_SHIFT))&FR_PEOER_CYC_EE_MASK)
#define FR_PEOER_TIM1_EE_MASK                    0x2u
#define FR_PEOER_TIM1_EE_SHIFT                   1u
#define FR_PEOER_TIM1_EE_WIDTH                   1u
#define FR_PEOER_TIM1_EE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PEOER_TIM1_EE_SHIFT))&FR_PEOER_TIM1_EE_MASK)
#define FR_PEOER_TIM2_EE_MASK                    0x4u
#define FR_PEOER_TIM2_EE_SHIFT                   2u
#define FR_PEOER_TIM2_EE_WIDTH                   1u
#define FR_PEOER_TIM2_EE(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PEOER_TIM2_EE_SHIFT))&FR_PEOER_TIM2_EE_MASK)
#define FR_PEOER_STPW_EN_MASK                    0x100u
#define FR_PEOER_STPW_EN_SHIFT                   8u
#define FR_PEOER_STPW_EN_WIDTH                   1u
#define FR_PEOER_STPW_EN(x)                      (((uint16_t)(((uint16_t)(x))<<FR_PEOER_STPW_EN_SHIFT))&FR_PEOER_STPW_EN_MASK)
/* RFSDOR Bit Fields */
#define FR_RFSDOR_SDO_MASK                       0xFFFFu
#define FR_RFSDOR_SDO_SHIFT                      0u
#define FR_RFSDOR_SDO_WIDTH                      16u
#define FR_RFSDOR_SDO(x)                         (((uint16_t)(((uint16_t)(x))<<FR_RFSDOR_SDO_SHIFT))&FR_RFSDOR_SDO_MASK)
/* RFSYMBADHR Bit Fields */
#define FR_RFSYMBADHR_SMBA_MASK                  0xFFFFu
#define FR_RFSYMBADHR_SMBA_SHIFT                 0u
#define FR_RFSYMBADHR_SMBA_WIDTH                 16u
#define FR_RFSYMBADHR_SMBA(x)                    (((uint16_t)(((uint16_t)(x))<<FR_RFSYMBADHR_SMBA_SHIFT))&FR_RFSYMBADHR_SMBA_MASK)
/* RFSYMBADLR Bit Fields */
#define FR_RFSYMBADLR_SMBA_MASK                  0xFFF0u
#define FR_RFSYMBADLR_SMBA_SHIFT                 4u
#define FR_RFSYMBADLR_SMBA_WIDTH                 12u
#define FR_RFSYMBADLR_SMBA(x)                    (((uint16_t)(((uint16_t)(x))<<FR_RFSYMBADLR_SMBA_SHIFT))&FR_RFSYMBADLR_SMBA_MASK)
/* RFPTR Bit Fields */
#define FR_RFPTR_PTD_MASK                        0x3FFFu
#define FR_RFPTR_PTD_SHIFT                       0u
#define FR_RFPTR_PTD_WIDTH                       14u
#define FR_RFPTR_PTD(x)                          (((uint16_t)(((uint16_t)(x))<<FR_RFPTR_PTD_SHIFT))&FR_RFPTR_PTD_MASK)
/* RFFLPCR Bit Fields */
#define FR_RFFLPCR_FLA_or_PCA_MASK               0xFFu
#define FR_RFFLPCR_FLA_or_PCA_SHIFT              0u
#define FR_RFFLPCR_FLA_or_PCA_WIDTH              8u
#define FR_RFFLPCR_FLA_or_PCA(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFLPCR_FLA_or_PCA_SHIFT))&FR_RFFLPCR_FLA_or_PCA_MASK)
#define FR_RFFLPCR_FLB_or_PCB_MASK               0xFF00u
#define FR_RFFLPCR_FLB_or_PCB_SHIFT              8u
#define FR_RFFLPCR_FLB_or_PCB_WIDTH              8u
#define FR_RFFLPCR_FLB_or_PCB(x)                 (((uint16_t)(((uint16_t)(x))<<FR_RFFLPCR_FLB_or_PCB_SHIFT))&FR_RFFLPCR_FLB_or_PCB_MASK)
/* EEIFER Bit Fields */
#define FR_EEIFER_DRCE_IE_MASK                   0x1u
#define FR_EEIFER_DRCE_IE_SHIFT                  0u
#define FR_EEIFER_DRCE_IE_WIDTH                  1u
#define FR_EEIFER_DRCE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRCE_IE_SHIFT))&FR_EEIFER_DRCE_IE_MASK)
#define FR_EEIFER_DRNE_IE_MASK                   0x2u
#define FR_EEIFER_DRNE_IE_SHIFT                  1u
#define FR_EEIFER_DRNE_IE_WIDTH                  1u
#define FR_EEIFER_DRNE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRNE_IE_SHIFT))&FR_EEIFER_DRNE_IE_MASK)
#define FR_EEIFER_LRCE_IE_MASK                   0x4u
#define FR_EEIFER_LRCE_IE_SHIFT                  2u
#define FR_EEIFER_LRCE_IE_WIDTH                  1u
#define FR_EEIFER_LRCE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRCE_IE_SHIFT))&FR_EEIFER_LRCE_IE_MASK)
#define FR_EEIFER_LRNE_IE_MASK                   0x8u
#define FR_EEIFER_LRNE_IE_SHIFT                  3u
#define FR_EEIFER_LRNE_IE_WIDTH                  1u
#define FR_EEIFER_LRNE_IE(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRNE_IE_SHIFT))&FR_EEIFER_LRNE_IE_MASK)
#define FR_EEIFER_DRCE_IF_MASK                   0x100u
#define FR_EEIFER_DRCE_IF_SHIFT                  8u
#define FR_EEIFER_DRCE_IF_WIDTH                  1u
#define FR_EEIFER_DRCE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRCE_IF_SHIFT))&FR_EEIFER_DRCE_IF_MASK)
#define FR_EEIFER_DRNE_IF_MASK                   0x200u
#define FR_EEIFER_DRNE_IF_SHIFT                  9u
#define FR_EEIFER_DRNE_IF_WIDTH                  1u
#define FR_EEIFER_DRNE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRNE_IF_SHIFT))&FR_EEIFER_DRNE_IF_MASK)
#define FR_EEIFER_LRCE_IF_MASK                   0x400u
#define FR_EEIFER_LRCE_IF_SHIFT                  10u
#define FR_EEIFER_LRCE_IF_WIDTH                  1u
#define FR_EEIFER_LRCE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRCE_IF_SHIFT))&FR_EEIFER_LRCE_IF_MASK)
#define FR_EEIFER_LRNE_IF_MASK                   0x800u
#define FR_EEIFER_LRNE_IF_SHIFT                  11u
#define FR_EEIFER_LRNE_IF_WIDTH                  1u
#define FR_EEIFER_LRNE_IF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRNE_IF_SHIFT))&FR_EEIFER_LRNE_IF_MASK)
#define FR_EEIFER_DRCE_OF_MASK                   0x1000u
#define FR_EEIFER_DRCE_OF_SHIFT                  12u
#define FR_EEIFER_DRCE_OF_WIDTH                  1u
#define FR_EEIFER_DRCE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRCE_OF_SHIFT))&FR_EEIFER_DRCE_OF_MASK)
#define FR_EEIFER_DRNE_OF_MASK                   0x2000u
#define FR_EEIFER_DRNE_OF_SHIFT                  13u
#define FR_EEIFER_DRNE_OF_WIDTH                  1u
#define FR_EEIFER_DRNE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_DRNE_OF_SHIFT))&FR_EEIFER_DRNE_OF_MASK)
#define FR_EEIFER_LRCE_OF_MASK                   0x4000u
#define FR_EEIFER_LRCE_OF_SHIFT                  14u
#define FR_EEIFER_LRCE_OF_WIDTH                  1u
#define FR_EEIFER_LRCE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRCE_OF_SHIFT))&FR_EEIFER_LRCE_OF_MASK)
#define FR_EEIFER_LRNE_OF_MASK                   0x8000u
#define FR_EEIFER_LRNE_OF_SHIFT                  15u
#define FR_EEIFER_LRNE_OF_WIDTH                  1u
#define FR_EEIFER_LRNE_OF(x)                     (((uint16_t)(((uint16_t)(x))<<FR_EEIFER_LRNE_OF_SHIFT))&FR_EEIFER_LRNE_OF_MASK)
/* EERICR Bit Fields */
#define FR_EERICR_EIE_MASK                       0x1u
#define FR_EERICR_EIE_SHIFT                      0u
#define FR_EERICR_EIE_WIDTH                      1u
#define FR_EERICR_EIE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_EIE_SHIFT))&FR_EERICR_EIE_MASK)
#define FR_EERICR_EIM_MASK                       0x2u
#define FR_EERICR_EIM_SHIFT                      1u
#define FR_EERICR_EIM_WIDTH                      1u
#define FR_EERICR_EIM(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_EIM_SHIFT))&FR_EERICR_EIM_MASK)
#define FR_EERICR_ERM_MASK                       0x10u
#define FR_EERICR_ERM_SHIFT                      4u
#define FR_EERICR_ERM_WIDTH                      1u
#define FR_EERICR_ERM(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_ERM_SHIFT))&FR_EERICR_ERM_MASK)
#define FR_EERICR_ERS_MASK                       0x300u
#define FR_EERICR_ERS_SHIFT                      8u
#define FR_EERICR_ERS_WIDTH                      2u
#define FR_EERICR_ERS(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_ERS_SHIFT))&FR_EERICR_ERS_MASK)
#define FR_EERICR_BSY_MASK                       0x8000u
#define FR_EERICR_BSY_SHIFT                      15u
#define FR_EERICR_BSY_WIDTH                      1u
#define FR_EERICR_BSY(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERICR_BSY_SHIFT))&FR_EERICR_BSY_MASK)
/* EERAR Bit Fields */
#define FR_EERAR_ADDR_MASK                       0xFFFu
#define FR_EERAR_ADDR_SHIFT                      0u
#define FR_EERAR_ADDR_WIDTH                      12u
#define FR_EERAR_ADDR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERAR_ADDR_SHIFT))&FR_EERAR_ADDR_MASK)
#define FR_EERAR_BANK_MASK                       0x7000u
#define FR_EERAR_BANK_SHIFT                      12u
#define FR_EERAR_BANK_WIDTH                      3u
#define FR_EERAR_BANK(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERAR_BANK_SHIFT))&FR_EERAR_BANK_MASK)
#define FR_EERAR_MID_MASK                        0x8000u
#define FR_EERAR_MID_SHIFT                       15u
#define FR_EERAR_MID_WIDTH                       1u
#define FR_EERAR_MID(x)                          (((uint16_t)(((uint16_t)(x))<<FR_EERAR_MID_SHIFT))&FR_EERAR_MID_MASK)
/* EERDR Bit Fields */
#define FR_EERDR_DATA_MASK                       0xFFFFu
#define FR_EERDR_DATA_SHIFT                      0u
#define FR_EERDR_DATA_WIDTH                      16u
#define FR_EERDR_DATA(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERDR_DATA_SHIFT))&FR_EERDR_DATA_MASK)
/* EERCR Bit Fields */
#define FR_EERCR_CODE_MASK                       0x1Fu
#define FR_EERCR_CODE_SHIFT                      0u
#define FR_EERCR_CODE_WIDTH                      5u
#define FR_EERCR_CODE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EERCR_CODE_SHIFT))&FR_EERCR_CODE_MASK)
/* EEIAR Bit Fields */
#define FR_EEIAR_ADDR_MASK                       0xFFFu
#define FR_EEIAR_ADDR_SHIFT                      0u
#define FR_EEIAR_ADDR_WIDTH                      12u
#define FR_EEIAR_ADDR(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEIAR_ADDR_SHIFT))&FR_EEIAR_ADDR_MASK)
#define FR_EEIAR_BANK_MASK                       0x7000u
#define FR_EEIAR_BANK_SHIFT                      12u
#define FR_EEIAR_BANK_WIDTH                      3u
#define FR_EEIAR_BANK(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEIAR_BANK_SHIFT))&FR_EEIAR_BANK_MASK)
#define FR_EEIAR_MID_MASK                        0x8000u
#define FR_EEIAR_MID_SHIFT                       15u
#define FR_EEIAR_MID_WIDTH                       1u
#define FR_EEIAR_MID(x)                          (((uint16_t)(((uint16_t)(x))<<FR_EEIAR_MID_SHIFT))&FR_EEIAR_MID_MASK)
/* EEIDR Bit Fields */
#define FR_EEIDR_DATA_MASK                       0xFFFFu
#define FR_EEIDR_DATA_SHIFT                      0u
#define FR_EEIDR_DATA_WIDTH                      16u
#define FR_EEIDR_DATA(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEIDR_DATA_SHIFT))&FR_EEIDR_DATA_MASK)
/* EEICR Bit Fields */
#define FR_EEICR_CODE_MASK                       0x1Fu
#define FR_EEICR_CODE_SHIFT                      0u
#define FR_EEICR_CODE_WIDTH                      5u
#define FR_EEICR_CODE(x)                         (((uint16_t)(((uint16_t)(x))<<FR_EEICR_CODE_SHIFT))&FR_EEICR_CODE_MASK)
/* CCSR Bit Fields */
#define FR_CCSR_MBIF_MASK                        0x1u
#define FR_CCSR_MBIF_SHIFT                       0u
#define FR_CCSR_MBIF_WIDTH                       1u
#define FR_CCSR_MBIF(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_MBIF_SHIFT))&FR_CCSR_MBIF_MASK)
#define FR_CCSR_LCKS_MASK                        0x2u
#define FR_CCSR_LCKS_SHIFT                       1u
#define FR_CCSR_LCKS_WIDTH                       1u
#define FR_CCSR_LCKS(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_LCKS_SHIFT))&FR_CCSR_LCKS_MASK)
#define FR_CCSR_EDS_MASK                         0x4u
#define FR_CCSR_EDS_SHIFT                        2u
#define FR_CCSR_EDS_WIDTH                        1u
#define FR_CCSR_EDS(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_EDS_SHIFT))&FR_CCSR_EDS_MASK)
#define FR_CCSR_DVAL_MASK                        0x8u
#define FR_CCSR_DVAL_SHIFT                       3u
#define FR_CCSR_DVAL_WIDTH                       1u
#define FR_CCSR_DVAL(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_DVAL_SHIFT))&FR_CCSR_DVAL_MASK)
#define FR_CCSR_DUP_MASK                         0x10u
#define FR_CCSR_DUP_SHIFT                        4u
#define FR_CCSR_DUP_WIDTH                        1u
#define FR_CCSR_DUP(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_DUP_SHIFT))&FR_CCSR_DUP_MASK)
#define FR_CCSR_MBIE_MASK                        0x100u
#define FR_CCSR_MBIE_SHIFT                       8u
#define FR_CCSR_MBIE_WIDTH                       1u
#define FR_CCSR_MBIE(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_MBIE_SHIFT))&FR_CCSR_MBIE_MASK)
#define FR_CCSR_LCKT_MASK                        0x200u
#define FR_CCSR_LCKT_SHIFT                       9u
#define FR_CCSR_LCKT_WIDTH                       1u
#define FR_CCSR_LCKT(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCSR_LCKT_SHIFT))&FR_CCSR_LCKT_MASK)
#define FR_CCSR_EDT_MASK                         0x400u
#define FR_CCSR_EDT_SHIFT                        10u
#define FR_CCSR_EDT_WIDTH                        1u
#define FR_CCSR_EDT(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_EDT_SHIFT))&FR_CCSR_EDT_MASK)
#define FR_CCSR_CMT_MASK                         0x800u
#define FR_CCSR_CMT_SHIFT                        11u
#define FR_CCSR_CMT_WIDTH                        1u
#define FR_CCSR_CMT(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_CMT_SHIFT))&FR_CCSR_CMT_MASK)
#define FR_CCSR_MTD_MASK                         0x1000u
#define FR_CCSR_MTD_SHIFT                        12u
#define FR_CCSR_MTD_WIDTH                        1u
#define FR_CCSR_MTD(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCSR_MTD_SHIFT))&FR_CCSR_MTD_MASK)
/* CCFR Bit Fields */
#define FR_CCFR_CCFVAL_MASK                      0x3Fu
#define FR_CCFR_CCFVAL_SHIFT                     0u
#define FR_CCFR_CCFVAL_WIDTH                     6u
#define FR_CCFR_CCFVAL(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CCFVAL_SHIFT))&FR_CCFR_CCFVAL_MASK)
#define FR_CCFR_CCFMSK_MASK                      0xFC0u
#define FR_CCFR_CCFMSK_SHIFT                     6u
#define FR_CCFR_CCFMSK_WIDTH                     6u
#define FR_CCFR_CCFMSK(x)                        (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CCFMSK_SHIFT))&FR_CCFR_CCFMSK_MASK)
#define FR_CCFR_CCFE_MASK                        0x1000u
#define FR_CCFR_CCFE_SHIFT                       12u
#define FR_CCFR_CCFE_WIDTH                       1u
#define FR_CCFR_CCFE(x)                          (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CCFE_SHIFT))&FR_CCFR_CCFE_MASK)
#define FR_CCFR_CHB_MASK                         0x2000u
#define FR_CCFR_CHB_SHIFT                        13u
#define FR_CCFR_CHB_WIDTH                        1u
#define FR_CCFR_CHB(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CHB_SHIFT))&FR_CCFR_CHB_MASK)
#define FR_CCFR_CHA_MASK                         0x4000u
#define FR_CCFR_CHA_SHIFT                        14u
#define FR_CCFR_CHA_WIDTH                        1u
#define FR_CCFR_CHA(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCFR_CHA_SHIFT))&FR_CCFR_CHA_MASK)
#define FR_CCFR_MTM_MASK                         0x8000u
#define FR_CCFR_MTM_SHIFT                        15u
#define FR_CCFR_MTM_WIDTH                        1u
#define FR_CCFR_MTM(x)                           (((uint16_t)(((uint16_t)(x))<<FR_CCFR_MTM_SHIFT))&FR_CCFR_MTM_MASK)
/* FIDR Bit Fields */
#define FR_FIDR_FID_MASK                         0x7FFu
#define FR_FIDR_FID_SHIFT                        0u
#define FR_FIDR_FID_WIDTH                        11u
#define FR_FIDR_FID(x)                           (((uint16_t)(((uint16_t)(x))<<FR_FIDR_FID_SHIFT))&FR_FIDR_FID_MASK)
/* IDXR Bit Fields */
#define FR_IDXR_MBIDX_MASK                       0xFFu
#define FR_IDXR_MBIDX_SHIFT                      0u
#define FR_IDXR_MBIDX_WIDTH                      8u
#define FR_IDXR_MBIDX(x)                         (((uint16_t)(((uint16_t)(x))<<FR_IDXR_MBIDX_SHIFT))&FR_IDXR_MBIDX_MASK)
/* MBDOR Bit Fields */
#define FR_MBDOR_MBDO_MASK                       0xFFFFu
#define FR_MBDOR_MBDO_SHIFT                      0u
#define FR_MBDOR_MBDO_WIDTH                      16u
#define FR_MBDOR_MBDO(x)                         (((uint16_t)(((uint16_t)(x))<<FR_MBDOR_MBDO_SHIFT))&FR_MBDOR_MBDO_MASK)
/* LEETR Bit Fields */
#define FR_LEETR_LEETD_MASK                      0xFFFFu
#define FR_LEETR_LEETD_SHIFT                     0u
#define FR_LEETR_LEETD_WIDTH                     16u
#define FR_LEETR_LEETD(x)                        (((uint16_t)(((uint16_t)(x))<<FR_LEETR_LEETD_SHIFT))&FR_LEETR_LEETD_MASK)

/*!
 * @}
 */ /* end of group FR_Register_Masks */


/*!
 * @}
 */ /* end of group FR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- GPR Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GPR_Peripheral_Access_Layer GPR Peripheral Access Layer
 * @{
 */


/** GPR - Size of Registers Arrays */

/** GPR - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< GPR Control Register, offset: 0x0 */
  __IO uint32_t STAT;                              /**< GPR Status Register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  __IO uint32_t CTL1;                              /**< GPR Control Register1, offset: 0x10 */
} GPR_Type, *GPR_MemMapPtr;

 /** Number of instances of the GPR module. */
#define GPR_INSTANCE_COUNT                       (1u)


/* GPR - Peripheral instance base addresses */
/** Peripheral GPR base address */
#define GPR_BASE                                 (0xFFF94000u)
/** Peripheral GPR base pointer */
#define GPR                                      ((GPR_Type *)GPR_BASE)
/** Array initializer of GPR peripheral base addresses */
#define GPR_BASE_ADDRS                           { GPR_BASE }
/** Array initializer of GPR peripheral base pointers */
#define GPR_BASE_PTRS                            { GPR }

/* ----------------------------------------------------------------------------
   -- GPR Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup GPR_Register_Masks GPR Register Masks
 * @{
 */

/* CTL Bit Fields */
#define GPR_CTL_ENET_RX_BS_MASK                  0x3u
#define GPR_CTL_ENET_RX_BS_SHIFT                 0u
#define GPR_CTL_ENET_RX_BS_WIDTH                 2u
#define GPR_CTL_ENET_RX_BS(x)                    (((uint32_t)(((uint32_t)(x))<<GPR_CTL_ENET_RX_BS_SHIFT))&GPR_CTL_ENET_RX_BS_MASK)
#define GPR_CTL_ENET_TX_BS_MASK                  0xCu
#define GPR_CTL_ENET_TX_BS_SHIFT                 2u
#define GPR_CTL_ENET_TX_BS_WIDTH                 2u
#define GPR_CTL_ENET_TX_BS(x)                    (((uint32_t)(((uint32_t)(x))<<GPR_CTL_ENET_TX_BS_SHIFT))&GPR_CTL_ENET_TX_BS_MASK)
#define GPR_CTL_FR_BS_MASK                       0x30u
#define GPR_CTL_FR_BS_SHIFT                      4u
#define GPR_CTL_FR_BS_WIDTH                      2u
#define GPR_CTL_FR_BS(x)                         (((uint32_t)(((uint32_t)(x))<<GPR_CTL_FR_BS_SHIFT))&GPR_CTL_FR_BS_MASK)
#define GPR_CTL_MLB_BS_MASK                      0xC0u
#define GPR_CTL_MLB_BS_SHIFT                     6u
#define GPR_CTL_MLB_BS_WIDTH                     2u
#define GPR_CTL_MLB_BS(x)                        (((uint32_t)(((uint32_t)(x))<<GPR_CTL_MLB_BS_SHIFT))&GPR_CTL_MLB_BS_MASK)
#define GPR_CTL_USDHC_BS_MASK                    0x300u
#define GPR_CTL_USDHC_BS_SHIFT                   8u
#define GPR_CTL_USDHC_BS_WIDTH                   2u
#define GPR_CTL_USDHC_BS(x)                      (((uint32_t)(((uint32_t)(x))<<GPR_CTL_USDHC_BS_SHIFT))&GPR_CTL_USDHC_BS_MASK)
#define GPR_CTL_CMP_SAMP_SEL_MASK                0x400u
#define GPR_CTL_CMP_SAMP_SEL_SHIFT               10u
#define GPR_CTL_CMP_SAMP_SEL_WIDTH               1u
#define GPR_CTL_CMP_SAMP_SEL(x)                  (((uint32_t)(((uint32_t)(x))<<GPR_CTL_CMP_SAMP_SEL_SHIFT))&GPR_CTL_CMP_SAMP_SEL_MASK)
#define GPR_CTL_CMP_ACT_SAM_MASK                 0x800u
#define GPR_CTL_CMP_ACT_SAM_SHIFT                11u
#define GPR_CTL_CMP_ACT_SAM_WIDTH                1u
#define GPR_CTL_CMP_ACT_SAM(x)                   (((uint32_t)(((uint32_t)(x))<<GPR_CTL_CMP_ACT_SAM_SHIFT))&GPR_CTL_CMP_ACT_SAM_MASK)
#define GPR_CTL_RTC_SXOSC_FREE_RUNNING_MASK      0x1000u
#define GPR_CTL_RTC_SXOSC_FREE_RUNNING_SHIFT     12u
#define GPR_CTL_RTC_SXOSC_FREE_RUNNING_WIDTH     1u
#define GPR_CTL_RTC_SXOSC_FREE_RUNNING(x)        (((uint32_t)(((uint32_t)(x))<<GPR_CTL_RTC_SXOSC_FREE_RUNNING_SHIFT))&GPR_CTL_RTC_SXOSC_FREE_RUNNING_MASK)
#define GPR_CTL_LPU_STOP_ACK_BYPASS_MASK         0x8000u
#define GPR_CTL_LPU_STOP_ACK_BYPASS_SHIFT        15u
#define GPR_CTL_LPU_STOP_ACK_BYPASS_WIDTH        1u
#define GPR_CTL_LPU_STOP_ACK_BYPASS(x)           (((uint32_t)(((uint32_t)(x))<<GPR_CTL_LPU_STOP_ACK_BYPASS_SHIFT))&GPR_CTL_LPU_STOP_ACK_BYPASS_MASK)
#define GPR_CTL_CLKOUT1_STDBY_MASK               0x10000u
#define GPR_CTL_CLKOUT1_STDBY_SHIFT              16u
#define GPR_CTL_CLKOUT1_STDBY_WIDTH              1u
#define GPR_CTL_CLKOUT1_STDBY(x)                 (((uint32_t)(((uint32_t)(x))<<GPR_CTL_CLKOUT1_STDBY_SHIFT))&GPR_CTL_CLKOUT1_STDBY_MASK)
#define GPR_CTL_CMP0_STDBY_MASK                  0x20000u
#define GPR_CTL_CMP0_STDBY_SHIFT                 17u
#define GPR_CTL_CMP0_STDBY_WIDTH                 1u
#define GPR_CTL_CMP0_STDBY(x)                    (((uint32_t)(((uint32_t)(x))<<GPR_CTL_CMP0_STDBY_SHIFT))&GPR_CTL_CMP0_STDBY_MASK)
#define GPR_CTL_CMP1_STDBY_MASK                  0x40000u
#define GPR_CTL_CMP1_STDBY_SHIFT                 18u
#define GPR_CTL_CMP1_STDBY_WIDTH                 1u
#define GPR_CTL_CMP1_STDBY(x)                    (((uint32_t)(((uint32_t)(x))<<GPR_CTL_CMP1_STDBY_SHIFT))&GPR_CTL_CMP1_STDBY_MASK)
#define GPR_CTL_CMP2_STDBY_MASK                  0x80000u
#define GPR_CTL_CMP2_STDBY_SHIFT                 19u
#define GPR_CTL_CMP2_STDBY_WIDTH                 1u
#define GPR_CTL_CMP2_STDBY(x)                    (((uint32_t)(((uint32_t)(x))<<GPR_CTL_CMP2_STDBY_SHIFT))&GPR_CTL_CMP2_STDBY_MASK)
#define GPR_CTL_DEST_ESC_CTRL0_MASK              0x2000000u
#define GPR_CTL_DEST_ESC_CTRL0_SHIFT             25u
#define GPR_CTL_DEST_ESC_CTRL0_WIDTH             1u
#define GPR_CTL_DEST_ESC_CTRL0(x)                (((uint32_t)(((uint32_t)(x))<<GPR_CTL_DEST_ESC_CTRL0_SHIFT))&GPR_CTL_DEST_ESC_CTRL0_MASK)
#define GPR_CTL_DEST_ESC_CTRL1_MASK              0x4000000u
#define GPR_CTL_DEST_ESC_CTRL1_SHIFT             26u
#define GPR_CTL_DEST_ESC_CTRL1_WIDTH             1u
#define GPR_CTL_DEST_ESC_CTRL1(x)                (((uint32_t)(((uint32_t)(x))<<GPR_CTL_DEST_ESC_CTRL1_SHIFT))&GPR_CTL_DEST_ESC_CTRL1_MASK)
#define GPR_CTL_DEST_ESC_CTRL2_MASK              0x8000000u
#define GPR_CTL_DEST_ESC_CTRL2_SHIFT             27u
#define GPR_CTL_DEST_ESC_CTRL2_WIDTH             1u
#define GPR_CTL_DEST_ESC_CTRL2(x)                (((uint32_t)(((uint32_t)(x))<<GPR_CTL_DEST_ESC_CTRL2_SHIFT))&GPR_CTL_DEST_ESC_CTRL2_MASK)
#define GPR_CTL_EXTREGC_MASK                     0x10000000u
#define GPR_CTL_EXTREGC_SHIFT                    28u
#define GPR_CTL_EXTREGC_WIDTH                    1u
#define GPR_CTL_EXTREGC(x)                       (((uint32_t)(((uint32_t)(x))<<GPR_CTL_EXTREGC_SHIFT))&GPR_CTL_EXTREGC_MASK)
#define GPR_CTL_GPR_HSM_RAM_FAST_INIT_BYPASS_MASK 0x80000000u
#define GPR_CTL_GPR_HSM_RAM_FAST_INIT_BYPASS_SHIFT 31u
#define GPR_CTL_GPR_HSM_RAM_FAST_INIT_BYPASS_WIDTH 1u
#define GPR_CTL_GPR_HSM_RAM_FAST_INIT_BYPASS(x)  (((uint32_t)(((uint32_t)(x))<<GPR_CTL_GPR_HSM_RAM_FAST_INIT_BYPASS_SHIFT))&GPR_CTL_GPR_HSM_RAM_FAST_INIT_BYPASS_MASK)
/* STAT Bit Fields */
#define GPR_STAT_FLASH_LP_ACK_MASK               0x400u
#define GPR_STAT_FLASH_LP_ACK_SHIFT              10u
#define GPR_STAT_FLASH_LP_ACK_WIDTH              1u
#define GPR_STAT_FLASH_LP_ACK(x)                 (((uint32_t)(((uint32_t)(x))<<GPR_STAT_FLASH_LP_ACK_SHIFT))&GPR_STAT_FLASH_LP_ACK_MASK)
/* CTL1 Bit Fields */
#define GPR_CTL1_IVPR_MASK                       0xFFFFFFu
#define GPR_CTL1_IVPR_SHIFT                      0u
#define GPR_CTL1_IVPR_WIDTH                      24u
#define GPR_CTL1_IVPR(x)                         (((uint32_t)(((uint32_t)(x))<<GPR_CTL1_IVPR_SHIFT))&GPR_CTL1_IVPR_MASK)

/*!
 * @}
 */ /* end of group GPR_Register_Masks */


/*!
 * @}
 */ /* end of group GPR_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- I2C Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup I2C_Peripheral_Access_Layer I2C Peripheral Access Layer
 * @{
 */


/** I2C - Size of Registers Arrays */

/** I2C - Register Layout Typedef */
typedef struct {
  __IO uint8_t IBAD;                               /**< I2C Bus Address Register, offset: 0x0 */
  __IO uint8_t IBFD;                               /**< I2C Bus Frequency Divider Register, offset: 0x1 */
  __IO uint8_t IBCR;                               /**< I2C Bus Control Register, offset: 0x2 */
  __IO uint8_t IBSR;                               /**< I2C Bus Status Register, offset: 0x3 */
  __IO uint8_t IBDR;                               /**< I2C Bus Data I/O Register, offset: 0x4 */
  __IO uint8_t IBIC;                               /**< I2C Bus Interrupt Config Register, offset: 0x5 */
  __IO uint8_t IBDBG;                              /**< I2C Bus Debug Register, offset: 0x6 */
} I2C_Type, *I2C_MemMapPtr;

 /** Number of instances of the I2C module. */
#define I2C_INSTANCE_COUNT                       (4u)


/* I2C - Peripheral instance base addresses */
/** Peripheral I2C_0 base address */
#define I2C_0_BASE                               (0xFFE68000u)
/** Peripheral I2C_0 base pointer */
#define I2C_0                                    ((I2C_Type *)I2C_0_BASE)
/** Peripheral I2C_1 base address */
#define I2C_1_BASE                               (0xFBE68000u)
/** Peripheral I2C_1 base pointer */
#define I2C_1                                    ((I2C_Type *)I2C_1_BASE)
/** Peripheral I2C_2 base address */
#define I2C_2_BASE                               (0xFFE6C000u)
/** Peripheral I2C_2 base pointer */
#define I2C_2                                    ((I2C_Type *)I2C_2_BASE)
/** Peripheral I2C_3 base address */
#define I2C_3_BASE                               (0xFBE6C000u)
/** Peripheral I2C_3 base pointer */
#define I2C_3                                    ((I2C_Type *)I2C_3_BASE)
/** Array initializer of I2C peripheral base addresses */
#define I2C_BASE_ADDRS                           { I2C_0_BASE, I2C_1_BASE, I2C_2_BASE, I2C_3_BASE }
/** Array initializer of I2C peripheral base pointers */
#define I2C_BASE_PTRS                            { I2C_0, I2C_1, I2C_2, I2C_3 }

/* ----------------------------------------------------------------------------
   -- I2C Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup I2C_Register_Masks I2C Register Masks
 * @{
 */

/* IBAD Bit Fields */
#define I2C_IBAD_ADR_MASK                        0xFEu
#define I2C_IBAD_ADR_SHIFT                       1u
#define I2C_IBAD_ADR_WIDTH                       7u
#define I2C_IBAD_ADR(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBAD_ADR_SHIFT))&I2C_IBAD_ADR_MASK)
/* IBFD Bit Fields */
#define I2C_IBFD_IBC_MASK                        0xFFu
#define I2C_IBFD_IBC_SHIFT                       0u
#define I2C_IBFD_IBC_WIDTH                       8u
#define I2C_IBFD_IBC(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBFD_IBC_SHIFT))&I2C_IBFD_IBC_MASK)
/* IBCR Bit Fields */
#define I2C_IBCR_DMAEN_MASK                      0x2u
#define I2C_IBCR_DMAEN_SHIFT                     1u
#define I2C_IBCR_DMAEN_WIDTH                     1u
#define I2C_IBCR_DMAEN(x)                        (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_DMAEN_SHIFT))&I2C_IBCR_DMAEN_MASK)
#define I2C_IBCR_RSTA_MASK                       0x4u
#define I2C_IBCR_RSTA_SHIFT                      2u
#define I2C_IBCR_RSTA_WIDTH                      1u
#define I2C_IBCR_RSTA(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_RSTA_SHIFT))&I2C_IBCR_RSTA_MASK)
#define I2C_IBCR_NOACK_MASK                      0x8u
#define I2C_IBCR_NOACK_SHIFT                     3u
#define I2C_IBCR_NOACK_WIDTH                     1u
#define I2C_IBCR_NOACK(x)                        (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_NOACK_SHIFT))&I2C_IBCR_NOACK_MASK)
#define I2C_IBCR_TXRX_MASK                       0x10u
#define I2C_IBCR_TXRX_SHIFT                      4u
#define I2C_IBCR_TXRX_WIDTH                      1u
#define I2C_IBCR_TXRX(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_TXRX_SHIFT))&I2C_IBCR_TXRX_MASK)
#define I2C_IBCR_MSSL_MASK                       0x20u
#define I2C_IBCR_MSSL_SHIFT                      5u
#define I2C_IBCR_MSSL_WIDTH                      1u
#define I2C_IBCR_MSSL(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_MSSL_SHIFT))&I2C_IBCR_MSSL_MASK)
#define I2C_IBCR_IBIE_MASK                       0x40u
#define I2C_IBCR_IBIE_SHIFT                      6u
#define I2C_IBCR_IBIE_WIDTH                      1u
#define I2C_IBCR_IBIE(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_IBIE_SHIFT))&I2C_IBCR_IBIE_MASK)
#define I2C_IBCR_MDIS_MASK                       0x80u
#define I2C_IBCR_MDIS_SHIFT                      7u
#define I2C_IBCR_MDIS_WIDTH                      1u
#define I2C_IBCR_MDIS(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBCR_MDIS_SHIFT))&I2C_IBCR_MDIS_MASK)
/* IBSR Bit Fields */
#define I2C_IBSR_RXAK_MASK                       0x1u
#define I2C_IBSR_RXAK_SHIFT                      0u
#define I2C_IBSR_RXAK_WIDTH                      1u
#define I2C_IBSR_RXAK(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_RXAK_SHIFT))&I2C_IBSR_RXAK_MASK)
#define I2C_IBSR_IBIF_MASK                       0x2u
#define I2C_IBSR_IBIF_SHIFT                      1u
#define I2C_IBSR_IBIF_WIDTH                      1u
#define I2C_IBSR_IBIF(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_IBIF_SHIFT))&I2C_IBSR_IBIF_MASK)
#define I2C_IBSR_SRW_MASK                        0x4u
#define I2C_IBSR_SRW_SHIFT                       2u
#define I2C_IBSR_SRW_WIDTH                       1u
#define I2C_IBSR_SRW(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_SRW_SHIFT))&I2C_IBSR_SRW_MASK)
#define I2C_IBSR_IBAL_MASK                       0x10u
#define I2C_IBSR_IBAL_SHIFT                      4u
#define I2C_IBSR_IBAL_WIDTH                      1u
#define I2C_IBSR_IBAL(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_IBAL_SHIFT))&I2C_IBSR_IBAL_MASK)
#define I2C_IBSR_IBB_MASK                        0x20u
#define I2C_IBSR_IBB_SHIFT                       5u
#define I2C_IBSR_IBB_WIDTH                       1u
#define I2C_IBSR_IBB(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_IBB_SHIFT))&I2C_IBSR_IBB_MASK)
#define I2C_IBSR_IAAS_MASK                       0x40u
#define I2C_IBSR_IAAS_SHIFT                      6u
#define I2C_IBSR_IAAS_WIDTH                      1u
#define I2C_IBSR_IAAS(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_IAAS_SHIFT))&I2C_IBSR_IAAS_MASK)
#define I2C_IBSR_TCF_MASK                        0x80u
#define I2C_IBSR_TCF_SHIFT                       7u
#define I2C_IBSR_TCF_WIDTH                       1u
#define I2C_IBSR_TCF(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_IBSR_TCF_SHIFT))&I2C_IBSR_TCF_MASK)
/* IBDR Bit Fields */
#define I2C_IBDR_DATA_MASK                       0xFFu
#define I2C_IBDR_DATA_SHIFT                      0u
#define I2C_IBDR_DATA_WIDTH                      8u
#define I2C_IBDR_DATA(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBDR_DATA_SHIFT))&I2C_IBDR_DATA_MASK)
/* IBIC Bit Fields */
#define I2C_IBIC_BYTERXIE_MASK                   0x40u
#define I2C_IBIC_BYTERXIE_SHIFT                  6u
#define I2C_IBIC_BYTERXIE_WIDTH                  1u
#define I2C_IBIC_BYTERXIE(x)                     (((uint8_t)(((uint8_t)(x))<<I2C_IBIC_BYTERXIE_SHIFT))&I2C_IBIC_BYTERXIE_MASK)
#define I2C_IBIC_BIIE_MASK                       0x80u
#define I2C_IBIC_BIIE_SHIFT                      7u
#define I2C_IBIC_BIIE_WIDTH                      1u
#define I2C_IBIC_BIIE(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_IBIC_BIIE_SHIFT))&I2C_IBIC_BIIE_MASK)
/* IBDBG Bit Fields */
#define I2C_IBDBG_IPG_DEBUG_EN_MASK              0x1u
#define I2C_IBDBG_IPG_DEBUG_EN_SHIFT             0u
#define I2C_IBDBG_IPG_DEBUG_EN_WIDTH             1u
#define I2C_IBDBG_IPG_DEBUG_EN(x)                (((uint8_t)(((uint8_t)(x))<<I2C_IBDBG_IPG_DEBUG_EN_SHIFT))&I2C_IBDBG_IPG_DEBUG_EN_MASK)
#define I2C_IBDBG_IPG_DEBUG_HALTED_MASK          0x2u
#define I2C_IBDBG_IPG_DEBUG_HALTED_SHIFT         1u
#define I2C_IBDBG_IPG_DEBUG_HALTED_WIDTH         1u
#define I2C_IBDBG_IPG_DEBUG_HALTED(x)            (((uint8_t)(((uint8_t)(x))<<I2C_IBDBG_IPG_DEBUG_HALTED_SHIFT))&I2C_IBDBG_IPG_DEBUG_HALTED_MASK)
#define I2C_IBDBG_BYTE_RX_MASK                   0x4u
#define I2C_IBDBG_BYTE_RX_SHIFT                  2u
#define I2C_IBDBG_BYTE_RX_WIDTH                  1u
#define I2C_IBDBG_BYTE_RX(x)                     (((uint8_t)(((uint8_t)(x))<<I2C_IBDBG_BYTE_RX_SHIFT))&I2C_IBDBG_BYTE_RX_MASK)

/*!
 * @}
 */ /* end of group I2C_Register_Masks */


/*!
 * @}
 */ /* end of group I2C_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- I2S Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup I2S_Peripheral_Access_Layer I2S Peripheral Access Layer
 * @{
 */


/** I2S - Size of Registers Arrays */
#define I2S_TDR_COUNT                            4u
#define I2S_TFR_COUNT                            4u
#define I2S_RDR_COUNT                            4u
#define I2S_RFR_COUNT                            4u

/** I2S - Register Layout Typedef */
typedef struct {
  __IO uint32_t TCSR;                              /**< SAI Transmit Control Register, offset: 0x0 */
  __IO uint32_t TCR1;                              /**< SAI Transmit Configuration 1 Register, offset: 0x4 */
  __IO uint32_t TCR2;                              /**< SAI Transmit Configuration 2 Register, offset: 0x8 */
  __IO uint32_t TCR3;                              /**< SAI Transmit Configuration 3 Register, offset: 0xC */
  __IO uint32_t TCR4;                              /**< SAI Transmit Configuration 4 Register, offset: 0x10 */
  __IO uint32_t TCR5;                              /**< SAI Transmit Configuration 5 Register, offset: 0x14 */
       uint8_t RESERVED_0[8];
  __O  uint32_t TDR[I2S_TDR_COUNT];                /**< SAI Transmit Data Register, array offset: 0x20, array step: 0x4 */
       uint8_t RESERVED_1[16];
  __I  uint32_t TFR[I2S_TFR_COUNT];                /**< SAI Transmit FIFO Register, array offset: 0x40, array step: 0x4 */
       uint8_t RESERVED_2[16];
  __IO uint32_t TMR;                               /**< SAI Transmit Mask Register, offset: 0x60 */
       uint8_t RESERVED_3[28];
  __IO uint32_t RCSR;                              /**< SAI Receive Control Register, offset: 0x80 */
  __IO uint32_t RCR1;                              /**< SAI Receive Configuration 1 Register, offset: 0x84 */
  __IO uint32_t RCR2;                              /**< SAI Receive Configuration 2 Register, offset: 0x88 */
  __IO uint32_t RCR3;                              /**< SAI Receive Configuration 3 Register, offset: 0x8C */
  __IO uint32_t RCR4;                              /**< SAI Receive Configuration 4 Register, offset: 0x90 */
  __IO uint32_t RCR5;                              /**< SAI Receive Configuration 5 Register, offset: 0x94 */
       uint8_t RESERVED_4[8];
  __I  uint32_t RDR[I2S_RDR_COUNT];                /**< SAI Receive Data Register, array offset: 0xA0, array step: 0x4 */
       uint8_t RESERVED_5[16];
  __I  uint32_t RFR[I2S_RFR_COUNT];                /**< SAI Receive FIFO Register, array offset: 0xC0, array step: 0x4 */
       uint8_t RESERVED_6[16];
  __IO uint32_t RMR;                               /**< SAI Receive Mask Register, offset: 0xE0 */
       uint8_t RESERVED_7[28];
  __IO uint32_t MCR;                               /**< SAI MCLK Control Register, offset: 0x100 */
  __IO uint32_t MDR;                               /**< SAI MCLK Divide Register, offset: 0x104 */
} I2S_Type, *I2S_MemMapPtr;

 /** Number of instances of the I2S module. */
#define I2S_INSTANCE_COUNT                       (3u)


/* I2S - Peripheral instance base addresses */
/** Peripheral I2S_0 base address */
#define I2S_0_BASE                               (0xFFCB4000u)
/** Peripheral I2S_0 base pointer */
#define I2S_0                                    ((I2S_Type *)I2S_0_BASE)
/** Peripheral I2S_1 base address */
#define I2S_1_BASE                               (0xFBCB4000u)
/** Peripheral I2S_1 base pointer */
#define I2S_1                                    ((I2S_Type *)I2S_1_BASE)
/** Peripheral I2S_2 base address */
#define I2S_2_BASE                               (0xFFCB8000u)
/** Peripheral I2S_2 base pointer */
#define I2S_2                                    ((I2S_Type *)I2S_2_BASE)
/** Array initializer of I2S peripheral base addresses */
#define I2S_BASE_ADDRS                           { I2S_0_BASE, I2S_1_BASE, I2S_2_BASE }
/** Array initializer of I2S peripheral base pointers */
#define I2S_BASE_PTRS                            { I2S_0, I2S_1, I2S_2 }

/* ----------------------------------------------------------------------------
   -- I2S Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup I2S_Register_Masks I2S Register Masks
 * @{
 */

/* TCSR Bit Fields */
#define I2S_TCSR_FRDE_MASK                       0x1u
#define I2S_TCSR_FRDE_SHIFT                      0u
#define I2S_TCSR_FRDE_WIDTH                      1u
#define I2S_TCSR_FRDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FRDE_SHIFT))&I2S_TCSR_FRDE_MASK)
#define I2S_TCSR_FWDE_MASK                       0x2u
#define I2S_TCSR_FWDE_SHIFT                      1u
#define I2S_TCSR_FWDE_WIDTH                      1u
#define I2S_TCSR_FWDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FWDE_SHIFT))&I2S_TCSR_FWDE_MASK)
#define I2S_TCSR_FRIE_MASK                       0x100u
#define I2S_TCSR_FRIE_SHIFT                      8u
#define I2S_TCSR_FRIE_WIDTH                      1u
#define I2S_TCSR_FRIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FRIE_SHIFT))&I2S_TCSR_FRIE_MASK)
#define I2S_TCSR_FWIE_MASK                       0x200u
#define I2S_TCSR_FWIE_SHIFT                      9u
#define I2S_TCSR_FWIE_WIDTH                      1u
#define I2S_TCSR_FWIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FWIE_SHIFT))&I2S_TCSR_FWIE_MASK)
#define I2S_TCSR_FEIE_MASK                       0x400u
#define I2S_TCSR_FEIE_SHIFT                      10u
#define I2S_TCSR_FEIE_WIDTH                      1u
#define I2S_TCSR_FEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FEIE_SHIFT))&I2S_TCSR_FEIE_MASK)
#define I2S_TCSR_SEIE_MASK                       0x800u
#define I2S_TCSR_SEIE_SHIFT                      11u
#define I2S_TCSR_SEIE_WIDTH                      1u
#define I2S_TCSR_SEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_SEIE_SHIFT))&I2S_TCSR_SEIE_MASK)
#define I2S_TCSR_WSIE_MASK                       0x1000u
#define I2S_TCSR_WSIE_SHIFT                      12u
#define I2S_TCSR_WSIE_WIDTH                      1u
#define I2S_TCSR_WSIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_WSIE_SHIFT))&I2S_TCSR_WSIE_MASK)
#define I2S_TCSR_FRF_MASK                        0x10000u
#define I2S_TCSR_FRF_SHIFT                       16u
#define I2S_TCSR_FRF_WIDTH                       1u
#define I2S_TCSR_FRF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FRF_SHIFT))&I2S_TCSR_FRF_MASK)
#define I2S_TCSR_FWF_MASK                        0x20000u
#define I2S_TCSR_FWF_SHIFT                       17u
#define I2S_TCSR_FWF_WIDTH                       1u
#define I2S_TCSR_FWF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FWF_SHIFT))&I2S_TCSR_FWF_MASK)
#define I2S_TCSR_FEF_MASK                        0x40000u
#define I2S_TCSR_FEF_SHIFT                       18u
#define I2S_TCSR_FEF_WIDTH                       1u
#define I2S_TCSR_FEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FEF_SHIFT))&I2S_TCSR_FEF_MASK)
#define I2S_TCSR_SEF_MASK                        0x80000u
#define I2S_TCSR_SEF_SHIFT                       19u
#define I2S_TCSR_SEF_WIDTH                       1u
#define I2S_TCSR_SEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_SEF_SHIFT))&I2S_TCSR_SEF_MASK)
#define I2S_TCSR_WSF_MASK                        0x100000u
#define I2S_TCSR_WSF_SHIFT                       20u
#define I2S_TCSR_WSF_WIDTH                       1u
#define I2S_TCSR_WSF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_WSF_SHIFT))&I2S_TCSR_WSF_MASK)
#define I2S_TCSR_SR_MASK                         0x1000000u
#define I2S_TCSR_SR_SHIFT                        24u
#define I2S_TCSR_SR_WIDTH                        1u
#define I2S_TCSR_SR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_SR_SHIFT))&I2S_TCSR_SR_MASK)
#define I2S_TCSR_FR_MASK                         0x2000000u
#define I2S_TCSR_FR_SHIFT                        25u
#define I2S_TCSR_FR_WIDTH                        1u
#define I2S_TCSR_FR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FR_SHIFT))&I2S_TCSR_FR_MASK)
#define I2S_TCSR_BCE_MASK                        0x10000000u
#define I2S_TCSR_BCE_SHIFT                       28u
#define I2S_TCSR_BCE_WIDTH                       1u
#define I2S_TCSR_BCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_BCE_SHIFT))&I2S_TCSR_BCE_MASK)
#define I2S_TCSR_DBGE_MASK                       0x20000000u
#define I2S_TCSR_DBGE_SHIFT                      29u
#define I2S_TCSR_DBGE_WIDTH                      1u
#define I2S_TCSR_DBGE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_DBGE_SHIFT))&I2S_TCSR_DBGE_MASK)
#define I2S_TCSR_TE_MASK                         0x80000000u
#define I2S_TCSR_TE_SHIFT                        31u
#define I2S_TCSR_TE_WIDTH                        1u
#define I2S_TCSR_TE(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_TE_SHIFT))&I2S_TCSR_TE_MASK)
/* TCR1 Bit Fields */
#define I2S_TCR1_TFW_MASK                        0x7u
#define I2S_TCR1_TFW_SHIFT                       0u
#define I2S_TCR1_TFW_WIDTH                       3u
#define I2S_TCR1_TFW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR1_TFW_SHIFT))&I2S_TCR1_TFW_MASK)
/* TCR2 Bit Fields */
#define I2S_TCR2_DIV_MASK                        0xFFu
#define I2S_TCR2_DIV_SHIFT                       0u
#define I2S_TCR2_DIV_WIDTH                       8u
#define I2S_TCR2_DIV(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_DIV_SHIFT))&I2S_TCR2_DIV_MASK)
#define I2S_TCR2_BCD_MASK                        0x1000000u
#define I2S_TCR2_BCD_SHIFT                       24u
#define I2S_TCR2_BCD_WIDTH                       1u
#define I2S_TCR2_BCD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCD_SHIFT))&I2S_TCR2_BCD_MASK)
#define I2S_TCR2_BCP_MASK                        0x2000000u
#define I2S_TCR2_BCP_SHIFT                       25u
#define I2S_TCR2_BCP_WIDTH                       1u
#define I2S_TCR2_BCP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCP_SHIFT))&I2S_TCR2_BCP_MASK)
#define I2S_TCR2_MSEL_MASK                       0xC000000u
#define I2S_TCR2_MSEL_SHIFT                      26u
#define I2S_TCR2_MSEL_WIDTH                      2u
#define I2S_TCR2_MSEL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_MSEL_SHIFT))&I2S_TCR2_MSEL_MASK)
#define I2S_TCR2_BCI_MASK                        0x10000000u
#define I2S_TCR2_BCI_SHIFT                       28u
#define I2S_TCR2_BCI_WIDTH                       1u
#define I2S_TCR2_BCI(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCI_SHIFT))&I2S_TCR2_BCI_MASK)
#define I2S_TCR2_BCS_MASK                        0x20000000u
#define I2S_TCR2_BCS_SHIFT                       29u
#define I2S_TCR2_BCS_WIDTH                       1u
#define I2S_TCR2_BCS(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCS_SHIFT))&I2S_TCR2_BCS_MASK)
#define I2S_TCR2_SYNC_MASK                       0xC0000000u
#define I2S_TCR2_SYNC_SHIFT                      30u
#define I2S_TCR2_SYNC_WIDTH                      2u
#define I2S_TCR2_SYNC(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_SYNC_SHIFT))&I2S_TCR2_SYNC_MASK)
/* TCR3 Bit Fields */
#define I2S_TCR3_WDFL_MASK                       0xFu
#define I2S_TCR3_WDFL_SHIFT                      0u
#define I2S_TCR3_WDFL_WIDTH                      4u
#define I2S_TCR3_WDFL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_WDFL_SHIFT))&I2S_TCR3_WDFL_MASK)
#define I2S_TCR3_TCE_MASK                        0xF0000u
#define I2S_TCR3_TCE_SHIFT                       16u
#define I2S_TCR3_TCE_WIDTH                       4u
#define I2S_TCR3_TCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_TCE_SHIFT))&I2S_TCR3_TCE_MASK)
#define I2S_TCR3_CFR_MASK                        0xF000000u
#define I2S_TCR3_CFR_SHIFT                       24u
#define I2S_TCR3_CFR_WIDTH                       4u
#define I2S_TCR3_CFR(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_CFR_SHIFT))&I2S_TCR3_CFR_MASK)
/* TCR4 Bit Fields */
#define I2S_TCR4_FSD_MASK                        0x1u
#define I2S_TCR4_FSD_SHIFT                       0u
#define I2S_TCR4_FSD_WIDTH                       1u
#define I2S_TCR4_FSD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FSD_SHIFT))&I2S_TCR4_FSD_MASK)
#define I2S_TCR4_FSP_MASK                        0x2u
#define I2S_TCR4_FSP_SHIFT                       1u
#define I2S_TCR4_FSP_WIDTH                       1u
#define I2S_TCR4_FSP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FSP_SHIFT))&I2S_TCR4_FSP_MASK)
#define I2S_TCR4_ONDEM_MASK                      0x4u
#define I2S_TCR4_ONDEM_SHIFT                     2u
#define I2S_TCR4_ONDEM_WIDTH                     1u
#define I2S_TCR4_ONDEM(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_ONDEM_SHIFT))&I2S_TCR4_ONDEM_MASK)
#define I2S_TCR4_FSE_MASK                        0x8u
#define I2S_TCR4_FSE_SHIFT                       3u
#define I2S_TCR4_FSE_WIDTH                       1u
#define I2S_TCR4_FSE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FSE_SHIFT))&I2S_TCR4_FSE_MASK)
#define I2S_TCR4_MF_MASK                         0x10u
#define I2S_TCR4_MF_SHIFT                        4u
#define I2S_TCR4_MF_WIDTH                        1u
#define I2S_TCR4_MF(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_MF_SHIFT))&I2S_TCR4_MF_MASK)
#define I2S_TCR4_SYWD_MASK                       0x1F00u
#define I2S_TCR4_SYWD_SHIFT                      8u
#define I2S_TCR4_SYWD_WIDTH                      5u
#define I2S_TCR4_SYWD(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_SYWD_SHIFT))&I2S_TCR4_SYWD_MASK)
#define I2S_TCR4_FRSZ_MASK                       0xF0000u
#define I2S_TCR4_FRSZ_SHIFT                      16u
#define I2S_TCR4_FRSZ_WIDTH                      4u
#define I2S_TCR4_FRSZ(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FRSZ_SHIFT))&I2S_TCR4_FRSZ_MASK)
#define I2S_TCR4_FPACK_MASK                      0x3000000u
#define I2S_TCR4_FPACK_SHIFT                     24u
#define I2S_TCR4_FPACK_WIDTH                     2u
#define I2S_TCR4_FPACK(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FPACK_SHIFT))&I2S_TCR4_FPACK_MASK)
#define I2S_TCR4_FCOMB_MASK                      0xC000000u
#define I2S_TCR4_FCOMB_SHIFT                     26u
#define I2S_TCR4_FCOMB_WIDTH                     2u
#define I2S_TCR4_FCOMB(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FCOMB_SHIFT))&I2S_TCR4_FCOMB_MASK)
#define I2S_TCR4_FCONT_MASK                      0x10000000u
#define I2S_TCR4_FCONT_SHIFT                     28u
#define I2S_TCR4_FCONT_WIDTH                     1u
#define I2S_TCR4_FCONT(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FCONT_SHIFT))&I2S_TCR4_FCONT_MASK)
/* TCR5 Bit Fields */
#define I2S_TCR5_FBT_MASK                        0x1F00u
#define I2S_TCR5_FBT_SHIFT                       8u
#define I2S_TCR5_FBT_WIDTH                       5u
#define I2S_TCR5_FBT(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_FBT_SHIFT))&I2S_TCR5_FBT_MASK)
#define I2S_TCR5_W0W_MASK                        0x1F0000u
#define I2S_TCR5_W0W_SHIFT                       16u
#define I2S_TCR5_W0W_WIDTH                       5u
#define I2S_TCR5_W0W(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_W0W_SHIFT))&I2S_TCR5_W0W_MASK)
#define I2S_TCR5_WNW_MASK                        0x1F000000u
#define I2S_TCR5_WNW_SHIFT                       24u
#define I2S_TCR5_WNW_WIDTH                       5u
#define I2S_TCR5_WNW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_WNW_SHIFT))&I2S_TCR5_WNW_MASK)
/* TDR Bit Fields */
#define I2S_TDR_TDR_MASK                         0xFFFFFFFFu
#define I2S_TDR_TDR_SHIFT                        0u
#define I2S_TDR_TDR_WIDTH                        32u
#define I2S_TDR_TDR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TDR_TDR_SHIFT))&I2S_TDR_TDR_MASK)
/* TFR Bit Fields */
#define I2S_TFR_RFP_MASK                         0xFu
#define I2S_TFR_RFP_SHIFT                        0u
#define I2S_TFR_RFP_WIDTH                        4u
#define I2S_TFR_RFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_RFP_SHIFT))&I2S_TFR_RFP_MASK)
#define I2S_TFR_WFP_MASK                         0xF0000u
#define I2S_TFR_WFP_SHIFT                        16u
#define I2S_TFR_WFP_WIDTH                        4u
#define I2S_TFR_WFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_WFP_SHIFT))&I2S_TFR_WFP_MASK)
#define I2S_TFR_WCP_MASK                         0x80000000u
#define I2S_TFR_WCP_SHIFT                        31u
#define I2S_TFR_WCP_WIDTH                        1u
#define I2S_TFR_WCP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_WCP_SHIFT))&I2S_TFR_WCP_MASK)
/* TMR Bit Fields */
#define I2S_TMR_TWM_MASK                         0xFFFFu
#define I2S_TMR_TWM_SHIFT                        0u
#define I2S_TMR_TWM_WIDTH                        16u
#define I2S_TMR_TWM(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TMR_TWM_SHIFT))&I2S_TMR_TWM_MASK)
/* RCSR Bit Fields */
#define I2S_RCSR_FRDE_MASK                       0x1u
#define I2S_RCSR_FRDE_SHIFT                      0u
#define I2S_RCSR_FRDE_WIDTH                      1u
#define I2S_RCSR_FRDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FRDE_SHIFT))&I2S_RCSR_FRDE_MASK)
#define I2S_RCSR_FWDE_MASK                       0x2u
#define I2S_RCSR_FWDE_SHIFT                      1u
#define I2S_RCSR_FWDE_WIDTH                      1u
#define I2S_RCSR_FWDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FWDE_SHIFT))&I2S_RCSR_FWDE_MASK)
#define I2S_RCSR_FRIE_MASK                       0x100u
#define I2S_RCSR_FRIE_SHIFT                      8u
#define I2S_RCSR_FRIE_WIDTH                      1u
#define I2S_RCSR_FRIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FRIE_SHIFT))&I2S_RCSR_FRIE_MASK)
#define I2S_RCSR_FWIE_MASK                       0x200u
#define I2S_RCSR_FWIE_SHIFT                      9u
#define I2S_RCSR_FWIE_WIDTH                      1u
#define I2S_RCSR_FWIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FWIE_SHIFT))&I2S_RCSR_FWIE_MASK)
#define I2S_RCSR_FEIE_MASK                       0x400u
#define I2S_RCSR_FEIE_SHIFT                      10u
#define I2S_RCSR_FEIE_WIDTH                      1u
#define I2S_RCSR_FEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FEIE_SHIFT))&I2S_RCSR_FEIE_MASK)
#define I2S_RCSR_SEIE_MASK                       0x800u
#define I2S_RCSR_SEIE_SHIFT                      11u
#define I2S_RCSR_SEIE_WIDTH                      1u
#define I2S_RCSR_SEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_SEIE_SHIFT))&I2S_RCSR_SEIE_MASK)
#define I2S_RCSR_WSIE_MASK                       0x1000u
#define I2S_RCSR_WSIE_SHIFT                      12u
#define I2S_RCSR_WSIE_WIDTH                      1u
#define I2S_RCSR_WSIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_WSIE_SHIFT))&I2S_RCSR_WSIE_MASK)
#define I2S_RCSR_FRF_MASK                        0x10000u
#define I2S_RCSR_FRF_SHIFT                       16u
#define I2S_RCSR_FRF_WIDTH                       1u
#define I2S_RCSR_FRF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FRF_SHIFT))&I2S_RCSR_FRF_MASK)
#define I2S_RCSR_FWF_MASK                        0x20000u
#define I2S_RCSR_FWF_SHIFT                       17u
#define I2S_RCSR_FWF_WIDTH                       1u
#define I2S_RCSR_FWF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FWF_SHIFT))&I2S_RCSR_FWF_MASK)
#define I2S_RCSR_FEF_MASK                        0x40000u
#define I2S_RCSR_FEF_SHIFT                       18u
#define I2S_RCSR_FEF_WIDTH                       1u
#define I2S_RCSR_FEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FEF_SHIFT))&I2S_RCSR_FEF_MASK)
#define I2S_RCSR_SEF_MASK                        0x80000u
#define I2S_RCSR_SEF_SHIFT                       19u
#define I2S_RCSR_SEF_WIDTH                       1u
#define I2S_RCSR_SEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_SEF_SHIFT))&I2S_RCSR_SEF_MASK)
#define I2S_RCSR_WSF_MASK                        0x100000u
#define I2S_RCSR_WSF_SHIFT                       20u
#define I2S_RCSR_WSF_WIDTH                       1u
#define I2S_RCSR_WSF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_WSF_SHIFT))&I2S_RCSR_WSF_MASK)
#define I2S_RCSR_SR_MASK                         0x1000000u
#define I2S_RCSR_SR_SHIFT                        24u
#define I2S_RCSR_SR_WIDTH                        1u
#define I2S_RCSR_SR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_SR_SHIFT))&I2S_RCSR_SR_MASK)
#define I2S_RCSR_FR_MASK                         0x2000000u
#define I2S_RCSR_FR_SHIFT                        25u
#define I2S_RCSR_FR_WIDTH                        1u
#define I2S_RCSR_FR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FR_SHIFT))&I2S_RCSR_FR_MASK)
#define I2S_RCSR_BCE_MASK                        0x10000000u
#define I2S_RCSR_BCE_SHIFT                       28u
#define I2S_RCSR_BCE_WIDTH                       1u
#define I2S_RCSR_BCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_BCE_SHIFT))&I2S_RCSR_BCE_MASK)
#define I2S_RCSR_DBGE_MASK                       0x20000000u
#define I2S_RCSR_DBGE_SHIFT                      29u
#define I2S_RCSR_DBGE_WIDTH                      1u
#define I2S_RCSR_DBGE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_DBGE_SHIFT))&I2S_RCSR_DBGE_MASK)
#define I2S_RCSR_RE_MASK                         0x80000000u
#define I2S_RCSR_RE_SHIFT                        31u
#define I2S_RCSR_RE_WIDTH                        1u
#define I2S_RCSR_RE(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_RE_SHIFT))&I2S_RCSR_RE_MASK)
/* RCR1 Bit Fields */
#define I2S_RCR1_RFW_MASK                        0x7u
#define I2S_RCR1_RFW_SHIFT                       0u
#define I2S_RCR1_RFW_WIDTH                       3u
#define I2S_RCR1_RFW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR1_RFW_SHIFT))&I2S_RCR1_RFW_MASK)
/* RCR2 Bit Fields */
#define I2S_RCR2_DIV_MASK                        0xFFu
#define I2S_RCR2_DIV_SHIFT                       0u
#define I2S_RCR2_DIV_WIDTH                       8u
#define I2S_RCR2_DIV(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_DIV_SHIFT))&I2S_RCR2_DIV_MASK)
#define I2S_RCR2_BCD_MASK                        0x1000000u
#define I2S_RCR2_BCD_SHIFT                       24u
#define I2S_RCR2_BCD_WIDTH                       1u
#define I2S_RCR2_BCD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCD_SHIFT))&I2S_RCR2_BCD_MASK)
#define I2S_RCR2_BCP_MASK                        0x2000000u
#define I2S_RCR2_BCP_SHIFT                       25u
#define I2S_RCR2_BCP_WIDTH                       1u
#define I2S_RCR2_BCP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCP_SHIFT))&I2S_RCR2_BCP_MASK)
#define I2S_RCR2_MSEL_MASK                       0xC000000u
#define I2S_RCR2_MSEL_SHIFT                      26u
#define I2S_RCR2_MSEL_WIDTH                      2u
#define I2S_RCR2_MSEL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_MSEL_SHIFT))&I2S_RCR2_MSEL_MASK)
#define I2S_RCR2_BCI_MASK                        0x10000000u
#define I2S_RCR2_BCI_SHIFT                       28u
#define I2S_RCR2_BCI_WIDTH                       1u
#define I2S_RCR2_BCI(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCI_SHIFT))&I2S_RCR2_BCI_MASK)
#define I2S_RCR2_BCS_MASK                        0x20000000u
#define I2S_RCR2_BCS_SHIFT                       29u
#define I2S_RCR2_BCS_WIDTH                       1u
#define I2S_RCR2_BCS(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCS_SHIFT))&I2S_RCR2_BCS_MASK)
#define I2S_RCR2_SYNC_MASK                       0xC0000000u
#define I2S_RCR2_SYNC_SHIFT                      30u
#define I2S_RCR2_SYNC_WIDTH                      2u
#define I2S_RCR2_SYNC(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_SYNC_SHIFT))&I2S_RCR2_SYNC_MASK)
/* RCR3 Bit Fields */
#define I2S_RCR3_WDFL_MASK                       0xFu
#define I2S_RCR3_WDFL_SHIFT                      0u
#define I2S_RCR3_WDFL_WIDTH                      4u
#define I2S_RCR3_WDFL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_WDFL_SHIFT))&I2S_RCR3_WDFL_MASK)
#define I2S_RCR3_RCE_MASK                        0xF0000u
#define I2S_RCR3_RCE_SHIFT                       16u
#define I2S_RCR3_RCE_WIDTH                       4u
#define I2S_RCR3_RCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_RCE_SHIFT))&I2S_RCR3_RCE_MASK)
#define I2S_RCR3_CFR_MASK                        0xF000000u
#define I2S_RCR3_CFR_SHIFT                       24u
#define I2S_RCR3_CFR_WIDTH                       4u
#define I2S_RCR3_CFR(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_CFR_SHIFT))&I2S_RCR3_CFR_MASK)
/* RCR4 Bit Fields */
#define I2S_RCR4_FSD_MASK                        0x1u
#define I2S_RCR4_FSD_SHIFT                       0u
#define I2S_RCR4_FSD_WIDTH                       1u
#define I2S_RCR4_FSD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FSD_SHIFT))&I2S_RCR4_FSD_MASK)
#define I2S_RCR4_FSP_MASK                        0x2u
#define I2S_RCR4_FSP_SHIFT                       1u
#define I2S_RCR4_FSP_WIDTH                       1u
#define I2S_RCR4_FSP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FSP_SHIFT))&I2S_RCR4_FSP_MASK)
#define I2S_RCR4_ONDEM_MASK                      0x4u
#define I2S_RCR4_ONDEM_SHIFT                     2u
#define I2S_RCR4_ONDEM_WIDTH                     1u
#define I2S_RCR4_ONDEM(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_ONDEM_SHIFT))&I2S_RCR4_ONDEM_MASK)
#define I2S_RCR4_FSE_MASK                        0x8u
#define I2S_RCR4_FSE_SHIFT                       3u
#define I2S_RCR4_FSE_WIDTH                       1u
#define I2S_RCR4_FSE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FSE_SHIFT))&I2S_RCR4_FSE_MASK)
#define I2S_RCR4_MF_MASK                         0x10u
#define I2S_RCR4_MF_SHIFT                        4u
#define I2S_RCR4_MF_WIDTH                        1u
#define I2S_RCR4_MF(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_MF_SHIFT))&I2S_RCR4_MF_MASK)
#define I2S_RCR4_SYWD_MASK                       0x1F00u
#define I2S_RCR4_SYWD_SHIFT                      8u
#define I2S_RCR4_SYWD_WIDTH                      5u
#define I2S_RCR4_SYWD(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_SYWD_SHIFT))&I2S_RCR4_SYWD_MASK)
#define I2S_RCR4_FRSZ_MASK                       0xF0000u
#define I2S_RCR4_FRSZ_SHIFT                      16u
#define I2S_RCR4_FRSZ_WIDTH                      4u
#define I2S_RCR4_FRSZ(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FRSZ_SHIFT))&I2S_RCR4_FRSZ_MASK)
#define I2S_RCR4_FPACK_MASK                      0x3000000u
#define I2S_RCR4_FPACK_SHIFT                     24u
#define I2S_RCR4_FPACK_WIDTH                     2u
#define I2S_RCR4_FPACK(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FPACK_SHIFT))&I2S_RCR4_FPACK_MASK)
#define I2S_RCR4_FCOMB_MASK                      0xC000000u
#define I2S_RCR4_FCOMB_SHIFT                     26u
#define I2S_RCR4_FCOMB_WIDTH                     2u
#define I2S_RCR4_FCOMB(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FCOMB_SHIFT))&I2S_RCR4_FCOMB_MASK)
#define I2S_RCR4_FCONT_MASK                      0x10000000u
#define I2S_RCR4_FCONT_SHIFT                     28u
#define I2S_RCR4_FCONT_WIDTH                     1u
#define I2S_RCR4_FCONT(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FCONT_SHIFT))&I2S_RCR4_FCONT_MASK)
/* RCR5 Bit Fields */
#define I2S_RCR5_FBT_MASK                        0x1F00u
#define I2S_RCR5_FBT_SHIFT                       8u
#define I2S_RCR5_FBT_WIDTH                       5u
#define I2S_RCR5_FBT(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_FBT_SHIFT))&I2S_RCR5_FBT_MASK)
#define I2S_RCR5_W0W_MASK                        0x1F0000u
#define I2S_RCR5_W0W_SHIFT                       16u
#define I2S_RCR5_W0W_WIDTH                       5u
#define I2S_RCR5_W0W(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_W0W_SHIFT))&I2S_RCR5_W0W_MASK)
#define I2S_RCR5_WNW_MASK                        0x1F000000u
#define I2S_RCR5_WNW_SHIFT                       24u
#define I2S_RCR5_WNW_WIDTH                       5u
#define I2S_RCR5_WNW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_WNW_SHIFT))&I2S_RCR5_WNW_MASK)
/* RDR Bit Fields */
#define I2S_RDR_RDR_MASK                         0xFFFFFFFFu
#define I2S_RDR_RDR_SHIFT                        0u
#define I2S_RDR_RDR_WIDTH                        32u
#define I2S_RDR_RDR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RDR_RDR_SHIFT))&I2S_RDR_RDR_MASK)
/* RFR Bit Fields */
#define I2S_RFR_RFP_MASK                         0xFu
#define I2S_RFR_RFP_SHIFT                        0u
#define I2S_RFR_RFP_WIDTH                        4u
#define I2S_RFR_RFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_RFP_SHIFT))&I2S_RFR_RFP_MASK)
#define I2S_RFR_RCP_MASK                         0x8000u
#define I2S_RFR_RCP_SHIFT                        15u
#define I2S_RFR_RCP_WIDTH                        1u
#define I2S_RFR_RCP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_RCP_SHIFT))&I2S_RFR_RCP_MASK)
#define I2S_RFR_WFP_MASK                         0xF0000u
#define I2S_RFR_WFP_SHIFT                        16u
#define I2S_RFR_WFP_WIDTH                        4u
#define I2S_RFR_WFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_WFP_SHIFT))&I2S_RFR_WFP_MASK)
/* RMR Bit Fields */
#define I2S_RMR_RWM_MASK                         0xFFFFu
#define I2S_RMR_RWM_SHIFT                        0u
#define I2S_RMR_RWM_WIDTH                        16u
#define I2S_RMR_RWM(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RMR_RWM_SHIFT))&I2S_RMR_RWM_MASK)
/* MCR Bit Fields */
#define I2S_MCR_MICS_MASK                        0x3000000u
#define I2S_MCR_MICS_SHIFT                       24u
#define I2S_MCR_MICS_WIDTH                       2u
#define I2S_MCR_MICS(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_MCR_MICS_SHIFT))&I2S_MCR_MICS_MASK)
#define I2S_MCR_MOE_MASK                         0x40000000u
#define I2S_MCR_MOE_SHIFT                        30u
#define I2S_MCR_MOE_WIDTH                        1u
#define I2S_MCR_MOE(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_MCR_MOE_SHIFT))&I2S_MCR_MOE_MASK)
#define I2S_MCR_DUF_MASK                         0x80000000u
#define I2S_MCR_DUF_SHIFT                        31u
#define I2S_MCR_DUF_WIDTH                        1u
#define I2S_MCR_DUF(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_MCR_DUF_SHIFT))&I2S_MCR_DUF_MASK)
/* MDR Bit Fields */
#define I2S_MDR_DIVIDE_MASK                      0xFFFu
#define I2S_MDR_DIVIDE_SHIFT                     0u
#define I2S_MDR_DIVIDE_WIDTH                     12u
#define I2S_MDR_DIVIDE(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_MDR_DIVIDE_SHIFT))&I2S_MDR_DIVIDE_MASK)
#define I2S_MDR_FRACT_MASK                       0x1FF000u
#define I2S_MDR_FRACT_SHIFT                      12u
#define I2S_MDR_FRACT_WIDTH                      9u
#define I2S_MDR_FRACT(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_MDR_FRACT_SHIFT))&I2S_MDR_FRACT_MASK)

/*!
 * @}
 */ /* end of group I2S_Register_Masks */


/*!
 * @}
 */ /* end of group I2S_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- INTC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup INTC_Peripheral_Access_Layer INTC Peripheral Access Layer
 * @{
 */


/** INTC - Size of Registers Arrays */
#define INTC_SSCIR_COUNT                         24u
#define INTC_PSR_COUNT                           1024u

/** INTC - Register Layout Typedef */
typedef struct {
  __IO uint32_t BCR;                               /**< INTC Block Configuration Register, offset: 0x0 */
  __IO uint32_t MPROT;                             /**< INTC Master Protection Register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  __IO uint32_t CPR0;                              /**< INTC Current Priority Register for Processor 0, offset: 0x10 */
  __IO uint32_t CPR1;                              /**< INTC Current Priority Register for Processor 1, offset: 0x14 */
  __IO uint32_t CPR2;                              /**< INTC Current Priority Register for Processor 2, offset: 0x18 */
       uint8_t RESERVED_1[4];
  __IO uint32_t IACKR0;                            /**< INTC Interrupt Acknowledge Register for Processor 0, offset: 0x20 */
  __IO uint32_t IACKR1;                            /**< INTC Interrupt Acknowledge Register for Processor 1, offset: 0x24 */
  __IO uint32_t IACKR2;                            /**< INTC Interrupt Acknowledge Register for Processor 2, offset: 0x28 */
       uint8_t RESERVED_2[4];
  __O  uint32_t EOIR0;                             /**< INTC End Of Interrupt Register for Processor 0, offset: 0x30 */
  __O  uint32_t EOIR1;                             /**< INTC End Of Interrupt Register for Processor 1, offset: 0x34 */
  __O  uint32_t EOIR2;                             /**< INTC End Of Interrupt Register for Processor 2, offset: 0x38 */
       uint8_t RESERVED_3[4];
  __IO uint8_t SSCIR[INTC_SSCIR_COUNT];            /**< INTC Software Set/Clear Interrupt Register, array offset: 0x40, array step: 0x1 */
       uint8_t RESERVED_4[8];
  __IO uint16_t PSR[INTC_PSR_COUNT];               /**< INTC Priority Select Register, array offset: 0x60, array step: 0x2 */
} INTC_Type, *INTC_MemMapPtr;

 /** Number of instances of the INTC module. */
#define INTC_INSTANCE_COUNT                      (1u)


/* INTC - Peripheral instance base addresses */
/** Peripheral INTC base address */
#define INTC_BASE                                (0xFC040000u)
/** Peripheral INTC base pointer */
#define INTC                                     ((INTC_Type *)INTC_BASE)
/** Array initializer of INTC peripheral base addresses */
#define INTC_BASE_ADDRS                          { INTC_BASE }
/** Array initializer of INTC peripheral base pointers */
#define INTC_BASE_PTRS                           { INTC }

/* ----------------------------------------------------------------------------
   -- INTC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup INTC_Register_Masks INTC Register Masks
 * @{
 */

/* BCR Bit Fields */
#define INTC_BCR_HVEN0_MASK                      0x1u
#define INTC_BCR_HVEN0_SHIFT                     0u
#define INTC_BCR_HVEN0_WIDTH                     1u
#define INTC_BCR_HVEN0(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_BCR_HVEN0_SHIFT))&INTC_BCR_HVEN0_MASK)
#define INTC_BCR_HVEN1_MASK                      0x10u
#define INTC_BCR_HVEN1_SHIFT                     4u
#define INTC_BCR_HVEN1_WIDTH                     1u
#define INTC_BCR_HVEN1(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_BCR_HVEN1_SHIFT))&INTC_BCR_HVEN1_MASK)
#define INTC_BCR_HVEN2_MASK                      0x100u
#define INTC_BCR_HVEN2_SHIFT                     8u
#define INTC_BCR_HVEN2_WIDTH                     1u
#define INTC_BCR_HVEN2(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_BCR_HVEN2_SHIFT))&INTC_BCR_HVEN2_MASK)
/* MPROT Bit Fields */
#define INTC_MPROT_MPROT_MASK                    0x1u
#define INTC_MPROT_MPROT_SHIFT                   0u
#define INTC_MPROT_MPROT_WIDTH                   1u
#define INTC_MPROT_MPROT(x)                      (((uint32_t)(((uint32_t)(x))<<INTC_MPROT_MPROT_SHIFT))&INTC_MPROT_MPROT_MASK)
#define INTC_MPROT_ID_MASK                       0x30u
#define INTC_MPROT_ID_SHIFT                      4u
#define INTC_MPROT_ID_WIDTH                      2u
#define INTC_MPROT_ID(x)                         (((uint32_t)(((uint32_t)(x))<<INTC_MPROT_ID_SHIFT))&INTC_MPROT_ID_MASK)
/* CPR0 Bit Fields */
#define INTC_CPR0_PRI_MASK                       0xFu
#define INTC_CPR0_PRI_SHIFT                      0u
#define INTC_CPR0_PRI_WIDTH                      4u
#define INTC_CPR0_PRI(x)                         (((uint32_t)(((uint32_t)(x))<<INTC_CPR0_PRI_SHIFT))&INTC_CPR0_PRI_MASK)
/* CPR1 Bit Fields */
#define INTC_CPR1_PRI_MASK                       0xFu
#define INTC_CPR1_PRI_SHIFT                      0u
#define INTC_CPR1_PRI_WIDTH                      4u
#define INTC_CPR1_PRI(x)                         (((uint32_t)(((uint32_t)(x))<<INTC_CPR1_PRI_SHIFT))&INTC_CPR1_PRI_MASK)
/* CPR2 Bit Fields */
#define INTC_CPR2_PRI_MASK                       0xFu
#define INTC_CPR2_PRI_SHIFT                      0u
#define INTC_CPR2_PRI_WIDTH                      4u
#define INTC_CPR2_PRI(x)                         (((uint32_t)(((uint32_t)(x))<<INTC_CPR2_PRI_SHIFT))&INTC_CPR2_PRI_MASK)
/* IACKR0 Bit Fields */
#define INTC_IACKR0_INTVEC_MASK                  0xFFCu
#define INTC_IACKR0_INTVEC_SHIFT                 2u
#define INTC_IACKR0_INTVEC_WIDTH                 10u
#define INTC_IACKR0_INTVEC(x)                    (((uint32_t)(((uint32_t)(x))<<INTC_IACKR0_INTVEC_SHIFT))&INTC_IACKR0_INTVEC_MASK)
#define INTC_IACKR0_VTBA_MASK                    0xFFFFF000u
#define INTC_IACKR0_VTBA_SHIFT                   12u
#define INTC_IACKR0_VTBA_WIDTH                   20u
#define INTC_IACKR0_VTBA(x)                      (((uint32_t)(((uint32_t)(x))<<INTC_IACKR0_VTBA_SHIFT))&INTC_IACKR0_VTBA_MASK)
/* IACKR1 Bit Fields */
#define INTC_IACKR1_INTVEC_MASK                  0xFFCu
#define INTC_IACKR1_INTVEC_SHIFT                 2u
#define INTC_IACKR1_INTVEC_WIDTH                 10u
#define INTC_IACKR1_INTVEC(x)                    (((uint32_t)(((uint32_t)(x))<<INTC_IACKR1_INTVEC_SHIFT))&INTC_IACKR1_INTVEC_MASK)
#define INTC_IACKR1_VTBA_MASK                    0xFFFFF000u
#define INTC_IACKR1_VTBA_SHIFT                   12u
#define INTC_IACKR1_VTBA_WIDTH                   20u
#define INTC_IACKR1_VTBA(x)                      (((uint32_t)(((uint32_t)(x))<<INTC_IACKR1_VTBA_SHIFT))&INTC_IACKR1_VTBA_MASK)
/* IACKR2 Bit Fields */
#define INTC_IACKR2_INTVEC_MASK                  0xFFCu
#define INTC_IACKR2_INTVEC_SHIFT                 2u
#define INTC_IACKR2_INTVEC_WIDTH                 10u
#define INTC_IACKR2_INTVEC(x)                    (((uint32_t)(((uint32_t)(x))<<INTC_IACKR2_INTVEC_SHIFT))&INTC_IACKR2_INTVEC_MASK)
#define INTC_IACKR2_VTBA_MASK                    0xFFFFF000u
#define INTC_IACKR2_VTBA_SHIFT                   12u
#define INTC_IACKR2_VTBA_WIDTH                   20u
#define INTC_IACKR2_VTBA(x)                      (((uint32_t)(((uint32_t)(x))<<INTC_IACKR2_VTBA_SHIFT))&INTC_IACKR2_VTBA_MASK)
/* EOIR0 Bit Fields */
#define INTC_EOIR0_EOI_MASK                      0xFFFFFFFFu
#define INTC_EOIR0_EOI_SHIFT                     0u
#define INTC_EOIR0_EOI_WIDTH                     32u
#define INTC_EOIR0_EOI(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_EOIR0_EOI_SHIFT))&INTC_EOIR0_EOI_MASK)
/* EOIR1 Bit Fields */
#define INTC_EOIR1_EOI_MASK                      0xFFFFFFFFu
#define INTC_EOIR1_EOI_SHIFT                     0u
#define INTC_EOIR1_EOI_WIDTH                     32u
#define INTC_EOIR1_EOI(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_EOIR1_EOI_SHIFT))&INTC_EOIR1_EOI_MASK)
/* EOIR2 Bit Fields */
#define INTC_EOIR2_EOI_MASK                      0xFFFFFFFFu
#define INTC_EOIR2_EOI_SHIFT                     0u
#define INTC_EOIR2_EOI_WIDTH                     32u
#define INTC_EOIR2_EOI(x)                        (((uint32_t)(((uint32_t)(x))<<INTC_EOIR2_EOI_SHIFT))&INTC_EOIR2_EOI_MASK)
/* SSCIR Bit Fields */
#define INTC_SSCIR_CLR_MASK                      0x1u
#define INTC_SSCIR_CLR_SHIFT                     0u
#define INTC_SSCIR_CLR_WIDTH                     1u
#define INTC_SSCIR_CLR(x)                        (((uint8_t)(((uint8_t)(x))<<INTC_SSCIR_CLR_SHIFT))&INTC_SSCIR_CLR_MASK)
#define INTC_SSCIR_SET_MASK                      0x2u
#define INTC_SSCIR_SET_SHIFT                     1u
#define INTC_SSCIR_SET_WIDTH                     1u
#define INTC_SSCIR_SET(x)                        (((uint8_t)(((uint8_t)(x))<<INTC_SSCIR_SET_SHIFT))&INTC_SSCIR_SET_MASK)
/* PSR Bit Fields */
#define INTC_PSR_PRIN_MASK                       0xFu
#define INTC_PSR_PRIN_SHIFT                      0u
#define INTC_PSR_PRIN_WIDTH                      4u
#define INTC_PSR_PRIN(x)                         (((uint16_t)(((uint16_t)(x))<<INTC_PSR_PRIN_SHIFT))&INTC_PSR_PRIN_MASK)
#define INTC_PSR_SWTN_MASK                       0x100u
#define INTC_PSR_SWTN_SHIFT                      8u
#define INTC_PSR_SWTN_WIDTH                      1u
#define INTC_PSR_SWTN(x)                         (((uint16_t)(((uint16_t)(x))<<INTC_PSR_SWTN_SHIFT))&INTC_PSR_SWTN_MASK)
#define INTC_PSR_PRC_SELN2_MASK                  0x2000u
#define INTC_PSR_PRC_SELN2_SHIFT                 13u
#define INTC_PSR_PRC_SELN2_WIDTH                 1u
#define INTC_PSR_PRC_SELN2(x)                    (((uint16_t)(((uint16_t)(x))<<INTC_PSR_PRC_SELN2_SHIFT))&INTC_PSR_PRC_SELN2_MASK)
#define INTC_PSR_PRC_SELN1_MASK                  0x4000u
#define INTC_PSR_PRC_SELN1_SHIFT                 14u
#define INTC_PSR_PRC_SELN1_WIDTH                 1u
#define INTC_PSR_PRC_SELN1(x)                    (((uint16_t)(((uint16_t)(x))<<INTC_PSR_PRC_SELN1_SHIFT))&INTC_PSR_PRC_SELN1_MASK)
#define INTC_PSR_PRC_SELN0_MASK                  0x8000u
#define INTC_PSR_PRC_SELN0_SHIFT                 15u
#define INTC_PSR_PRC_SELN0_WIDTH                 1u
#define INTC_PSR_PRC_SELN0(x)                    (((uint16_t)(((uint16_t)(x))<<INTC_PSR_PRC_SELN0_SHIFT))&INTC_PSR_PRC_SELN0_MASK)

/*!
 * @}
 */ /* end of group INTC_Register_Masks */


/*!
 * @}
 */ /* end of group INTC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- JDC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup JDC_Peripheral_Access_Layer JDC Peripheral Access Layer
 * @{
 */


/** JDC - Size of Registers Arrays */

/** JDC - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
  __IO uint32_t MSR;                               /**< Module Status Register, offset: 0x4 */
  __IO uint32_t JOUT_IPS;                          /**< JTAG Output Data Register, offset: 0x8 */
  __I  uint32_t JIN_IPS;                           /**< JTAG Input Data Register, offset: 0xC */
} JDC_Type, *JDC_MemMapPtr;

 /** Number of instances of the JDC module. */
#define JDC_INSTANCE_COUNT                       (1u)


/* JDC - Peripheral instance base addresses */
/** Peripheral JDC base address */
#define JDC_BASE                                 (0xFFF3C000u)
/** Peripheral JDC base pointer */
#define JDC                                      ((JDC_Type *)JDC_BASE)
/** Array initializer of JDC peripheral base addresses */
#define JDC_BASE_ADDRS                           { JDC_BASE }
/** Array initializer of JDC peripheral base pointers */
#define JDC_BASE_PTRS                            { JDC }

/* ----------------------------------------------------------------------------
   -- JDC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup JDC_Register_Masks JDC Register Masks
 * @{
 */

/* MCR Bit Fields */
#define JDC_MCR_JOUT_IEN_MASK                    0x1u
#define JDC_MCR_JOUT_IEN_SHIFT                   0u
#define JDC_MCR_JOUT_IEN_WIDTH                   1u
#define JDC_MCR_JOUT_IEN(x)                      (((uint32_t)(((uint32_t)(x))<<JDC_MCR_JOUT_IEN_SHIFT))&JDC_MCR_JOUT_IEN_MASK)
#define JDC_MCR_JIN_IEN_MASK                     0x10000u
#define JDC_MCR_JIN_IEN_SHIFT                    16u
#define JDC_MCR_JIN_IEN_WIDTH                    1u
#define JDC_MCR_JIN_IEN(x)                       (((uint32_t)(((uint32_t)(x))<<JDC_MCR_JIN_IEN_SHIFT))&JDC_MCR_JIN_IEN_MASK)
/* MSR Bit Fields */
#define JDC_MSR_JOUT_INT_MASK                    0x1u
#define JDC_MSR_JOUT_INT_SHIFT                   0u
#define JDC_MSR_JOUT_INT_WIDTH                   1u
#define JDC_MSR_JOUT_INT(x)                      (((uint32_t)(((uint32_t)(x))<<JDC_MSR_JOUT_INT_SHIFT))&JDC_MSR_JOUT_INT_MASK)
#define JDC_MSR_JOUT_RDY_MASK                    0x4u
#define JDC_MSR_JOUT_RDY_SHIFT                   2u
#define JDC_MSR_JOUT_RDY_WIDTH                   1u
#define JDC_MSR_JOUT_RDY(x)                      (((uint32_t)(((uint32_t)(x))<<JDC_MSR_JOUT_RDY_SHIFT))&JDC_MSR_JOUT_RDY_MASK)
#define JDC_MSR_JIN_INT_MASK                     0x10000u
#define JDC_MSR_JIN_INT_SHIFT                    16u
#define JDC_MSR_JIN_INT_WIDTH                    1u
#define JDC_MSR_JIN_INT(x)                       (((uint32_t)(((uint32_t)(x))<<JDC_MSR_JIN_INT_SHIFT))&JDC_MSR_JIN_INT_MASK)
#define JDC_MSR_JIN_RDY_MASK                     0x40000u
#define JDC_MSR_JIN_RDY_SHIFT                    18u
#define JDC_MSR_JIN_RDY_WIDTH                    1u
#define JDC_MSR_JIN_RDY(x)                       (((uint32_t)(((uint32_t)(x))<<JDC_MSR_JIN_RDY_SHIFT))&JDC_MSR_JIN_RDY_MASK)
/* JOUT_IPS Bit Fields */
#define JDC_JOUT_IPS_Data_MASK                   0xFFFFFFFFu
#define JDC_JOUT_IPS_Data_SHIFT                  0u
#define JDC_JOUT_IPS_Data_WIDTH                  32u
#define JDC_JOUT_IPS_Data(x)                     (((uint32_t)(((uint32_t)(x))<<JDC_JOUT_IPS_Data_SHIFT))&JDC_JOUT_IPS_Data_MASK)
/* JIN_IPS Bit Fields */
#define JDC_JIN_IPS_Data_MASK                    0xFFFFFFFFu
#define JDC_JIN_IPS_Data_SHIFT                   0u
#define JDC_JIN_IPS_Data_WIDTH                   32u
#define JDC_JIN_IPS_Data(x)                      (((uint32_t)(((uint32_t)(x))<<JDC_JIN_IPS_Data_SHIFT))&JDC_JIN_IPS_Data_MASK)

/*!
 * @}
 */ /* end of group JDC_Register_Masks */


/*!
 * @}
 */ /* end of group JDC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LINFlexD Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LINFlexD_Peripheral_Access_Layer LINFlexD Peripheral Access Layer
 * @{
 */


/** LINFlexD - Size of Registers Arrays */
#define LINFlexD_IFCR_COUNT                      16u

/** LINFlexD - Register Layout Typedef */
typedef struct {
  __IO uint32_t LINCR1;                            /**< LIN Control Register 1, offset: 0x0 */
  __IO uint32_t LINIER;                            /**< LIN Interrupt enable register, offset: 0x4 */
  __IO uint32_t LINSR;                             /**< LIN Status Register, offset: 0x8 */
  __IO uint32_t LINESR;                            /**< LIN Error Status Register, offset: 0xC */
  __IO uint32_t UARTCR;                            /**< UART Mode Control Register, offset: 0x10 */
  __IO uint32_t UARTSR;                            /**< UART Mode Status Register, offset: 0x14 */
  __IO uint32_t LINTCSR;                           /**< LIN Time-Out Control Status Register, offset: 0x18 */
  __IO uint32_t LINOCR;                            /**< LIN Output Compare Register, offset: 0x1C */
  __IO uint32_t LINTOCR;                           /**< LIN Time-Out Control Register, offset: 0x20 */
  __IO uint32_t LINFBRR;                           /**< LIN Fractional Baud Rate Register, offset: 0x24 */
  __IO uint32_t LINIBRR;                           /**< LIN Integer Baud Rate Register, offset: 0x28 */
  __IO uint32_t LINCFR;                            /**< LIN Checksum Field Register, offset: 0x2C */
  __IO uint32_t LINCR2;                            /**< LIN Control Register 2, offset: 0x30 */
  __IO uint32_t BIDR;                              /**< Buffer Identifier Register, offset: 0x34 */
  __IO uint32_t BDRL;                              /**< Buffer Data Register Least Significant, offset: 0x38 */
  __IO uint32_t BDRM;                              /**< Buffer Data Register Most Significant, offset: 0x3C */
  __IO uint32_t IFER;                              /**< Identifier Filter Enable Register, offset: 0x40 */
  __I  uint32_t IFMI;                              /**< Identifier Filter Match Index, offset: 0x44 */
  __IO uint32_t IFMR;                              /**< Identifier Filter Mode Register, offset: 0x48 */
  __IO uint32_t IFCR[LINFlexD_IFCR_COUNT];         /**< Identifier Filter Control Register, array offset: 0x4C, array step: 0x4 */
  __IO uint32_t GCR;                               /**< Global Control Register, offset: 0x8C */
  __IO uint32_t UARTPTO;                           /**< UART Preset Timeout Register, offset: 0x90 */
  __I  uint32_t UARTCTO;                           /**< UART Current Timeout Register, offset: 0x94 */
  __IO uint32_t DMATXE;                            /**< DMA Tx Enable Register, offset: 0x98 */
  __IO uint32_t DMARXE;                            /**< DMA Rx Enable Register, offset: 0x9C */
} LINFlexD_Type, *LINFlexD_MemMapPtr;

 /** Number of instances of the LINFlexD module. */
#define LINFlexD_INSTANCE_COUNT                  (18u)


/* LINFlexD - Peripheral instance base addresses */
/** Peripheral LINFlexD_0 base address */
#define LINFlexD_0_BASE                          (0xFFE8C000u)
/** Peripheral LINFlexD_0 base pointer */
#define LINFlexD_0                               ((LINFlexD_Type *)LINFlexD_0_BASE)
/** Peripheral LINFlexD_1 base address */
#define LINFlexD_1_BASE                          (0xFBE8C000u)
/** Peripheral LINFlexD_1 base pointer */
#define LINFlexD_1                               ((LINFlexD_Type *)LINFlexD_1_BASE)
/** Peripheral LINFlexD_10 base address */
#define LINFlexD_10_BASE                         (0xFFEA0000u)
/** Peripheral LINFlexD_10 base pointer */
#define LINFlexD_10                              ((LINFlexD_Type *)LINFlexD_10_BASE)
/** Peripheral LINFlexD_11 base address */
#define LINFlexD_11_BASE                         (0xFBEA0000u)
/** Peripheral LINFlexD_11 base pointer */
#define LINFlexD_11                              ((LINFlexD_Type *)LINFlexD_11_BASE)
/** Peripheral LINFlexD_12 base address */
#define LINFlexD_12_BASE                         (0xFFEA4000u)
/** Peripheral LINFlexD_12 base pointer */
#define LINFlexD_12                              ((LINFlexD_Type *)LINFlexD_12_BASE)
/** Peripheral LINFlexD_13 base address */
#define LINFlexD_13_BASE                         (0xFBEA4000u)
/** Peripheral LINFlexD_13 base pointer */
#define LINFlexD_13                              ((LINFlexD_Type *)LINFlexD_13_BASE)
/** Peripheral LINFlexD_14 base address */
#define LINFlexD_14_BASE                         (0xFFEA8000u)
/** Peripheral LINFlexD_14 base pointer */
#define LINFlexD_14                              ((LINFlexD_Type *)LINFlexD_14_BASE)
/** Peripheral LINFlexD_15 base address */
#define LINFlexD_15_BASE                         (0xFBEA8000u)
/** Peripheral LINFlexD_15 base pointer */
#define LINFlexD_15                              ((LINFlexD_Type *)LINFlexD_15_BASE)
/** Peripheral LINFlexD_16 base address */
#define LINFlexD_16_BASE                         (0xFFEAC000u)
/** Peripheral LINFlexD_16 base pointer */
#define LINFlexD_16                              ((LINFlexD_Type *)LINFlexD_16_BASE)
/** Peripheral LINFlexD_17 base address */
#define LINFlexD_17_BASE                         (0xFBEAC000u)
/** Peripheral LINFlexD_17 base pointer */
#define LINFlexD_17                              ((LINFlexD_Type *)LINFlexD_17_BASE)
/** Peripheral LINFlexD_2 base address */
#define LINFlexD_2_BASE                          (0xFFE90000u)
/** Peripheral LINFlexD_2 base pointer */
#define LINFlexD_2                               ((LINFlexD_Type *)LINFlexD_2_BASE)
/** Peripheral LINFlexD_3 base address */
#define LINFlexD_3_BASE                          (0xFBE90000u)
/** Peripheral LINFlexD_3 base pointer */
#define LINFlexD_3                               ((LINFlexD_Type *)LINFlexD_3_BASE)
/** Peripheral LINFlexD_4 base address */
#define LINFlexD_4_BASE                          (0xFFE94000u)
/** Peripheral LINFlexD_4 base pointer */
#define LINFlexD_4                               ((LINFlexD_Type *)LINFlexD_4_BASE)
/** Peripheral LINFlexD_5 base address */
#define LINFlexD_5_BASE                          (0xFBE94000u)
/** Peripheral LINFlexD_5 base pointer */
#define LINFlexD_5                               ((LINFlexD_Type *)LINFlexD_5_BASE)
/** Peripheral LINFlexD_6 base address */
#define LINFlexD_6_BASE                          (0xFFE98000u)
/** Peripheral LINFlexD_6 base pointer */
#define LINFlexD_6                               ((LINFlexD_Type *)LINFlexD_6_BASE)
/** Peripheral LINFlexD_7 base address */
#define LINFlexD_7_BASE                          (0xFBE98000u)
/** Peripheral LINFlexD_7 base pointer */
#define LINFlexD_7                               ((LINFlexD_Type *)LINFlexD_7_BASE)
/** Peripheral LINFlexD_8 base address */
#define LINFlexD_8_BASE                          (0xFFE9C000u)
/** Peripheral LINFlexD_8 base pointer */
#define LINFlexD_8                               ((LINFlexD_Type *)LINFlexD_8_BASE)
/** Peripheral LINFlexD_9 base address */
#define LINFlexD_9_BASE                          (0xFBE9C000u)
/** Peripheral LINFlexD_9 base pointer */
#define LINFlexD_9                               ((LINFlexD_Type *)LINFlexD_9_BASE)
/** Array initializer of LINFlexD peripheral base addresses */
#define LINFlexD_BASE_ADDRS                      { LINFlexD_0_BASE, LINFlexD_1_BASE, LINFlexD_2_BASE, LINFlexD_3_BASE, LINFlexD_4_BASE, LINFlexD_5_BASE, \
                                                   LINFlexD_6_BASE, LINFlexD_7_BASE, LINFlexD_8_BASE, LINFlexD_9_BASE, LINFlexD_10_BASE, LINFlexD_11_BASE, \
                                                   LINFlexD_12_BASE, LINFlexD_13_BASE, LINFlexD_14_BASE, LINFlexD_15_BASE, LINFlexD_16_BASE, LINFlexD_17_BASE }
/** Array initializer of LINFlexD peripheral base pointers */
#define LINFlexD_BASE_PTRS                       { LINFlexD_0, LINFlexD_1, LINFlexD_2, LINFlexD_3, LINFlexD_4, LINFlexD_5, \
                                                   LINFlexD_6, LINFlexD_7, LINFlexD_8, LINFlexD_9, LINFlexD_10, LINFlexD_11, \
                                                   LINFlexD_12, LINFlexD_13, LINFlexD_14, LINFlexD_15, LINFlexD_16, LINFlexD_17}
/** Interrupt vectors for the LINFlexD */
#define LINFLEXD_RX_IRQS {LINFLEXD0_RX_IRQn, LINFLEXD1_RX_IRQn, LINFLEXD2_RX_IRQn, \
                          LINFLEXD3_RX_IRQn, LINFLEXD4_RX_IRQn, LINFLEXD5_RX_IRQn, \
                          LINFLEXD6_RX_IRQn, LINFLEXD7_RX_IRQn, LINFLEXD8_RX_IRQn, \
                          LINFLEXD9_RX_IRQn, LINFLEXD10_RX_IRQn, LINFLEXD11_RX_IRQn, \
                          LINFLEXD12_RX_IRQn, LINFLEXD13_RX_IRQn, LINFLEXD14_RX_IRQn, \
                          LINFLEXD15_RX_IRQn, LINFLEXD16_RX_IRQn, LINFLEXD17_RX_IRQn}
#define LINFLEXD_TX_IRQS {LINFLEXD0_TX_IRQn, LINFLEXD1_TX_IRQn, LINFLEXD2_TX_IRQn, \
                          LINFLEXD3_TX_IRQn, LINFLEXD4_TX_IRQn, LINFLEXD5_TX_IRQn, \
                          LINFLEXD6_TX_IRQn, LINFLEXD7_TX_IRQn, LINFLEXD8_TX_IRQn, \
                          LINFLEXD9_TX_IRQn, LINFLEXD10_TX_IRQn, LINFLEXD11_TX_IRQn, \
                          LINFLEXD12_TX_IRQn, LINFLEXD13_TX_IRQn, LINFLEXD14_TX_IRQn, \
                          LINFLEXD15_TX_IRQn, LINFLEXD16_TX_IRQn, LINFLEXD17_TX_IRQn}
#define LINFLEXD_ERR_IRQS {LINFLEXD0_ERR_IRQn, LINFLEXD1_ERR_IRQn, LINFLEXD2_ERR_IRQn, \
                           LINFLEXD3_ERR_IRQn, LINFLEXD4_ERR_IRQn, LINFLEXD5_ERR_IRQn, \
                           LINFLEXD6_ERR_IRQn, LINFLEXD7_ERR_IRQn, LINFLEXD8_ERR_IRQn, \
                           LINFLEXD9_ERR_IRQn, LINFLEXD10_ERR_IRQn, LINFLEXD11_ERR_IRQn, \
                           LINFLEXD12_ERR_IRQn, LINFLEXD13_ERR_IRQn, LINFLEXD14_ERR_IRQn, \
                           LINFLEXD15_ERR_IRQn, LINFLEXD16_ERR_IRQn, LINFLEXD17_ERR_IRQn}

/* ----------------------------------------------------------------------------
   -- LINFlexD Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LINFlexD_Register_Masks LINFlexD Register Masks
 * @{
 */

/* LINCR1 Bit Fields */
#define LINFlexD_LINCR1_INIT_MASK                0x1u
#define LINFlexD_LINCR1_INIT_SHIFT               0u
#define LINFlexD_LINCR1_INIT_WIDTH               1u
#define LINFlexD_LINCR1_INIT(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_INIT_SHIFT))&LINFlexD_LINCR1_INIT_MASK)
#define LINFlexD_LINCR1_SLEEP_MASK               0x2u
#define LINFlexD_LINCR1_SLEEP_SHIFT              1u
#define LINFlexD_LINCR1_SLEEP_WIDTH              1u
#define LINFlexD_LINCR1_SLEEP(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_SLEEP_SHIFT))&LINFlexD_LINCR1_SLEEP_MASK)
#define LINFlexD_LINCR1_RBLM_MASK                0x4u
#define LINFlexD_LINCR1_RBLM_SHIFT               2u
#define LINFlexD_LINCR1_RBLM_WIDTH               1u
#define LINFlexD_LINCR1_RBLM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_RBLM_SHIFT))&LINFlexD_LINCR1_RBLM_MASK)
#define LINFlexD_LINCR1_SSBL_MASK                0x8u
#define LINFlexD_LINCR1_SSBL_SHIFT               3u
#define LINFlexD_LINCR1_SSBL_WIDTH               1u
#define LINFlexD_LINCR1_SSBL(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_SSBL_SHIFT))&LINFlexD_LINCR1_SSBL_MASK)
#define LINFlexD_LINCR1_MME_MASK                 0x10u
#define LINFlexD_LINCR1_MME_SHIFT                4u
#define LINFlexD_LINCR1_MME_WIDTH                1u
#define LINFlexD_LINCR1_MME(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_MME_SHIFT))&LINFlexD_LINCR1_MME_MASK)
#define LINFlexD_LINCR1_LBKM_MASK                0x20u
#define LINFlexD_LINCR1_LBKM_SHIFT               5u
#define LINFlexD_LINCR1_LBKM_WIDTH               1u
#define LINFlexD_LINCR1_LBKM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_LBKM_SHIFT))&LINFlexD_LINCR1_LBKM_MASK)
#define LINFlexD_LINCR1_BF_MASK                  0x80u
#define LINFlexD_LINCR1_BF_SHIFT                 7u
#define LINFlexD_LINCR1_BF_WIDTH                 1u
#define LINFlexD_LINCR1_BF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_BF_SHIFT))&LINFlexD_LINCR1_BF_MASK)
#define LINFlexD_LINCR1_MBL_MASK                 0xF00u
#define LINFlexD_LINCR1_MBL_SHIFT                8u
#define LINFlexD_LINCR1_MBL_WIDTH                4u
#define LINFlexD_LINCR1_MBL(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_MBL_SHIFT))&LINFlexD_LINCR1_MBL_MASK)
#define LINFlexD_LINCR1_AUTOWU_MASK              0x1000u
#define LINFlexD_LINCR1_AUTOWU_SHIFT             12u
#define LINFlexD_LINCR1_AUTOWU_WIDTH             1u
#define LINFlexD_LINCR1_AUTOWU(x)                (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_AUTOWU_SHIFT))&LINFlexD_LINCR1_AUTOWU_MASK)
#define LINFlexD_LINCR1_LASE_MASK                0x2000u
#define LINFlexD_LINCR1_LASE_SHIFT               13u
#define LINFlexD_LINCR1_LASE_WIDTH               1u
#define LINFlexD_LINCR1_LASE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_LASE_SHIFT))&LINFlexD_LINCR1_LASE_MASK)
#define LINFlexD_LINCR1_CFD_MASK                 0x4000u
#define LINFlexD_LINCR1_CFD_SHIFT                14u
#define LINFlexD_LINCR1_CFD_WIDTH                1u
#define LINFlexD_LINCR1_CFD(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_CFD_SHIFT))&LINFlexD_LINCR1_CFD_MASK)
#define LINFlexD_LINCR1_CCD_MASK                 0x8000u
#define LINFlexD_LINCR1_CCD_SHIFT                15u
#define LINFlexD_LINCR1_CCD_WIDTH                1u
#define LINFlexD_LINCR1_CCD(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR1_CCD_SHIFT))&LINFlexD_LINCR1_CCD_MASK)
/* LINIER Bit Fields */
#define LINFlexD_LINIER_HRIE_MASK                0x1u
#define LINFlexD_LINIER_HRIE_SHIFT               0u
#define LINFlexD_LINIER_HRIE_WIDTH               1u
#define LINFlexD_LINIER_HRIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_HRIE_SHIFT))&LINFlexD_LINIER_HRIE_MASK)
#define LINFlexD_LINIER_DTIE_MASK                0x2u
#define LINFlexD_LINIER_DTIE_SHIFT               1u
#define LINFlexD_LINIER_DTIE_WIDTH               1u
#define LINFlexD_LINIER_DTIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_DTIE_SHIFT))&LINFlexD_LINIER_DTIE_MASK)
#define LINFlexD_LINIER_DRIE_MASK                0x4u
#define LINFlexD_LINIER_DRIE_SHIFT               2u
#define LINFlexD_LINIER_DRIE_WIDTH               1u
#define LINFlexD_LINIER_DRIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_DRIE_SHIFT))&LINFlexD_LINIER_DRIE_MASK)
#define LINFlexD_LINIER_TOIE_MASK                0x8u
#define LINFlexD_LINIER_TOIE_SHIFT               3u
#define LINFlexD_LINIER_TOIE_WIDTH               1u
#define LINFlexD_LINIER_TOIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_TOIE_SHIFT))&LINFlexD_LINIER_TOIE_MASK)
#define LINFlexD_LINIER_WUIE_MASK                0x20u
#define LINFlexD_LINIER_WUIE_SHIFT               5u
#define LINFlexD_LINIER_WUIE_WIDTH               1u
#define LINFlexD_LINIER_WUIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_WUIE_SHIFT))&LINFlexD_LINIER_WUIE_MASK)
#define LINFlexD_LINIER_LSIE_MASK                0x40u
#define LINFlexD_LINIER_LSIE_SHIFT               6u
#define LINFlexD_LINIER_LSIE_WIDTH               1u
#define LINFlexD_LINIER_LSIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_LSIE_SHIFT))&LINFlexD_LINIER_LSIE_MASK)
#define LINFlexD_LINIER_BOIE_MASK                0x80u
#define LINFlexD_LINIER_BOIE_SHIFT               7u
#define LINFlexD_LINIER_BOIE_WIDTH               1u
#define LINFlexD_LINIER_BOIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_BOIE_SHIFT))&LINFlexD_LINIER_BOIE_MASK)
#define LINFlexD_LINIER_FEIE_MASK                0x100u
#define LINFlexD_LINIER_FEIE_SHIFT               8u
#define LINFlexD_LINIER_FEIE_WIDTH               1u
#define LINFlexD_LINIER_FEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_FEIE_SHIFT))&LINFlexD_LINIER_FEIE_MASK)
#define LINFlexD_LINIER_HEIE_MASK                0x800u
#define LINFlexD_LINIER_HEIE_SHIFT               11u
#define LINFlexD_LINIER_HEIE_WIDTH               1u
#define LINFlexD_LINIER_HEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_HEIE_SHIFT))&LINFlexD_LINIER_HEIE_MASK)
#define LINFlexD_LINIER_CEIE_MASK                0x1000u
#define LINFlexD_LINIER_CEIE_SHIFT               12u
#define LINFlexD_LINIER_CEIE_WIDTH               1u
#define LINFlexD_LINIER_CEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_CEIE_SHIFT))&LINFlexD_LINIER_CEIE_MASK)
#define LINFlexD_LINIER_BEIE_MASK                0x2000u
#define LINFlexD_LINIER_BEIE_SHIFT               13u
#define LINFlexD_LINIER_BEIE_WIDTH               1u
#define LINFlexD_LINIER_BEIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_BEIE_SHIFT))&LINFlexD_LINIER_BEIE_MASK)
#define LINFlexD_LINIER_OCIE_MASK                0x4000u
#define LINFlexD_LINIER_OCIE_SHIFT               14u
#define LINFlexD_LINIER_OCIE_WIDTH               1u
#define LINFlexD_LINIER_OCIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_OCIE_SHIFT))&LINFlexD_LINIER_OCIE_MASK)
#define LINFlexD_LINIER_SZIE_MASK                0x8000u
#define LINFlexD_LINIER_SZIE_SHIFT               15u
#define LINFlexD_LINIER_SZIE_WIDTH               1u
#define LINFlexD_LINIER_SZIE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIER_SZIE_SHIFT))&LINFlexD_LINIER_SZIE_MASK)
/* LINSR Bit Fields */
#define LINFlexD_LINSR_HRF_MASK                  0x1u
#define LINFlexD_LINSR_HRF_SHIFT                 0u
#define LINFlexD_LINSR_HRF_WIDTH                 1u
#define LINFlexD_LINSR_HRF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_HRF_SHIFT))&LINFlexD_LINSR_HRF_MASK)
#define LINFlexD_LINSR_DTF_MASK                  0x2u
#define LINFlexD_LINSR_DTF_SHIFT                 1u
#define LINFlexD_LINSR_DTF_WIDTH                 1u
#define LINFlexD_LINSR_DTF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DTF_SHIFT))&LINFlexD_LINSR_DTF_MASK)
#define LINFlexD_LINSR_DRF_MASK                  0x4u
#define LINFlexD_LINSR_DRF_SHIFT                 2u
#define LINFlexD_LINSR_DRF_WIDTH                 1u
#define LINFlexD_LINSR_DRF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DRF_SHIFT))&LINFlexD_LINSR_DRF_MASK)
#define LINFlexD_LINSR_WUF_MASK                  0x20u
#define LINFlexD_LINSR_WUF_SHIFT                 5u
#define LINFlexD_LINSR_WUF_WIDTH                 1u
#define LINFlexD_LINSR_WUF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_WUF_SHIFT))&LINFlexD_LINSR_WUF_MASK)
#define LINFlexD_LINSR_RDI_MASK                  0x40u
#define LINFlexD_LINSR_RDI_SHIFT                 6u
#define LINFlexD_LINSR_RDI_WIDTH                 1u
#define LINFlexD_LINSR_RDI(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RDI_SHIFT))&LINFlexD_LINSR_RDI_MASK)
#define LINFlexD_LINSR_RXbusy_MASK               0x80u
#define LINFlexD_LINSR_RXbusy_SHIFT              7u
#define LINFlexD_LINSR_RXbusy_WIDTH              1u
#define LINFlexD_LINSR_RXbusy(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RXbusy_SHIFT))&LINFlexD_LINSR_RXbusy_MASK)
#define LINFlexD_LINSR_DRBNE_MASK                0x100u
#define LINFlexD_LINSR_DRBNE_SHIFT               8u
#define LINFlexD_LINSR_DRBNE_WIDTH               1u
#define LINFlexD_LINSR_DRBNE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_DRBNE_SHIFT))&LINFlexD_LINSR_DRBNE_MASK)
#define LINFlexD_LINSR_RMB_MASK                  0x200u
#define LINFlexD_LINSR_RMB_SHIFT                 9u
#define LINFlexD_LINSR_RMB_WIDTH                 1u
#define LINFlexD_LINSR_RMB(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RMB_SHIFT))&LINFlexD_LINSR_RMB_MASK)
#define LINFlexD_LINSR_LINS_MASK                 0xF000u
#define LINFlexD_LINSR_LINS_SHIFT                12u
#define LINFlexD_LINSR_LINS_WIDTH                4u
#define LINFlexD_LINSR_LINS(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_LINS_SHIFT))&LINFlexD_LINSR_LINS_MASK)
#define LINFlexD_LINSR_RDC_MASK                  0x70000u
#define LINFlexD_LINSR_RDC_SHIFT                 16u
#define LINFlexD_LINSR_RDC_WIDTH                 3u
#define LINFlexD_LINSR_RDC(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_RDC_SHIFT))&LINFlexD_LINSR_RDC_MASK)
#define LINFlexD_LINSR_AUTOSYNC_COMP_MASK        0x80000u
#define LINFlexD_LINSR_AUTOSYNC_COMP_SHIFT       19u
#define LINFlexD_LINSR_AUTOSYNC_COMP_WIDTH       1u
#define LINFlexD_LINSR_AUTOSYNC_COMP(x)          (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINSR_AUTOSYNC_COMP_SHIFT))&LINFlexD_LINSR_AUTOSYNC_COMP_MASK)
/* LINESR Bit Fields */
#define LINFlexD_LINESR_NF_MASK                  0x1u
#define LINFlexD_LINESR_NF_SHIFT                 0u
#define LINFlexD_LINESR_NF_WIDTH                 1u
#define LINFlexD_LINESR_NF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_NF_SHIFT))&LINFlexD_LINESR_NF_MASK)
#define LINFlexD_LINESR_BOF_MASK                 0x80u
#define LINFlexD_LINESR_BOF_SHIFT                7u
#define LINFlexD_LINESR_BOF_WIDTH                1u
#define LINFlexD_LINESR_BOF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_BOF_SHIFT))&LINFlexD_LINESR_BOF_MASK)
#define LINFlexD_LINESR_FEF_MASK                 0x100u
#define LINFlexD_LINESR_FEF_SHIFT                8u
#define LINFlexD_LINESR_FEF_WIDTH                1u
#define LINFlexD_LINESR_FEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_FEF_SHIFT))&LINFlexD_LINESR_FEF_MASK)
#define LINFlexD_LINESR_IDPEF_MASK               0x200u
#define LINFlexD_LINESR_IDPEF_SHIFT              9u
#define LINFlexD_LINESR_IDPEF_WIDTH              1u
#define LINFlexD_LINESR_IDPEF(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_IDPEF_SHIFT))&LINFlexD_LINESR_IDPEF_MASK)
#define LINFlexD_LINESR_SDEF_MASK                0x400u
#define LINFlexD_LINESR_SDEF_SHIFT               10u
#define LINFlexD_LINESR_SDEF_WIDTH               1u
#define LINFlexD_LINESR_SDEF(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_SDEF_SHIFT))&LINFlexD_LINESR_SDEF_MASK)
#define LINFlexD_LINESR_SFEF_MASK                0x800u
#define LINFlexD_LINESR_SFEF_SHIFT               11u
#define LINFlexD_LINESR_SFEF_WIDTH               1u
#define LINFlexD_LINESR_SFEF(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_SFEF_SHIFT))&LINFlexD_LINESR_SFEF_MASK)
#define LINFlexD_LINESR_CEF_MASK                 0x1000u
#define LINFlexD_LINESR_CEF_SHIFT                12u
#define LINFlexD_LINESR_CEF_WIDTH                1u
#define LINFlexD_LINESR_CEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_CEF_SHIFT))&LINFlexD_LINESR_CEF_MASK)
#define LINFlexD_LINESR_BEF_MASK                 0x2000u
#define LINFlexD_LINESR_BEF_SHIFT                13u
#define LINFlexD_LINESR_BEF_WIDTH                1u
#define LINFlexD_LINESR_BEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_BEF_SHIFT))&LINFlexD_LINESR_BEF_MASK)
#define LINFlexD_LINESR_OCF_MASK                 0x4000u
#define LINFlexD_LINESR_OCF_SHIFT                14u
#define LINFlexD_LINESR_OCF_WIDTH                1u
#define LINFlexD_LINESR_OCF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_OCF_SHIFT))&LINFlexD_LINESR_OCF_MASK)
#define LINFlexD_LINESR_SZF_MASK                 0x8000u
#define LINFlexD_LINESR_SZF_SHIFT                15u
#define LINFlexD_LINESR_SZF_WIDTH                1u
#define LINFlexD_LINESR_SZF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINESR_SZF_SHIFT))&LINFlexD_LINESR_SZF_MASK)
/* UARTCR Bit Fields */
#define LINFlexD_UARTCR_UART_MASK                0x1u
#define LINFlexD_UARTCR_UART_SHIFT               0u
#define LINFlexD_UARTCR_UART_WIDTH               1u
#define LINFlexD_UARTCR_UART(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_UART_SHIFT))&LINFlexD_UARTCR_UART_MASK)
#define LINFlexD_UARTCR_WL0_MASK                 0x2u
#define LINFlexD_UARTCR_WL0_SHIFT                1u
#define LINFlexD_UARTCR_WL0_WIDTH                1u
#define LINFlexD_UARTCR_WL0(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_WL0_SHIFT))&LINFlexD_UARTCR_WL0_MASK)
#define LINFlexD_UARTCR_PCE_MASK                 0x4u
#define LINFlexD_UARTCR_PCE_SHIFT                2u
#define LINFlexD_UARTCR_PCE_WIDTH                1u
#define LINFlexD_UARTCR_PCE(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_PCE_SHIFT))&LINFlexD_UARTCR_PCE_MASK)
#define LINFlexD_UARTCR_PC0_MASK                 0x8u
#define LINFlexD_UARTCR_PC0_SHIFT                3u
#define LINFlexD_UARTCR_PC0_WIDTH                1u
#define LINFlexD_UARTCR_PC0(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_PC0_SHIFT))&LINFlexD_UARTCR_PC0_MASK)
#define LINFlexD_UARTCR_TxEn_MASK                0x10u
#define LINFlexD_UARTCR_TxEn_SHIFT               4u
#define LINFlexD_UARTCR_TxEn_WIDTH               1u
#define LINFlexD_UARTCR_TxEn(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_TxEn_SHIFT))&LINFlexD_UARTCR_TxEn_MASK)
#define LINFlexD_UARTCR_RxEn_MASK                0x20u
#define LINFlexD_UARTCR_RxEn_SHIFT               5u
#define LINFlexD_UARTCR_RxEn_WIDTH               1u
#define LINFlexD_UARTCR_RxEn(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_RxEn_SHIFT))&LINFlexD_UARTCR_RxEn_MASK)
#define LINFlexD_UARTCR_PC1_MASK                 0x40u
#define LINFlexD_UARTCR_PC1_SHIFT                6u
#define LINFlexD_UARTCR_PC1_WIDTH                1u
#define LINFlexD_UARTCR_PC1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_PC1_SHIFT))&LINFlexD_UARTCR_PC1_MASK)
#define LINFlexD_UARTCR_WL1_MASK                 0x80u
#define LINFlexD_UARTCR_WL1_SHIFT                7u
#define LINFlexD_UARTCR_WL1_WIDTH                1u
#define LINFlexD_UARTCR_WL1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_WL1_SHIFT))&LINFlexD_UARTCR_WL1_MASK)
#define LINFlexD_UARTCR_TFBM_MASK                0x100u
#define LINFlexD_UARTCR_TFBM_SHIFT               8u
#define LINFlexD_UARTCR_TFBM_WIDTH               1u
#define LINFlexD_UARTCR_TFBM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_TFBM_SHIFT))&LINFlexD_UARTCR_TFBM_MASK)
#define LINFlexD_UARTCR_RFBM_MASK                0x200u
#define LINFlexD_UARTCR_RFBM_SHIFT               9u
#define LINFlexD_UARTCR_RFBM_WIDTH               1u
#define LINFlexD_UARTCR_RFBM(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_RFBM_SHIFT))&LINFlexD_UARTCR_RFBM_MASK)
#define LINFlexD_UARTCR_RDFL_RFC_MASK            0x1C00u
#define LINFlexD_UARTCR_RDFL_RFC_SHIFT           10u
#define LINFlexD_UARTCR_RDFL_RFC_WIDTH           3u
#define LINFlexD_UARTCR_RDFL_RFC(x)              (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_RDFL_RFC_SHIFT))&LINFlexD_UARTCR_RDFL_RFC_MASK)
#define LINFlexD_UARTCR_TDFL_TFC_MASK            0xE000u
#define LINFlexD_UARTCR_TDFL_TFC_SHIFT           13u
#define LINFlexD_UARTCR_TDFL_TFC_WIDTH           3u
#define LINFlexD_UARTCR_TDFL_TFC(x)              (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_TDFL_TFC_SHIFT))&LINFlexD_UARTCR_TDFL_TFC_MASK)
#define LINFlexD_UARTCR_WLS_MASK                 0x10000u
#define LINFlexD_UARTCR_WLS_SHIFT                16u
#define LINFlexD_UARTCR_WLS_WIDTH                1u
#define LINFlexD_UARTCR_WLS(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_WLS_SHIFT))&LINFlexD_UARTCR_WLS_MASK)
#define LINFlexD_UARTCR_SBUR_MASK                0x60000u
#define LINFlexD_UARTCR_SBUR_SHIFT               17u
#define LINFlexD_UARTCR_SBUR_WIDTH               2u
#define LINFlexD_UARTCR_SBUR(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_SBUR_SHIFT))&LINFlexD_UARTCR_SBUR_MASK)
#define LINFlexD_UARTCR_DTU_PCETX_MASK           0x80000u
#define LINFlexD_UARTCR_DTU_PCETX_SHIFT          19u
#define LINFlexD_UARTCR_DTU_PCETX_WIDTH          1u
#define LINFlexD_UARTCR_DTU_PCETX(x)             (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_DTU_PCETX_SHIFT))&LINFlexD_UARTCR_DTU_PCETX_MASK)
#define LINFlexD_UARTCR_NEF_MASK                 0x700000u
#define LINFlexD_UARTCR_NEF_SHIFT                20u
#define LINFlexD_UARTCR_NEF_WIDTH                3u
#define LINFlexD_UARTCR_NEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_NEF_SHIFT))&LINFlexD_UARTCR_NEF_MASK)
#define LINFlexD_UARTCR_ROSE_MASK                0x800000u
#define LINFlexD_UARTCR_ROSE_SHIFT               23u
#define LINFlexD_UARTCR_ROSE_WIDTH               1u
#define LINFlexD_UARTCR_ROSE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_ROSE_SHIFT))&LINFlexD_UARTCR_ROSE_MASK)
#define LINFlexD_UARTCR_OSR_MASK                 0xF000000u
#define LINFlexD_UARTCR_OSR_SHIFT                24u
#define LINFlexD_UARTCR_OSR_WIDTH                4u
#define LINFlexD_UARTCR_OSR(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_OSR_SHIFT))&LINFlexD_UARTCR_OSR_MASK)
#define LINFlexD_UARTCR_CSP_MASK                 0x70000000u
#define LINFlexD_UARTCR_CSP_SHIFT                28u
#define LINFlexD_UARTCR_CSP_WIDTH                3u
#define LINFlexD_UARTCR_CSP(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_CSP_SHIFT))&LINFlexD_UARTCR_CSP_MASK)
#define LINFlexD_UARTCR_MIS_MASK                 0x80000000u
#define LINFlexD_UARTCR_MIS_SHIFT                31u
#define LINFlexD_UARTCR_MIS_WIDTH                1u
#define LINFlexD_UARTCR_MIS(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCR_MIS_SHIFT))&LINFlexD_UARTCR_MIS_MASK)
/* UARTSR Bit Fields */
#define LINFlexD_UARTSR_NF_MASK                  0x1u
#define LINFlexD_UARTSR_NF_SHIFT                 0u
#define LINFlexD_UARTSR_NF_WIDTH                 1u
#define LINFlexD_UARTSR_NF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_NF_SHIFT))&LINFlexD_UARTSR_NF_MASK)
#define LINFlexD_UARTSR_DTFTFF_MASK              0x2u
#define LINFlexD_UARTSR_DTFTFF_SHIFT             1u
#define LINFlexD_UARTSR_DTFTFF_WIDTH             1u
#define LINFlexD_UARTSR_DTFTFF(x)                (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_DTFTFF_SHIFT))&LINFlexD_UARTSR_DTFTFF_MASK)
#define LINFlexD_UARTSR_DRFRFE_MASK              0x4u
#define LINFlexD_UARTSR_DRFRFE_SHIFT             2u
#define LINFlexD_UARTSR_DRFRFE_WIDTH             1u
#define LINFlexD_UARTSR_DRFRFE(x)                (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_DRFRFE_SHIFT))&LINFlexD_UARTSR_DRFRFE_MASK)
#define LINFlexD_UARTSR_TO_MASK                  0x8u
#define LINFlexD_UARTSR_TO_SHIFT                 3u
#define LINFlexD_UARTSR_TO_WIDTH                 1u
#define LINFlexD_UARTSR_TO(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_TO_SHIFT))&LINFlexD_UARTSR_TO_MASK)
#define LINFlexD_UARTSR_RFNE_MASK                0x10u
#define LINFlexD_UARTSR_RFNE_SHIFT               4u
#define LINFlexD_UARTSR_RFNE_WIDTH               1u
#define LINFlexD_UARTSR_RFNE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_RFNE_SHIFT))&LINFlexD_UARTSR_RFNE_MASK)
#define LINFlexD_UARTSR_WUF_MASK                 0x20u
#define LINFlexD_UARTSR_WUF_SHIFT                5u
#define LINFlexD_UARTSR_WUF_WIDTH                1u
#define LINFlexD_UARTSR_WUF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_WUF_SHIFT))&LINFlexD_UARTSR_WUF_MASK)
#define LINFlexD_UARTSR_RDI_MASK                 0x40u
#define LINFlexD_UARTSR_RDI_SHIFT                6u
#define LINFlexD_UARTSR_RDI_WIDTH                1u
#define LINFlexD_UARTSR_RDI(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_RDI_SHIFT))&LINFlexD_UARTSR_RDI_MASK)
#define LINFlexD_UARTSR_BOF_MASK                 0x80u
#define LINFlexD_UARTSR_BOF_SHIFT                7u
#define LINFlexD_UARTSR_BOF_WIDTH                1u
#define LINFlexD_UARTSR_BOF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_BOF_SHIFT))&LINFlexD_UARTSR_BOF_MASK)
#define LINFlexD_UARTSR_FEF_MASK                 0x100u
#define LINFlexD_UARTSR_FEF_SHIFT                8u
#define LINFlexD_UARTSR_FEF_WIDTH                1u
#define LINFlexD_UARTSR_FEF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_FEF_SHIFT))&LINFlexD_UARTSR_FEF_MASK)
#define LINFlexD_UARTSR_RMB_MASK                 0x200u
#define LINFlexD_UARTSR_RMB_SHIFT                9u
#define LINFlexD_UARTSR_RMB_WIDTH                1u
#define LINFlexD_UARTSR_RMB(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_RMB_SHIFT))&LINFlexD_UARTSR_RMB_MASK)
#define LINFlexD_UARTSR_PE_MASK                  0x3C00u
#define LINFlexD_UARTSR_PE_SHIFT                 10u
#define LINFlexD_UARTSR_PE_WIDTH                 4u
#define LINFlexD_UARTSR_PE(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_PE_SHIFT))&LINFlexD_UARTSR_PE_MASK)
#define LINFlexD_UARTSR_OCF_MASK                 0x4000u
#define LINFlexD_UARTSR_OCF_SHIFT                14u
#define LINFlexD_UARTSR_OCF_WIDTH                1u
#define LINFlexD_UARTSR_OCF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_OCF_SHIFT))&LINFlexD_UARTSR_OCF_MASK)
#define LINFlexD_UARTSR_SZF_MASK                 0x8000u
#define LINFlexD_UARTSR_SZF_SHIFT                15u
#define LINFlexD_UARTSR_SZF_WIDTH                1u
#define LINFlexD_UARTSR_SZF(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTSR_SZF_SHIFT))&LINFlexD_UARTSR_SZF_MASK)
/* LINTCSR Bit Fields */
#define LINFlexD_LINTCSR_CNT_MASK                0xFFu
#define LINFlexD_LINTCSR_CNT_SHIFT               0u
#define LINFlexD_LINTCSR_CNT_WIDTH               8u
#define LINFlexD_LINTCSR_CNT(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_CNT_SHIFT))&LINFlexD_LINTCSR_CNT_MASK)
#define LINFlexD_LINTCSR_TOCE_MASK               0x100u
#define LINFlexD_LINTCSR_TOCE_SHIFT              8u
#define LINFlexD_LINTCSR_TOCE_WIDTH              1u
#define LINFlexD_LINTCSR_TOCE(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_TOCE_SHIFT))&LINFlexD_LINTCSR_TOCE_MASK)
#define LINFlexD_LINTCSR_IOT_MASK                0x200u
#define LINFlexD_LINTCSR_IOT_SHIFT               9u
#define LINFlexD_LINTCSR_IOT_WIDTH               1u
#define LINFlexD_LINTCSR_IOT(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_IOT_SHIFT))&LINFlexD_LINTCSR_IOT_MASK)
#define LINFlexD_LINTCSR_MODE_MASK               0x400u
#define LINFlexD_LINTCSR_MODE_SHIFT              10u
#define LINFlexD_LINTCSR_MODE_WIDTH              1u
#define LINFlexD_LINTCSR_MODE(x)                 (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTCSR_MODE_SHIFT))&LINFlexD_LINTCSR_MODE_MASK)
/* LINOCR Bit Fields */
#define LINFlexD_LINOCR_OC1_MASK                 0xFFu
#define LINFlexD_LINOCR_OC1_SHIFT                0u
#define LINFlexD_LINOCR_OC1_WIDTH                8u
#define LINFlexD_LINOCR_OC1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINOCR_OC1_SHIFT))&LINFlexD_LINOCR_OC1_MASK)
#define LINFlexD_LINOCR_OC2_MASK                 0xFF00u
#define LINFlexD_LINOCR_OC2_SHIFT                8u
#define LINFlexD_LINOCR_OC2_WIDTH                8u
#define LINFlexD_LINOCR_OC2(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINOCR_OC2_SHIFT))&LINFlexD_LINOCR_OC2_MASK)
/* LINTOCR Bit Fields */
#define LINFlexD_LINTOCR_HTO_MASK                0x7Fu
#define LINFlexD_LINTOCR_HTO_SHIFT               0u
#define LINFlexD_LINTOCR_HTO_WIDTH               7u
#define LINFlexD_LINTOCR_HTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTOCR_HTO_SHIFT))&LINFlexD_LINTOCR_HTO_MASK)
#define LINFlexD_LINTOCR_RTO_MASK                0xF00u
#define LINFlexD_LINTOCR_RTO_SHIFT               8u
#define LINFlexD_LINTOCR_RTO_WIDTH               4u
#define LINFlexD_LINTOCR_RTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINTOCR_RTO_SHIFT))&LINFlexD_LINTOCR_RTO_MASK)
/* LINFBRR Bit Fields */
#define LINFlexD_LINFBRR_FBR_MASK                0xFu
#define LINFlexD_LINFBRR_FBR_SHIFT               0u
#define LINFlexD_LINFBRR_FBR_WIDTH               4u
#define LINFlexD_LINFBRR_FBR(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINFBRR_FBR_SHIFT))&LINFlexD_LINFBRR_FBR_MASK)
/* LINIBRR Bit Fields */
#define LINFlexD_LINIBRR_IBR_MASK                0xFFFFFu
#define LINFlexD_LINIBRR_IBR_SHIFT               0u
#define LINFlexD_LINIBRR_IBR_WIDTH               20u
#define LINFlexD_LINIBRR_IBR(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINIBRR_IBR_SHIFT))&LINFlexD_LINIBRR_IBR_MASK)
/* LINCFR Bit Fields */
#define LINFlexD_LINCFR_CF_MASK                  0xFFu
#define LINFlexD_LINCFR_CF_SHIFT                 0u
#define LINFlexD_LINCFR_CF_WIDTH                 8u
#define LINFlexD_LINCFR_CF(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCFR_CF_SHIFT))&LINFlexD_LINCFR_CF_MASK)
/* LINCR2 Bit Fields */
#define LINFlexD_LINCR2_HTRQ_MASK                0x100u
#define LINFlexD_LINCR2_HTRQ_SHIFT               8u
#define LINFlexD_LINCR2_HTRQ_WIDTH               1u
#define LINFlexD_LINCR2_HTRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_HTRQ_SHIFT))&LINFlexD_LINCR2_HTRQ_MASK)
#define LINFlexD_LINCR2_ABRQ_MASK                0x200u
#define LINFlexD_LINCR2_ABRQ_SHIFT               9u
#define LINFlexD_LINCR2_ABRQ_WIDTH               1u
#define LINFlexD_LINCR2_ABRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_ABRQ_SHIFT))&LINFlexD_LINCR2_ABRQ_MASK)
#define LINFlexD_LINCR2_DTRQ_MASK                0x400u
#define LINFlexD_LINCR2_DTRQ_SHIFT               10u
#define LINFlexD_LINCR2_DTRQ_WIDTH               1u
#define LINFlexD_LINCR2_DTRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_DTRQ_SHIFT))&LINFlexD_LINCR2_DTRQ_MASK)
#define LINFlexD_LINCR2_DDRQ_MASK                0x800u
#define LINFlexD_LINCR2_DDRQ_SHIFT               11u
#define LINFlexD_LINCR2_DDRQ_WIDTH               1u
#define LINFlexD_LINCR2_DDRQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_DDRQ_SHIFT))&LINFlexD_LINCR2_DDRQ_MASK)
#define LINFlexD_LINCR2_WURQ_MASK                0x1000u
#define LINFlexD_LINCR2_WURQ_SHIFT               12u
#define LINFlexD_LINCR2_WURQ_WIDTH               1u
#define LINFlexD_LINCR2_WURQ(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_WURQ_SHIFT))&LINFlexD_LINCR2_WURQ_MASK)
#define LINFlexD_LINCR2_IOPE_MASK                0x2000u
#define LINFlexD_LINCR2_IOPE_SHIFT               13u
#define LINFlexD_LINCR2_IOPE_WIDTH               1u
#define LINFlexD_LINCR2_IOPE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_IOPE_SHIFT))&LINFlexD_LINCR2_IOPE_MASK)
#define LINFlexD_LINCR2_IOBE_MASK                0x4000u
#define LINFlexD_LINCR2_IOBE_SHIFT               14u
#define LINFlexD_LINCR2_IOBE_WIDTH               1u
#define LINFlexD_LINCR2_IOBE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_IOBE_SHIFT))&LINFlexD_LINCR2_IOBE_MASK)
#define LINFlexD_LINCR2_TBDE_MASK                0x8000u
#define LINFlexD_LINCR2_TBDE_SHIFT               15u
#define LINFlexD_LINCR2_TBDE_WIDTH               1u
#define LINFlexD_LINCR2_TBDE(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_LINCR2_TBDE_SHIFT))&LINFlexD_LINCR2_TBDE_MASK)
/* BIDR Bit Fields */
#define LINFlexD_BIDR_ID_MASK                    0x3Fu
#define LINFlexD_BIDR_ID_SHIFT                   0u
#define LINFlexD_BIDR_ID_WIDTH                   6u
#define LINFlexD_BIDR_ID(x)                      (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_ID_SHIFT))&LINFlexD_BIDR_ID_MASK)
#define LINFlexD_BIDR_CCS_MASK                   0x100u
#define LINFlexD_BIDR_CCS_SHIFT                  8u
#define LINFlexD_BIDR_CCS_WIDTH                  1u
#define LINFlexD_BIDR_CCS(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_CCS_SHIFT))&LINFlexD_BIDR_CCS_MASK)
#define LINFlexD_BIDR_DIR_MASK                   0x200u
#define LINFlexD_BIDR_DIR_SHIFT                  9u
#define LINFlexD_BIDR_DIR_WIDTH                  1u
#define LINFlexD_BIDR_DIR(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_DIR_SHIFT))&LINFlexD_BIDR_DIR_MASK)
#define LINFlexD_BIDR_DFL_MASK                   0x1C00u
#define LINFlexD_BIDR_DFL_SHIFT                  10u
#define LINFlexD_BIDR_DFL_WIDTH                  3u
#define LINFlexD_BIDR_DFL(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_BIDR_DFL_SHIFT))&LINFlexD_BIDR_DFL_MASK)
/* BDRL Bit Fields */
#define LINFlexD_BDRL_DATA0_MASK                 0xFFu
#define LINFlexD_BDRL_DATA0_SHIFT                0u
#define LINFlexD_BDRL_DATA0_WIDTH                8u
#define LINFlexD_BDRL_DATA0(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA0_SHIFT))&LINFlexD_BDRL_DATA0_MASK)
#define LINFlexD_BDRL_DATA1_MASK                 0xFF00u
#define LINFlexD_BDRL_DATA1_SHIFT                8u
#define LINFlexD_BDRL_DATA1_WIDTH                8u
#define LINFlexD_BDRL_DATA1(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA1_SHIFT))&LINFlexD_BDRL_DATA1_MASK)
#define LINFlexD_BDRL_DATA2_MASK                 0xFF0000u
#define LINFlexD_BDRL_DATA2_SHIFT                16u
#define LINFlexD_BDRL_DATA2_WIDTH                8u
#define LINFlexD_BDRL_DATA2(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA2_SHIFT))&LINFlexD_BDRL_DATA2_MASK)
#define LINFlexD_BDRL_DATA3_MASK                 0xFF000000u
#define LINFlexD_BDRL_DATA3_SHIFT                24u
#define LINFlexD_BDRL_DATA3_WIDTH                8u
#define LINFlexD_BDRL_DATA3(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRL_DATA3_SHIFT))&LINFlexD_BDRL_DATA3_MASK)
/* BDRM Bit Fields */
#define LINFlexD_BDRM_DATA4_MASK                 0xFFu
#define LINFlexD_BDRM_DATA4_SHIFT                0u
#define LINFlexD_BDRM_DATA4_WIDTH                8u
#define LINFlexD_BDRM_DATA4(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA4_SHIFT))&LINFlexD_BDRM_DATA4_MASK)
#define LINFlexD_BDRM_DATA5_MASK                 0xFF00u
#define LINFlexD_BDRM_DATA5_SHIFT                8u
#define LINFlexD_BDRM_DATA5_WIDTH                8u
#define LINFlexD_BDRM_DATA5(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA5_SHIFT))&LINFlexD_BDRM_DATA5_MASK)
#define LINFlexD_BDRM_DATA6_MASK                 0xFF0000u
#define LINFlexD_BDRM_DATA6_SHIFT                16u
#define LINFlexD_BDRM_DATA6_WIDTH                8u
#define LINFlexD_BDRM_DATA6(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA6_SHIFT))&LINFlexD_BDRM_DATA6_MASK)
#define LINFlexD_BDRM_DATA7_MASK                 0xFF000000u
#define LINFlexD_BDRM_DATA7_SHIFT                24u
#define LINFlexD_BDRM_DATA7_WIDTH                8u
#define LINFlexD_BDRM_DATA7(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_BDRM_DATA7_SHIFT))&LINFlexD_BDRM_DATA7_MASK)
/* IFER Bit Fields */
#define LINFlexD_IFER_FACT_MASK                  0xFFFFu
#define LINFlexD_IFER_FACT_SHIFT                 0u
#define LINFlexD_IFER_FACT_WIDTH                 16u
#define LINFlexD_IFER_FACT(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFER_FACT_SHIFT))&LINFlexD_IFER_FACT_MASK)
/* IFMI Bit Fields */
#define LINFlexD_IFMI_IFMI_MASK                  0x1Fu
#define LINFlexD_IFMI_IFMI_SHIFT                 0u
#define LINFlexD_IFMI_IFMI_WIDTH                 5u
#define LINFlexD_IFMI_IFMI(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFMI_IFMI_SHIFT))&LINFlexD_IFMI_IFMI_MASK)
/* IFMR Bit Fields */
#define LINFlexD_IFMR_IFM_MASK                   0xFFu
#define LINFlexD_IFMR_IFM_SHIFT                  0u
#define LINFlexD_IFMR_IFM_WIDTH                  8u
#define LINFlexD_IFMR_IFM(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFMR_IFM_SHIFT))&LINFlexD_IFMR_IFM_MASK)
/* IFCR Bit Fields */
#define LINFlexD_IFCR_ID_MASK                    0x3Fu
#define LINFlexD_IFCR_ID_SHIFT                   0u
#define LINFlexD_IFCR_ID_WIDTH                   6u
#define LINFlexD_IFCR_ID(x)                      (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_ID_SHIFT))&LINFlexD_IFCR_ID_MASK)
#define LINFlexD_IFCR_CCS_MASK                   0x100u
#define LINFlexD_IFCR_CCS_SHIFT                  8u
#define LINFlexD_IFCR_CCS_WIDTH                  1u
#define LINFlexD_IFCR_CCS(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_CCS_SHIFT))&LINFlexD_IFCR_CCS_MASK)
#define LINFlexD_IFCR_DIR_MASK                   0x200u
#define LINFlexD_IFCR_DIR_SHIFT                  9u
#define LINFlexD_IFCR_DIR_WIDTH                  1u
#define LINFlexD_IFCR_DIR(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_DIR_SHIFT))&LINFlexD_IFCR_DIR_MASK)
#define LINFlexD_IFCR_DFL_MASK                   0x1C00u
#define LINFlexD_IFCR_DFL_SHIFT                  10u
#define LINFlexD_IFCR_DFL_WIDTH                  3u
#define LINFlexD_IFCR_DFL(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_IFCR_DFL_SHIFT))&LINFlexD_IFCR_DFL_MASK)
/* GCR Bit Fields */
#define LINFlexD_GCR_SR_MASK                     0x1u
#define LINFlexD_GCR_SR_SHIFT                    0u
#define LINFlexD_GCR_SR_WIDTH                    1u
#define LINFlexD_GCR_SR(x)                       (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_SR_SHIFT))&LINFlexD_GCR_SR_MASK)
#define LINFlexD_GCR_STOP_MASK                   0x2u
#define LINFlexD_GCR_STOP_SHIFT                  1u
#define LINFlexD_GCR_STOP_WIDTH                  1u
#define LINFlexD_GCR_STOP(x)                     (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_STOP_SHIFT))&LINFlexD_GCR_STOP_MASK)
#define LINFlexD_GCR_RDLIS_MASK                  0x4u
#define LINFlexD_GCR_RDLIS_SHIFT                 2u
#define LINFlexD_GCR_RDLIS_WIDTH                 1u
#define LINFlexD_GCR_RDLIS(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_RDLIS_SHIFT))&LINFlexD_GCR_RDLIS_MASK)
#define LINFlexD_GCR_TDLIS_MASK                  0x8u
#define LINFlexD_GCR_TDLIS_SHIFT                 3u
#define LINFlexD_GCR_TDLIS_WIDTH                 1u
#define LINFlexD_GCR_TDLIS(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_TDLIS_SHIFT))&LINFlexD_GCR_TDLIS_MASK)
#define LINFlexD_GCR_RDFBM_MASK                  0x10u
#define LINFlexD_GCR_RDFBM_SHIFT                 4u
#define LINFlexD_GCR_RDFBM_WIDTH                 1u
#define LINFlexD_GCR_RDFBM(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_RDFBM_SHIFT))&LINFlexD_GCR_RDFBM_MASK)
#define LINFlexD_GCR_TDFBM_MASK                  0x20u
#define LINFlexD_GCR_TDFBM_SHIFT                 5u
#define LINFlexD_GCR_TDFBM_WIDTH                 1u
#define LINFlexD_GCR_TDFBM(x)                    (((uint32_t)(((uint32_t)(x))<<LINFlexD_GCR_TDFBM_SHIFT))&LINFlexD_GCR_TDFBM_MASK)
/* UARTPTO Bit Fields */
#define LINFlexD_UARTPTO_PTO_MASK                0xFFFu
#define LINFlexD_UARTPTO_PTO_SHIFT               0u
#define LINFlexD_UARTPTO_PTO_WIDTH               12u
#define LINFlexD_UARTPTO_PTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTPTO_PTO_SHIFT))&LINFlexD_UARTPTO_PTO_MASK)
/* UARTCTO Bit Fields */
#define LINFlexD_UARTCTO_CTO_MASK                0xFFFu
#define LINFlexD_UARTCTO_CTO_SHIFT               0u
#define LINFlexD_UARTCTO_CTO_WIDTH               12u
#define LINFlexD_UARTCTO_CTO(x)                  (((uint32_t)(((uint32_t)(x))<<LINFlexD_UARTCTO_CTO_SHIFT))&LINFlexD_UARTCTO_CTO_MASK)
/* DMATXE Bit Fields */
#define LINFlexD_DMATXE_DTE_MASK                 0xFFFFu
#define LINFlexD_DMATXE_DTE_SHIFT                0u
#define LINFlexD_DMATXE_DTE_WIDTH                16u
#define LINFlexD_DMATXE_DTE(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_DMATXE_DTE_SHIFT))&LINFlexD_DMATXE_DTE_MASK)
/* DMARXE Bit Fields */
#define LINFlexD_DMARXE_DRE_MASK                 0xFFFFu
#define LINFlexD_DMARXE_DRE_SHIFT                0u
#define LINFlexD_DMARXE_DRE_WIDTH                16u
#define LINFlexD_DMARXE_DRE(x)                   (((uint32_t)(((uint32_t)(x))<<LINFlexD_DMARXE_DRE_SHIFT))&LINFlexD_DMARXE_DRE_MASK)

/*!
 * @}
 */ /* end of group LINFlexD_Register_Masks */


/*!
 * @}
 */ /* end of group LINFlexD_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- LPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPU_Peripheral_Access_Layer LPU Peripheral Access Layer
 * @{
 */


/** LPU - Size of Registers Arrays */

/** LPU - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCTL;                              /**< LPU Mode Control Register, offset: 0x0 */
  __IO uint32_t RUN_CF;                            /**< LPU Run Configuration Register, offset: 0x4 */
  __IO uint32_t STOP_CF;                           /**< LPU Stop Configuration Register, offset: 0x8 */
  __IO uint32_t STANDBY_CF;                        /**< LPU Standby Configuration Register, offset: 0xC */
  __I  uint32_t SR;                                /**< LPU Status Register, offset: 0x10 */
  __IO uint32_t ICR;                               /**< LPU Interrupt control register, offset: 0x14 */
  __IO uint32_t MDIS;                              /**< Module Disable, offset: 0x18 */
} LPU_Type, *LPU_MemMapPtr;

 /** Number of instances of the LPU module. */
#define LPU_INSTANCE_COUNT                       (1u)


/* LPU - Peripheral instance base addresses */
/** Peripheral LPU base address */
#define LPU_BASE                                 (0xFFF9C000u)
/** Peripheral LPU base pointer */
#define LPU                                      ((LPU_Type *)LPU_BASE)
/** Array initializer of LPU peripheral base addresses */
#define LPU_BASE_ADDRS                           { LPU_BASE }
/** Array initializer of LPU peripheral base pointers */
#define LPU_BASE_PTRS                            { LPU }

/* ----------------------------------------------------------------------------
   -- LPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup LPU_Register_Masks LPU Register Masks
 * @{
 */

/* MCTL Bit Fields */
#define LPU_MCTL_KEY_MASK                        0xFFFFu
#define LPU_MCTL_KEY_SHIFT                       0u
#define LPU_MCTL_KEY_WIDTH                       16u
#define LPU_MCTL_KEY(x)                          (((uint32_t)(((uint32_t)(x))<<LPU_MCTL_KEY_SHIFT))&LPU_MCTL_KEY_MASK)
#define LPU_MCTL_TARGET_MODE_MASK                0xF0000000u
#define LPU_MCTL_TARGET_MODE_SHIFT               28u
#define LPU_MCTL_TARGET_MODE_WIDTH               4u
#define LPU_MCTL_TARGET_MODE(x)                  (((uint32_t)(((uint32_t)(x))<<LPU_MCTL_TARGET_MODE_SHIFT))&LPU_MCTL_TARGET_MODE_MASK)
/* RUN_CF Bit Fields */
#define LPU_RUN_CF_FIRC_ON_MASK                  0x1u
#define LPU_RUN_CF_FIRC_ON_SHIFT                 0u
#define LPU_RUN_CF_FIRC_ON_WIDTH                 1u
#define LPU_RUN_CF_FIRC_ON(x)                    (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_FIRC_ON_SHIFT))&LPU_RUN_CF_FIRC_ON_MASK)
#define LPU_RUN_CF_FXOSC_ON_MASK                 0x2u
#define LPU_RUN_CF_FXOSC_ON_SHIFT                1u
#define LPU_RUN_CF_FXOSC_ON_WIDTH                1u
#define LPU_RUN_CF_FXOSC_ON(x)                   (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_FXOSC_ON_SHIFT))&LPU_RUN_CF_FXOSC_ON_MASK)
#define LPU_RUN_CF_SIRC_ON_MASK                  0x8u
#define LPU_RUN_CF_SIRC_ON_SHIFT                 3u
#define LPU_RUN_CF_SIRC_ON_WIDTH                 1u
#define LPU_RUN_CF_SIRC_ON(x)                    (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_SIRC_ON_SHIFT))&LPU_RUN_CF_SIRC_ON_MASK)
#define LPU_RUN_CF_SXOSC_ON_MASK                 0x10u
#define LPU_RUN_CF_SXOSC_ON_SHIFT                4u
#define LPU_RUN_CF_SXOSC_ON_WIDTH                1u
#define LPU_RUN_CF_SXOSC_ON(x)                   (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_SXOSC_ON_SHIFT))&LPU_RUN_CF_SXOSC_ON_MASK)
#define LPU_RUN_CF_LPU_SLEEP_MASK                0x40u
#define LPU_RUN_CF_LPU_SLEEP_SHIFT               6u
#define LPU_RUN_CF_LPU_SLEEP_WIDTH               1u
#define LPU_RUN_CF_LPU_SLEEP(x)                  (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_LPU_SLEEP_SHIFT))&LPU_RUN_CF_LPU_SLEEP_MASK)
#define LPU_RUN_CF_SYS_CLK_SEL_MASK              0x80u
#define LPU_RUN_CF_SYS_CLK_SEL_SHIFT             7u
#define LPU_RUN_CF_SYS_CLK_SEL_WIDTH             1u
#define LPU_RUN_CF_SYS_CLK_SEL(x)                (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_SYS_CLK_SEL_SHIFT))&LPU_RUN_CF_SYS_CLK_SEL_MASK)
#define LPU_RUN_CF_DIRECT_DRUN_MASK              0x100u
#define LPU_RUN_CF_DIRECT_DRUN_SHIFT             8u
#define LPU_RUN_CF_DIRECT_DRUN_WIDTH             1u
#define LPU_RUN_CF_DIRECT_DRUN(x)                (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_DIRECT_DRUN_SHIFT))&LPU_RUN_CF_DIRECT_DRUN_MASK)
#define LPU_RUN_CF_CAN0_CONT_MASK                0x10000u
#define LPU_RUN_CF_CAN0_CONT_SHIFT               16u
#define LPU_RUN_CF_CAN0_CONT_WIDTH               1u
#define LPU_RUN_CF_CAN0_CONT(x)                  (((uint32_t)(((uint32_t)(x))<<LPU_RUN_CF_CAN0_CONT_SHIFT))&LPU_RUN_CF_CAN0_CONT_MASK)
/* STOP_CF Bit Fields */
#define LPU_STOP_CF_FIRC_ON_MASK                 0x1u
#define LPU_STOP_CF_FIRC_ON_SHIFT                0u
#define LPU_STOP_CF_FIRC_ON_WIDTH                1u
#define LPU_STOP_CF_FIRC_ON(x)                   (((uint32_t)(((uint32_t)(x))<<LPU_STOP_CF_FIRC_ON_SHIFT))&LPU_STOP_CF_FIRC_ON_MASK)
#define LPU_STOP_CF_FXOSC_ON_MASK                0x2u
#define LPU_STOP_CF_FXOSC_ON_SHIFT               1u
#define LPU_STOP_CF_FXOSC_ON_WIDTH               1u
#define LPU_STOP_CF_FXOSC_ON(x)                  (((uint32_t)(((uint32_t)(x))<<LPU_STOP_CF_FXOSC_ON_SHIFT))&LPU_STOP_CF_FXOSC_ON_MASK)
#define LPU_STOP_CF_SIRC_ON_MASK                 0x8u
#define LPU_STOP_CF_SIRC_ON_SHIFT                3u
#define LPU_STOP_CF_SIRC_ON_WIDTH                1u
#define LPU_STOP_CF_SIRC_ON(x)                   (((uint32_t)(((uint32_t)(x))<<LPU_STOP_CF_SIRC_ON_SHIFT))&LPU_STOP_CF_SIRC_ON_MASK)
#define LPU_STOP_CF_SXOSC_ON_MASK                0x10u
#define LPU_STOP_CF_SXOSC_ON_SHIFT               4u
#define LPU_STOP_CF_SXOSC_ON_WIDTH               1u
#define LPU_STOP_CF_SXOSC_ON(x)                  (((uint32_t)(((uint32_t)(x))<<LPU_STOP_CF_SXOSC_ON_SHIFT))&LPU_STOP_CF_SXOSC_ON_MASK)
/* STANDBY_CF Bit Fields */
#define LPU_STANDBY_CF_FIRC_ON_MASK              0x1u
#define LPU_STANDBY_CF_FIRC_ON_SHIFT             0u
#define LPU_STANDBY_CF_FIRC_ON_WIDTH             1u
#define LPU_STANDBY_CF_FIRC_ON(x)                (((uint32_t)(((uint32_t)(x))<<LPU_STANDBY_CF_FIRC_ON_SHIFT))&LPU_STANDBY_CF_FIRC_ON_MASK)
#define LPU_STANDBY_CF_FXOSC_ON_MASK             0x2u
#define LPU_STANDBY_CF_FXOSC_ON_SHIFT            1u
#define LPU_STANDBY_CF_FXOSC_ON_WIDTH            1u
#define LPU_STANDBY_CF_FXOSC_ON(x)               (((uint32_t)(((uint32_t)(x))<<LPU_STANDBY_CF_FXOSC_ON_SHIFT))&LPU_STANDBY_CF_FXOSC_ON_MASK)
#define LPU_STANDBY_CF_SIRC_ON_MASK              0x8u
#define LPU_STANDBY_CF_SIRC_ON_SHIFT             3u
#define LPU_STANDBY_CF_SIRC_ON_WIDTH             1u
#define LPU_STANDBY_CF_SIRC_ON(x)                (((uint32_t)(((uint32_t)(x))<<LPU_STANDBY_CF_SIRC_ON_SHIFT))&LPU_STANDBY_CF_SIRC_ON_MASK)
#define LPU_STANDBY_CF_SXOSC_ON_MASK             0x10u
#define LPU_STANDBY_CF_SXOSC_ON_SHIFT            4u
#define LPU_STANDBY_CF_SXOSC_ON_WIDTH            1u
#define LPU_STANDBY_CF_SXOSC_ON(x)               (((uint32_t)(((uint32_t)(x))<<LPU_STANDBY_CF_SXOSC_ON_SHIFT))&LPU_STANDBY_CF_SXOSC_ON_MASK)
/* SR Bit Fields */
#define LPU_SR_CURRENT_MODE_MASK                 0xFu
#define LPU_SR_CURRENT_MODE_SHIFT                0u
#define LPU_SR_CURRENT_MODE_WIDTH                4u
#define LPU_SR_CURRENT_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<LPU_SR_CURRENT_MODE_SHIFT))&LPU_SR_CURRENT_MODE_MASK)
#define LPU_SR_MTRANS_MASK                       0x20u
#define LPU_SR_MTRANS_SHIFT                      5u
#define LPU_SR_MTRANS_WIDTH                      1u
#define LPU_SR_MTRANS(x)                         (((uint32_t)(((uint32_t)(x))<<LPU_SR_MTRANS_SHIFT))&LPU_SR_MTRANS_MASK)
#define LPU_SR_CLK0_STOP_MASK                    0x4000u
#define LPU_SR_CLK0_STOP_SHIFT                   14u
#define LPU_SR_CLK0_STOP_WIDTH                   1u
#define LPU_SR_CLK0_STOP(x)                      (((uint32_t)(((uint32_t)(x))<<LPU_SR_CLK0_STOP_SHIFT))&LPU_SR_CLK0_STOP_MASK)
#define LPU_SR_CLK1_STOP_MASK                    0x8000u
#define LPU_SR_CLK1_STOP_SHIFT                   15u
#define LPU_SR_CLK1_STOP_WIDTH                   1u
#define LPU_SR_CLK1_STOP(x)                      (((uint32_t)(((uint32_t)(x))<<LPU_SR_CLK1_STOP_SHIFT))&LPU_SR_CLK1_STOP_MASK)
#define LPU_SR_FIRC_STAT_MASK                    0x10000u
#define LPU_SR_FIRC_STAT_SHIFT                   16u
#define LPU_SR_FIRC_STAT_WIDTH                   1u
#define LPU_SR_FIRC_STAT(x)                      (((uint32_t)(((uint32_t)(x))<<LPU_SR_FIRC_STAT_SHIFT))&LPU_SR_FIRC_STAT_MASK)
#define LPU_SR_FXOSC_STAT_MASK                   0x20000u
#define LPU_SR_FXOSC_STAT_SHIFT                  17u
#define LPU_SR_FXOSC_STAT_WIDTH                  1u
#define LPU_SR_FXOSC_STAT(x)                     (((uint32_t)(((uint32_t)(x))<<LPU_SR_FXOSC_STAT_SHIFT))&LPU_SR_FXOSC_STAT_MASK)
#define LPU_SR_SIRC_STAT_MASK                    0x80000u
#define LPU_SR_SIRC_STAT_SHIFT                   19u
#define LPU_SR_SIRC_STAT_WIDTH                   1u
#define LPU_SR_SIRC_STAT(x)                      (((uint32_t)(((uint32_t)(x))<<LPU_SR_SIRC_STAT_SHIFT))&LPU_SR_SIRC_STAT_MASK)
#define LPU_SR_SXOSC_STAT_MASK                   0x100000u
#define LPU_SR_SXOSC_STAT_SHIFT                  20u
#define LPU_SR_SXOSC_STAT_WIDTH                  1u
#define LPU_SR_SXOSC_STAT(x)                     (((uint32_t)(((uint32_t)(x))<<LPU_SR_SXOSC_STAT_SHIFT))&LPU_SR_SXOSC_STAT_MASK)
#define LPU_SR_PD2_PWR_STAT_MASK                 0x200000u
#define LPU_SR_PD2_PWR_STAT_SHIFT                21u
#define LPU_SR_PD2_PWR_STAT_WIDTH                1u
#define LPU_SR_PD2_PWR_STAT(x)                   (((uint32_t)(((uint32_t)(x))<<LPU_SR_PD2_PWR_STAT_SHIFT))&LPU_SR_PD2_PWR_STAT_MASK)
/* ICR Bit Fields */
#define LPU_ICR_LPU_NEM_MASK                     0x4u
#define LPU_ICR_LPU_NEM_SHIFT                    2u
#define LPU_ICR_LPU_NEM_WIDTH                    1u
#define LPU_ICR_LPU_NEM(x)                       (((uint32_t)(((uint32_t)(x))<<LPU_ICR_LPU_NEM_SHIFT))&LPU_ICR_LPU_NEM_MASK)
#define LPU_ICR_LPU_MRIG_MASK                    0x8u
#define LPU_ICR_LPU_MRIG_SHIFT                   3u
#define LPU_ICR_LPU_MRIG_WIDTH                   1u
#define LPU_ICR_LPU_MRIG(x)                      (((uint32_t)(((uint32_t)(x))<<LPU_ICR_LPU_MRIG_SHIFT))&LPU_ICR_LPU_MRIG_MASK)
#define LPU_ICR_LPU_NEM_E_MASK                   0x40000u
#define LPU_ICR_LPU_NEM_E_SHIFT                  18u
#define LPU_ICR_LPU_NEM_E_WIDTH                  1u
#define LPU_ICR_LPU_NEM_E(x)                     (((uint32_t)(((uint32_t)(x))<<LPU_ICR_LPU_NEM_E_SHIFT))&LPU_ICR_LPU_NEM_E_MASK)
#define LPU_ICR_LPU_MRIG_E_MASK                  0x80000u
#define LPU_ICR_LPU_MRIG_E_SHIFT                 19u
#define LPU_ICR_LPU_MRIG_E_WIDTH                 1u
#define LPU_ICR_LPU_MRIG_E(x)                    (((uint32_t)(((uint32_t)(x))<<LPU_ICR_LPU_MRIG_E_SHIFT))&LPU_ICR_LPU_MRIG_E_MASK)
/* MDIS Bit Fields */
#define LPU_MDIS_ADC_0_MASK                      0x1u
#define LPU_MDIS_ADC_0_SHIFT                     0u
#define LPU_MDIS_ADC_0_WIDTH                     1u
#define LPU_MDIS_ADC_0(x)                        (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_ADC_0_SHIFT))&LPU_MDIS_ADC_0_MASK)
#define LPU_MDIS_SPI_0_MASK                      0x2u
#define LPU_MDIS_SPI_0_SHIFT                     1u
#define LPU_MDIS_SPI_0_WIDTH                     1u
#define LPU_MDIS_SPI_0(x)                        (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_SPI_0_SHIFT))&LPU_MDIS_SPI_0_MASK)
#define LPU_MDIS_LIN_0_MASK                      0x4u
#define LPU_MDIS_LIN_0_SHIFT                     2u
#define LPU_MDIS_LIN_0_WIDTH                     1u
#define LPU_MDIS_LIN_0(x)                        (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_LIN_0_SHIFT))&LPU_MDIS_LIN_0_MASK)
#define LPU_MDIS_CAN0_MASK                       0x8u
#define LPU_MDIS_CAN0_SHIFT                      3u
#define LPU_MDIS_CAN0_WIDTH                      1u
#define LPU_MDIS_CAN0(x)                         (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_CAN0_SHIFT))&LPU_MDIS_CAN0_MASK)
#define LPU_MDIS_BCTU_MASK                       0x10u
#define LPU_MDIS_BCTU_SHIFT                      4u
#define LPU_MDIS_BCTU_WIDTH                      1u
#define LPU_MDIS_BCTU(x)                         (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_BCTU_SHIFT))&LPU_MDIS_BCTU_MASK)
#define LPU_MDIS_MEMU_1_MASK                     0x20u
#define LPU_MDIS_MEMU_1_SHIFT                    5u
#define LPU_MDIS_MEMU_1_WIDTH                    1u
#define LPU_MDIS_MEMU_1(x)                       (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_MEMU_1_SHIFT))&LPU_MDIS_MEMU_1_MASK)
#define LPU_MDIS_CMP_0_MASK                      0x40u
#define LPU_MDIS_CMP_0_SHIFT                     6u
#define LPU_MDIS_CMP_0_WIDTH                     1u
#define LPU_MDIS_CMP_0(x)                        (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_CMP_0_SHIFT))&LPU_MDIS_CMP_0_MASK)
#define LPU_MDIS_CMP_1_MASK                      0x80u
#define LPU_MDIS_CMP_1_SHIFT                     7u
#define LPU_MDIS_CMP_1_WIDTH                     1u
#define LPU_MDIS_CMP_1(x)                        (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_CMP_1_SHIFT))&LPU_MDIS_CMP_1_MASK)
#define LPU_MDIS_CMP_2_MASK                      0x100u
#define LPU_MDIS_CMP_2_SHIFT                     8u
#define LPU_MDIS_CMP_2_WIDTH                     1u
#define LPU_MDIS_CMP_2(x)                        (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_CMP_2_SHIFT))&LPU_MDIS_CMP_2_MASK)
#define LPU_MDIS_eMIOS_2_MASK                    0x200u
#define LPU_MDIS_eMIOS_2_SHIFT                   9u
#define LPU_MDIS_eMIOS_2_WIDTH                   1u
#define LPU_MDIS_eMIOS_2(x)                      (((uint32_t)(((uint32_t)(x))<<LPU_MDIS_eMIOS_2_SHIFT))&LPU_MDIS_eMIOS_2_MASK)

/*!
 * @}
 */ /* end of group LPU_Register_Masks */


/*!
 * @}
 */ /* end of group LPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_CGM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_Peripheral_Access_Layer MC_CGM Peripheral Access Layer
 * @{
 */


/** MC_CGM - Size of Registers Arrays */

/** MC_CGM - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[384];
  __IO uint32_t CLKOUT1_SC;                        /**< Clockout 1 Select Register, offset: 0x180 */
       uint8_t RESERVED_1[4];
  __IO uint32_t CLKOUT1_DC;                        /**< CLKOUT1_DC Configuration Register, offset: 0x188 */
       uint8_t RESERVED_2[52];
  __IO uint32_t AC5_SC;                            /**< Auxiliary Clock 5 Select Control Register, offset: 0x1C0 */
  __I  uint32_t AC5_SS;                            /**< Auxiliary Clock 5 Select Status Register, offset: 0x1C4 */
       uint8_t RESERVED_3[56];
  __I  uint32_t SC_DC6;                            /**< System Clock Divider 6 Configuration Register, offset: 0x200 */
       uint8_t RESERVED_4[124];
  __IO uint32_t AC8_SC;                            /**< Auxiliary Clock 8 Select Control Register, offset: 0x280 */
  __I  uint32_t AC8_SS;                            /**< Auxiliary Clock 8 Select Status Register, offset: 0x284 */
       uint8_t RESERVED_5[56];
  __IO uint32_t AC9_SC;                            /**< Auxiliary Clock 9 Select Control Register, offset: 0x2C0 */
  __I  uint32_t AC9_SS;                            /**< Auxiliary Clock 9 Select Status Register, offset: 0x2C4 */
       uint8_t RESERVED_6[1080];
  __IO uint8_t PCS_SDUR;                           /**< PCS Switch Duration Register, offset: 0x700 */
       uint8_t RESERVED_7[3];
  __IO uint32_t PCS_DIVC1;                         /**< PCS Divider Change Register 1, offset: 0x704 */
  __IO uint32_t PCS_DIVE1;                         /**< PCS Divider End Register 1, offset: 0x708 */
  __IO uint32_t PCS_DIVS1;                         /**< PCS Divider Start Register 1, offset: 0x70C */
  __IO uint32_t PCS_DIVC2;                         /**< PCS Divider Change Register 2, offset: 0x710 */
  __IO uint32_t PCS_DIVE2;                         /**< PCS Divider End Register 2, offset: 0x714 */
  __IO uint32_t PCS_DIVS2;                         /**< PCS Divider Start Register 2, offset: 0x718 */
       uint8_t RESERVED_8[176];
  __IO uint32_t DIV_UPD_ABRTD;                     /**< Divider Update Abort Register, offset: 0x7CC */
  __IO uint32_t SC_DIV_RC;                         /**< System Clock Divider Ratio Change Register, offset: 0x7D0 */
  __IO uint32_t DIV_UPD_TYPE;                      /**< Divider Update Type Register, offset: 0x7D4 */
  __O  uint32_t DIV_UPD_TRIG;                      /**< Divider Update Trigger Register, offset: 0x7D8 */
  __IO uint32_t DIV_UPD_STAT;                      /**< Divider Update Status Register, offset: 0x7DC */
       uint8_t RESERVED_9[4];
  __I  uint32_t SC_SS;                             /**< System Clock Select Status Register, offset: 0x7E4 */
  __IO uint32_t SC_DC0;                            /**< System Clock Divider 0 Configuration Register, offset: 0x7E8 */
  __IO uint32_t SC_DC1;                            /**< System Clock Divider 1 Configuration Register, offset: 0x7EC */
  __IO uint32_t SC_DC2;                            /**< System Clock Divider 2 Configuration Register, offset: 0x7F0 */
  __I  uint32_t SC_DC3;                            /**< System Clock Divider 3 Configuration Register, offset: 0x7F4 */
  __I  uint32_t SC_DC4;                            /**< System Clock Divider 4 Configuration Register, offset: 0x7F8 */
  __IO uint32_t SC_DC5;                            /**< System Clock Divider 5 Configuration Register, offset: 0x7FC */
       uint8_t RESERVED_10[64];
  __IO uint32_t AC2_SC;                            /**< Auxiliary Clock 2 Select Control Register, offset: 0x840 */
  __I  uint32_t AC2_SS;                            /**< Auxiliary Clock 2 Select Status Register, offset: 0x844 */
       uint8_t RESERVED_11[28];
  __I  uint32_t AC3_SS;                            /**< Auxiliary Clock 3 Select Status Register, offset: 0x864 */
       uint8_t RESERVED_12[24];
  __IO uint32_t AC4_SC;                            /**< Auxiliary Clock 4 Select Control Register, offset: 0x880 */
  __I  uint32_t AC4_SS;                            /**< Auxiliary Clock 4 Select Status Register, offset: 0x884 */
       uint8_t RESERVED_13[56];
  __IO uint32_t AC6_SC;                            /**< Auxiliary Clock 6 Select Control Register, offset: 0x8C0 */
  __I  uint32_t AC6_SS;                            /**< Auxiliary Clock 6 Select Status Register, offset: 0x8C4 */
  __IO uint32_t AC6_DC0;                           /**< Aux Clock 6 Divider Configuration 0 for CLKOUT_0, offset: 0x8C8 */
} MC_CGM_Type, *MC_CGM_MemMapPtr;

 /** Number of instances of the MC_CGM module. */
#define MC_CGM_INSTANCE_COUNT                    (1u)


/* MC_CGM - Peripheral instance base addresses */
/** Peripheral MC_CGM base address */
#define MC_CGM_BASE                              (0xFFFB0000u)
/** Peripheral MC_CGM base pointer */
#define MC_CGM                                   ((MC_CGM_Type *)MC_CGM_BASE)
/** Array initializer of MC_CGM peripheral base addresses */
#define MC_CGM_BASE_ADDRS                        { MC_CGM_BASE }
/** Array initializer of MC_CGM peripheral base pointers */
#define MC_CGM_BASE_PTRS                         { MC_CGM }

/* ----------------------------------------------------------------------------
   -- MC_CGM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_CGM_Register_Masks MC_CGM Register Masks
 * @{
 */

/* CLKOUT1_SC Bit Fields */
#define MC_CGM_CLKOUT1_SC_SELCTL_MASK            0xF000000u
#define MC_CGM_CLKOUT1_SC_SELCTL_SHIFT           24u
#define MC_CGM_CLKOUT1_SC_SELCTL_WIDTH           4u
#define MC_CGM_CLKOUT1_SC_SELCTL(x)              (((uint32_t)(((uint32_t)(x))<<MC_CGM_CLKOUT1_SC_SELCTL_SHIFT))&MC_CGM_CLKOUT1_SC_SELCTL_MASK)
/* CLKOUT1_DC Bit Fields */
#define MC_CGM_CLKOUT1_DC_DIV_MASK               0x7FF0000u
#define MC_CGM_CLKOUT1_DC_DIV_SHIFT              16u
#define MC_CGM_CLKOUT1_DC_DIV_WIDTH              11u
#define MC_CGM_CLKOUT1_DC_DIV(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_CLKOUT1_DC_DIV_SHIFT))&MC_CGM_CLKOUT1_DC_DIV_MASK)
#define MC_CGM_CLKOUT1_DC_DE_MASK                0x80000000u
#define MC_CGM_CLKOUT1_DC_DE_SHIFT               31u
#define MC_CGM_CLKOUT1_DC_DE_WIDTH               1u
#define MC_CGM_CLKOUT1_DC_DE(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_CLKOUT1_DC_DE_SHIFT))&MC_CGM_CLKOUT1_DC_DE_MASK)
/* AC5_SC Bit Fields */
#define MC_CGM_AC5_SC_SELCTL_MASK                0x1000000u
#define MC_CGM_AC5_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC5_SC_SELCTL_WIDTH               1u
#define MC_CGM_AC5_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC5_SC_SELCTL_SHIFT))&MC_CGM_AC5_SC_SELCTL_MASK)
/* AC5_SS Bit Fields */
#define MC_CGM_AC5_SS_SELSTAT_MASK               0x1000000u
#define MC_CGM_AC5_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC5_SS_SELSTAT_WIDTH              1u
#define MC_CGM_AC5_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC5_SS_SELSTAT_SHIFT))&MC_CGM_AC5_SS_SELSTAT_MASK)
/* SC_DC6 Bit Fields */
#define MC_CGM_SC_DC6_DIV_MASK                   0x70000u
#define MC_CGM_SC_DC6_DIV_SHIFT                  16u
#define MC_CGM_SC_DC6_DIV_WIDTH                  3u
#define MC_CGM_SC_DC6_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC6_DIV_SHIFT))&MC_CGM_SC_DC6_DIV_MASK)
#define MC_CGM_SC_DC6_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC6_DE_SHIFT                   31u
#define MC_CGM_SC_DC6_DE_WIDTH                   1u
#define MC_CGM_SC_DC6_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC6_DE_SHIFT))&MC_CGM_SC_DC6_DE_MASK)
/* AC8_SC Bit Fields */
#define MC_CGM_AC8_SC_SELCTL_MASK                0x1000000u
#define MC_CGM_AC8_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC8_SC_SELCTL_WIDTH               1u
#define MC_CGM_AC8_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC8_SC_SELCTL_SHIFT))&MC_CGM_AC8_SC_SELCTL_MASK)
/* AC8_SS Bit Fields */
#define MC_CGM_AC8_SS_SELSTAT_MASK               0x1000000u
#define MC_CGM_AC8_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC8_SS_SELSTAT_WIDTH              1u
#define MC_CGM_AC8_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC8_SS_SELSTAT_SHIFT))&MC_CGM_AC8_SS_SELSTAT_MASK)
/* AC9_SC Bit Fields */
#define MC_CGM_AC9_SC_SELCTL_MASK                0x1000000u
#define MC_CGM_AC9_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC9_SC_SELCTL_WIDTH               1u
#define MC_CGM_AC9_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC9_SC_SELCTL_SHIFT))&MC_CGM_AC9_SC_SELCTL_MASK)
/* AC9_SS Bit Fields */
#define MC_CGM_AC9_SS_SELSTAT_MASK               0x1000000u
#define MC_CGM_AC9_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC9_SS_SELSTAT_WIDTH              1u
#define MC_CGM_AC9_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC9_SS_SELSTAT_SHIFT))&MC_CGM_AC9_SS_SELSTAT_MASK)
/* PCS_SDUR Bit Fields */
#define MC_CGM_PCS_SDUR_SDUR_MASK                0xFFu
#define MC_CGM_PCS_SDUR_SDUR_SHIFT               0u
#define MC_CGM_PCS_SDUR_SDUR_WIDTH               8u
#define MC_CGM_PCS_SDUR_SDUR(x)                  (((uint8_t)(((uint8_t)(x))<<MC_CGM_PCS_SDUR_SDUR_SHIFT))&MC_CGM_PCS_SDUR_SDUR_MASK)
/* PCS_DIVC1 Bit Fields */
#define MC_CGM_PCS_DIVC1_RATE_MASK               0xFFu
#define MC_CGM_PCS_DIVC1_RATE_SHIFT              0u
#define MC_CGM_PCS_DIVC1_RATE_WIDTH              8u
#define MC_CGM_PCS_DIVC1_RATE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC1_RATE_SHIFT))&MC_CGM_PCS_DIVC1_RATE_MASK)
#define MC_CGM_PCS_DIVC1_INIT_MASK               0xFFFF0000u
#define MC_CGM_PCS_DIVC1_INIT_SHIFT              16u
#define MC_CGM_PCS_DIVC1_INIT_WIDTH              16u
#define MC_CGM_PCS_DIVC1_INIT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC1_INIT_SHIFT))&MC_CGM_PCS_DIVC1_INIT_MASK)
/* PCS_DIVE1 Bit Fields */
#define MC_CGM_PCS_DIVE1_DIVE_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVE1_DIVE_SHIFT              0u
#define MC_CGM_PCS_DIVE1_DIVE_WIDTH              20u
#define MC_CGM_PCS_DIVE1_DIVE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVE1_DIVE_SHIFT))&MC_CGM_PCS_DIVE1_DIVE_MASK)
/* PCS_DIVS1 Bit Fields */
#define MC_CGM_PCS_DIVS1_DIVS_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVS1_DIVS_SHIFT              0u
#define MC_CGM_PCS_DIVS1_DIVS_WIDTH              20u
#define MC_CGM_PCS_DIVS1_DIVS(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVS1_DIVS_SHIFT))&MC_CGM_PCS_DIVS1_DIVS_MASK)
/* PCS_DIVC2 Bit Fields */
#define MC_CGM_PCS_DIVC2_RATE_MASK               0xFFu
#define MC_CGM_PCS_DIVC2_RATE_SHIFT              0u
#define MC_CGM_PCS_DIVC2_RATE_WIDTH              8u
#define MC_CGM_PCS_DIVC2_RATE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC2_RATE_SHIFT))&MC_CGM_PCS_DIVC2_RATE_MASK)
#define MC_CGM_PCS_DIVC2_INIT_MASK               0xFFFF0000u
#define MC_CGM_PCS_DIVC2_INIT_SHIFT              16u
#define MC_CGM_PCS_DIVC2_INIT_WIDTH              16u
#define MC_CGM_PCS_DIVC2_INIT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVC2_INIT_SHIFT))&MC_CGM_PCS_DIVC2_INIT_MASK)
/* PCS_DIVE2 Bit Fields */
#define MC_CGM_PCS_DIVE2_DIVE_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVE2_DIVE_SHIFT              0u
#define MC_CGM_PCS_DIVE2_DIVE_WIDTH              20u
#define MC_CGM_PCS_DIVE2_DIVE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVE2_DIVE_SHIFT))&MC_CGM_PCS_DIVE2_DIVE_MASK)
/* PCS_DIVS2 Bit Fields */
#define MC_CGM_PCS_DIVS2_DIVS_MASK               0xFFFFFu
#define MC_CGM_PCS_DIVS2_DIVS_SHIFT              0u
#define MC_CGM_PCS_DIVS2_DIVS_WIDTH              20u
#define MC_CGM_PCS_DIVS2_DIVS(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_PCS_DIVS2_DIVS_SHIFT))&MC_CGM_PCS_DIVS2_DIVS_MASK)
/* DIV_UPD_ABRTD Bit Fields */
#define MC_CGM_DIV_UPD_ABRTD_DIV_UPD_ABRTD_MASK  0x1u
#define MC_CGM_DIV_UPD_ABRTD_DIV_UPD_ABRTD_SHIFT 0u
#define MC_CGM_DIV_UPD_ABRTD_DIV_UPD_ABRTD_WIDTH 1u
#define MC_CGM_DIV_UPD_ABRTD_DIV_UPD_ABRTD(x)    (((uint32_t)(((uint32_t)(x))<<MC_CGM_DIV_UPD_ABRTD_DIV_UPD_ABRTD_SHIFT))&MC_CGM_DIV_UPD_ABRTD_DIV_UPD_ABRTD_MASK)
/* SC_DIV_RC Bit Fields */
#define MC_CGM_SC_DIV_RC_SYS_DIV_RATIO_CHNG_MASK 0x1u
#define MC_CGM_SC_DIV_RC_SYS_DIV_RATIO_CHNG_SHIFT 0u
#define MC_CGM_SC_DIV_RC_SYS_DIV_RATIO_CHNG_WIDTH 1u
#define MC_CGM_SC_DIV_RC_SYS_DIV_RATIO_CHNG(x)   (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DIV_RC_SYS_DIV_RATIO_CHNG_SHIFT))&MC_CGM_SC_DIV_RC_SYS_DIV_RATIO_CHNG_MASK)
#define MC_CGM_SC_DIV_RC_HALT_ABORT_DIS_MASK     0x2u
#define MC_CGM_SC_DIV_RC_HALT_ABORT_DIS_SHIFT    1u
#define MC_CGM_SC_DIV_RC_HALT_ABORT_DIS_WIDTH    1u
#define MC_CGM_SC_DIV_RC_HALT_ABORT_DIS(x)       (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DIV_RC_HALT_ABORT_DIS_SHIFT))&MC_CGM_SC_DIV_RC_HALT_ABORT_DIS_MASK)
/* DIV_UPD_TYPE Bit Fields */
#define MC_CGM_DIV_UPD_TYPE_SYS_UPD_TYPE_MASK    0x80000000u
#define MC_CGM_DIV_UPD_TYPE_SYS_UPD_TYPE_SHIFT   31u
#define MC_CGM_DIV_UPD_TYPE_SYS_UPD_TYPE_WIDTH   1u
#define MC_CGM_DIV_UPD_TYPE_SYS_UPD_TYPE(x)      (((uint32_t)(((uint32_t)(x))<<MC_CGM_DIV_UPD_TYPE_SYS_UPD_TYPE_SHIFT))&MC_CGM_DIV_UPD_TYPE_SYS_UPD_TYPE_MASK)
/* DIV_UPD_TRIG Bit Fields */
#define MC_CGM_DIV_UPD_TRIG_DIV_UPD_TRIGGER_MASK 0xFFFFFFFFu
#define MC_CGM_DIV_UPD_TRIG_DIV_UPD_TRIGGER_SHIFT 0u
#define MC_CGM_DIV_UPD_TRIG_DIV_UPD_TRIGGER_WIDTH 32u
#define MC_CGM_DIV_UPD_TRIG_DIV_UPD_TRIGGER(x)   (((uint32_t)(((uint32_t)(x))<<MC_CGM_DIV_UPD_TRIG_DIV_UPD_TRIGGER_SHIFT))&MC_CGM_DIV_UPD_TRIG_DIV_UPD_TRIGGER_MASK)
/* DIV_UPD_STAT Bit Fields */
#define MC_CGM_DIV_UPD_STAT_SYS_UPD_STAT_MASK    0x80000000u
#define MC_CGM_DIV_UPD_STAT_SYS_UPD_STAT_SHIFT   31u
#define MC_CGM_DIV_UPD_STAT_SYS_UPD_STAT_WIDTH   1u
#define MC_CGM_DIV_UPD_STAT_SYS_UPD_STAT(x)      (((uint32_t)(((uint32_t)(x))<<MC_CGM_DIV_UPD_STAT_SYS_UPD_STAT_SHIFT))&MC_CGM_DIV_UPD_STAT_SYS_UPD_STAT_MASK)
/* SC_SS Bit Fields */
#define MC_CGM_SC_SS_SWIP_MASK                   0x10000u
#define MC_CGM_SC_SS_SWIP_SHIFT                  16u
#define MC_CGM_SC_SS_SWIP_WIDTH                  1u
#define MC_CGM_SC_SS_SWIP(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_SS_SWIP_SHIFT))&MC_CGM_SC_SS_SWIP_MASK)
#define MC_CGM_SC_SS_SWTRG_MASK                  0xE0000u
#define MC_CGM_SC_SS_SWTRG_SHIFT                 17u
#define MC_CGM_SC_SS_SWTRG_WIDTH                 3u
#define MC_CGM_SC_SS_SWTRG(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_SS_SWTRG_SHIFT))&MC_CGM_SC_SS_SWTRG_MASK)
#define MC_CGM_SC_SS_SELSTAT_MASK                0xF000000u
#define MC_CGM_SC_SS_SELSTAT_SHIFT               24u
#define MC_CGM_SC_SS_SELSTAT_WIDTH               4u
#define MC_CGM_SC_SS_SELSTAT(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_SS_SELSTAT_SHIFT))&MC_CGM_SC_SS_SELSTAT_MASK)
/* SC_DC0 Bit Fields */
#define MC_CGM_SC_DC0_DIV_MASK                   0x70000u
#define MC_CGM_SC_DC0_DIV_SHIFT                  16u
#define MC_CGM_SC_DC0_DIV_WIDTH                  3u
#define MC_CGM_SC_DC0_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC0_DIV_SHIFT))&MC_CGM_SC_DC0_DIV_MASK)
#define MC_CGM_SC_DC0_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC0_DE_SHIFT                   31u
#define MC_CGM_SC_DC0_DE_WIDTH                   1u
#define MC_CGM_SC_DC0_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC0_DE_SHIFT))&MC_CGM_SC_DC0_DE_MASK)
/* SC_DC1 Bit Fields */
#define MC_CGM_SC_DC1_DIV_MASK                   0x70000u
#define MC_CGM_SC_DC1_DIV_SHIFT                  16u
#define MC_CGM_SC_DC1_DIV_WIDTH                  3u
#define MC_CGM_SC_DC1_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC1_DIV_SHIFT))&MC_CGM_SC_DC1_DIV_MASK)
#define MC_CGM_SC_DC1_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC1_DE_SHIFT                   31u
#define MC_CGM_SC_DC1_DE_WIDTH                   1u
#define MC_CGM_SC_DC1_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC1_DE_SHIFT))&MC_CGM_SC_DC1_DE_MASK)
/* SC_DC2 Bit Fields */
#define MC_CGM_SC_DC2_DIV_MASK                   0xF0000u
#define MC_CGM_SC_DC2_DIV_SHIFT                  16u
#define MC_CGM_SC_DC2_DIV_WIDTH                  4u
#define MC_CGM_SC_DC2_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC2_DIV_SHIFT))&MC_CGM_SC_DC2_DIV_MASK)
#define MC_CGM_SC_DC2_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC2_DE_SHIFT                   31u
#define MC_CGM_SC_DC2_DE_WIDTH                   1u
#define MC_CGM_SC_DC2_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC2_DE_SHIFT))&MC_CGM_SC_DC2_DE_MASK)
/* SC_DC3 Bit Fields */
#define MC_CGM_SC_DC3_DIV_MASK                   0x30000u
#define MC_CGM_SC_DC3_DIV_SHIFT                  16u
#define MC_CGM_SC_DC3_DIV_WIDTH                  2u
#define MC_CGM_SC_DC3_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC3_DIV_SHIFT))&MC_CGM_SC_DC3_DIV_MASK)
#define MC_CGM_SC_DC3_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC3_DE_SHIFT                   31u
#define MC_CGM_SC_DC3_DE_WIDTH                   1u
#define MC_CGM_SC_DC3_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC3_DE_SHIFT))&MC_CGM_SC_DC3_DE_MASK)
/* SC_DC4 Bit Fields */
#define MC_CGM_SC_DC4_DIV_MASK                   0x30000u
#define MC_CGM_SC_DC4_DIV_SHIFT                  16u
#define MC_CGM_SC_DC4_DIV_WIDTH                  2u
#define MC_CGM_SC_DC4_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC4_DIV_SHIFT))&MC_CGM_SC_DC4_DIV_MASK)
#define MC_CGM_SC_DC4_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC4_DE_SHIFT                   31u
#define MC_CGM_SC_DC4_DE_WIDTH                   1u
#define MC_CGM_SC_DC4_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC4_DE_SHIFT))&MC_CGM_SC_DC4_DE_MASK)
/* SC_DC5 Bit Fields */
#define MC_CGM_SC_DC5_DIV_MASK                   0x70000u
#define MC_CGM_SC_DC5_DIV_SHIFT                  16u
#define MC_CGM_SC_DC5_DIV_WIDTH                  3u
#define MC_CGM_SC_DC5_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC5_DIV_SHIFT))&MC_CGM_SC_DC5_DIV_MASK)
#define MC_CGM_SC_DC5_DE_MASK                    0x80000000u
#define MC_CGM_SC_DC5_DE_SHIFT                   31u
#define MC_CGM_SC_DC5_DE_WIDTH                   1u
#define MC_CGM_SC_DC5_DE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_CGM_SC_DC5_DE_SHIFT))&MC_CGM_SC_DC5_DE_MASK)
/* AC2_SC Bit Fields */
#define MC_CGM_AC2_SC_SELCTL_MASK                0x1000000u
#define MC_CGM_AC2_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC2_SC_SELCTL_WIDTH               1u
#define MC_CGM_AC2_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC2_SC_SELCTL_SHIFT))&MC_CGM_AC2_SC_SELCTL_MASK)
/* AC2_SS Bit Fields */
#define MC_CGM_AC2_SS_SELSTAT_MASK               0x1000000u
#define MC_CGM_AC2_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC2_SS_SELSTAT_WIDTH              1u
#define MC_CGM_AC2_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC2_SS_SELSTAT_SHIFT))&MC_CGM_AC2_SS_SELSTAT_MASK)
/* AC4_SC Bit Fields */
#define MC_CGM_AC4_SC_SELCTL_MASK                0x1000000u
#define MC_CGM_AC4_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC4_SC_SELCTL_WIDTH               1u
#define MC_CGM_AC4_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC4_SC_SELCTL_SHIFT))&MC_CGM_AC4_SC_SELCTL_MASK)
/* AC4_SS Bit Fields */
#define MC_CGM_AC4_SS_SELSTAT_MASK               0x1000000u
#define MC_CGM_AC4_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC4_SS_SELSTAT_WIDTH              1u
#define MC_CGM_AC4_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC4_SS_SELSTAT_SHIFT))&MC_CGM_AC4_SS_SELSTAT_MASK)
/* AC6_SC Bit Fields */
#define MC_CGM_AC6_SC_SELCTL_MASK                0xF000000u
#define MC_CGM_AC6_SC_SELCTL_SHIFT               24u
#define MC_CGM_AC6_SC_SELCTL_WIDTH               4u
#define MC_CGM_AC6_SC_SELCTL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_SC_SELCTL_SHIFT))&MC_CGM_AC6_SC_SELCTL_MASK)
/* AC6_SS Bit Fields */
#define MC_CGM_AC6_SS_SELSTAT_MASK               0xF000000u
#define MC_CGM_AC6_SS_SELSTAT_SHIFT              24u
#define MC_CGM_AC6_SS_SELSTAT_WIDTH              4u
#define MC_CGM_AC6_SS_SELSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_SS_SELSTAT_SHIFT))&MC_CGM_AC6_SS_SELSTAT_MASK)
/* AC6_DC0 Bit Fields */
#define MC_CGM_AC6_DC0_DIV_MASK                  0x1F0000u
#define MC_CGM_AC6_DC0_DIV_SHIFT                 16u
#define MC_CGM_AC6_DC0_DIV_WIDTH                 5u
#define MC_CGM_AC6_DC0_DIV(x)                    (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_DC0_DIV_SHIFT))&MC_CGM_AC6_DC0_DIV_MASK)
#define MC_CGM_AC6_DC0_DE_MASK                   0x80000000u
#define MC_CGM_AC6_DC0_DE_SHIFT                  31u
#define MC_CGM_AC6_DC0_DE_WIDTH                  1u
#define MC_CGM_AC6_DC0_DE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_CGM_AC6_DC0_DE_SHIFT))&MC_CGM_AC6_DC0_DE_MASK)

/*!
 * @}
 */ /* end of group MC_CGM_Register_Masks */


/*!
 * @}
 */ /* end of group MC_CGM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_ME Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_ME_Peripheral_Access_Layer MC_ME Peripheral Access Layer
 * @{
 */


/** MC_ME - Size of Registers Arrays */
#define MC_ME_RUN_PC_COUNT                       8u
#define MC_ME_LP_PC_COUNT                        8u

/** MC_ME - Register Layout Typedef */
typedef struct {
  __I  uint32_t GS;                                /**< Global Status Register, offset: 0x0 */
  __IO uint32_t MCTL;                              /**< Mode Control Register, offset: 0x4 */
  __IO uint32_t ME;                                /**< Mode Enable Register, offset: 0x8 */
  __IO uint32_t IS;                                /**< Interrupt Status Register, offset: 0xC */
  __IO uint32_t IM;                                /**< Interrupt Mask Register, offset: 0x10 */
  __IO uint32_t IMTS;                              /**< Invalid Mode Transition Status Register, offset: 0x14 */
  __I  uint32_t DMTS;                              /**< Debug Mode Transition Status Register, offset: 0x18 */
       uint8_t RESERVED_0[4];
  __I  uint32_t RESET_MC;                          /**< RESET Mode Configuration Register, offset: 0x20 */
       uint8_t RESERVED_1[4];
  __IO uint32_t SAFE_MC;                           /**< SAFE Mode Configuration Register, offset: 0x28 */
  __IO uint32_t DRUN_MC;                           /**< DRUN Mode Configuration Register, offset: 0x2C */
  __IO uint32_t RUN0_MC;                           /**< RUN0 Mode Configuration Register, offset: 0x30 */
  __IO uint32_t RUN1_MC;                           /**< RUN1 Mode Configuration Register, offset: 0x34 */
  __IO uint32_t RUN2_MC;                           /**< RUN2 Mode Configuration Register, offset: 0x38 */
  __IO uint32_t RUN3_MC;                           /**< RUN3 Mode Configuration Register, offset: 0x3C */
       uint8_t RESERVED_2[8];
  __IO uint32_t STOP_MC;                           /**< STOP0 Mode Configuration Register, offset: 0x48 */
       uint8_t RESERVED_3[8];
  __IO uint32_t STANDBY_MC;                        /**< STANDBY0 Mode Configuration Register, offset: 0x54 */
       uint8_t RESERVED_4[8];
  __I  uint32_t PS0;                               /**< Peripheral Status Register 0, offset: 0x60 */
  __I  uint32_t PS1;                               /**< Peripheral Status Register 1, offset: 0x64 */
  __IO uint32_t PS2;                               /**< Peripheral Status Register 2, offset: 0x68 */
  __I  uint32_t PS3;                               /**< Peripheral Status Register 3, offset: 0x6C */
       uint8_t RESERVED_5[16];
  __IO uint32_t RUN_PC[MC_ME_RUN_PC_COUNT];        /**< Run Peripheral Configuration Register, array offset: 0x80, array step: 0x4 */
  __IO uint32_t LP_PC[MC_ME_LP_PC_COUNT];          /**< Low-Power Peripheral Configuration Register, array offset: 0xA0, array step: 0x4 */
  __IO uint8_t PCTL0;                              /**< BCTU Peripheral Control Register, offset: 0xC0 */
  __IO uint8_t PCTL1;                              /**< eMIOS_0 Peripheral Control Register, offset: 0xC1 */
  __IO uint8_t PCTL2;                              /**< eMIOS_1 Peripheral Control Register, offset: 0xC2 */
  __IO uint8_t PCTL3;                              /**< eMIOS_2 Peripheral Control Register, offset: 0xC3 */
  __IO uint8_t PCTL4;                              /**< USB OTG Peripheral Control register, offset: 0xC4 */
  __IO uint8_t PCTL5;                              /**< USB_SPH Peripheral Control Register, offset: 0xC5 */
  __IO uint8_t PCTL6;                              /**< MLB Peripheral Control Register, offset: 0xC6 */
  __IO uint8_t PCTL7;                              /**< SDHC Peripheral Control Register, offset: 0xC7 */
       uint8_t RESERVED_6[2];
  __IO uint8_t PCTL10;                             /**< SAI0 Peripheral Control Register, offset: 0xCA */
  __IO uint8_t PCTL11;                             /**< SAI1 Peripheral Control Register, offset: 0xCB */
  __IO uint8_t PCTL12;                             /**< SAI2 Peripheral Control Register, offset: 0xCC */
       uint8_t RESERVED_7[2];
  __IO uint8_t PCTL15;                             /**< ENET Peripheral Control Register, offset: 0xCF */
       uint8_t RESERVED_8[4];
  __IO uint8_t PCTL20;                             /**< CMP_0 Peripheral Control Register, offset: 0xD4 */
  __IO uint8_t PCTL21;                             /**< CMP_1 Peripheral Control Register, offset: 0xD5 */
  __IO uint8_t PCTL22;                             /**< CMP_2 Peripheral Control Register, offset: 0xD6 */
       uint8_t RESERVED_9[1];
  __IO uint8_t PCTL24;                             /**< ADC_0 Peripheral Control Register, offset: 0xD8 */
  __IO uint8_t PCTL25;                             /**< ADC_1 Peripheral Control Register, offset: 0xD9 */
       uint8_t RESERVED_10[2];
  __IO uint8_t PCTL28;                             /**< FlexRay Peripheral Control Register, offset: 0xDC */
       uint8_t RESERVED_11[1];
  __IO uint8_t PCTL30;                             /**< IIC_0 Peripheral Control Register, offset: 0xDE */
  __IO uint8_t PCTL31;                             /**< IIC_1 Peripheral Control Register, offset: 0xDF */
  __IO uint8_t PCTL32;                             /**< IIC_2 Peripheral Control Register, offset: 0xE0 */
  __IO uint8_t PCTL33;                             /**< IIC_3 Peripheral Control Register, offset: 0xE1 */
       uint8_t RESERVED_12[6];
  __IO uint8_t PCTL40;                             /**< DSPI_0 Peripheral Control Register, offset: 0xE8 */
  __IO uint8_t PCTL41;                             /**< DSPI_1 Peripheral Control Register, offset: 0xE9 */
  __IO uint8_t PCTL42;                             /**< DSPI_2 Peripheral Control Register, offset: 0xEA */
  __IO uint8_t PCTL43;                             /**< DSPI_3 Peripheral Control Register, offset: 0xEB */
       uint8_t RESERVED_13[6];
  __IO uint8_t PCTL50;                             /**< LIN_0 Peripheral Control Register, offset: 0xF2 */
  __IO uint8_t PCTL51;                             /**< LIN_1 Peripheral Control Register, offset: 0xF3 */
  __IO uint8_t PCTL52;                             /**< LIN_2 Peripheral Control Register, offset: 0xF4 */
  __IO uint8_t PCTL53;                             /**< LIN_3 Peripheral Control Register, offset: 0xF5 */
  __IO uint8_t PCTL54;                             /**< LIN_4 Peripheral Control Register, offset: 0xF6 */
  __IO uint8_t PCTL55;                             /**< LIN_5 Peripheral Control Register, offset: 0xF7 */
  __IO uint8_t PCTL56;                             /**< LIN_6 Peripheral Control Register, offset: 0xF8 */
  __IO uint8_t PCTL57;                             /**< LIN_7 Peripheral Control Register, offset: 0xF9 */
  __IO uint8_t PCTL58;                             /**< LIN 8 Peripheral Control Register, offset: 0xFA */
  __IO uint8_t PCTL59;                             /**< LIN_9 Peripheral Control Register, offset: 0xFB */
  __IO uint8_t PCTL60;                             /**< LIN_10 Peripheral Control Register, offset: 0xFC */
  __IO uint8_t PCTL61;                             /**< LIN_11 Peripheral Control Register, offset: 0xFD */
  __IO uint8_t PCTL62;                             /**< LIN 12 Peripheral Control Register, offset: 0xFE */
  __IO uint8_t PCTL63;                             /**< LIN_13 Peripheral Control Register, offset: 0xFF */
  __IO uint8_t PCTL64;                             /**< LIN 14 Peripheral Control Register, offset: 0x100 */
  __IO uint8_t PCTL65;                             /**< LIN_15 Peripheral Control Register, offset: 0x101 */
  __IO uint8_t PCTL66;                             /**< LIN_16 Peripheral Control Register, offset: 0x102 */
  __IO uint8_t PCTL67;                             /**< LIN_17 Peripheral Control Register, offset: 0x103 */
       uint8_t RESERVED_14[2];
  __IO uint8_t PCTL70;                             /**< FLEXCAN_0 Peripheral Control Register, offset: 0x106 */
  __IO uint8_t PCTL71;                             /**< FLEXCAN_1 Peripheral Control Register, offset: 0x107 */
  __IO uint8_t PCTL72;                             /**< FLEXCAN_2 Peripheral Control Register, offset: 0x108 */
  __IO uint8_t PCTL73;                             /**< FLEXCAN_3 Peripheral Control Register, offset: 0x109 */
  __IO uint8_t PCTL74;                             /**< FLEXCAN_4 Peripheral Control Register, offset: 0x10A */
  __IO uint8_t PCTL75;                             /**< FLEXCAN_5 Peripheral Control Register, offset: 0x10B */
  __IO uint8_t PCTL76;                             /**< FLEXCAN_6 Peripheral Control Register, offset: 0x10C */
  __IO uint8_t PCTL77;                             /**< FLEXCAN_7 Peripheral Control Register, offset: 0x10D */
       uint8_t RESERVED_15[4];
  __IO uint8_t PCTL82;                             /**< JDC Control Register, offset: 0x112 */
  __IO uint8_t PCTL83;                             /**< MEMU_0 Control Register, offset: 0x113 */
  __IO uint8_t PCTL84;                             /**< CRC Control Register, offset: 0x114 */
       uint8_t RESERVED_16[5];
  __IO uint8_t PCTL90;                             /**< DMAMUX Control Register, offset: 0x11A */
  __IO uint8_t PCTL91;                             /**< PIT_RTI_0 Control Register, offset: 0x11B */
       uint8_t RESERVED_17[1];
  __IO uint8_t PCTL93;                             /**< WKPU Control Register, offset: 0x11D */
       uint8_t RESERVED_18[2];
  __IO uint8_t PCTL96;                             /**< SPI0 Control Register, offset: 0x120 */
  __IO uint8_t PCTL97;                             /**< SPI1 Control Register, offset: 0x121 */
  __IO uint8_t PCTL98;                             /**< SPI2 Control Register, offset: 0x122 */
  __IO uint8_t PCTL99;                             /**< SPI3 Control Register, offset: 0x123 */
  __IO uint8_t PCTL100;                            /**< SPI4 Control Register, offset: 0x124 */
  __IO uint8_t PCTL101;                            /**< SPI5 Control Register, offset: 0x125 */
  __IO uint8_t PCTL102;                            /**< RTC-API Control Register, offset: 0x126 */
       uint8_t RESERVED_19[2];
  __IO uint8_t PCTL105;                            /**< MEMU_1 Control Register, offset: 0x129 */
       uint8_t RESERVED_20[150];
  __I  uint32_t CS;                                /**< Core Status Register, offset: 0x1C0 */
       uint8_t RESERVED_21[2];
  __IO uint16_t CCTL1;                             /**< Core1 Control Register, offset: 0x1C6 */
  __IO uint16_t CCTL2;                             /**< Core2 Control Register, offset: 0x1C8 */
  __IO uint16_t CCTL3;                             /**< Core3 Control Register, offset: 0x1CA */
       uint8_t RESERVED_22[24];
  __IO uint32_t CADDR1;                            /**< CORE1 Address Register, offset: 0x1E4 */
  __IO uint32_t CADDR2;                            /**< CORE2 Address Register, offset: 0x1E8 */
  __IO uint32_t CADDR3;                            /**< CORE3 Address Register, offset: 0x1EC */
} MC_ME_Type, *MC_ME_MemMapPtr;

 /** Number of instances of the MC_ME module. */
#define MC_ME_INSTANCE_COUNT                     (1u)


/* MC_ME - Peripheral instance base addresses */
/** Peripheral MC_ME base address */
#define MC_ME_BASE                               (0xFFFB8000u)
/** Peripheral MC_ME base pointer */
#define MC_ME                                    ((MC_ME_Type *)MC_ME_BASE)
/** Array initializer of MC_ME peripheral base addresses */
#define MC_ME_BASE_ADDRS                         { MC_ME_BASE }
/** Array initializer of MC_ME peripheral base pointers */
#define MC_ME_BASE_PTRS                          { MC_ME }

/* ----------------------------------------------------------------------------
   -- MC_ME Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_ME_Register_Masks MC_ME Register Masks
 * @{
 */

/* GS Bit Fields */
#define MC_ME_GS_S_SYSCLK_MASK                   0xFu
#define MC_ME_GS_S_SYSCLK_SHIFT                  0u
#define MC_ME_GS_S_SYSCLK_WIDTH                  4u
#define MC_ME_GS_S_SYSCLK(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_SYSCLK_SHIFT))&MC_ME_GS_S_SYSCLK_MASK)
#define MC_ME_GS_S_FIRCON_MASK                   0x10u
#define MC_ME_GS_S_FIRCON_SHIFT                  4u
#define MC_ME_GS_S_FIRCON_WIDTH                  1u
#define MC_ME_GS_S_FIRCON(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_FIRCON_SHIFT))&MC_ME_GS_S_FIRCON_MASK)
#define MC_ME_GS_S_FXOSC_MASK                    0x20u
#define MC_ME_GS_S_FXOSC_SHIFT                   5u
#define MC_ME_GS_S_FXOSC_WIDTH                   1u
#define MC_ME_GS_S_FXOSC(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_FXOSC_SHIFT))&MC_ME_GS_S_FXOSC_MASK)
#define MC_ME_GS_S_PLLON_MASK                    0x40u
#define MC_ME_GS_S_PLLON_SHIFT                   6u
#define MC_ME_GS_S_PLLON_WIDTH                   1u
#define MC_ME_GS_S_PLLON(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_PLLON_SHIFT))&MC_ME_GS_S_PLLON_MASK)
#define MC_ME_GS_S_SIRCON_MASK                   0x80u
#define MC_ME_GS_S_SIRCON_SHIFT                  7u
#define MC_ME_GS_S_SIRCON_WIDTH                  1u
#define MC_ME_GS_S_SIRCON(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_SIRCON_SHIFT))&MC_ME_GS_S_SIRCON_MASK)
#define MC_ME_GS_S_SXOSC_MASK                    0x100u
#define MC_ME_GS_S_SXOSC_SHIFT                   8u
#define MC_ME_GS_S_SXOSC_WIDTH                   1u
#define MC_ME_GS_S_SXOSC(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_SXOSC_SHIFT))&MC_ME_GS_S_SXOSC_MASK)
#define MC_ME_GS_S_FLA_MASK                      0x30000u
#define MC_ME_GS_S_FLA_SHIFT                     16u
#define MC_ME_GS_S_FLA_WIDTH                     2u
#define MC_ME_GS_S_FLA(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_FLA_SHIFT))&MC_ME_GS_S_FLA_MASK)
#define MC_ME_GS_S_MVR_MASK                      0x100000u
#define MC_ME_GS_S_MVR_SHIFT                     20u
#define MC_ME_GS_S_MVR_WIDTH                     1u
#define MC_ME_GS_S_MVR(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_MVR_SHIFT))&MC_ME_GS_S_MVR_MASK)
#define MC_ME_GS_S_PDO_MASK                      0x800000u
#define MC_ME_GS_S_PDO_SHIFT                     23u
#define MC_ME_GS_S_PDO_WIDTH                     1u
#define MC_ME_GS_S_PDO(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_PDO_SHIFT))&MC_ME_GS_S_PDO_MASK)
#define MC_ME_GS_S_MTRANS_MASK                   0x8000000u
#define MC_ME_GS_S_MTRANS_SHIFT                  27u
#define MC_ME_GS_S_MTRANS_WIDTH                  1u
#define MC_ME_GS_S_MTRANS(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_MTRANS_SHIFT))&MC_ME_GS_S_MTRANS_MASK)
#define MC_ME_GS_S_CURRENT_MODE_MASK             0xF0000000u
#define MC_ME_GS_S_CURRENT_MODE_SHIFT            28u
#define MC_ME_GS_S_CURRENT_MODE_WIDTH            4u
#define MC_ME_GS_S_CURRENT_MODE(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_GS_S_CURRENT_MODE_SHIFT))&MC_ME_GS_S_CURRENT_MODE_MASK)
/* MCTL Bit Fields */
#define MC_ME_MCTL_KEY_MASK                      0xFFFFu
#define MC_ME_MCTL_KEY_SHIFT                     0u
#define MC_ME_MCTL_KEY_WIDTH                     16u
#define MC_ME_MCTL_KEY(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_MCTL_KEY_SHIFT))&MC_ME_MCTL_KEY_MASK)
#define MC_ME_MCTL_TARGET_MODE_MASK              0xF0000000u
#define MC_ME_MCTL_TARGET_MODE_SHIFT             28u
#define MC_ME_MCTL_TARGET_MODE_WIDTH             4u
#define MC_ME_MCTL_TARGET_MODE(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_MCTL_TARGET_MODE_SHIFT))&MC_ME_MCTL_TARGET_MODE_MASK)
/* ME Bit Fields */
#define MC_ME_ME_RESET_FUNC_MASK                 0x1u
#define MC_ME_ME_RESET_FUNC_SHIFT                0u
#define MC_ME_ME_RESET_FUNC_WIDTH                1u
#define MC_ME_ME_RESET_FUNC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RESET_FUNC_SHIFT))&MC_ME_ME_RESET_FUNC_MASK)
#define MC_ME_ME_SAFE_MASK                       0x4u
#define MC_ME_ME_SAFE_SHIFT                      2u
#define MC_ME_ME_SAFE_WIDTH                      1u
#define MC_ME_ME_SAFE(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_SAFE_SHIFT))&MC_ME_ME_SAFE_MASK)
#define MC_ME_ME_DRUN_MASK                       0x8u
#define MC_ME_ME_DRUN_SHIFT                      3u
#define MC_ME_ME_DRUN_WIDTH                      1u
#define MC_ME_ME_DRUN(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_DRUN_SHIFT))&MC_ME_ME_DRUN_MASK)
#define MC_ME_ME_RUN0_MASK                       0x10u
#define MC_ME_ME_RUN0_SHIFT                      4u
#define MC_ME_ME_RUN0_WIDTH                      1u
#define MC_ME_ME_RUN0(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN0_SHIFT))&MC_ME_ME_RUN0_MASK)
#define MC_ME_ME_RUN1_MASK                       0x20u
#define MC_ME_ME_RUN1_SHIFT                      5u
#define MC_ME_ME_RUN1_WIDTH                      1u
#define MC_ME_ME_RUN1(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN1_SHIFT))&MC_ME_ME_RUN1_MASK)
#define MC_ME_ME_RUN2_MASK                       0x40u
#define MC_ME_ME_RUN2_SHIFT                      6u
#define MC_ME_ME_RUN2_WIDTH                      1u
#define MC_ME_ME_RUN2(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN2_SHIFT))&MC_ME_ME_RUN2_MASK)
#define MC_ME_ME_RUN3_MASK                       0x80u
#define MC_ME_ME_RUN3_SHIFT                      7u
#define MC_ME_ME_RUN3_WIDTH                      1u
#define MC_ME_ME_RUN3(x)                         (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RUN3_SHIFT))&MC_ME_ME_RUN3_MASK)
#define MC_ME_ME_STOP0_MASK                      0x400u
#define MC_ME_ME_STOP0_SHIFT                     10u
#define MC_ME_ME_STOP0_WIDTH                     1u
#define MC_ME_ME_STOP0(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_STOP0_SHIFT))&MC_ME_ME_STOP0_MASK)
#define MC_ME_ME_STANDBY0_MASK                   0x2000u
#define MC_ME_ME_STANDBY0_SHIFT                  13u
#define MC_ME_ME_STANDBY0_WIDTH                  1u
#define MC_ME_ME_STANDBY0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_STANDBY0_SHIFT))&MC_ME_ME_STANDBY0_MASK)
#define MC_ME_ME_RESET_DEST_MASK                 0x8000u
#define MC_ME_ME_RESET_DEST_SHIFT                15u
#define MC_ME_ME_RESET_DEST_WIDTH                1u
#define MC_ME_ME_RESET_DEST(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_ME_RESET_DEST_SHIFT))&MC_ME_ME_RESET_DEST_MASK)
/* IS Bit Fields */
#define MC_ME_IS_I_MTC_MASK                      0x1u
#define MC_ME_IS_I_MTC_SHIFT                     0u
#define MC_ME_IS_I_MTC_WIDTH                     1u
#define MC_ME_IS_I_MTC(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_MTC_SHIFT))&MC_ME_IS_I_MTC_MASK)
#define MC_ME_IS_I_SAFE_MASK                     0x2u
#define MC_ME_IS_I_SAFE_SHIFT                    1u
#define MC_ME_IS_I_SAFE_WIDTH                    1u
#define MC_ME_IS_I_SAFE(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_SAFE_SHIFT))&MC_ME_IS_I_SAFE_MASK)
#define MC_ME_IS_I_IMODE_MASK                    0x4u
#define MC_ME_IS_I_IMODE_SHIFT                   2u
#define MC_ME_IS_I_IMODE_WIDTH                   1u
#define MC_ME_IS_I_IMODE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_IMODE_SHIFT))&MC_ME_IS_I_IMODE_MASK)
#define MC_ME_IS_I_ICONF_MASK                    0x8u
#define MC_ME_IS_I_ICONF_SHIFT                   3u
#define MC_ME_IS_I_ICONF_WIDTH                   1u
#define MC_ME_IS_I_ICONF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_ICONF_SHIFT))&MC_ME_IS_I_ICONF_MASK)
#define MC_ME_IS_I_ICONF_CC_MASK                 0x20u
#define MC_ME_IS_I_ICONF_CC_SHIFT                5u
#define MC_ME_IS_I_ICONF_CC_WIDTH                1u
#define MC_ME_IS_I_ICONF_CC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_IS_I_ICONF_CC_SHIFT))&MC_ME_IS_I_ICONF_CC_MASK)
/* IM Bit Fields */
#define MC_ME_IM_M_MTC_MASK                      0x1u
#define MC_ME_IM_M_MTC_SHIFT                     0u
#define MC_ME_IM_M_MTC_WIDTH                     1u
#define MC_ME_IM_M_MTC(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_MTC_SHIFT))&MC_ME_IM_M_MTC_MASK)
#define MC_ME_IM_M_SAFE_MASK                     0x2u
#define MC_ME_IM_M_SAFE_SHIFT                    1u
#define MC_ME_IM_M_SAFE_WIDTH                    1u
#define MC_ME_IM_M_SAFE(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_SAFE_SHIFT))&MC_ME_IM_M_SAFE_MASK)
#define MC_ME_IM_M_IMODE_MASK                    0x4u
#define MC_ME_IM_M_IMODE_SHIFT                   2u
#define MC_ME_IM_M_IMODE_WIDTH                   1u
#define MC_ME_IM_M_IMODE(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_IMODE_SHIFT))&MC_ME_IM_M_IMODE_MASK)
#define MC_ME_IM_M_ICONF_MASK                    0x8u
#define MC_ME_IM_M_ICONF_SHIFT                   3u
#define MC_ME_IM_M_ICONF_WIDTH                   1u
#define MC_ME_IM_M_ICONF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_ICONF_SHIFT))&MC_ME_IM_M_ICONF_MASK)
#define MC_ME_IM_M_ICONF_CC_MASK                 0x20u
#define MC_ME_IM_M_ICONF_CC_SHIFT                5u
#define MC_ME_IM_M_ICONF_CC_WIDTH                1u
#define MC_ME_IM_M_ICONF_CC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_IM_M_ICONF_CC_SHIFT))&MC_ME_IM_M_ICONF_CC_MASK)
/* IMTS Bit Fields */
#define MC_ME_IMTS_S_SEA_MASK                    0x1u
#define MC_ME_IMTS_S_SEA_SHIFT                   0u
#define MC_ME_IMTS_S_SEA_WIDTH                   1u
#define MC_ME_IMTS_S_SEA(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_SEA_SHIFT))&MC_ME_IMTS_S_SEA_MASK)
#define MC_ME_IMTS_S_NMA_MASK                    0x2u
#define MC_ME_IMTS_S_NMA_SHIFT                   1u
#define MC_ME_IMTS_S_NMA_WIDTH                   1u
#define MC_ME_IMTS_S_NMA(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_NMA_SHIFT))&MC_ME_IMTS_S_NMA_MASK)
#define MC_ME_IMTS_S_DMA_MASK                    0x4u
#define MC_ME_IMTS_S_DMA_SHIFT                   2u
#define MC_ME_IMTS_S_DMA_WIDTH                   1u
#define MC_ME_IMTS_S_DMA(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_DMA_SHIFT))&MC_ME_IMTS_S_DMA_MASK)
#define MC_ME_IMTS_S_MRI_MASK                    0x8u
#define MC_ME_IMTS_S_MRI_SHIFT                   3u
#define MC_ME_IMTS_S_MRI_WIDTH                   1u
#define MC_ME_IMTS_S_MRI(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_MRI_SHIFT))&MC_ME_IMTS_S_MRI_MASK)
#define MC_ME_IMTS_S_MTI_MASK                    0x10u
#define MC_ME_IMTS_S_MTI_SHIFT                   4u
#define MC_ME_IMTS_S_MTI_WIDTH                   1u
#define MC_ME_IMTS_S_MTI(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_MTI_SHIFT))&MC_ME_IMTS_S_MTI_MASK)
#define MC_ME_IMTS_S_MRIG_MASK                   0x20u
#define MC_ME_IMTS_S_MRIG_SHIFT                  5u
#define MC_ME_IMTS_S_MRIG_WIDTH                  1u
#define MC_ME_IMTS_S_MRIG(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_IMTS_S_MRIG_SHIFT))&MC_ME_IMTS_S_MRIG_MASK)
/* DMTS Bit Fields */
#define MC_ME_DMTS_CDP_PRPH_0_31_MASK            0x1u
#define MC_ME_DMTS_CDP_PRPH_0_31_SHIFT           0u
#define MC_ME_DMTS_CDP_PRPH_0_31_WIDTH           1u
#define MC_ME_DMTS_CDP_PRPH_0_31(x)              (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_0_31_SHIFT))&MC_ME_DMTS_CDP_PRPH_0_31_MASK)
#define MC_ME_DMTS_CDP_PRPH_32_63_MASK           0x2u
#define MC_ME_DMTS_CDP_PRPH_32_63_SHIFT          1u
#define MC_ME_DMTS_CDP_PRPH_32_63_WIDTH          1u
#define MC_ME_DMTS_CDP_PRPH_32_63(x)             (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_32_63_SHIFT))&MC_ME_DMTS_CDP_PRPH_32_63_MASK)
#define MC_ME_DMTS_CDP_PRPH_64_95_MASK           0x4u
#define MC_ME_DMTS_CDP_PRPH_64_95_SHIFT          2u
#define MC_ME_DMTS_CDP_PRPH_64_95_WIDTH          1u
#define MC_ME_DMTS_CDP_PRPH_64_95(x)             (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_64_95_SHIFT))&MC_ME_DMTS_CDP_PRPH_64_95_MASK)
#define MC_ME_DMTS_CDP_PRPH_96_127_MASK          0x8u
#define MC_ME_DMTS_CDP_PRPH_96_127_SHIFT         3u
#define MC_ME_DMTS_CDP_PRPH_96_127_WIDTH         1u
#define MC_ME_DMTS_CDP_PRPH_96_127(x)            (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_96_127_SHIFT))&MC_ME_DMTS_CDP_PRPH_96_127_MASK)
#define MC_ME_DMTS_FLASH_SC_MASK                 0x100u
#define MC_ME_DMTS_FLASH_SC_SHIFT                8u
#define MC_ME_DMTS_FLASH_SC_WIDTH                1u
#define MC_ME_DMTS_FLASH_SC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_FLASH_SC_SHIFT))&MC_ME_DMTS_FLASH_SC_MASK)
#define MC_ME_DMTS_SYSCLK_SW_MASK                0x400u
#define MC_ME_DMTS_SYSCLK_SW_SHIFT               10u
#define MC_ME_DMTS_SYSCLK_SW_WIDTH               1u
#define MC_ME_DMTS_SYSCLK_SW(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_SYSCLK_SW_SHIFT))&MC_ME_DMTS_SYSCLK_SW_MASK)
#define MC_ME_DMTS_SCSRC_SC_MASK                 0x800u
#define MC_ME_DMTS_SCSRC_SC_SHIFT                11u
#define MC_ME_DMTS_SCSRC_SC_WIDTH                1u
#define MC_ME_DMTS_SCSRC_SC(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_SCSRC_SC_SHIFT))&MC_ME_DMTS_SCSRC_SC_MASK)
#define MC_ME_DMTS_IRC_SC_MASK                   0x1000u
#define MC_ME_DMTS_IRC_SC_SHIFT                  12u
#define MC_ME_DMTS_IRC_SC_WIDTH                  1u
#define MC_ME_DMTS_IRC_SC(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_IRC_SC_SHIFT))&MC_ME_DMTS_IRC_SC_MASK)
#define MC_ME_DMTS_CSRC_CSRC_SC_MASK             0x2000u
#define MC_ME_DMTS_CSRC_CSRC_SC_SHIFT            13u
#define MC_ME_DMTS_CSRC_CSRC_SC_WIDTH            1u
#define MC_ME_DMTS_CSRC_CSRC_SC(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CSRC_CSRC_SC_SHIFT))&MC_ME_DMTS_CSRC_CSRC_SC_MASK)
#define MC_ME_DMTS_VREG_CSRC_SC_MASK             0x4000u
#define MC_ME_DMTS_VREG_CSRC_SC_SHIFT            14u
#define MC_ME_DMTS_VREG_CSRC_SC_WIDTH            1u
#define MC_ME_DMTS_VREG_CSRC_SC(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_VREG_CSRC_SC_SHIFT))&MC_ME_DMTS_VREG_CSRC_SC_MASK)
#define MC_ME_DMTS_CDP_PRPH_0_255_MASK           0x8000u
#define MC_ME_DMTS_CDP_PRPH_0_255_SHIFT          15u
#define MC_ME_DMTS_CDP_PRPH_0_255_WIDTH          1u
#define MC_ME_DMTS_CDP_PRPH_0_255(x)             (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CDP_PRPH_0_255_SHIFT))&MC_ME_DMTS_CDP_PRPH_0_255_MASK)
#define MC_ME_DMTS_SMR_MASK                      0x10000u
#define MC_ME_DMTS_SMR_SHIFT                     16u
#define MC_ME_DMTS_SMR_WIDTH                     1u
#define MC_ME_DMTS_SMR(x)                        (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_SMR_SHIFT))&MC_ME_DMTS_SMR_MASK)
#define MC_ME_DMTS_PCS_PROG_MASK                 0x20000u
#define MC_ME_DMTS_PCS_PROG_SHIFT                17u
#define MC_ME_DMTS_PCS_PROG_WIDTH                1u
#define MC_ME_DMTS_PCS_PROG(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_PCS_PROG_SHIFT))&MC_ME_DMTS_PCS_PROG_MASK)
#define MC_ME_DMTS_CCKL_PROG_MASK                0x40000u
#define MC_ME_DMTS_CCKL_PROG_SHIFT               18u
#define MC_ME_DMTS_CCKL_PROG_WIDTH               1u
#define MC_ME_DMTS_CCKL_PROG(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_CCKL_PROG_SHIFT))&MC_ME_DMTS_CCKL_PROG_MASK)
#define MC_ME_DMTS_DBG_MODE_MASK                 0x80000u
#define MC_ME_DMTS_DBG_MODE_SHIFT                19u
#define MC_ME_DMTS_DBG_MODE_WIDTH                1u
#define MC_ME_DMTS_DBG_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_DBG_MODE_SHIFT))&MC_ME_DMTS_DBG_MODE_MASK)
#define MC_ME_DMTS_PMC_PROG_MASK                 0x100000u
#define MC_ME_DMTS_PMC_PROG_SHIFT                20u
#define MC_ME_DMTS_PMC_PROG_WIDTH                1u
#define MC_ME_DMTS_PMC_PROG(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_PMC_PROG_SHIFT))&MC_ME_DMTS_PMC_PROG_MASK)
#define MC_ME_DMTS_MPH_BUSY_MASK                 0x800000u
#define MC_ME_DMTS_MPH_BUSY_SHIFT                23u
#define MC_ME_DMTS_MPH_BUSY_WIDTH                1u
#define MC_ME_DMTS_MPH_BUSY(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_MPH_BUSY_SHIFT))&MC_ME_DMTS_MPH_BUSY_MASK)
#define MC_ME_DMTS_PREVIOUS_MODE_MASK            0xF0000000u
#define MC_ME_DMTS_PREVIOUS_MODE_SHIFT           28u
#define MC_ME_DMTS_PREVIOUS_MODE_WIDTH           4u
#define MC_ME_DMTS_PREVIOUS_MODE(x)              (((uint32_t)(((uint32_t)(x))<<MC_ME_DMTS_PREVIOUS_MODE_SHIFT))&MC_ME_DMTS_PREVIOUS_MODE_MASK)
/* RESET_MC Bit Fields */
#define MC_ME_RESET_MC_SYSCLK_MASK               0xFu
#define MC_ME_RESET_MC_SYSCLK_SHIFT              0u
#define MC_ME_RESET_MC_SYSCLK_WIDTH              4u
#define MC_ME_RESET_MC_SYSCLK(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_SYSCLK_SHIFT))&MC_ME_RESET_MC_SYSCLK_MASK)
#define MC_ME_RESET_MC_FIRCON_MASK               0x10u
#define MC_ME_RESET_MC_FIRCON_SHIFT              4u
#define MC_ME_RESET_MC_FIRCON_WIDTH              1u
#define MC_ME_RESET_MC_FIRCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_FIRCON_SHIFT))&MC_ME_RESET_MC_FIRCON_MASK)
#define MC_ME_RESET_MC_FXOSCON_MASK              0x20u
#define MC_ME_RESET_MC_FXOSCON_SHIFT             5u
#define MC_ME_RESET_MC_FXOSCON_WIDTH             1u
#define MC_ME_RESET_MC_FXOSCON(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_FXOSCON_SHIFT))&MC_ME_RESET_MC_FXOSCON_MASK)
#define MC_ME_RESET_MC_PLLON_MASK                0x40u
#define MC_ME_RESET_MC_PLLON_SHIFT               6u
#define MC_ME_RESET_MC_PLLON_WIDTH               1u
#define MC_ME_RESET_MC_PLLON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PLLON_SHIFT))&MC_ME_RESET_MC_PLLON_MASK)
#define MC_ME_RESET_MC_SIRCON_MASK               0x80u
#define MC_ME_RESET_MC_SIRCON_SHIFT              7u
#define MC_ME_RESET_MC_SIRCON_WIDTH              1u
#define MC_ME_RESET_MC_SIRCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_SIRCON_SHIFT))&MC_ME_RESET_MC_SIRCON_MASK)
#define MC_ME_RESET_MC_SXOSCON_MASK              0x100u
#define MC_ME_RESET_MC_SXOSCON_SHIFT             8u
#define MC_ME_RESET_MC_SXOSCON_WIDTH             1u
#define MC_ME_RESET_MC_SXOSCON(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_SXOSCON_SHIFT))&MC_ME_RESET_MC_SXOSCON_MASK)
#define MC_ME_RESET_MC_FLAON_MASK                0x30000u
#define MC_ME_RESET_MC_FLAON_SHIFT               16u
#define MC_ME_RESET_MC_FLAON_WIDTH               2u
#define MC_ME_RESET_MC_FLAON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_FLAON_SHIFT))&MC_ME_RESET_MC_FLAON_MASK)
#define MC_ME_RESET_MC_MVRON_MASK                0x100000u
#define MC_ME_RESET_MC_MVRON_SHIFT               20u
#define MC_ME_RESET_MC_MVRON_WIDTH               1u
#define MC_ME_RESET_MC_MVRON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_MVRON_SHIFT))&MC_ME_RESET_MC_MVRON_MASK)
#define MC_ME_RESET_MC_PDO_MASK                  0x800000u
#define MC_ME_RESET_MC_PDO_SHIFT                 23u
#define MC_ME_RESET_MC_PDO_WIDTH                 1u
#define MC_ME_RESET_MC_PDO(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PDO_SHIFT))&MC_ME_RESET_MC_PDO_MASK)
#define MC_ME_RESET_MC_PWRLVL_MASK               0x70000000u
#define MC_ME_RESET_MC_PWRLVL_SHIFT              28u
#define MC_ME_RESET_MC_PWRLVL_WIDTH              3u
#define MC_ME_RESET_MC_PWRLVL(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RESET_MC_PWRLVL_SHIFT))&MC_ME_RESET_MC_PWRLVL_MASK)
/* SAFE_MC Bit Fields */
#define MC_ME_SAFE_MC_SYSCLK_MASK                0xFu
#define MC_ME_SAFE_MC_SYSCLK_SHIFT               0u
#define MC_ME_SAFE_MC_SYSCLK_WIDTH               4u
#define MC_ME_SAFE_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_SYSCLK_SHIFT))&MC_ME_SAFE_MC_SYSCLK_MASK)
#define MC_ME_SAFE_MC_FIRCON_MASK                0x10u
#define MC_ME_SAFE_MC_FIRCON_SHIFT               4u
#define MC_ME_SAFE_MC_FIRCON_WIDTH               1u
#define MC_ME_SAFE_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_FIRCON_SHIFT))&MC_ME_SAFE_MC_FIRCON_MASK)
#define MC_ME_SAFE_MC_FXOSCON_MASK               0x20u
#define MC_ME_SAFE_MC_FXOSCON_SHIFT              5u
#define MC_ME_SAFE_MC_FXOSCON_WIDTH              1u
#define MC_ME_SAFE_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_FXOSCON_SHIFT))&MC_ME_SAFE_MC_FXOSCON_MASK)
#define MC_ME_SAFE_MC_PLLON_MASK                 0x40u
#define MC_ME_SAFE_MC_PLLON_SHIFT                6u
#define MC_ME_SAFE_MC_PLLON_WIDTH                1u
#define MC_ME_SAFE_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PLLON_SHIFT))&MC_ME_SAFE_MC_PLLON_MASK)
#define MC_ME_SAFE_MC_SIRCON_MASK                0x80u
#define MC_ME_SAFE_MC_SIRCON_SHIFT               7u
#define MC_ME_SAFE_MC_SIRCON_WIDTH               1u
#define MC_ME_SAFE_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_SIRCON_SHIFT))&MC_ME_SAFE_MC_SIRCON_MASK)
#define MC_ME_SAFE_MC_SXOSCON_MASK               0x100u
#define MC_ME_SAFE_MC_SXOSCON_SHIFT              8u
#define MC_ME_SAFE_MC_SXOSCON_WIDTH              1u
#define MC_ME_SAFE_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_SXOSCON_SHIFT))&MC_ME_SAFE_MC_SXOSCON_MASK)
#define MC_ME_SAFE_MC_FLAON_MASK                 0x30000u
#define MC_ME_SAFE_MC_FLAON_SHIFT                16u
#define MC_ME_SAFE_MC_FLAON_WIDTH                2u
#define MC_ME_SAFE_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_FLAON_SHIFT))&MC_ME_SAFE_MC_FLAON_MASK)
#define MC_ME_SAFE_MC_MVRON_MASK                 0x100000u
#define MC_ME_SAFE_MC_MVRON_SHIFT                20u
#define MC_ME_SAFE_MC_MVRON_WIDTH                1u
#define MC_ME_SAFE_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_MVRON_SHIFT))&MC_ME_SAFE_MC_MVRON_MASK)
#define MC_ME_SAFE_MC_PDO_MASK                   0x800000u
#define MC_ME_SAFE_MC_PDO_SHIFT                  23u
#define MC_ME_SAFE_MC_PDO_WIDTH                  1u
#define MC_ME_SAFE_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PDO_SHIFT))&MC_ME_SAFE_MC_PDO_MASK)
#define MC_ME_SAFE_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_SAFE_MC_PWRLVL_SHIFT               28u
#define MC_ME_SAFE_MC_PWRLVL_WIDTH               3u
#define MC_ME_SAFE_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_SAFE_MC_PWRLVL_SHIFT))&MC_ME_SAFE_MC_PWRLVL_MASK)
/* DRUN_MC Bit Fields */
#define MC_ME_DRUN_MC_SYSCLK_MASK                0xFu
#define MC_ME_DRUN_MC_SYSCLK_SHIFT               0u
#define MC_ME_DRUN_MC_SYSCLK_WIDTH               4u
#define MC_ME_DRUN_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_SYSCLK_SHIFT))&MC_ME_DRUN_MC_SYSCLK_MASK)
#define MC_ME_DRUN_MC_FIRCON_MASK                0x10u
#define MC_ME_DRUN_MC_FIRCON_SHIFT               4u
#define MC_ME_DRUN_MC_FIRCON_WIDTH               1u
#define MC_ME_DRUN_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_FIRCON_SHIFT))&MC_ME_DRUN_MC_FIRCON_MASK)
#define MC_ME_DRUN_MC_FXOSCON_MASK               0x20u
#define MC_ME_DRUN_MC_FXOSCON_SHIFT              5u
#define MC_ME_DRUN_MC_FXOSCON_WIDTH              1u
#define MC_ME_DRUN_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_FXOSCON_SHIFT))&MC_ME_DRUN_MC_FXOSCON_MASK)
#define MC_ME_DRUN_MC_PLLON_MASK                 0x40u
#define MC_ME_DRUN_MC_PLLON_SHIFT                6u
#define MC_ME_DRUN_MC_PLLON_WIDTH                1u
#define MC_ME_DRUN_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PLLON_SHIFT))&MC_ME_DRUN_MC_PLLON_MASK)
#define MC_ME_DRUN_MC_SIRCON_MASK                0x80u
#define MC_ME_DRUN_MC_SIRCON_SHIFT               7u
#define MC_ME_DRUN_MC_SIRCON_WIDTH               1u
#define MC_ME_DRUN_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_SIRCON_SHIFT))&MC_ME_DRUN_MC_SIRCON_MASK)
#define MC_ME_DRUN_MC_SXOSCON_MASK               0x100u
#define MC_ME_DRUN_MC_SXOSCON_SHIFT              8u
#define MC_ME_DRUN_MC_SXOSCON_WIDTH              1u
#define MC_ME_DRUN_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_SXOSCON_SHIFT))&MC_ME_DRUN_MC_SXOSCON_MASK)
#define MC_ME_DRUN_MC_FLAON_MASK                 0x30000u
#define MC_ME_DRUN_MC_FLAON_SHIFT                16u
#define MC_ME_DRUN_MC_FLAON_WIDTH                2u
#define MC_ME_DRUN_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_FLAON_SHIFT))&MC_ME_DRUN_MC_FLAON_MASK)
#define MC_ME_DRUN_MC_MVRON_MASK                 0x100000u
#define MC_ME_DRUN_MC_MVRON_SHIFT                20u
#define MC_ME_DRUN_MC_MVRON_WIDTH                1u
#define MC_ME_DRUN_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_MVRON_SHIFT))&MC_ME_DRUN_MC_MVRON_MASK)
#define MC_ME_DRUN_MC_PDO_MASK                   0x800000u
#define MC_ME_DRUN_MC_PDO_SHIFT                  23u
#define MC_ME_DRUN_MC_PDO_WIDTH                  1u
#define MC_ME_DRUN_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PDO_SHIFT))&MC_ME_DRUN_MC_PDO_MASK)
#define MC_ME_DRUN_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_DRUN_MC_PWRLVL_SHIFT               28u
#define MC_ME_DRUN_MC_PWRLVL_WIDTH               3u
#define MC_ME_DRUN_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_DRUN_MC_PWRLVL_SHIFT))&MC_ME_DRUN_MC_PWRLVL_MASK)
/* RUN0_MC Bit Fields */
#define MC_ME_RUN0_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN0_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN0_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN0_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_SYSCLK_SHIFT))&MC_ME_RUN0_MC_SYSCLK_MASK)
#define MC_ME_RUN0_MC_FIRCON_MASK                0x10u
#define MC_ME_RUN0_MC_FIRCON_SHIFT               4u
#define MC_ME_RUN0_MC_FIRCON_WIDTH               1u
#define MC_ME_RUN0_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_FIRCON_SHIFT))&MC_ME_RUN0_MC_FIRCON_MASK)
#define MC_ME_RUN0_MC_FXOSCON_MASK               0x20u
#define MC_ME_RUN0_MC_FXOSCON_SHIFT              5u
#define MC_ME_RUN0_MC_FXOSCON_WIDTH              1u
#define MC_ME_RUN0_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_FXOSCON_SHIFT))&MC_ME_RUN0_MC_FXOSCON_MASK)
#define MC_ME_RUN0_MC_PLLON_MASK                 0x40u
#define MC_ME_RUN0_MC_PLLON_SHIFT                6u
#define MC_ME_RUN0_MC_PLLON_WIDTH                1u
#define MC_ME_RUN0_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PLLON_SHIFT))&MC_ME_RUN0_MC_PLLON_MASK)
#define MC_ME_RUN0_MC_SIRCON_MASK                0x80u
#define MC_ME_RUN0_MC_SIRCON_SHIFT               7u
#define MC_ME_RUN0_MC_SIRCON_WIDTH               1u
#define MC_ME_RUN0_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_SIRCON_SHIFT))&MC_ME_RUN0_MC_SIRCON_MASK)
#define MC_ME_RUN0_MC_SXOSCON_MASK               0x100u
#define MC_ME_RUN0_MC_SXOSCON_SHIFT              8u
#define MC_ME_RUN0_MC_SXOSCON_WIDTH              1u
#define MC_ME_RUN0_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_SXOSCON_SHIFT))&MC_ME_RUN0_MC_SXOSCON_MASK)
#define MC_ME_RUN0_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN0_MC_FLAON_SHIFT                16u
#define MC_ME_RUN0_MC_FLAON_WIDTH                2u
#define MC_ME_RUN0_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_FLAON_SHIFT))&MC_ME_RUN0_MC_FLAON_MASK)
#define MC_ME_RUN0_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN0_MC_MVRON_SHIFT                20u
#define MC_ME_RUN0_MC_MVRON_WIDTH                1u
#define MC_ME_RUN0_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_MVRON_SHIFT))&MC_ME_RUN0_MC_MVRON_MASK)
#define MC_ME_RUN0_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN0_MC_PDO_SHIFT                  23u
#define MC_ME_RUN0_MC_PDO_WIDTH                  1u
#define MC_ME_RUN0_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PDO_SHIFT))&MC_ME_RUN0_MC_PDO_MASK)
#define MC_ME_RUN0_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN0_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN0_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN0_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN0_MC_PWRLVL_SHIFT))&MC_ME_RUN0_MC_PWRLVL_MASK)
/* RUN1_MC Bit Fields */
#define MC_ME_RUN1_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN1_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN1_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN1_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_SYSCLK_SHIFT))&MC_ME_RUN1_MC_SYSCLK_MASK)
#define MC_ME_RUN1_MC_FIRCON_MASK                0x10u
#define MC_ME_RUN1_MC_FIRCON_SHIFT               4u
#define MC_ME_RUN1_MC_FIRCON_WIDTH               1u
#define MC_ME_RUN1_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_FIRCON_SHIFT))&MC_ME_RUN1_MC_FIRCON_MASK)
#define MC_ME_RUN1_MC_FXOSCON_MASK               0x20u
#define MC_ME_RUN1_MC_FXOSCON_SHIFT              5u
#define MC_ME_RUN1_MC_FXOSCON_WIDTH              1u
#define MC_ME_RUN1_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_FXOSCON_SHIFT))&MC_ME_RUN1_MC_FXOSCON_MASK)
#define MC_ME_RUN1_MC_PLLON_MASK                 0x40u
#define MC_ME_RUN1_MC_PLLON_SHIFT                6u
#define MC_ME_RUN1_MC_PLLON_WIDTH                1u
#define MC_ME_RUN1_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PLLON_SHIFT))&MC_ME_RUN1_MC_PLLON_MASK)
#define MC_ME_RUN1_MC_SIRCON_MASK                0x80u
#define MC_ME_RUN1_MC_SIRCON_SHIFT               7u
#define MC_ME_RUN1_MC_SIRCON_WIDTH               1u
#define MC_ME_RUN1_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_SIRCON_SHIFT))&MC_ME_RUN1_MC_SIRCON_MASK)
#define MC_ME_RUN1_MC_SXOSCON_MASK               0x100u
#define MC_ME_RUN1_MC_SXOSCON_SHIFT              8u
#define MC_ME_RUN1_MC_SXOSCON_WIDTH              1u
#define MC_ME_RUN1_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_SXOSCON_SHIFT))&MC_ME_RUN1_MC_SXOSCON_MASK)
#define MC_ME_RUN1_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN1_MC_FLAON_SHIFT                16u
#define MC_ME_RUN1_MC_FLAON_WIDTH                2u
#define MC_ME_RUN1_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_FLAON_SHIFT))&MC_ME_RUN1_MC_FLAON_MASK)
#define MC_ME_RUN1_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN1_MC_MVRON_SHIFT                20u
#define MC_ME_RUN1_MC_MVRON_WIDTH                1u
#define MC_ME_RUN1_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_MVRON_SHIFT))&MC_ME_RUN1_MC_MVRON_MASK)
#define MC_ME_RUN1_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN1_MC_PDO_SHIFT                  23u
#define MC_ME_RUN1_MC_PDO_WIDTH                  1u
#define MC_ME_RUN1_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PDO_SHIFT))&MC_ME_RUN1_MC_PDO_MASK)
#define MC_ME_RUN1_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN1_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN1_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN1_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN1_MC_PWRLVL_SHIFT))&MC_ME_RUN1_MC_PWRLVL_MASK)
/* RUN2_MC Bit Fields */
#define MC_ME_RUN2_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN2_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN2_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN2_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_SYSCLK_SHIFT))&MC_ME_RUN2_MC_SYSCLK_MASK)
#define MC_ME_RUN2_MC_FIRCON_MASK                0x10u
#define MC_ME_RUN2_MC_FIRCON_SHIFT               4u
#define MC_ME_RUN2_MC_FIRCON_WIDTH               1u
#define MC_ME_RUN2_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_FIRCON_SHIFT))&MC_ME_RUN2_MC_FIRCON_MASK)
#define MC_ME_RUN2_MC_FXOSCON_MASK               0x20u
#define MC_ME_RUN2_MC_FXOSCON_SHIFT              5u
#define MC_ME_RUN2_MC_FXOSCON_WIDTH              1u
#define MC_ME_RUN2_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_FXOSCON_SHIFT))&MC_ME_RUN2_MC_FXOSCON_MASK)
#define MC_ME_RUN2_MC_PLLON_MASK                 0x40u
#define MC_ME_RUN2_MC_PLLON_SHIFT                6u
#define MC_ME_RUN2_MC_PLLON_WIDTH                1u
#define MC_ME_RUN2_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PLLON_SHIFT))&MC_ME_RUN2_MC_PLLON_MASK)
#define MC_ME_RUN2_MC_SIRCON_MASK                0x80u
#define MC_ME_RUN2_MC_SIRCON_SHIFT               7u
#define MC_ME_RUN2_MC_SIRCON_WIDTH               1u
#define MC_ME_RUN2_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_SIRCON_SHIFT))&MC_ME_RUN2_MC_SIRCON_MASK)
#define MC_ME_RUN2_MC_SXOSCON_MASK               0x100u
#define MC_ME_RUN2_MC_SXOSCON_SHIFT              8u
#define MC_ME_RUN2_MC_SXOSCON_WIDTH              1u
#define MC_ME_RUN2_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_SXOSCON_SHIFT))&MC_ME_RUN2_MC_SXOSCON_MASK)
#define MC_ME_RUN2_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN2_MC_FLAON_SHIFT                16u
#define MC_ME_RUN2_MC_FLAON_WIDTH                2u
#define MC_ME_RUN2_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_FLAON_SHIFT))&MC_ME_RUN2_MC_FLAON_MASK)
#define MC_ME_RUN2_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN2_MC_MVRON_SHIFT                20u
#define MC_ME_RUN2_MC_MVRON_WIDTH                1u
#define MC_ME_RUN2_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_MVRON_SHIFT))&MC_ME_RUN2_MC_MVRON_MASK)
#define MC_ME_RUN2_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN2_MC_PDO_SHIFT                  23u
#define MC_ME_RUN2_MC_PDO_WIDTH                  1u
#define MC_ME_RUN2_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PDO_SHIFT))&MC_ME_RUN2_MC_PDO_MASK)
#define MC_ME_RUN2_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN2_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN2_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN2_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN2_MC_PWRLVL_SHIFT))&MC_ME_RUN2_MC_PWRLVL_MASK)
/* RUN3_MC Bit Fields */
#define MC_ME_RUN3_MC_SYSCLK_MASK                0xFu
#define MC_ME_RUN3_MC_SYSCLK_SHIFT               0u
#define MC_ME_RUN3_MC_SYSCLK_WIDTH               4u
#define MC_ME_RUN3_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_SYSCLK_SHIFT))&MC_ME_RUN3_MC_SYSCLK_MASK)
#define MC_ME_RUN3_MC_FIRCON_MASK                0x10u
#define MC_ME_RUN3_MC_FIRCON_SHIFT               4u
#define MC_ME_RUN3_MC_FIRCON_WIDTH               1u
#define MC_ME_RUN3_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_FIRCON_SHIFT))&MC_ME_RUN3_MC_FIRCON_MASK)
#define MC_ME_RUN3_MC_FXOSCON_MASK               0x20u
#define MC_ME_RUN3_MC_FXOSCON_SHIFT              5u
#define MC_ME_RUN3_MC_FXOSCON_WIDTH              1u
#define MC_ME_RUN3_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_FXOSCON_SHIFT))&MC_ME_RUN3_MC_FXOSCON_MASK)
#define MC_ME_RUN3_MC_PLLON_MASK                 0x40u
#define MC_ME_RUN3_MC_PLLON_SHIFT                6u
#define MC_ME_RUN3_MC_PLLON_WIDTH                1u
#define MC_ME_RUN3_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PLLON_SHIFT))&MC_ME_RUN3_MC_PLLON_MASK)
#define MC_ME_RUN3_MC_SIRCON_MASK                0x80u
#define MC_ME_RUN3_MC_SIRCON_SHIFT               7u
#define MC_ME_RUN3_MC_SIRCON_WIDTH               1u
#define MC_ME_RUN3_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_SIRCON_SHIFT))&MC_ME_RUN3_MC_SIRCON_MASK)
#define MC_ME_RUN3_MC_SXOSCON_MASK               0x100u
#define MC_ME_RUN3_MC_SXOSCON_SHIFT              8u
#define MC_ME_RUN3_MC_SXOSCON_WIDTH              1u
#define MC_ME_RUN3_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_SXOSCON_SHIFT))&MC_ME_RUN3_MC_SXOSCON_MASK)
#define MC_ME_RUN3_MC_FLAON_MASK                 0x30000u
#define MC_ME_RUN3_MC_FLAON_SHIFT                16u
#define MC_ME_RUN3_MC_FLAON_WIDTH                2u
#define MC_ME_RUN3_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_FLAON_SHIFT))&MC_ME_RUN3_MC_FLAON_MASK)
#define MC_ME_RUN3_MC_MVRON_MASK                 0x100000u
#define MC_ME_RUN3_MC_MVRON_SHIFT                20u
#define MC_ME_RUN3_MC_MVRON_WIDTH                1u
#define MC_ME_RUN3_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_MVRON_SHIFT))&MC_ME_RUN3_MC_MVRON_MASK)
#define MC_ME_RUN3_MC_PDO_MASK                   0x800000u
#define MC_ME_RUN3_MC_PDO_SHIFT                  23u
#define MC_ME_RUN3_MC_PDO_WIDTH                  1u
#define MC_ME_RUN3_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PDO_SHIFT))&MC_ME_RUN3_MC_PDO_MASK)
#define MC_ME_RUN3_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_RUN3_MC_PWRLVL_SHIFT               28u
#define MC_ME_RUN3_MC_PWRLVL_WIDTH               3u
#define MC_ME_RUN3_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN3_MC_PWRLVL_SHIFT))&MC_ME_RUN3_MC_PWRLVL_MASK)
/* STOP_MC Bit Fields */
#define MC_ME_STOP_MC_SYSCLK_MASK                0xFu
#define MC_ME_STOP_MC_SYSCLK_SHIFT               0u
#define MC_ME_STOP_MC_SYSCLK_WIDTH               4u
#define MC_ME_STOP_MC_SYSCLK(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_SYSCLK_SHIFT))&MC_ME_STOP_MC_SYSCLK_MASK)
#define MC_ME_STOP_MC_FIRCON_MASK                0x10u
#define MC_ME_STOP_MC_FIRCON_SHIFT               4u
#define MC_ME_STOP_MC_FIRCON_WIDTH               1u
#define MC_ME_STOP_MC_FIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_FIRCON_SHIFT))&MC_ME_STOP_MC_FIRCON_MASK)
#define MC_ME_STOP_MC_FXOSCON_MASK               0x20u
#define MC_ME_STOP_MC_FXOSCON_SHIFT              5u
#define MC_ME_STOP_MC_FXOSCON_WIDTH              1u
#define MC_ME_STOP_MC_FXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_FXOSCON_SHIFT))&MC_ME_STOP_MC_FXOSCON_MASK)
#define MC_ME_STOP_MC_PLLON_MASK                 0x40u
#define MC_ME_STOP_MC_PLLON_SHIFT                6u
#define MC_ME_STOP_MC_PLLON_WIDTH                1u
#define MC_ME_STOP_MC_PLLON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_PLLON_SHIFT))&MC_ME_STOP_MC_PLLON_MASK)
#define MC_ME_STOP_MC_SIRCON_MASK                0x80u
#define MC_ME_STOP_MC_SIRCON_SHIFT               7u
#define MC_ME_STOP_MC_SIRCON_WIDTH               1u
#define MC_ME_STOP_MC_SIRCON(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_SIRCON_SHIFT))&MC_ME_STOP_MC_SIRCON_MASK)
#define MC_ME_STOP_MC_SXOSCON_MASK               0x100u
#define MC_ME_STOP_MC_SXOSCON_SHIFT              8u
#define MC_ME_STOP_MC_SXOSCON_WIDTH              1u
#define MC_ME_STOP_MC_SXOSCON(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_SXOSCON_SHIFT))&MC_ME_STOP_MC_SXOSCON_MASK)
#define MC_ME_STOP_MC_FLAON_MASK                 0x30000u
#define MC_ME_STOP_MC_FLAON_SHIFT                16u
#define MC_ME_STOP_MC_FLAON_WIDTH                2u
#define MC_ME_STOP_MC_FLAON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_FLAON_SHIFT))&MC_ME_STOP_MC_FLAON_MASK)
#define MC_ME_STOP_MC_MVRON_MASK                 0x100000u
#define MC_ME_STOP_MC_MVRON_SHIFT                20u
#define MC_ME_STOP_MC_MVRON_WIDTH                1u
#define MC_ME_STOP_MC_MVRON(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_MVRON_SHIFT))&MC_ME_STOP_MC_MVRON_MASK)
#define MC_ME_STOP_MC_PDO_MASK                   0x800000u
#define MC_ME_STOP_MC_PDO_SHIFT                  23u
#define MC_ME_STOP_MC_PDO_WIDTH                  1u
#define MC_ME_STOP_MC_PDO(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_PDO_SHIFT))&MC_ME_STOP_MC_PDO_MASK)
#define MC_ME_STOP_MC_PWRLVL_MASK                0x70000000u
#define MC_ME_STOP_MC_PWRLVL_SHIFT               28u
#define MC_ME_STOP_MC_PWRLVL_WIDTH               3u
#define MC_ME_STOP_MC_PWRLVL(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STOP_MC_PWRLVL_SHIFT))&MC_ME_STOP_MC_PWRLVL_MASK)
/* STANDBY_MC Bit Fields */
#define MC_ME_STANDBY_MC_SYSCLK_MASK             0xFu
#define MC_ME_STANDBY_MC_SYSCLK_SHIFT            0u
#define MC_ME_STANDBY_MC_SYSCLK_WIDTH            4u
#define MC_ME_STANDBY_MC_SYSCLK(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_SYSCLK_SHIFT))&MC_ME_STANDBY_MC_SYSCLK_MASK)
#define MC_ME_STANDBY_MC_FIRCON_MASK             0x10u
#define MC_ME_STANDBY_MC_FIRCON_SHIFT            4u
#define MC_ME_STANDBY_MC_FIRCON_WIDTH            1u
#define MC_ME_STANDBY_MC_FIRCON(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_FIRCON_SHIFT))&MC_ME_STANDBY_MC_FIRCON_MASK)
#define MC_ME_STANDBY_MC_FXOSCON_MASK            0x20u
#define MC_ME_STANDBY_MC_FXOSCON_SHIFT           5u
#define MC_ME_STANDBY_MC_FXOSCON_WIDTH           1u
#define MC_ME_STANDBY_MC_FXOSCON(x)              (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_FXOSCON_SHIFT))&MC_ME_STANDBY_MC_FXOSCON_MASK)
#define MC_ME_STANDBY_MC_PLLON_MASK              0x40u
#define MC_ME_STANDBY_MC_PLLON_SHIFT             6u
#define MC_ME_STANDBY_MC_PLLON_WIDTH             1u
#define MC_ME_STANDBY_MC_PLLON(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_PLLON_SHIFT))&MC_ME_STANDBY_MC_PLLON_MASK)
#define MC_ME_STANDBY_MC_SIRCON_MASK             0x80u
#define MC_ME_STANDBY_MC_SIRCON_SHIFT            7u
#define MC_ME_STANDBY_MC_SIRCON_WIDTH            1u
#define MC_ME_STANDBY_MC_SIRCON(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_SIRCON_SHIFT))&MC_ME_STANDBY_MC_SIRCON_MASK)
#define MC_ME_STANDBY_MC_SXOSCON_MASK            0x100u
#define MC_ME_STANDBY_MC_SXOSCON_SHIFT           8u
#define MC_ME_STANDBY_MC_SXOSCON_WIDTH           1u
#define MC_ME_STANDBY_MC_SXOSCON(x)              (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_SXOSCON_SHIFT))&MC_ME_STANDBY_MC_SXOSCON_MASK)
#define MC_ME_STANDBY_MC_FLAON_MASK              0x30000u
#define MC_ME_STANDBY_MC_FLAON_SHIFT             16u
#define MC_ME_STANDBY_MC_FLAON_WIDTH             2u
#define MC_ME_STANDBY_MC_FLAON(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_FLAON_SHIFT))&MC_ME_STANDBY_MC_FLAON_MASK)
#define MC_ME_STANDBY_MC_MVRON_MASK              0x100000u
#define MC_ME_STANDBY_MC_MVRON_SHIFT             20u
#define MC_ME_STANDBY_MC_MVRON_WIDTH             1u
#define MC_ME_STANDBY_MC_MVRON(x)                (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_MVRON_SHIFT))&MC_ME_STANDBY_MC_MVRON_MASK)
#define MC_ME_STANDBY_MC_PDO_MASK                0x800000u
#define MC_ME_STANDBY_MC_PDO_SHIFT               23u
#define MC_ME_STANDBY_MC_PDO_WIDTH               1u
#define MC_ME_STANDBY_MC_PDO(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_PDO_SHIFT))&MC_ME_STANDBY_MC_PDO_MASK)
#define MC_ME_STANDBY_MC_PWRLVL_MASK             0x70000000u
#define MC_ME_STANDBY_MC_PWRLVL_SHIFT            28u
#define MC_ME_STANDBY_MC_PWRLVL_WIDTH            3u
#define MC_ME_STANDBY_MC_PWRLVL(x)               (((uint32_t)(((uint32_t)(x))<<MC_ME_STANDBY_MC_PWRLVL_SHIFT))&MC_ME_STANDBY_MC_PWRLVL_MASK)
/* PS0 Bit Fields */
#define MC_ME_PS0_S_BCTU_MASK                    0x1u
#define MC_ME_PS0_S_BCTU_SHIFT                   0u
#define MC_ME_PS0_S_BCTU_WIDTH                   1u
#define MC_ME_PS0_S_BCTU(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_BCTU_SHIFT))&MC_ME_PS0_S_BCTU_MASK)
#define MC_ME_PS0_S_eMIOS_0_MASK                 0x2u
#define MC_ME_PS0_S_eMIOS_0_SHIFT                1u
#define MC_ME_PS0_S_eMIOS_0_WIDTH                1u
#define MC_ME_PS0_S_eMIOS_0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_eMIOS_0_SHIFT))&MC_ME_PS0_S_eMIOS_0_MASK)
#define MC_ME_PS0_S_eMIOS_1_MASK                 0x4u
#define MC_ME_PS0_S_eMIOS_1_SHIFT                2u
#define MC_ME_PS0_S_eMIOS_1_WIDTH                1u
#define MC_ME_PS0_S_eMIOS_1(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_eMIOS_1_SHIFT))&MC_ME_PS0_S_eMIOS_1_MASK)
#define MC_ME_PS0_S_eMIOS_2_MASK                 0x8u
#define MC_ME_PS0_S_eMIOS_2_SHIFT                3u
#define MC_ME_PS0_S_eMIOS_2_WIDTH                1u
#define MC_ME_PS0_S_eMIOS_2(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_eMIOS_2_SHIFT))&MC_ME_PS0_S_eMIOS_2_MASK)
#define MC_ME_PS0_S_USBOTG_MASK                  0x10u
#define MC_ME_PS0_S_USBOTG_SHIFT                 4u
#define MC_ME_PS0_S_USBOTG_WIDTH                 1u
#define MC_ME_PS0_S_USBOTG(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_USBOTG_SHIFT))&MC_ME_PS0_S_USBOTG_MASK)
#define MC_ME_PS0_S_USB_SPH_MASK                 0x20u
#define MC_ME_PS0_S_USB_SPH_SHIFT                5u
#define MC_ME_PS0_S_USB_SPH_WIDTH                1u
#define MC_ME_PS0_S_USB_SPH(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_USB_SPH_SHIFT))&MC_ME_PS0_S_USB_SPH_MASK)
#define MC_ME_PS0_S_MLB_MASK                     0x40u
#define MC_ME_PS0_S_MLB_SHIFT                    6u
#define MC_ME_PS0_S_MLB_WIDTH                    1u
#define MC_ME_PS0_S_MLB(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_MLB_SHIFT))&MC_ME_PS0_S_MLB_MASK)
#define MC_ME_PS0_S_SDHC_MASK                    0x80u
#define MC_ME_PS0_S_SDHC_SHIFT                   7u
#define MC_ME_PS0_S_SDHC_WIDTH                   1u
#define MC_ME_PS0_S_SDHC(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_SDHC_SHIFT))&MC_ME_PS0_S_SDHC_MASK)
#define MC_ME_PS0_S_SAI_0_MASK                   0x400u
#define MC_ME_PS0_S_SAI_0_SHIFT                  10u
#define MC_ME_PS0_S_SAI_0_WIDTH                  1u
#define MC_ME_PS0_S_SAI_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_SAI_0_SHIFT))&MC_ME_PS0_S_SAI_0_MASK)
#define MC_ME_PS0_S_SAI_1_MASK                   0x800u
#define MC_ME_PS0_S_SAI_1_SHIFT                  11u
#define MC_ME_PS0_S_SAI_1_WIDTH                  1u
#define MC_ME_PS0_S_SAI_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_SAI_1_SHIFT))&MC_ME_PS0_S_SAI_1_MASK)
#define MC_ME_PS0_S_SAI_2_MASK                   0x1000u
#define MC_ME_PS0_S_SAI_2_SHIFT                  12u
#define MC_ME_PS0_S_SAI_2_WIDTH                  1u
#define MC_ME_PS0_S_SAI_2(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_SAI_2_SHIFT))&MC_ME_PS0_S_SAI_2_MASK)
#define MC_ME_PS0_S_ENET_MASK                    0x8000u
#define MC_ME_PS0_S_ENET_SHIFT                   15u
#define MC_ME_PS0_S_ENET_WIDTH                   1u
#define MC_ME_PS0_S_ENET(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ENET_SHIFT))&MC_ME_PS0_S_ENET_MASK)
#define MC_ME_PS0_S_ACMP_0_MASK                  0x100000u
#define MC_ME_PS0_S_ACMP_0_SHIFT                 20u
#define MC_ME_PS0_S_ACMP_0_WIDTH                 1u
#define MC_ME_PS0_S_ACMP_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ACMP_0_SHIFT))&MC_ME_PS0_S_ACMP_0_MASK)
#define MC_ME_PS0_S_ACMP_1_MASK                  0x200000u
#define MC_ME_PS0_S_ACMP_1_SHIFT                 21u
#define MC_ME_PS0_S_ACMP_1_WIDTH                 1u
#define MC_ME_PS0_S_ACMP_1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ACMP_1_SHIFT))&MC_ME_PS0_S_ACMP_1_MASK)
#define MC_ME_PS0_S_ACMP_2_MASK                  0x400000u
#define MC_ME_PS0_S_ACMP_2_SHIFT                 22u
#define MC_ME_PS0_S_ACMP_2_WIDTH                 1u
#define MC_ME_PS0_S_ACMP_2(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ACMP_2_SHIFT))&MC_ME_PS0_S_ACMP_2_MASK)
#define MC_ME_PS0_S_ADC_0_MASK                   0x1000000u
#define MC_ME_PS0_S_ADC_0_SHIFT                  24u
#define MC_ME_PS0_S_ADC_0_WIDTH                  1u
#define MC_ME_PS0_S_ADC_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ADC_0_SHIFT))&MC_ME_PS0_S_ADC_0_MASK)
#define MC_ME_PS0_S_ADC_1_MASK                   0x2000000u
#define MC_ME_PS0_S_ADC_1_SHIFT                  25u
#define MC_ME_PS0_S_ADC_1_WIDTH                  1u
#define MC_ME_PS0_S_ADC_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_ADC_1_SHIFT))&MC_ME_PS0_S_ADC_1_MASK)
#define MC_ME_PS0_S_FlexRay_MASK                 0x10000000u
#define MC_ME_PS0_S_FlexRay_SHIFT                28u
#define MC_ME_PS0_S_FlexRay_WIDTH                1u
#define MC_ME_PS0_S_FlexRay(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_FlexRay_SHIFT))&MC_ME_PS0_S_FlexRay_MASK)
#define MC_ME_PS0_S_IIC_0_MASK                   0x40000000u
#define MC_ME_PS0_S_IIC_0_SHIFT                  30u
#define MC_ME_PS0_S_IIC_0_WIDTH                  1u
#define MC_ME_PS0_S_IIC_0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_IIC_0_SHIFT))&MC_ME_PS0_S_IIC_0_MASK)
#define MC_ME_PS0_S_IIC_1_MASK                   0x80000000u
#define MC_ME_PS0_S_IIC_1_SHIFT                  31u
#define MC_ME_PS0_S_IIC_1_WIDTH                  1u
#define MC_ME_PS0_S_IIC_1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_PS0_S_IIC_1_SHIFT))&MC_ME_PS0_S_IIC_1_MASK)
/* PS1 Bit Fields */
#define MC_ME_PS1_S_IIC_MASK                     0x3u
#define MC_ME_PS1_S_IIC_SHIFT                    0u
#define MC_ME_PS1_S_IIC_WIDTH                    2u
#define MC_ME_PS1_S_IIC(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS1_S_IIC_SHIFT))&MC_ME_PS1_S_IIC_MASK)
#define MC_ME_PS1_S_DSPI_MASK                    0xF00u
#define MC_ME_PS1_S_DSPI_SHIFT                   8u
#define MC_ME_PS1_S_DSPI_WIDTH                   4u
#define MC_ME_PS1_S_DSPI(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_PS1_S_DSPI_SHIFT))&MC_ME_PS1_S_DSPI_MASK)
#define MC_ME_PS1_S_LIN_MASK                     0xFFFC0000u
#define MC_ME_PS1_S_LIN_SHIFT                    18u
#define MC_ME_PS1_S_LIN_WIDTH                    14u
#define MC_ME_PS1_S_LIN(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS1_S_LIN_SHIFT))&MC_ME_PS1_S_LIN_MASK)
/* PS2 Bit Fields */
#define MC_ME_PS2_S_LIN_MASK                     0xFu
#define MC_ME_PS2_S_LIN_SHIFT                    0u
#define MC_ME_PS2_S_LIN_WIDTH                    4u
#define MC_ME_PS2_S_LIN(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_LIN_SHIFT))&MC_ME_PS2_S_LIN_MASK)
#define MC_ME_PS2_S_FLEXCAN_MASK                 0x3FC0u
#define MC_ME_PS2_S_FLEXCAN_SHIFT                6u
#define MC_ME_PS2_S_FLEXCAN_WIDTH                8u
#define MC_ME_PS2_S_FLEXCAN(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_FLEXCAN_SHIFT))&MC_ME_PS2_S_FLEXCAN_MASK)
#define MC_ME_PS2_S_JDC_MASK                     0x40000u
#define MC_ME_PS2_S_JDC_SHIFT                    18u
#define MC_ME_PS2_S_JDC_WIDTH                    1u
#define MC_ME_PS2_S_JDC(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_JDC_SHIFT))&MC_ME_PS2_S_JDC_MASK)
#define MC_ME_PS2_S_MEMU_0_MASK                  0x80000u
#define MC_ME_PS2_S_MEMU_0_SHIFT                 19u
#define MC_ME_PS2_S_MEMU_0_WIDTH                 1u
#define MC_ME_PS2_S_MEMU_0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_MEMU_0_SHIFT))&MC_ME_PS2_S_MEMU_0_MASK)
#define MC_ME_PS2_S_CRC_MASK                     0x100000u
#define MC_ME_PS2_S_CRC_SHIFT                    20u
#define MC_ME_PS2_S_CRC_WIDTH                    1u
#define MC_ME_PS2_S_CRC(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_CRC_SHIFT))&MC_ME_PS2_S_CRC_MASK)
#define MC_ME_PS2_S_DMAMUX_MASK                  0x4000000u
#define MC_ME_PS2_S_DMAMUX_SHIFT                 26u
#define MC_ME_PS2_S_DMAMUX_WIDTH                 1u
#define MC_ME_PS2_S_DMAMUX(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_DMAMUX_SHIFT))&MC_ME_PS2_S_DMAMUX_MASK)
#define MC_ME_PS2_S_PIT_RTI_0_MASK               0x8000000u
#define MC_ME_PS2_S_PIT_RTI_0_SHIFT              27u
#define MC_ME_PS2_S_PIT_RTI_0_WIDTH              1u
#define MC_ME_PS2_S_PIT_RTI_0(x)                 (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_PIT_RTI_0_SHIFT))&MC_ME_PS2_S_PIT_RTI_0_MASK)
#define MC_ME_PS2_S_LPU_CTL_MASK                 0x10000000u
#define MC_ME_PS2_S_LPU_CTL_SHIFT                28u
#define MC_ME_PS2_S_LPU_CTL_WIDTH                1u
#define MC_ME_PS2_S_LPU_CTL(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_LPU_CTL_SHIFT))&MC_ME_PS2_S_LPU_CTL_MASK)
#define MC_ME_PS2_S_WKPU_MASK                    0x20000000u
#define MC_ME_PS2_S_WKPU_SHIFT                   29u
#define MC_ME_PS2_S_WKPU_WIDTH                   1u
#define MC_ME_PS2_S_WKPU(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_PS2_S_WKPU_SHIFT))&MC_ME_PS2_S_WKPU_MASK)
/* PS3 Bit Fields */
#define MC_ME_PS3_S_SPI_MASK                     0x3Fu
#define MC_ME_PS3_S_SPI_SHIFT                    0u
#define MC_ME_PS3_S_SPI_WIDTH                    6u
#define MC_ME_PS3_S_SPI(x)                       (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_SPI_SHIFT))&MC_ME_PS3_S_SPI_MASK)
#define MC_ME_PS3_S_RTC_API_MASK                 0x40u
#define MC_ME_PS3_S_RTC_API_SHIFT                6u
#define MC_ME_PS3_S_RTC_API_WIDTH                1u
#define MC_ME_PS3_S_RTC_API(x)                   (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_RTC_API_SHIFT))&MC_ME_PS3_S_RTC_API_MASK)
#define MC_ME_PS3_S_MEMU_1_MASK                  0x200u
#define MC_ME_PS3_S_MEMU_1_SHIFT                 9u
#define MC_ME_PS3_S_MEMU_1_WIDTH                 1u
#define MC_ME_PS3_S_MEMU_1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_PS3_S_MEMU_1_SHIFT))&MC_ME_PS3_S_MEMU_1_MASK)
/* RUN_PC Bit Fields */
#define MC_ME_RUN_PC_RESET_MASK                  0x1u
#define MC_ME_RUN_PC_RESET_SHIFT                 0u
#define MC_ME_RUN_PC_RESET_WIDTH                 1u
#define MC_ME_RUN_PC_RESET(x)                    (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RESET_SHIFT))&MC_ME_RUN_PC_RESET_MASK)
#define MC_ME_RUN_PC_SAFE_MASK                   0x4u
#define MC_ME_RUN_PC_SAFE_SHIFT                  2u
#define MC_ME_RUN_PC_SAFE_WIDTH                  1u
#define MC_ME_RUN_PC_SAFE(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_SAFE_SHIFT))&MC_ME_RUN_PC_SAFE_MASK)
#define MC_ME_RUN_PC_DRUN_MASK                   0x8u
#define MC_ME_RUN_PC_DRUN_SHIFT                  3u
#define MC_ME_RUN_PC_DRUN_WIDTH                  1u
#define MC_ME_RUN_PC_DRUN(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_DRUN_SHIFT))&MC_ME_RUN_PC_DRUN_MASK)
#define MC_ME_RUN_PC_RUN0_MASK                   0x10u
#define MC_ME_RUN_PC_RUN0_SHIFT                  4u
#define MC_ME_RUN_PC_RUN0_WIDTH                  1u
#define MC_ME_RUN_PC_RUN0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN0_SHIFT))&MC_ME_RUN_PC_RUN0_MASK)
#define MC_ME_RUN_PC_RUN1_MASK                   0x20u
#define MC_ME_RUN_PC_RUN1_SHIFT                  5u
#define MC_ME_RUN_PC_RUN1_WIDTH                  1u
#define MC_ME_RUN_PC_RUN1(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN1_SHIFT))&MC_ME_RUN_PC_RUN1_MASK)
#define MC_ME_RUN_PC_RUN2_MASK                   0x40u
#define MC_ME_RUN_PC_RUN2_SHIFT                  6u
#define MC_ME_RUN_PC_RUN2_WIDTH                  1u
#define MC_ME_RUN_PC_RUN2(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN2_SHIFT))&MC_ME_RUN_PC_RUN2_MASK)
#define MC_ME_RUN_PC_RUN3_MASK                   0x80u
#define MC_ME_RUN_PC_RUN3_SHIFT                  7u
#define MC_ME_RUN_PC_RUN3_WIDTH                  1u
#define MC_ME_RUN_PC_RUN3(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_RUN_PC_RUN3_SHIFT))&MC_ME_RUN_PC_RUN3_MASK)
/* LP_PC Bit Fields */
#define MC_ME_LP_PC_STOP0_MASK                   0x400u
#define MC_ME_LP_PC_STOP0_SHIFT                  10u
#define MC_ME_LP_PC_STOP0_WIDTH                  1u
#define MC_ME_LP_PC_STOP0(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_LP_PC_STOP0_SHIFT))&MC_ME_LP_PC_STOP0_MASK)
#define MC_ME_LP_PC_STANDBY0_MASK                0x2000u
#define MC_ME_LP_PC_STANDBY0_SHIFT               13u
#define MC_ME_LP_PC_STANDBY0_WIDTH               1u
#define MC_ME_LP_PC_STANDBY0(x)                  (((uint32_t)(((uint32_t)(x))<<MC_ME_LP_PC_STANDBY0_SHIFT))&MC_ME_LP_PC_STANDBY0_MASK)
/* PCTL0 Bit Fields */
#define MC_ME_PCTL0_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL0_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL0_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL0_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL0_RUN_CFG_SHIFT))&MC_ME_PCTL0_RUN_CFG_MASK)
#define MC_ME_PCTL0_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL0_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL0_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL0_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL0_LP_CFG_SHIFT))&MC_ME_PCTL0_LP_CFG_MASK)
#define MC_ME_PCTL0_DBG_F_MASK                   0x40u
#define MC_ME_PCTL0_DBG_F_SHIFT                  6u
#define MC_ME_PCTL0_DBG_F_WIDTH                  1u
#define MC_ME_PCTL0_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL0_DBG_F_SHIFT))&MC_ME_PCTL0_DBG_F_MASK)
/* PCTL1 Bit Fields */
#define MC_ME_PCTL1_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL1_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL1_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL1_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL1_RUN_CFG_SHIFT))&MC_ME_PCTL1_RUN_CFG_MASK)
#define MC_ME_PCTL1_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL1_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL1_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL1_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL1_LP_CFG_SHIFT))&MC_ME_PCTL1_LP_CFG_MASK)
#define MC_ME_PCTL1_DBG_F_MASK                   0x40u
#define MC_ME_PCTL1_DBG_F_SHIFT                  6u
#define MC_ME_PCTL1_DBG_F_WIDTH                  1u
#define MC_ME_PCTL1_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL1_DBG_F_SHIFT))&MC_ME_PCTL1_DBG_F_MASK)
/* PCTL2 Bit Fields */
#define MC_ME_PCTL2_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL2_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL2_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL2_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL2_RUN_CFG_SHIFT))&MC_ME_PCTL2_RUN_CFG_MASK)
#define MC_ME_PCTL2_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL2_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL2_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL2_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL2_LP_CFG_SHIFT))&MC_ME_PCTL2_LP_CFG_MASK)
#define MC_ME_PCTL2_DBG_F_MASK                   0x40u
#define MC_ME_PCTL2_DBG_F_SHIFT                  6u
#define MC_ME_PCTL2_DBG_F_WIDTH                  1u
#define MC_ME_PCTL2_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL2_DBG_F_SHIFT))&MC_ME_PCTL2_DBG_F_MASK)
/* PCTL3 Bit Fields */
#define MC_ME_PCTL3_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL3_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL3_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL3_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL3_RUN_CFG_SHIFT))&MC_ME_PCTL3_RUN_CFG_MASK)
#define MC_ME_PCTL3_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL3_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL3_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL3_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL3_LP_CFG_SHIFT))&MC_ME_PCTL3_LP_CFG_MASK)
#define MC_ME_PCTL3_DBG_F_MASK                   0x40u
#define MC_ME_PCTL3_DBG_F_SHIFT                  6u
#define MC_ME_PCTL3_DBG_F_WIDTH                  1u
#define MC_ME_PCTL3_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL3_DBG_F_SHIFT))&MC_ME_PCTL3_DBG_F_MASK)
/* PCTL4 Bit Fields */
#define MC_ME_PCTL4_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL4_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL4_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL4_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL4_RUN_CFG_SHIFT))&MC_ME_PCTL4_RUN_CFG_MASK)
#define MC_ME_PCTL4_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL4_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL4_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL4_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL4_LP_CFG_SHIFT))&MC_ME_PCTL4_LP_CFG_MASK)
#define MC_ME_PCTL4_DBG_F_MASK                   0x40u
#define MC_ME_PCTL4_DBG_F_SHIFT                  6u
#define MC_ME_PCTL4_DBG_F_WIDTH                  1u
#define MC_ME_PCTL4_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL4_DBG_F_SHIFT))&MC_ME_PCTL4_DBG_F_MASK)
/* PCTL5 Bit Fields */
#define MC_ME_PCTL5_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL5_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL5_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL5_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL5_RUN_CFG_SHIFT))&MC_ME_PCTL5_RUN_CFG_MASK)
#define MC_ME_PCTL5_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL5_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL5_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL5_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL5_LP_CFG_SHIFT))&MC_ME_PCTL5_LP_CFG_MASK)
#define MC_ME_PCTL5_DBG_F_MASK                   0x40u
#define MC_ME_PCTL5_DBG_F_SHIFT                  6u
#define MC_ME_PCTL5_DBG_F_WIDTH                  1u
#define MC_ME_PCTL5_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL5_DBG_F_SHIFT))&MC_ME_PCTL5_DBG_F_MASK)
/* PCTL6 Bit Fields */
#define MC_ME_PCTL6_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL6_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL6_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL6_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL6_RUN_CFG_SHIFT))&MC_ME_PCTL6_RUN_CFG_MASK)
#define MC_ME_PCTL6_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL6_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL6_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL6_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL6_LP_CFG_SHIFT))&MC_ME_PCTL6_LP_CFG_MASK)
#define MC_ME_PCTL6_DBG_F_MASK                   0x40u
#define MC_ME_PCTL6_DBG_F_SHIFT                  6u
#define MC_ME_PCTL6_DBG_F_WIDTH                  1u
#define MC_ME_PCTL6_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL6_DBG_F_SHIFT))&MC_ME_PCTL6_DBG_F_MASK)
/* PCTL7 Bit Fields */
#define MC_ME_PCTL7_RUN_CFG_MASK                 0x7u
#define MC_ME_PCTL7_RUN_CFG_SHIFT                0u
#define MC_ME_PCTL7_RUN_CFG_WIDTH                3u
#define MC_ME_PCTL7_RUN_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL7_RUN_CFG_SHIFT))&MC_ME_PCTL7_RUN_CFG_MASK)
#define MC_ME_PCTL7_LP_CFG_MASK                  0x38u
#define MC_ME_PCTL7_LP_CFG_SHIFT                 3u
#define MC_ME_PCTL7_LP_CFG_WIDTH                 3u
#define MC_ME_PCTL7_LP_CFG(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL7_LP_CFG_SHIFT))&MC_ME_PCTL7_LP_CFG_MASK)
#define MC_ME_PCTL7_DBG_F_MASK                   0x40u
#define MC_ME_PCTL7_DBG_F_SHIFT                  6u
#define MC_ME_PCTL7_DBG_F_WIDTH                  1u
#define MC_ME_PCTL7_DBG_F(x)                     (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL7_DBG_F_SHIFT))&MC_ME_PCTL7_DBG_F_MASK)
/* PCTL10 Bit Fields */
#define MC_ME_PCTL10_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL10_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL10_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL10_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL10_RUN_CFG_SHIFT))&MC_ME_PCTL10_RUN_CFG_MASK)
#define MC_ME_PCTL10_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL10_LP_CFG_SHIFT                3u
#define MC_ME_PCTL10_LP_CFG_WIDTH                3u
#define MC_ME_PCTL10_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL10_LP_CFG_SHIFT))&MC_ME_PCTL10_LP_CFG_MASK)
#define MC_ME_PCTL10_DBG_F_MASK                  0x40u
#define MC_ME_PCTL10_DBG_F_SHIFT                 6u
#define MC_ME_PCTL10_DBG_F_WIDTH                 1u
#define MC_ME_PCTL10_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL10_DBG_F_SHIFT))&MC_ME_PCTL10_DBG_F_MASK)
/* PCTL11 Bit Fields */
#define MC_ME_PCTL11_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL11_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL11_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL11_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL11_RUN_CFG_SHIFT))&MC_ME_PCTL11_RUN_CFG_MASK)
#define MC_ME_PCTL11_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL11_LP_CFG_SHIFT                3u
#define MC_ME_PCTL11_LP_CFG_WIDTH                3u
#define MC_ME_PCTL11_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL11_LP_CFG_SHIFT))&MC_ME_PCTL11_LP_CFG_MASK)
#define MC_ME_PCTL11_DBG_F_MASK                  0x40u
#define MC_ME_PCTL11_DBG_F_SHIFT                 6u
#define MC_ME_PCTL11_DBG_F_WIDTH                 1u
#define MC_ME_PCTL11_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL11_DBG_F_SHIFT))&MC_ME_PCTL11_DBG_F_MASK)
/* PCTL12 Bit Fields */
#define MC_ME_PCTL12_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL12_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL12_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL12_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL12_RUN_CFG_SHIFT))&MC_ME_PCTL12_RUN_CFG_MASK)
#define MC_ME_PCTL12_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL12_LP_CFG_SHIFT                3u
#define MC_ME_PCTL12_LP_CFG_WIDTH                3u
#define MC_ME_PCTL12_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL12_LP_CFG_SHIFT))&MC_ME_PCTL12_LP_CFG_MASK)
#define MC_ME_PCTL12_DBG_F_MASK                  0x40u
#define MC_ME_PCTL12_DBG_F_SHIFT                 6u
#define MC_ME_PCTL12_DBG_F_WIDTH                 1u
#define MC_ME_PCTL12_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL12_DBG_F_SHIFT))&MC_ME_PCTL12_DBG_F_MASK)
/* PCTL15 Bit Fields */
#define MC_ME_PCTL15_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL15_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL15_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL15_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL15_RUN_CFG_SHIFT))&MC_ME_PCTL15_RUN_CFG_MASK)
#define MC_ME_PCTL15_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL15_LP_CFG_SHIFT                3u
#define MC_ME_PCTL15_LP_CFG_WIDTH                3u
#define MC_ME_PCTL15_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL15_LP_CFG_SHIFT))&MC_ME_PCTL15_LP_CFG_MASK)
#define MC_ME_PCTL15_DBG_F_MASK                  0x40u
#define MC_ME_PCTL15_DBG_F_SHIFT                 6u
#define MC_ME_PCTL15_DBG_F_WIDTH                 1u
#define MC_ME_PCTL15_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL15_DBG_F_SHIFT))&MC_ME_PCTL15_DBG_F_MASK)
/* PCTL20 Bit Fields */
#define MC_ME_PCTL20_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL20_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL20_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL20_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL20_RUN_CFG_SHIFT))&MC_ME_PCTL20_RUN_CFG_MASK)
#define MC_ME_PCTL20_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL20_LP_CFG_SHIFT                3u
#define MC_ME_PCTL20_LP_CFG_WIDTH                3u
#define MC_ME_PCTL20_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL20_LP_CFG_SHIFT))&MC_ME_PCTL20_LP_CFG_MASK)
#define MC_ME_PCTL20_DBG_F_MASK                  0x40u
#define MC_ME_PCTL20_DBG_F_SHIFT                 6u
#define MC_ME_PCTL20_DBG_F_WIDTH                 1u
#define MC_ME_PCTL20_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL20_DBG_F_SHIFT))&MC_ME_PCTL20_DBG_F_MASK)
/* PCTL21 Bit Fields */
#define MC_ME_PCTL21_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL21_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL21_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL21_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL21_RUN_CFG_SHIFT))&MC_ME_PCTL21_RUN_CFG_MASK)
#define MC_ME_PCTL21_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL21_LP_CFG_SHIFT                3u
#define MC_ME_PCTL21_LP_CFG_WIDTH                3u
#define MC_ME_PCTL21_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL21_LP_CFG_SHIFT))&MC_ME_PCTL21_LP_CFG_MASK)
#define MC_ME_PCTL21_DBG_F_MASK                  0x40u
#define MC_ME_PCTL21_DBG_F_SHIFT                 6u
#define MC_ME_PCTL21_DBG_F_WIDTH                 1u
#define MC_ME_PCTL21_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL21_DBG_F_SHIFT))&MC_ME_PCTL21_DBG_F_MASK)
/* PCTL22 Bit Fields */
#define MC_ME_PCTL22_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL22_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL22_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL22_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL22_RUN_CFG_SHIFT))&MC_ME_PCTL22_RUN_CFG_MASK)
#define MC_ME_PCTL22_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL22_LP_CFG_SHIFT                3u
#define MC_ME_PCTL22_LP_CFG_WIDTH                3u
#define MC_ME_PCTL22_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL22_LP_CFG_SHIFT))&MC_ME_PCTL22_LP_CFG_MASK)
#define MC_ME_PCTL22_DBG_F_MASK                  0x40u
#define MC_ME_PCTL22_DBG_F_SHIFT                 6u
#define MC_ME_PCTL22_DBG_F_WIDTH                 1u
#define MC_ME_PCTL22_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL22_DBG_F_SHIFT))&MC_ME_PCTL22_DBG_F_MASK)
/* PCTL24 Bit Fields */
#define MC_ME_PCTL24_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL24_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL24_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL24_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL24_RUN_CFG_SHIFT))&MC_ME_PCTL24_RUN_CFG_MASK)
#define MC_ME_PCTL24_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL24_LP_CFG_SHIFT                3u
#define MC_ME_PCTL24_LP_CFG_WIDTH                3u
#define MC_ME_PCTL24_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL24_LP_CFG_SHIFT))&MC_ME_PCTL24_LP_CFG_MASK)
#define MC_ME_PCTL24_DBG_F_MASK                  0x40u
#define MC_ME_PCTL24_DBG_F_SHIFT                 6u
#define MC_ME_PCTL24_DBG_F_WIDTH                 1u
#define MC_ME_PCTL24_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL24_DBG_F_SHIFT))&MC_ME_PCTL24_DBG_F_MASK)
/* PCTL25 Bit Fields */
#define MC_ME_PCTL25_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL25_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL25_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL25_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL25_RUN_CFG_SHIFT))&MC_ME_PCTL25_RUN_CFG_MASK)
#define MC_ME_PCTL25_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL25_LP_CFG_SHIFT                3u
#define MC_ME_PCTL25_LP_CFG_WIDTH                3u
#define MC_ME_PCTL25_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL25_LP_CFG_SHIFT))&MC_ME_PCTL25_LP_CFG_MASK)
#define MC_ME_PCTL25_DBG_F_MASK                  0x40u
#define MC_ME_PCTL25_DBG_F_SHIFT                 6u
#define MC_ME_PCTL25_DBG_F_WIDTH                 1u
#define MC_ME_PCTL25_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL25_DBG_F_SHIFT))&MC_ME_PCTL25_DBG_F_MASK)
/* PCTL28 Bit Fields */
#define MC_ME_PCTL28_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL28_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL28_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL28_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL28_RUN_CFG_SHIFT))&MC_ME_PCTL28_RUN_CFG_MASK)
#define MC_ME_PCTL28_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL28_LP_CFG_SHIFT                3u
#define MC_ME_PCTL28_LP_CFG_WIDTH                3u
#define MC_ME_PCTL28_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL28_LP_CFG_SHIFT))&MC_ME_PCTL28_LP_CFG_MASK)
#define MC_ME_PCTL28_DBG_F_MASK                  0x40u
#define MC_ME_PCTL28_DBG_F_SHIFT                 6u
#define MC_ME_PCTL28_DBG_F_WIDTH                 1u
#define MC_ME_PCTL28_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL28_DBG_F_SHIFT))&MC_ME_PCTL28_DBG_F_MASK)
/* PCTL30 Bit Fields */
#define MC_ME_PCTL30_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL30_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL30_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL30_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL30_RUN_CFG_SHIFT))&MC_ME_PCTL30_RUN_CFG_MASK)
#define MC_ME_PCTL30_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL30_LP_CFG_SHIFT                3u
#define MC_ME_PCTL30_LP_CFG_WIDTH                3u
#define MC_ME_PCTL30_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL30_LP_CFG_SHIFT))&MC_ME_PCTL30_LP_CFG_MASK)
#define MC_ME_PCTL30_DBG_F_MASK                  0x40u
#define MC_ME_PCTL30_DBG_F_SHIFT                 6u
#define MC_ME_PCTL30_DBG_F_WIDTH                 1u
#define MC_ME_PCTL30_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL30_DBG_F_SHIFT))&MC_ME_PCTL30_DBG_F_MASK)
/* PCTL31 Bit Fields */
#define MC_ME_PCTL31_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL31_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL31_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL31_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL31_RUN_CFG_SHIFT))&MC_ME_PCTL31_RUN_CFG_MASK)
#define MC_ME_PCTL31_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL31_LP_CFG_SHIFT                3u
#define MC_ME_PCTL31_LP_CFG_WIDTH                3u
#define MC_ME_PCTL31_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL31_LP_CFG_SHIFT))&MC_ME_PCTL31_LP_CFG_MASK)
#define MC_ME_PCTL31_DBG_F_MASK                  0x40u
#define MC_ME_PCTL31_DBG_F_SHIFT                 6u
#define MC_ME_PCTL31_DBG_F_WIDTH                 1u
#define MC_ME_PCTL31_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL31_DBG_F_SHIFT))&MC_ME_PCTL31_DBG_F_MASK)
/* PCTL32 Bit Fields */
#define MC_ME_PCTL32_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL32_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL32_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL32_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL32_RUN_CFG_SHIFT))&MC_ME_PCTL32_RUN_CFG_MASK)
#define MC_ME_PCTL32_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL32_LP_CFG_SHIFT                3u
#define MC_ME_PCTL32_LP_CFG_WIDTH                3u
#define MC_ME_PCTL32_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL32_LP_CFG_SHIFT))&MC_ME_PCTL32_LP_CFG_MASK)
#define MC_ME_PCTL32_DBG_F_MASK                  0x40u
#define MC_ME_PCTL32_DBG_F_SHIFT                 6u
#define MC_ME_PCTL32_DBG_F_WIDTH                 1u
#define MC_ME_PCTL32_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL32_DBG_F_SHIFT))&MC_ME_PCTL32_DBG_F_MASK)
/* PCTL33 Bit Fields */
#define MC_ME_PCTL33_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL33_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL33_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL33_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL33_RUN_CFG_SHIFT))&MC_ME_PCTL33_RUN_CFG_MASK)
#define MC_ME_PCTL33_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL33_LP_CFG_SHIFT                3u
#define MC_ME_PCTL33_LP_CFG_WIDTH                3u
#define MC_ME_PCTL33_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL33_LP_CFG_SHIFT))&MC_ME_PCTL33_LP_CFG_MASK)
#define MC_ME_PCTL33_DBG_F_MASK                  0x40u
#define MC_ME_PCTL33_DBG_F_SHIFT                 6u
#define MC_ME_PCTL33_DBG_F_WIDTH                 1u
#define MC_ME_PCTL33_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL33_DBG_F_SHIFT))&MC_ME_PCTL33_DBG_F_MASK)
/* PCTL40 Bit Fields */
#define MC_ME_PCTL40_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL40_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL40_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL40_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL40_RUN_CFG_SHIFT))&MC_ME_PCTL40_RUN_CFG_MASK)
#define MC_ME_PCTL40_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL40_LP_CFG_SHIFT                3u
#define MC_ME_PCTL40_LP_CFG_WIDTH                3u
#define MC_ME_PCTL40_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL40_LP_CFG_SHIFT))&MC_ME_PCTL40_LP_CFG_MASK)
#define MC_ME_PCTL40_DBG_F_MASK                  0x40u
#define MC_ME_PCTL40_DBG_F_SHIFT                 6u
#define MC_ME_PCTL40_DBG_F_WIDTH                 1u
#define MC_ME_PCTL40_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL40_DBG_F_SHIFT))&MC_ME_PCTL40_DBG_F_MASK)
/* PCTL41 Bit Fields */
#define MC_ME_PCTL41_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL41_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL41_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL41_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL41_RUN_CFG_SHIFT))&MC_ME_PCTL41_RUN_CFG_MASK)
#define MC_ME_PCTL41_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL41_LP_CFG_SHIFT                3u
#define MC_ME_PCTL41_LP_CFG_WIDTH                3u
#define MC_ME_PCTL41_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL41_LP_CFG_SHIFT))&MC_ME_PCTL41_LP_CFG_MASK)
#define MC_ME_PCTL41_DBG_F_MASK                  0x40u
#define MC_ME_PCTL41_DBG_F_SHIFT                 6u
#define MC_ME_PCTL41_DBG_F_WIDTH                 1u
#define MC_ME_PCTL41_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL41_DBG_F_SHIFT))&MC_ME_PCTL41_DBG_F_MASK)
/* PCTL42 Bit Fields */
#define MC_ME_PCTL42_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL42_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL42_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL42_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL42_RUN_CFG_SHIFT))&MC_ME_PCTL42_RUN_CFG_MASK)
#define MC_ME_PCTL42_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL42_LP_CFG_SHIFT                3u
#define MC_ME_PCTL42_LP_CFG_WIDTH                3u
#define MC_ME_PCTL42_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL42_LP_CFG_SHIFT))&MC_ME_PCTL42_LP_CFG_MASK)
#define MC_ME_PCTL42_DBG_F_MASK                  0x40u
#define MC_ME_PCTL42_DBG_F_SHIFT                 6u
#define MC_ME_PCTL42_DBG_F_WIDTH                 1u
#define MC_ME_PCTL42_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL42_DBG_F_SHIFT))&MC_ME_PCTL42_DBG_F_MASK)
/* PCTL43 Bit Fields */
#define MC_ME_PCTL43_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL43_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL43_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL43_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL43_RUN_CFG_SHIFT))&MC_ME_PCTL43_RUN_CFG_MASK)
#define MC_ME_PCTL43_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL43_LP_CFG_SHIFT                3u
#define MC_ME_PCTL43_LP_CFG_WIDTH                3u
#define MC_ME_PCTL43_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL43_LP_CFG_SHIFT))&MC_ME_PCTL43_LP_CFG_MASK)
#define MC_ME_PCTL43_DBG_F_MASK                  0x40u
#define MC_ME_PCTL43_DBG_F_SHIFT                 6u
#define MC_ME_PCTL43_DBG_F_WIDTH                 1u
#define MC_ME_PCTL43_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL43_DBG_F_SHIFT))&MC_ME_PCTL43_DBG_F_MASK)
/* PCTL50 Bit Fields */
#define MC_ME_PCTL50_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL50_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL50_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL50_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL50_RUN_CFG_SHIFT))&MC_ME_PCTL50_RUN_CFG_MASK)
#define MC_ME_PCTL50_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL50_LP_CFG_SHIFT                3u
#define MC_ME_PCTL50_LP_CFG_WIDTH                3u
#define MC_ME_PCTL50_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL50_LP_CFG_SHIFT))&MC_ME_PCTL50_LP_CFG_MASK)
#define MC_ME_PCTL50_DBG_F_MASK                  0x40u
#define MC_ME_PCTL50_DBG_F_SHIFT                 6u
#define MC_ME_PCTL50_DBG_F_WIDTH                 1u
#define MC_ME_PCTL50_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL50_DBG_F_SHIFT))&MC_ME_PCTL50_DBG_F_MASK)
/* PCTL51 Bit Fields */
#define MC_ME_PCTL51_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL51_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL51_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL51_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL51_RUN_CFG_SHIFT))&MC_ME_PCTL51_RUN_CFG_MASK)
#define MC_ME_PCTL51_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL51_LP_CFG_SHIFT                3u
#define MC_ME_PCTL51_LP_CFG_WIDTH                3u
#define MC_ME_PCTL51_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL51_LP_CFG_SHIFT))&MC_ME_PCTL51_LP_CFG_MASK)
#define MC_ME_PCTL51_DBG_F_MASK                  0x40u
#define MC_ME_PCTL51_DBG_F_SHIFT                 6u
#define MC_ME_PCTL51_DBG_F_WIDTH                 1u
#define MC_ME_PCTL51_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL51_DBG_F_SHIFT))&MC_ME_PCTL51_DBG_F_MASK)
/* PCTL52 Bit Fields */
#define MC_ME_PCTL52_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL52_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL52_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL52_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL52_RUN_CFG_SHIFT))&MC_ME_PCTL52_RUN_CFG_MASK)
#define MC_ME_PCTL52_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL52_LP_CFG_SHIFT                3u
#define MC_ME_PCTL52_LP_CFG_WIDTH                3u
#define MC_ME_PCTL52_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL52_LP_CFG_SHIFT))&MC_ME_PCTL52_LP_CFG_MASK)
#define MC_ME_PCTL52_DBG_F_MASK                  0x40u
#define MC_ME_PCTL52_DBG_F_SHIFT                 6u
#define MC_ME_PCTL52_DBG_F_WIDTH                 1u
#define MC_ME_PCTL52_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL52_DBG_F_SHIFT))&MC_ME_PCTL52_DBG_F_MASK)
/* PCTL53 Bit Fields */
#define MC_ME_PCTL53_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL53_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL53_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL53_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL53_RUN_CFG_SHIFT))&MC_ME_PCTL53_RUN_CFG_MASK)
#define MC_ME_PCTL53_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL53_LP_CFG_SHIFT                3u
#define MC_ME_PCTL53_LP_CFG_WIDTH                3u
#define MC_ME_PCTL53_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL53_LP_CFG_SHIFT))&MC_ME_PCTL53_LP_CFG_MASK)
#define MC_ME_PCTL53_DBG_F_MASK                  0x40u
#define MC_ME_PCTL53_DBG_F_SHIFT                 6u
#define MC_ME_PCTL53_DBG_F_WIDTH                 1u
#define MC_ME_PCTL53_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL53_DBG_F_SHIFT))&MC_ME_PCTL53_DBG_F_MASK)
/* PCTL54 Bit Fields */
#define MC_ME_PCTL54_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL54_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL54_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL54_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL54_RUN_CFG_SHIFT))&MC_ME_PCTL54_RUN_CFG_MASK)
#define MC_ME_PCTL54_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL54_LP_CFG_SHIFT                3u
#define MC_ME_PCTL54_LP_CFG_WIDTH                3u
#define MC_ME_PCTL54_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL54_LP_CFG_SHIFT))&MC_ME_PCTL54_LP_CFG_MASK)
#define MC_ME_PCTL54_DBG_F_MASK                  0x40u
#define MC_ME_PCTL54_DBG_F_SHIFT                 6u
#define MC_ME_PCTL54_DBG_F_WIDTH                 1u
#define MC_ME_PCTL54_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL54_DBG_F_SHIFT))&MC_ME_PCTL54_DBG_F_MASK)
/* PCTL55 Bit Fields */
#define MC_ME_PCTL55_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL55_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL55_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL55_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL55_RUN_CFG_SHIFT))&MC_ME_PCTL55_RUN_CFG_MASK)
#define MC_ME_PCTL55_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL55_LP_CFG_SHIFT                3u
#define MC_ME_PCTL55_LP_CFG_WIDTH                3u
#define MC_ME_PCTL55_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL55_LP_CFG_SHIFT))&MC_ME_PCTL55_LP_CFG_MASK)
#define MC_ME_PCTL55_DBG_F_MASK                  0x40u
#define MC_ME_PCTL55_DBG_F_SHIFT                 6u
#define MC_ME_PCTL55_DBG_F_WIDTH                 1u
#define MC_ME_PCTL55_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL55_DBG_F_SHIFT))&MC_ME_PCTL55_DBG_F_MASK)
/* PCTL56 Bit Fields */
#define MC_ME_PCTL56_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL56_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL56_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL56_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL56_RUN_CFG_SHIFT))&MC_ME_PCTL56_RUN_CFG_MASK)
#define MC_ME_PCTL56_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL56_LP_CFG_SHIFT                3u
#define MC_ME_PCTL56_LP_CFG_WIDTH                3u
#define MC_ME_PCTL56_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL56_LP_CFG_SHIFT))&MC_ME_PCTL56_LP_CFG_MASK)
#define MC_ME_PCTL56_DBG_F_MASK                  0x40u
#define MC_ME_PCTL56_DBG_F_SHIFT                 6u
#define MC_ME_PCTL56_DBG_F_WIDTH                 1u
#define MC_ME_PCTL56_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL56_DBG_F_SHIFT))&MC_ME_PCTL56_DBG_F_MASK)
/* PCTL57 Bit Fields */
#define MC_ME_PCTL57_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL57_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL57_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL57_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL57_RUN_CFG_SHIFT))&MC_ME_PCTL57_RUN_CFG_MASK)
#define MC_ME_PCTL57_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL57_LP_CFG_SHIFT                3u
#define MC_ME_PCTL57_LP_CFG_WIDTH                3u
#define MC_ME_PCTL57_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL57_LP_CFG_SHIFT))&MC_ME_PCTL57_LP_CFG_MASK)
#define MC_ME_PCTL57_DBG_F_MASK                  0x40u
#define MC_ME_PCTL57_DBG_F_SHIFT                 6u
#define MC_ME_PCTL57_DBG_F_WIDTH                 1u
#define MC_ME_PCTL57_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL57_DBG_F_SHIFT))&MC_ME_PCTL57_DBG_F_MASK)
/* PCTL58 Bit Fields */
#define MC_ME_PCTL58_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL58_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL58_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL58_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL58_RUN_CFG_SHIFT))&MC_ME_PCTL58_RUN_CFG_MASK)
#define MC_ME_PCTL58_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL58_LP_CFG_SHIFT                3u
#define MC_ME_PCTL58_LP_CFG_WIDTH                3u
#define MC_ME_PCTL58_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL58_LP_CFG_SHIFT))&MC_ME_PCTL58_LP_CFG_MASK)
#define MC_ME_PCTL58_DBG_F_MASK                  0x40u
#define MC_ME_PCTL58_DBG_F_SHIFT                 6u
#define MC_ME_PCTL58_DBG_F_WIDTH                 1u
#define MC_ME_PCTL58_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL58_DBG_F_SHIFT))&MC_ME_PCTL58_DBG_F_MASK)
/* PCTL59 Bit Fields */
#define MC_ME_PCTL59_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL59_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL59_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL59_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL59_RUN_CFG_SHIFT))&MC_ME_PCTL59_RUN_CFG_MASK)
#define MC_ME_PCTL59_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL59_LP_CFG_SHIFT                3u
#define MC_ME_PCTL59_LP_CFG_WIDTH                3u
#define MC_ME_PCTL59_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL59_LP_CFG_SHIFT))&MC_ME_PCTL59_LP_CFG_MASK)
#define MC_ME_PCTL59_DBG_F_MASK                  0x40u
#define MC_ME_PCTL59_DBG_F_SHIFT                 6u
#define MC_ME_PCTL59_DBG_F_WIDTH                 1u
#define MC_ME_PCTL59_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL59_DBG_F_SHIFT))&MC_ME_PCTL59_DBG_F_MASK)
/* PCTL60 Bit Fields */
#define MC_ME_PCTL60_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL60_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL60_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL60_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL60_RUN_CFG_SHIFT))&MC_ME_PCTL60_RUN_CFG_MASK)
#define MC_ME_PCTL60_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL60_LP_CFG_SHIFT                3u
#define MC_ME_PCTL60_LP_CFG_WIDTH                3u
#define MC_ME_PCTL60_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL60_LP_CFG_SHIFT))&MC_ME_PCTL60_LP_CFG_MASK)
#define MC_ME_PCTL60_DBG_F_MASK                  0x40u
#define MC_ME_PCTL60_DBG_F_SHIFT                 6u
#define MC_ME_PCTL60_DBG_F_WIDTH                 1u
#define MC_ME_PCTL60_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL60_DBG_F_SHIFT))&MC_ME_PCTL60_DBG_F_MASK)
/* PCTL61 Bit Fields */
#define MC_ME_PCTL61_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL61_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL61_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL61_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL61_RUN_CFG_SHIFT))&MC_ME_PCTL61_RUN_CFG_MASK)
#define MC_ME_PCTL61_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL61_LP_CFG_SHIFT                3u
#define MC_ME_PCTL61_LP_CFG_WIDTH                3u
#define MC_ME_PCTL61_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL61_LP_CFG_SHIFT))&MC_ME_PCTL61_LP_CFG_MASK)
#define MC_ME_PCTL61_DBG_F_MASK                  0x40u
#define MC_ME_PCTL61_DBG_F_SHIFT                 6u
#define MC_ME_PCTL61_DBG_F_WIDTH                 1u
#define MC_ME_PCTL61_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL61_DBG_F_SHIFT))&MC_ME_PCTL61_DBG_F_MASK)
/* PCTL62 Bit Fields */
#define MC_ME_PCTL62_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL62_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL62_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL62_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL62_RUN_CFG_SHIFT))&MC_ME_PCTL62_RUN_CFG_MASK)
#define MC_ME_PCTL62_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL62_LP_CFG_SHIFT                3u
#define MC_ME_PCTL62_LP_CFG_WIDTH                3u
#define MC_ME_PCTL62_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL62_LP_CFG_SHIFT))&MC_ME_PCTL62_LP_CFG_MASK)
#define MC_ME_PCTL62_DBG_F_MASK                  0x40u
#define MC_ME_PCTL62_DBG_F_SHIFT                 6u
#define MC_ME_PCTL62_DBG_F_WIDTH                 1u
#define MC_ME_PCTL62_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL62_DBG_F_SHIFT))&MC_ME_PCTL62_DBG_F_MASK)
/* PCTL63 Bit Fields */
#define MC_ME_PCTL63_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL63_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL63_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL63_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL63_RUN_CFG_SHIFT))&MC_ME_PCTL63_RUN_CFG_MASK)
#define MC_ME_PCTL63_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL63_LP_CFG_SHIFT                3u
#define MC_ME_PCTL63_LP_CFG_WIDTH                3u
#define MC_ME_PCTL63_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL63_LP_CFG_SHIFT))&MC_ME_PCTL63_LP_CFG_MASK)
#define MC_ME_PCTL63_DBG_F_MASK                  0x40u
#define MC_ME_PCTL63_DBG_F_SHIFT                 6u
#define MC_ME_PCTL63_DBG_F_WIDTH                 1u
#define MC_ME_PCTL63_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL63_DBG_F_SHIFT))&MC_ME_PCTL63_DBG_F_MASK)
/* PCTL64 Bit Fields */
#define MC_ME_PCTL64_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL64_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL64_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL64_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL64_RUN_CFG_SHIFT))&MC_ME_PCTL64_RUN_CFG_MASK)
#define MC_ME_PCTL64_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL64_LP_CFG_SHIFT                3u
#define MC_ME_PCTL64_LP_CFG_WIDTH                3u
#define MC_ME_PCTL64_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL64_LP_CFG_SHIFT))&MC_ME_PCTL64_LP_CFG_MASK)
#define MC_ME_PCTL64_DBG_F_MASK                  0x40u
#define MC_ME_PCTL64_DBG_F_SHIFT                 6u
#define MC_ME_PCTL64_DBG_F_WIDTH                 1u
#define MC_ME_PCTL64_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL64_DBG_F_SHIFT))&MC_ME_PCTL64_DBG_F_MASK)
/* PCTL65 Bit Fields */
#define MC_ME_PCTL65_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL65_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL65_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL65_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL65_RUN_CFG_SHIFT))&MC_ME_PCTL65_RUN_CFG_MASK)
#define MC_ME_PCTL65_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL65_LP_CFG_SHIFT                3u
#define MC_ME_PCTL65_LP_CFG_WIDTH                3u
#define MC_ME_PCTL65_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL65_LP_CFG_SHIFT))&MC_ME_PCTL65_LP_CFG_MASK)
#define MC_ME_PCTL65_DBG_F_MASK                  0x40u
#define MC_ME_PCTL65_DBG_F_SHIFT                 6u
#define MC_ME_PCTL65_DBG_F_WIDTH                 1u
#define MC_ME_PCTL65_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL65_DBG_F_SHIFT))&MC_ME_PCTL65_DBG_F_MASK)
/* PCTL66 Bit Fields */
#define MC_ME_PCTL66_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL66_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL66_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL66_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL66_RUN_CFG_SHIFT))&MC_ME_PCTL66_RUN_CFG_MASK)
#define MC_ME_PCTL66_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL66_LP_CFG_SHIFT                3u
#define MC_ME_PCTL66_LP_CFG_WIDTH                3u
#define MC_ME_PCTL66_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL66_LP_CFG_SHIFT))&MC_ME_PCTL66_LP_CFG_MASK)
#define MC_ME_PCTL66_DBG_F_MASK                  0x40u
#define MC_ME_PCTL66_DBG_F_SHIFT                 6u
#define MC_ME_PCTL66_DBG_F_WIDTH                 1u
#define MC_ME_PCTL66_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL66_DBG_F_SHIFT))&MC_ME_PCTL66_DBG_F_MASK)
/* PCTL67 Bit Fields */
#define MC_ME_PCTL67_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL67_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL67_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL67_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL67_RUN_CFG_SHIFT))&MC_ME_PCTL67_RUN_CFG_MASK)
#define MC_ME_PCTL67_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL67_LP_CFG_SHIFT                3u
#define MC_ME_PCTL67_LP_CFG_WIDTH                3u
#define MC_ME_PCTL67_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL67_LP_CFG_SHIFT))&MC_ME_PCTL67_LP_CFG_MASK)
#define MC_ME_PCTL67_DBG_F_MASK                  0x40u
#define MC_ME_PCTL67_DBG_F_SHIFT                 6u
#define MC_ME_PCTL67_DBG_F_WIDTH                 1u
#define MC_ME_PCTL67_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL67_DBG_F_SHIFT))&MC_ME_PCTL67_DBG_F_MASK)
/* PCTL70 Bit Fields */
#define MC_ME_PCTL70_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL70_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL70_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL70_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL70_RUN_CFG_SHIFT))&MC_ME_PCTL70_RUN_CFG_MASK)
#define MC_ME_PCTL70_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL70_LP_CFG_SHIFT                3u
#define MC_ME_PCTL70_LP_CFG_WIDTH                3u
#define MC_ME_PCTL70_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL70_LP_CFG_SHIFT))&MC_ME_PCTL70_LP_CFG_MASK)
#define MC_ME_PCTL70_DBG_F_MASK                  0x40u
#define MC_ME_PCTL70_DBG_F_SHIFT                 6u
#define MC_ME_PCTL70_DBG_F_WIDTH                 1u
#define MC_ME_PCTL70_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL70_DBG_F_SHIFT))&MC_ME_PCTL70_DBG_F_MASK)
/* PCTL71 Bit Fields */
#define MC_ME_PCTL71_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL71_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL71_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL71_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL71_RUN_CFG_SHIFT))&MC_ME_PCTL71_RUN_CFG_MASK)
#define MC_ME_PCTL71_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL71_LP_CFG_SHIFT                3u
#define MC_ME_PCTL71_LP_CFG_WIDTH                3u
#define MC_ME_PCTL71_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL71_LP_CFG_SHIFT))&MC_ME_PCTL71_LP_CFG_MASK)
#define MC_ME_PCTL71_DBG_F_MASK                  0x40u
#define MC_ME_PCTL71_DBG_F_SHIFT                 6u
#define MC_ME_PCTL71_DBG_F_WIDTH                 1u
#define MC_ME_PCTL71_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL71_DBG_F_SHIFT))&MC_ME_PCTL71_DBG_F_MASK)
/* PCTL72 Bit Fields */
#define MC_ME_PCTL72_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL72_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL72_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL72_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL72_RUN_CFG_SHIFT))&MC_ME_PCTL72_RUN_CFG_MASK)
#define MC_ME_PCTL72_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL72_LP_CFG_SHIFT                3u
#define MC_ME_PCTL72_LP_CFG_WIDTH                3u
#define MC_ME_PCTL72_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL72_LP_CFG_SHIFT))&MC_ME_PCTL72_LP_CFG_MASK)
#define MC_ME_PCTL72_DBG_F_MASK                  0x40u
#define MC_ME_PCTL72_DBG_F_SHIFT                 6u
#define MC_ME_PCTL72_DBG_F_WIDTH                 1u
#define MC_ME_PCTL72_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL72_DBG_F_SHIFT))&MC_ME_PCTL72_DBG_F_MASK)
/* PCTL73 Bit Fields */
#define MC_ME_PCTL73_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL73_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL73_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL73_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL73_RUN_CFG_SHIFT))&MC_ME_PCTL73_RUN_CFG_MASK)
#define MC_ME_PCTL73_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL73_LP_CFG_SHIFT                3u
#define MC_ME_PCTL73_LP_CFG_WIDTH                3u
#define MC_ME_PCTL73_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL73_LP_CFG_SHIFT))&MC_ME_PCTL73_LP_CFG_MASK)
#define MC_ME_PCTL73_DBG_F_MASK                  0x40u
#define MC_ME_PCTL73_DBG_F_SHIFT                 6u
#define MC_ME_PCTL73_DBG_F_WIDTH                 1u
#define MC_ME_PCTL73_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL73_DBG_F_SHIFT))&MC_ME_PCTL73_DBG_F_MASK)
/* PCTL74 Bit Fields */
#define MC_ME_PCTL74_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL74_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL74_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL74_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL74_RUN_CFG_SHIFT))&MC_ME_PCTL74_RUN_CFG_MASK)
#define MC_ME_PCTL74_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL74_LP_CFG_SHIFT                3u
#define MC_ME_PCTL74_LP_CFG_WIDTH                3u
#define MC_ME_PCTL74_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL74_LP_CFG_SHIFT))&MC_ME_PCTL74_LP_CFG_MASK)
#define MC_ME_PCTL74_DBG_F_MASK                  0x40u
#define MC_ME_PCTL74_DBG_F_SHIFT                 6u
#define MC_ME_PCTL74_DBG_F_WIDTH                 1u
#define MC_ME_PCTL74_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL74_DBG_F_SHIFT))&MC_ME_PCTL74_DBG_F_MASK)
/* PCTL75 Bit Fields */
#define MC_ME_PCTL75_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL75_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL75_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL75_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL75_RUN_CFG_SHIFT))&MC_ME_PCTL75_RUN_CFG_MASK)
#define MC_ME_PCTL75_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL75_LP_CFG_SHIFT                3u
#define MC_ME_PCTL75_LP_CFG_WIDTH                3u
#define MC_ME_PCTL75_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL75_LP_CFG_SHIFT))&MC_ME_PCTL75_LP_CFG_MASK)
#define MC_ME_PCTL75_DBG_F_MASK                  0x40u
#define MC_ME_PCTL75_DBG_F_SHIFT                 6u
#define MC_ME_PCTL75_DBG_F_WIDTH                 1u
#define MC_ME_PCTL75_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL75_DBG_F_SHIFT))&MC_ME_PCTL75_DBG_F_MASK)
/* PCTL76 Bit Fields */
#define MC_ME_PCTL76_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL76_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL76_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL76_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL76_RUN_CFG_SHIFT))&MC_ME_PCTL76_RUN_CFG_MASK)
#define MC_ME_PCTL76_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL76_LP_CFG_SHIFT                3u
#define MC_ME_PCTL76_LP_CFG_WIDTH                3u
#define MC_ME_PCTL76_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL76_LP_CFG_SHIFT))&MC_ME_PCTL76_LP_CFG_MASK)
#define MC_ME_PCTL76_DBG_F_MASK                  0x40u
#define MC_ME_PCTL76_DBG_F_SHIFT                 6u
#define MC_ME_PCTL76_DBG_F_WIDTH                 1u
#define MC_ME_PCTL76_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL76_DBG_F_SHIFT))&MC_ME_PCTL76_DBG_F_MASK)
/* PCTL77 Bit Fields */
#define MC_ME_PCTL77_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL77_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL77_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL77_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL77_RUN_CFG_SHIFT))&MC_ME_PCTL77_RUN_CFG_MASK)
#define MC_ME_PCTL77_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL77_LP_CFG_SHIFT                3u
#define MC_ME_PCTL77_LP_CFG_WIDTH                3u
#define MC_ME_PCTL77_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL77_LP_CFG_SHIFT))&MC_ME_PCTL77_LP_CFG_MASK)
#define MC_ME_PCTL77_DBG_F_MASK                  0x40u
#define MC_ME_PCTL77_DBG_F_SHIFT                 6u
#define MC_ME_PCTL77_DBG_F_WIDTH                 1u
#define MC_ME_PCTL77_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL77_DBG_F_SHIFT))&MC_ME_PCTL77_DBG_F_MASK)
/* PCTL82 Bit Fields */
#define MC_ME_PCTL82_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL82_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL82_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL82_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL82_RUN_CFG_SHIFT))&MC_ME_PCTL82_RUN_CFG_MASK)
#define MC_ME_PCTL82_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL82_LP_CFG_SHIFT                3u
#define MC_ME_PCTL82_LP_CFG_WIDTH                3u
#define MC_ME_PCTL82_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL82_LP_CFG_SHIFT))&MC_ME_PCTL82_LP_CFG_MASK)
#define MC_ME_PCTL82_DBG_F_MASK                  0x40u
#define MC_ME_PCTL82_DBG_F_SHIFT                 6u
#define MC_ME_PCTL82_DBG_F_WIDTH                 1u
#define MC_ME_PCTL82_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL82_DBG_F_SHIFT))&MC_ME_PCTL82_DBG_F_MASK)
/* PCTL83 Bit Fields */
#define MC_ME_PCTL83_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL83_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL83_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL83_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL83_RUN_CFG_SHIFT))&MC_ME_PCTL83_RUN_CFG_MASK)
#define MC_ME_PCTL83_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL83_LP_CFG_SHIFT                3u
#define MC_ME_PCTL83_LP_CFG_WIDTH                3u
#define MC_ME_PCTL83_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL83_LP_CFG_SHIFT))&MC_ME_PCTL83_LP_CFG_MASK)
#define MC_ME_PCTL83_DBG_F_MASK                  0x40u
#define MC_ME_PCTL83_DBG_F_SHIFT                 6u
#define MC_ME_PCTL83_DBG_F_WIDTH                 1u
#define MC_ME_PCTL83_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL83_DBG_F_SHIFT))&MC_ME_PCTL83_DBG_F_MASK)
/* PCTL84 Bit Fields */
#define MC_ME_PCTL84_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL84_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL84_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL84_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL84_RUN_CFG_SHIFT))&MC_ME_PCTL84_RUN_CFG_MASK)
#define MC_ME_PCTL84_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL84_LP_CFG_SHIFT                3u
#define MC_ME_PCTL84_LP_CFG_WIDTH                3u
#define MC_ME_PCTL84_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL84_LP_CFG_SHIFT))&MC_ME_PCTL84_LP_CFG_MASK)
#define MC_ME_PCTL84_DBG_F_MASK                  0x40u
#define MC_ME_PCTL84_DBG_F_SHIFT                 6u
#define MC_ME_PCTL84_DBG_F_WIDTH                 1u
#define MC_ME_PCTL84_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL84_DBG_F_SHIFT))&MC_ME_PCTL84_DBG_F_MASK)
/* PCTL90 Bit Fields */
#define MC_ME_PCTL90_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL90_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL90_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL90_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL90_RUN_CFG_SHIFT))&MC_ME_PCTL90_RUN_CFG_MASK)
#define MC_ME_PCTL90_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL90_LP_CFG_SHIFT                3u
#define MC_ME_PCTL90_LP_CFG_WIDTH                3u
#define MC_ME_PCTL90_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL90_LP_CFG_SHIFT))&MC_ME_PCTL90_LP_CFG_MASK)
#define MC_ME_PCTL90_DBG_F_MASK                  0x40u
#define MC_ME_PCTL90_DBG_F_SHIFT                 6u
#define MC_ME_PCTL90_DBG_F_WIDTH                 1u
#define MC_ME_PCTL90_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL90_DBG_F_SHIFT))&MC_ME_PCTL90_DBG_F_MASK)
/* PCTL91 Bit Fields */
#define MC_ME_PCTL91_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL91_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL91_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL91_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL91_RUN_CFG_SHIFT))&MC_ME_PCTL91_RUN_CFG_MASK)
#define MC_ME_PCTL91_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL91_LP_CFG_SHIFT                3u
#define MC_ME_PCTL91_LP_CFG_WIDTH                3u
#define MC_ME_PCTL91_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL91_LP_CFG_SHIFT))&MC_ME_PCTL91_LP_CFG_MASK)
#define MC_ME_PCTL91_DBG_F_MASK                  0x40u
#define MC_ME_PCTL91_DBG_F_SHIFT                 6u
#define MC_ME_PCTL91_DBG_F_WIDTH                 1u
#define MC_ME_PCTL91_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL91_DBG_F_SHIFT))&MC_ME_PCTL91_DBG_F_MASK)
/* PCTL93 Bit Fields */
#define MC_ME_PCTL93_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL93_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL93_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL93_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL93_RUN_CFG_SHIFT))&MC_ME_PCTL93_RUN_CFG_MASK)
#define MC_ME_PCTL93_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL93_LP_CFG_SHIFT                3u
#define MC_ME_PCTL93_LP_CFG_WIDTH                3u
#define MC_ME_PCTL93_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL93_LP_CFG_SHIFT))&MC_ME_PCTL93_LP_CFG_MASK)
#define MC_ME_PCTL93_DBG_F_MASK                  0x40u
#define MC_ME_PCTL93_DBG_F_SHIFT                 6u
#define MC_ME_PCTL93_DBG_F_WIDTH                 1u
#define MC_ME_PCTL93_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL93_DBG_F_SHIFT))&MC_ME_PCTL93_DBG_F_MASK)
/* PCTL96 Bit Fields */
#define MC_ME_PCTL96_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL96_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL96_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL96_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL96_RUN_CFG_SHIFT))&MC_ME_PCTL96_RUN_CFG_MASK)
#define MC_ME_PCTL96_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL96_LP_CFG_SHIFT                3u
#define MC_ME_PCTL96_LP_CFG_WIDTH                3u
#define MC_ME_PCTL96_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL96_LP_CFG_SHIFT))&MC_ME_PCTL96_LP_CFG_MASK)
#define MC_ME_PCTL96_DBG_F_MASK                  0x40u
#define MC_ME_PCTL96_DBG_F_SHIFT                 6u
#define MC_ME_PCTL96_DBG_F_WIDTH                 1u
#define MC_ME_PCTL96_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL96_DBG_F_SHIFT))&MC_ME_PCTL96_DBG_F_MASK)
/* PCTL97 Bit Fields */
#define MC_ME_PCTL97_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL97_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL97_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL97_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL97_RUN_CFG_SHIFT))&MC_ME_PCTL97_RUN_CFG_MASK)
#define MC_ME_PCTL97_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL97_LP_CFG_SHIFT                3u
#define MC_ME_PCTL97_LP_CFG_WIDTH                3u
#define MC_ME_PCTL97_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL97_LP_CFG_SHIFT))&MC_ME_PCTL97_LP_CFG_MASK)
#define MC_ME_PCTL97_DBG_F_MASK                  0x40u
#define MC_ME_PCTL97_DBG_F_SHIFT                 6u
#define MC_ME_PCTL97_DBG_F_WIDTH                 1u
#define MC_ME_PCTL97_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL97_DBG_F_SHIFT))&MC_ME_PCTL97_DBG_F_MASK)
/* PCTL98 Bit Fields */
#define MC_ME_PCTL98_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL98_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL98_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL98_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL98_RUN_CFG_SHIFT))&MC_ME_PCTL98_RUN_CFG_MASK)
#define MC_ME_PCTL98_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL98_LP_CFG_SHIFT                3u
#define MC_ME_PCTL98_LP_CFG_WIDTH                3u
#define MC_ME_PCTL98_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL98_LP_CFG_SHIFT))&MC_ME_PCTL98_LP_CFG_MASK)
#define MC_ME_PCTL98_DBG_F_MASK                  0x40u
#define MC_ME_PCTL98_DBG_F_SHIFT                 6u
#define MC_ME_PCTL98_DBG_F_WIDTH                 1u
#define MC_ME_PCTL98_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL98_DBG_F_SHIFT))&MC_ME_PCTL98_DBG_F_MASK)
/* PCTL99 Bit Fields */
#define MC_ME_PCTL99_RUN_CFG_MASK                0x7u
#define MC_ME_PCTL99_RUN_CFG_SHIFT               0u
#define MC_ME_PCTL99_RUN_CFG_WIDTH               3u
#define MC_ME_PCTL99_RUN_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL99_RUN_CFG_SHIFT))&MC_ME_PCTL99_RUN_CFG_MASK)
#define MC_ME_PCTL99_LP_CFG_MASK                 0x38u
#define MC_ME_PCTL99_LP_CFG_SHIFT                3u
#define MC_ME_PCTL99_LP_CFG_WIDTH                3u
#define MC_ME_PCTL99_LP_CFG(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL99_LP_CFG_SHIFT))&MC_ME_PCTL99_LP_CFG_MASK)
#define MC_ME_PCTL99_DBG_F_MASK                  0x40u
#define MC_ME_PCTL99_DBG_F_SHIFT                 6u
#define MC_ME_PCTL99_DBG_F_WIDTH                 1u
#define MC_ME_PCTL99_DBG_F(x)                    (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL99_DBG_F_SHIFT))&MC_ME_PCTL99_DBG_F_MASK)
/* PCTL100 Bit Fields */
#define MC_ME_PCTL100_RUN_CFG_MASK               0x7u
#define MC_ME_PCTL100_RUN_CFG_SHIFT              0u
#define MC_ME_PCTL100_RUN_CFG_WIDTH              3u
#define MC_ME_PCTL100_RUN_CFG(x)                 (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL100_RUN_CFG_SHIFT))&MC_ME_PCTL100_RUN_CFG_MASK)
#define MC_ME_PCTL100_LP_CFG_MASK                0x38u
#define MC_ME_PCTL100_LP_CFG_SHIFT               3u
#define MC_ME_PCTL100_LP_CFG_WIDTH               3u
#define MC_ME_PCTL100_LP_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL100_LP_CFG_SHIFT))&MC_ME_PCTL100_LP_CFG_MASK)
#define MC_ME_PCTL100_DBG_F_MASK                 0x40u
#define MC_ME_PCTL100_DBG_F_SHIFT                6u
#define MC_ME_PCTL100_DBG_F_WIDTH                1u
#define MC_ME_PCTL100_DBG_F(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL100_DBG_F_SHIFT))&MC_ME_PCTL100_DBG_F_MASK)
/* PCTL101 Bit Fields */
#define MC_ME_PCTL101_RUN_CFG_MASK               0x7u
#define MC_ME_PCTL101_RUN_CFG_SHIFT              0u
#define MC_ME_PCTL101_RUN_CFG_WIDTH              3u
#define MC_ME_PCTL101_RUN_CFG(x)                 (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL101_RUN_CFG_SHIFT))&MC_ME_PCTL101_RUN_CFG_MASK)
#define MC_ME_PCTL101_LP_CFG_MASK                0x38u
#define MC_ME_PCTL101_LP_CFG_SHIFT               3u
#define MC_ME_PCTL101_LP_CFG_WIDTH               3u
#define MC_ME_PCTL101_LP_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL101_LP_CFG_SHIFT))&MC_ME_PCTL101_LP_CFG_MASK)
#define MC_ME_PCTL101_DBG_F_MASK                 0x40u
#define MC_ME_PCTL101_DBG_F_SHIFT                6u
#define MC_ME_PCTL101_DBG_F_WIDTH                1u
#define MC_ME_PCTL101_DBG_F(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL101_DBG_F_SHIFT))&MC_ME_PCTL101_DBG_F_MASK)
/* PCTL102 Bit Fields */
#define MC_ME_PCTL102_RUN_CFG_MASK               0x7u
#define MC_ME_PCTL102_RUN_CFG_SHIFT              0u
#define MC_ME_PCTL102_RUN_CFG_WIDTH              3u
#define MC_ME_PCTL102_RUN_CFG(x)                 (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL102_RUN_CFG_SHIFT))&MC_ME_PCTL102_RUN_CFG_MASK)
#define MC_ME_PCTL102_LP_CFG_MASK                0x38u
#define MC_ME_PCTL102_LP_CFG_SHIFT               3u
#define MC_ME_PCTL102_LP_CFG_WIDTH               3u
#define MC_ME_PCTL102_LP_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL102_LP_CFG_SHIFT))&MC_ME_PCTL102_LP_CFG_MASK)
#define MC_ME_PCTL102_DBG_F_MASK                 0x40u
#define MC_ME_PCTL102_DBG_F_SHIFT                6u
#define MC_ME_PCTL102_DBG_F_WIDTH                1u
#define MC_ME_PCTL102_DBG_F(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL102_DBG_F_SHIFT))&MC_ME_PCTL102_DBG_F_MASK)
/* PCTL105 Bit Fields */
#define MC_ME_PCTL105_RUN_CFG_MASK               0x7u
#define MC_ME_PCTL105_RUN_CFG_SHIFT              0u
#define MC_ME_PCTL105_RUN_CFG_WIDTH              3u
#define MC_ME_PCTL105_RUN_CFG(x)                 (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL105_RUN_CFG_SHIFT))&MC_ME_PCTL105_RUN_CFG_MASK)
#define MC_ME_PCTL105_LP_CFG_MASK                0x38u
#define MC_ME_PCTL105_LP_CFG_SHIFT               3u
#define MC_ME_PCTL105_LP_CFG_WIDTH               3u
#define MC_ME_PCTL105_LP_CFG(x)                  (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL105_LP_CFG_SHIFT))&MC_ME_PCTL105_LP_CFG_MASK)
#define MC_ME_PCTL105_DBG_F_MASK                 0x40u
#define MC_ME_PCTL105_DBG_F_SHIFT                6u
#define MC_ME_PCTL105_DBG_F_WIDTH                1u
#define MC_ME_PCTL105_DBG_F(x)                   (((uint8_t)(((uint8_t)(x))<<MC_ME_PCTL105_DBG_F_SHIFT))&MC_ME_PCTL105_DBG_F_MASK)
/* CS Bit Fields */
#define MC_ME_CS_S_CORE1_MASK                    0x2u
#define MC_ME_CS_S_CORE1_SHIFT                   1u
#define MC_ME_CS_S_CORE1_WIDTH                   1u
#define MC_ME_CS_S_CORE1(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CS_S_CORE1_SHIFT))&MC_ME_CS_S_CORE1_MASK)
#define MC_ME_CS_S_CORE2_MASK                    0x4u
#define MC_ME_CS_S_CORE2_SHIFT                   2u
#define MC_ME_CS_S_CORE2_WIDTH                   1u
#define MC_ME_CS_S_CORE2(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CS_S_CORE2_SHIFT))&MC_ME_CS_S_CORE2_MASK)
#define MC_ME_CS_S_CORE3_MASK                    0x8u
#define MC_ME_CS_S_CORE3_SHIFT                   3u
#define MC_ME_CS_S_CORE3_WIDTH                   1u
#define MC_ME_CS_S_CORE3(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CS_S_CORE3_SHIFT))&MC_ME_CS_S_CORE3_MASK)
/* CCTL1 Bit Fields */
#define MC_ME_CCTL1_RESET_MASK                   0x1u
#define MC_ME_CCTL1_RESET_SHIFT                  0u
#define MC_ME_CCTL1_RESET_WIDTH                  1u
#define MC_ME_CCTL1_RESET(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_RESET_SHIFT))&MC_ME_CCTL1_RESET_MASK)
#define MC_ME_CCTL1_SAFE_MASK                    0x4u
#define MC_ME_CCTL1_SAFE_SHIFT                   2u
#define MC_ME_CCTL1_SAFE_WIDTH                   1u
#define MC_ME_CCTL1_SAFE(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_SAFE_SHIFT))&MC_ME_CCTL1_SAFE_MASK)
#define MC_ME_CCTL1_DRUN_MASK                    0x8u
#define MC_ME_CCTL1_DRUN_SHIFT                   3u
#define MC_ME_CCTL1_DRUN_WIDTH                   1u
#define MC_ME_CCTL1_DRUN(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_DRUN_SHIFT))&MC_ME_CCTL1_DRUN_MASK)
#define MC_ME_CCTL1_RUN0_MASK                    0x10u
#define MC_ME_CCTL1_RUN0_SHIFT                   4u
#define MC_ME_CCTL1_RUN0_WIDTH                   1u
#define MC_ME_CCTL1_RUN0(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_RUN0_SHIFT))&MC_ME_CCTL1_RUN0_MASK)
#define MC_ME_CCTL1_RUN1_MASK                    0x20u
#define MC_ME_CCTL1_RUN1_SHIFT                   5u
#define MC_ME_CCTL1_RUN1_WIDTH                   1u
#define MC_ME_CCTL1_RUN1(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_RUN1_SHIFT))&MC_ME_CCTL1_RUN1_MASK)
#define MC_ME_CCTL1_RUN2_MASK                    0x40u
#define MC_ME_CCTL1_RUN2_SHIFT                   6u
#define MC_ME_CCTL1_RUN2_WIDTH                   1u
#define MC_ME_CCTL1_RUN2(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_RUN2_SHIFT))&MC_ME_CCTL1_RUN2_MASK)
#define MC_ME_CCTL1_RUN3_MASK                    0x80u
#define MC_ME_CCTL1_RUN3_SHIFT                   7u
#define MC_ME_CCTL1_RUN3_WIDTH                   1u
#define MC_ME_CCTL1_RUN3(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_RUN3_SHIFT))&MC_ME_CCTL1_RUN3_MASK)
#define MC_ME_CCTL1_STOP0_MASK                   0x400u
#define MC_ME_CCTL1_STOP0_SHIFT                  10u
#define MC_ME_CCTL1_STOP0_WIDTH                  1u
#define MC_ME_CCTL1_STOP0(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_STOP0_SHIFT))&MC_ME_CCTL1_STOP0_MASK)
#define MC_ME_CCTL1_STANDBY0_MASK                0x6000u
#define MC_ME_CCTL1_STANDBY0_SHIFT               13u
#define MC_ME_CCTL1_STANDBY0_WIDTH               2u
#define MC_ME_CCTL1_STANDBY0(x)                  (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL1_STANDBY0_SHIFT))&MC_ME_CCTL1_STANDBY0_MASK)
/* CCTL2 Bit Fields */
#define MC_ME_CCTL2_RESET_MASK                   0x1u
#define MC_ME_CCTL2_RESET_SHIFT                  0u
#define MC_ME_CCTL2_RESET_WIDTH                  1u
#define MC_ME_CCTL2_RESET(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_RESET_SHIFT))&MC_ME_CCTL2_RESET_MASK)
#define MC_ME_CCTL2_SAFE_MASK                    0x4u
#define MC_ME_CCTL2_SAFE_SHIFT                   2u
#define MC_ME_CCTL2_SAFE_WIDTH                   1u
#define MC_ME_CCTL2_SAFE(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_SAFE_SHIFT))&MC_ME_CCTL2_SAFE_MASK)
#define MC_ME_CCTL2_DRUN_MASK                    0x8u
#define MC_ME_CCTL2_DRUN_SHIFT                   3u
#define MC_ME_CCTL2_DRUN_WIDTH                   1u
#define MC_ME_CCTL2_DRUN(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_DRUN_SHIFT))&MC_ME_CCTL2_DRUN_MASK)
#define MC_ME_CCTL2_RUN0_MASK                    0x10u
#define MC_ME_CCTL2_RUN0_SHIFT                   4u
#define MC_ME_CCTL2_RUN0_WIDTH                   1u
#define MC_ME_CCTL2_RUN0(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_RUN0_SHIFT))&MC_ME_CCTL2_RUN0_MASK)
#define MC_ME_CCTL2_RUN1_MASK                    0x20u
#define MC_ME_CCTL2_RUN1_SHIFT                   5u
#define MC_ME_CCTL2_RUN1_WIDTH                   1u
#define MC_ME_CCTL2_RUN1(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_RUN1_SHIFT))&MC_ME_CCTL2_RUN1_MASK)
#define MC_ME_CCTL2_RUN2_MASK                    0x40u
#define MC_ME_CCTL2_RUN2_SHIFT                   6u
#define MC_ME_CCTL2_RUN2_WIDTH                   1u
#define MC_ME_CCTL2_RUN2(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_RUN2_SHIFT))&MC_ME_CCTL2_RUN2_MASK)
#define MC_ME_CCTL2_RUN3_MASK                    0x80u
#define MC_ME_CCTL2_RUN3_SHIFT                   7u
#define MC_ME_CCTL2_RUN3_WIDTH                   1u
#define MC_ME_CCTL2_RUN3(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_RUN3_SHIFT))&MC_ME_CCTL2_RUN3_MASK)
#define MC_ME_CCTL2_STOP0_MASK                   0x400u
#define MC_ME_CCTL2_STOP0_SHIFT                  10u
#define MC_ME_CCTL2_STOP0_WIDTH                  1u
#define MC_ME_CCTL2_STOP0(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_STOP0_SHIFT))&MC_ME_CCTL2_STOP0_MASK)
#define MC_ME_CCTL2_STANDBY0_MASK                0x6000u
#define MC_ME_CCTL2_STANDBY0_SHIFT               13u
#define MC_ME_CCTL2_STANDBY0_WIDTH               2u
#define MC_ME_CCTL2_STANDBY0(x)                  (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL2_STANDBY0_SHIFT))&MC_ME_CCTL2_STANDBY0_MASK)
/* CCTL3 Bit Fields */
#define MC_ME_CCTL3_RESET_MASK                   0x1u
#define MC_ME_CCTL3_RESET_SHIFT                  0u
#define MC_ME_CCTL3_RESET_WIDTH                  1u
#define MC_ME_CCTL3_RESET(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_RESET_SHIFT))&MC_ME_CCTL3_RESET_MASK)
#define MC_ME_CCTL3_SAFE_MASK                    0x4u
#define MC_ME_CCTL3_SAFE_SHIFT                   2u
#define MC_ME_CCTL3_SAFE_WIDTH                   1u
#define MC_ME_CCTL3_SAFE(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_SAFE_SHIFT))&MC_ME_CCTL3_SAFE_MASK)
#define MC_ME_CCTL3_DRUN_MASK                    0x8u
#define MC_ME_CCTL3_DRUN_SHIFT                   3u
#define MC_ME_CCTL3_DRUN_WIDTH                   1u
#define MC_ME_CCTL3_DRUN(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_DRUN_SHIFT))&MC_ME_CCTL3_DRUN_MASK)
#define MC_ME_CCTL3_RUN0_MASK                    0x10u
#define MC_ME_CCTL3_RUN0_SHIFT                   4u
#define MC_ME_CCTL3_RUN0_WIDTH                   1u
#define MC_ME_CCTL3_RUN0(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_RUN0_SHIFT))&MC_ME_CCTL3_RUN0_MASK)
#define MC_ME_CCTL3_RUN1_MASK                    0x20u
#define MC_ME_CCTL3_RUN1_SHIFT                   5u
#define MC_ME_CCTL3_RUN1_WIDTH                   1u
#define MC_ME_CCTL3_RUN1(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_RUN1_SHIFT))&MC_ME_CCTL3_RUN1_MASK)
#define MC_ME_CCTL3_RUN2_MASK                    0x40u
#define MC_ME_CCTL3_RUN2_SHIFT                   6u
#define MC_ME_CCTL3_RUN2_WIDTH                   1u
#define MC_ME_CCTL3_RUN2(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_RUN2_SHIFT))&MC_ME_CCTL3_RUN2_MASK)
#define MC_ME_CCTL3_RUN3_MASK                    0x80u
#define MC_ME_CCTL3_RUN3_SHIFT                   7u
#define MC_ME_CCTL3_RUN3_WIDTH                   1u
#define MC_ME_CCTL3_RUN3(x)                      (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_RUN3_SHIFT))&MC_ME_CCTL3_RUN3_MASK)
#define MC_ME_CCTL3_STOP0_MASK                   0x400u
#define MC_ME_CCTL3_STOP0_SHIFT                  10u
#define MC_ME_CCTL3_STOP0_WIDTH                  1u
#define MC_ME_CCTL3_STOP0(x)                     (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_STOP0_SHIFT))&MC_ME_CCTL3_STOP0_MASK)
#define MC_ME_CCTL3_STANDBY0_MASK                0x6000u
#define MC_ME_CCTL3_STANDBY0_SHIFT               13u
#define MC_ME_CCTL3_STANDBY0_WIDTH               2u
#define MC_ME_CCTL3_STANDBY0(x)                  (((uint16_t)(((uint16_t)(x))<<MC_ME_CCTL3_STANDBY0_SHIFT))&MC_ME_CCTL3_STANDBY0_MASK)
/* CADDR1 Bit Fields */
#define MC_ME_CADDR1_RMC_MASK                    0x1u
#define MC_ME_CADDR1_RMC_SHIFT                   0u
#define MC_ME_CADDR1_RMC_WIDTH                   1u
#define MC_ME_CADDR1_RMC(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR1_RMC_SHIFT))&MC_ME_CADDR1_RMC_MASK)
#define MC_ME_CADDR1_ADDR_MASK                   0xFFFFFFFCu
#define MC_ME_CADDR1_ADDR_SHIFT                  2u
#define MC_ME_CADDR1_ADDR_WIDTH                  30u
#define MC_ME_CADDR1_ADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR1_ADDR_SHIFT))&MC_ME_CADDR1_ADDR_MASK)
/* CADDR2 Bit Fields */
#define MC_ME_CADDR2_RMC_MASK                    0x1u
#define MC_ME_CADDR2_RMC_SHIFT                   0u
#define MC_ME_CADDR2_RMC_WIDTH                   1u
#define MC_ME_CADDR2_RMC(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR2_RMC_SHIFT))&MC_ME_CADDR2_RMC_MASK)
#define MC_ME_CADDR2_ADDR_MASK                   0xFFFFFFFCu
#define MC_ME_CADDR2_ADDR_SHIFT                  2u
#define MC_ME_CADDR2_ADDR_WIDTH                  30u
#define MC_ME_CADDR2_ADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR2_ADDR_SHIFT))&MC_ME_CADDR2_ADDR_MASK)
/* CADDR3 Bit Fields */
#define MC_ME_CADDR3_RMC_MASK                    0x1u
#define MC_ME_CADDR3_RMC_SHIFT                   0u
#define MC_ME_CADDR3_RMC_WIDTH                   1u
#define MC_ME_CADDR3_RMC(x)                      (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR3_RMC_SHIFT))&MC_ME_CADDR3_RMC_MASK)
#define MC_ME_CADDR3_ADDR_MASK                   0xFFFFFFFCu
#define MC_ME_CADDR3_ADDR_SHIFT                  2u
#define MC_ME_CADDR3_ADDR_WIDTH                  30u
#define MC_ME_CADDR3_ADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_ME_CADDR3_ADDR_SHIFT))&MC_ME_CADDR3_ADDR_MASK)

/*!
 * @}
 */ /* end of group MC_ME_Register_Masks */


/*!
 * @}
 */ /* end of group MC_ME_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_PCU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_PCU_Peripheral_Access_Layer MC_PCU Peripheral Access Layer
 * @{
 */


/** MC_PCU - Size of Registers Arrays */

/** MC_PCU - Register Layout Typedef */
typedef struct {
  __I  uint32_t PCONF0;                            /**< Power Domain #0 Configuration Register, offset: 0x0 */
  __I  uint32_t PCONF1;                            /**< Power Domain #1 Configuration Register, offset: 0x4 */
       uint8_t RESERVED_0[56];
  __I  uint32_t PSTAT;                             /**< Power Domain Status Register, offset: 0x40 */
} MC_PCU_Type, *MC_PCU_MemMapPtr;

 /** Number of instances of the MC_PCU module. */
#define MC_PCU_INSTANCE_COUNT                    (1u)


/* MC_PCU - Peripheral instance base addresses */
/** Peripheral MC_PCU base address */
#define MC_PCU_BASE                              (0xFFFA0000u)
/** Peripheral MC_PCU base pointer */
#define MC_PCU                                   ((MC_PCU_Type *)MC_PCU_BASE)
/** Array initializer of MC_PCU peripheral base addresses */
#define MC_PCU_BASE_ADDRS                        { MC_PCU_BASE }
/** Array initializer of MC_PCU peripheral base pointers */
#define MC_PCU_BASE_PTRS                         { MC_PCU }

/* ----------------------------------------------------------------------------
   -- MC_PCU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_PCU_Register_Masks MC_PCU Register Masks
 * @{
 */

/* PCONF0 Bit Fields */
#define MC_PCU_PCONF0_RST_MASK                   0x1u
#define MC_PCU_PCONF0_RST_SHIFT                  0u
#define MC_PCU_PCONF0_RST_WIDTH                  1u
#define MC_PCU_PCONF0_RST(x)                     (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RST_SHIFT))&MC_PCU_PCONF0_RST_MASK)
#define MC_PCU_PCONF0_TEST_MASK                  0x2u
#define MC_PCU_PCONF0_TEST_SHIFT                 1u
#define MC_PCU_PCONF0_TEST_WIDTH                 1u
#define MC_PCU_PCONF0_TEST(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_TEST_SHIFT))&MC_PCU_PCONF0_TEST_MASK)
#define MC_PCU_PCONF0_SAFE_MASK                  0x4u
#define MC_PCU_PCONF0_SAFE_SHIFT                 2u
#define MC_PCU_PCONF0_SAFE_WIDTH                 1u
#define MC_PCU_PCONF0_SAFE(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_SAFE_SHIFT))&MC_PCU_PCONF0_SAFE_MASK)
#define MC_PCU_PCONF0_DRUN_MASK                  0x8u
#define MC_PCU_PCONF0_DRUN_SHIFT                 3u
#define MC_PCU_PCONF0_DRUN_WIDTH                 1u
#define MC_PCU_PCONF0_DRUN(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_DRUN_SHIFT))&MC_PCU_PCONF0_DRUN_MASK)
#define MC_PCU_PCONF0_RUN0_MASK                  0x10u
#define MC_PCU_PCONF0_RUN0_SHIFT                 4u
#define MC_PCU_PCONF0_RUN0_WIDTH                 1u
#define MC_PCU_PCONF0_RUN0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN0_SHIFT))&MC_PCU_PCONF0_RUN0_MASK)
#define MC_PCU_PCONF0_RUN1_MASK                  0x20u
#define MC_PCU_PCONF0_RUN1_SHIFT                 5u
#define MC_PCU_PCONF0_RUN1_WIDTH                 1u
#define MC_PCU_PCONF0_RUN1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN1_SHIFT))&MC_PCU_PCONF0_RUN1_MASK)
#define MC_PCU_PCONF0_RUN2_MASK                  0x40u
#define MC_PCU_PCONF0_RUN2_SHIFT                 6u
#define MC_PCU_PCONF0_RUN2_WIDTH                 1u
#define MC_PCU_PCONF0_RUN2(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN2_SHIFT))&MC_PCU_PCONF0_RUN2_MASK)
#define MC_PCU_PCONF0_RUN3_MASK                  0x80u
#define MC_PCU_PCONF0_RUN3_SHIFT                 7u
#define MC_PCU_PCONF0_RUN3_WIDTH                 1u
#define MC_PCU_PCONF0_RUN3(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_RUN3_SHIFT))&MC_PCU_PCONF0_RUN3_MASK)
#define MC_PCU_PCONF0_HALT0_MASK                 0x100u
#define MC_PCU_PCONF0_HALT0_SHIFT                8u
#define MC_PCU_PCONF0_HALT0_WIDTH                1u
#define MC_PCU_PCONF0_HALT0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_HALT0_SHIFT))&MC_PCU_PCONF0_HALT0_MASK)
#define MC_PCU_PCONF0_STOP0_MASK                 0x400u
#define MC_PCU_PCONF0_STOP0_SHIFT                10u
#define MC_PCU_PCONF0_STOP0_WIDTH                1u
#define MC_PCU_PCONF0_STOP0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_STOP0_SHIFT))&MC_PCU_PCONF0_STOP0_MASK)
#define MC_PCU_PCONF0_STBY0_MASK                 0x2000u
#define MC_PCU_PCONF0_STBY0_SHIFT                13u
#define MC_PCU_PCONF0_STBY0_WIDTH                1u
#define MC_PCU_PCONF0_STBY0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF0_STBY0_SHIFT))&MC_PCU_PCONF0_STBY0_MASK)
/* PCONF1 Bit Fields */
#define MC_PCU_PCONF1_RST_MASK                   0x1u
#define MC_PCU_PCONF1_RST_SHIFT                  0u
#define MC_PCU_PCONF1_RST_WIDTH                  1u
#define MC_PCU_PCONF1_RST(x)                     (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_RST_SHIFT))&MC_PCU_PCONF1_RST_MASK)
#define MC_PCU_PCONF1_TEST_MASK                  0x2u
#define MC_PCU_PCONF1_TEST_SHIFT                 1u
#define MC_PCU_PCONF1_TEST_WIDTH                 1u
#define MC_PCU_PCONF1_TEST(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_TEST_SHIFT))&MC_PCU_PCONF1_TEST_MASK)
#define MC_PCU_PCONF1_SAFE_MASK                  0x4u
#define MC_PCU_PCONF1_SAFE_SHIFT                 2u
#define MC_PCU_PCONF1_SAFE_WIDTH                 1u
#define MC_PCU_PCONF1_SAFE(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_SAFE_SHIFT))&MC_PCU_PCONF1_SAFE_MASK)
#define MC_PCU_PCONF1_DRUN_MASK                  0x8u
#define MC_PCU_PCONF1_DRUN_SHIFT                 3u
#define MC_PCU_PCONF1_DRUN_WIDTH                 1u
#define MC_PCU_PCONF1_DRUN(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_DRUN_SHIFT))&MC_PCU_PCONF1_DRUN_MASK)
#define MC_PCU_PCONF1_RUN0_MASK                  0x10u
#define MC_PCU_PCONF1_RUN0_SHIFT                 4u
#define MC_PCU_PCONF1_RUN0_WIDTH                 1u
#define MC_PCU_PCONF1_RUN0(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_RUN0_SHIFT))&MC_PCU_PCONF1_RUN0_MASK)
#define MC_PCU_PCONF1_RUN1_MASK                  0x20u
#define MC_PCU_PCONF1_RUN1_SHIFT                 5u
#define MC_PCU_PCONF1_RUN1_WIDTH                 1u
#define MC_PCU_PCONF1_RUN1(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_RUN1_SHIFT))&MC_PCU_PCONF1_RUN1_MASK)
#define MC_PCU_PCONF1_RUN2_MASK                  0x40u
#define MC_PCU_PCONF1_RUN2_SHIFT                 6u
#define MC_PCU_PCONF1_RUN2_WIDTH                 1u
#define MC_PCU_PCONF1_RUN2(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_RUN2_SHIFT))&MC_PCU_PCONF1_RUN2_MASK)
#define MC_PCU_PCONF1_RUN3_MASK                  0x80u
#define MC_PCU_PCONF1_RUN3_SHIFT                 7u
#define MC_PCU_PCONF1_RUN3_WIDTH                 1u
#define MC_PCU_PCONF1_RUN3(x)                    (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_RUN3_SHIFT))&MC_PCU_PCONF1_RUN3_MASK)
#define MC_PCU_PCONF1_HALT0_MASK                 0x100u
#define MC_PCU_PCONF1_HALT0_SHIFT                8u
#define MC_PCU_PCONF1_HALT0_WIDTH                1u
#define MC_PCU_PCONF1_HALT0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_HALT0_SHIFT))&MC_PCU_PCONF1_HALT0_MASK)
#define MC_PCU_PCONF1_STOP0_MASK                 0x400u
#define MC_PCU_PCONF1_STOP0_SHIFT                10u
#define MC_PCU_PCONF1_STOP0_WIDTH                1u
#define MC_PCU_PCONF1_STOP0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_STOP0_SHIFT))&MC_PCU_PCONF1_STOP0_MASK)
#define MC_PCU_PCONF1_STBY0_MASK                 0x2000u
#define MC_PCU_PCONF1_STBY0_SHIFT                13u
#define MC_PCU_PCONF1_STBY0_WIDTH                1u
#define MC_PCU_PCONF1_STBY0(x)                   (((uint32_t)(((uint32_t)(x))<<MC_PCU_PCONF1_STBY0_SHIFT))&MC_PCU_PCONF1_STBY0_MASK)
/* PSTAT Bit Fields */
#define MC_PCU_PSTAT_PD0_MASK                    0x1u
#define MC_PCU_PSTAT_PD0_SHIFT                   0u
#define MC_PCU_PSTAT_PD0_WIDTH                   1u
#define MC_PCU_PSTAT_PD0(x)                      (((uint32_t)(((uint32_t)(x))<<MC_PCU_PSTAT_PD0_SHIFT))&MC_PCU_PSTAT_PD0_MASK)
#define MC_PCU_PSTAT_PD1_MASK                    0x2u
#define MC_PCU_PSTAT_PD1_SHIFT                   1u
#define MC_PCU_PSTAT_PD1_WIDTH                   1u
#define MC_PCU_PSTAT_PD1(x)                      (((uint32_t)(((uint32_t)(x))<<MC_PCU_PSTAT_PD1_SHIFT))&MC_PCU_PSTAT_PD1_MASK)

/*!
 * @}
 */ /* end of group MC_PCU_Register_Masks */


/*!
 * @}
 */ /* end of group MC_PCU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MC_RGM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_RGM_Peripheral_Access_Layer MC_RGM Peripheral Access Layer
 * @{
 */


/** MC_RGM - Size of Registers Arrays */

/** MC_RGM - Register Layout Typedef */
typedef struct {
  __IO uint32_t DES;                               /**< 'Destructive' Event Status Register, offset: 0x0 */
       uint8_t RESERVED_0[44];
  __I  uint32_t DBRE;                              /**< 'Destructive' Bidirectional Reset Enable Register, offset: 0x30 */
       uint8_t RESERVED_1[716];
  __IO uint32_t FES;                               /**< 'Functional' Event Status Register, offset: 0x300 */
       uint8_t RESERVED_2[12];
  __IO uint32_t FERD;                              /**< 'Functional' Event Reset Disable Register, offset: 0x310 */
       uint8_t RESERVED_3[12];
  __IO uint32_t FEAR;                              /**< 'Functional' Event Reset DisableAlternate Request Status Register, offset: 0x320 */
       uint8_t RESERVED_4[12];
  __IO uint32_t FBRE;                              /**< 'Functional' Bidirectional Reset Enable Register, offset: 0x330 */
       uint8_t RESERVED_5[12];
  __IO uint32_t FESS;                              /**< 'Functional' Event Short Sequence Register, offset: 0x340 */
       uint8_t RESERVED_6[704];
  __IO uint8_t FRET;                               /**< 'Functional' Reset Escalation Threshold Register, offset: 0x604 */
       uint8_t RESERVED_7[3];
  __IO uint8_t DRET;                               /**< 'Destructive' Reset Escalation Threshold Register, offset: 0x608 */
} MC_RGM_Type, *MC_RGM_MemMapPtr;

 /** Number of instances of the MC_RGM module. */
#define MC_RGM_INSTANCE_COUNT                    (1u)


/* MC_RGM - Peripheral instance base addresses */
/** Peripheral MC_RGM base address */
#define MC_RGM_BASE                              (0xFFFA8000u)
/** Peripheral MC_RGM base pointer */
#define MC_RGM                                   ((MC_RGM_Type *)MC_RGM_BASE)
/** Array initializer of MC_RGM peripheral base addresses */
#define MC_RGM_BASE_ADDRS                        { MC_RGM_BASE }
/** Array initializer of MC_RGM peripheral base pointers */
#define MC_RGM_BASE_PTRS                         { MC_RGM }

/* ----------------------------------------------------------------------------
   -- MC_RGM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MC_RGM_Register_Masks MC_RGM Register Masks
 * @{
 */

/* DES Bit Fields */
#define MC_RGM_DES_F_POR_MASK                    0x1u
#define MC_RGM_DES_F_POR_SHIFT                   0u
#define MC_RGM_DES_F_POR_WIDTH                   1u
#define MC_RGM_DES_F_POR(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_POR_SHIFT))&MC_RGM_DES_F_POR_MASK)
#define MC_RGM_DES_F_HSM_DEST_MASK               0x4u
#define MC_RGM_DES_F_HSM_DEST_SHIFT              2u
#define MC_RGM_DES_F_HSM_DEST_WIDTH              1u
#define MC_RGM_DES_F_HSM_DEST(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_HSM_DEST_SHIFT))&MC_RGM_DES_F_HSM_DEST_MASK)
#define MC_RGM_DES_F_SOFT_DEST_MASK              0x8u
#define MC_RGM_DES_F_SOFT_DEST_SHIFT             3u
#define MC_RGM_DES_F_SOFT_DEST_WIDTH             1u
#define MC_RGM_DES_F_SOFT_DEST(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SOFT_DEST_SHIFT))&MC_RGM_DES_F_SOFT_DEST_MASK)
#define MC_RGM_DES_F_SSCM_SEC_MASK               0x10u
#define MC_RGM_DES_F_SSCM_SEC_SHIFT              4u
#define MC_RGM_DES_F_SSCM_SEC_WIDTH              1u
#define MC_RGM_DES_F_SSCM_SEC(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SSCM_SEC_SHIFT))&MC_RGM_DES_F_SSCM_SEC_MASK)
#define MC_RGM_DES_F_FUNC_ESC_MASK               0x20u
#define MC_RGM_DES_F_FUNC_ESC_SHIFT              5u
#define MC_RGM_DES_F_FUNC_ESC_WIDTH              1u
#define MC_RGM_DES_F_FUNC_ESC(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_FUNC_ESC_SHIFT))&MC_RGM_DES_F_FUNC_ESC_MASK)
#define MC_RGM_DES_F_SUF_MASK                    0x40u
#define MC_RGM_DES_F_SUF_SHIFT                   6u
#define MC_RGM_DES_F_SUF_WIDTH                   1u
#define MC_RGM_DES_F_SUF(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SUF_SHIFT))&MC_RGM_DES_F_SUF_MASK)
#define MC_RGM_DES_F_SWT0_RES_MASK               0x80u
#define MC_RGM_DES_F_SWT0_RES_SHIFT              7u
#define MC_RGM_DES_F_SWT0_RES_WIDTH              1u
#define MC_RGM_DES_F_SWT0_RES(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SWT0_RES_SHIFT))&MC_RGM_DES_F_SWT0_RES_MASK)
#define MC_RGM_DES_F_SWT1_RES_MASK               0x100u
#define MC_RGM_DES_F_SWT1_RES_SHIFT              8u
#define MC_RGM_DES_F_SWT1_RES_WIDTH              1u
#define MC_RGM_DES_F_SWT1_RES(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SWT1_RES_SHIFT))&MC_RGM_DES_F_SWT1_RES_MASK)
#define MC_RGM_DES_F_SWT2_RES_MASK               0x200u
#define MC_RGM_DES_F_SWT2_RES_SHIFT              9u
#define MC_RGM_DES_F_SWT2_RES_WIDTH              1u
#define MC_RGM_DES_F_SWT2_RES(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_DES_F_SWT2_RES_SHIFT))&MC_RGM_DES_F_SWT2_RES_MASK)
/* DBRE Bit Fields */
#define MC_RGM_DBRE_BE_POR_MASK                  0x1u
#define MC_RGM_DBRE_BE_POR_SHIFT                 0u
#define MC_RGM_DBRE_BE_POR_WIDTH                 1u
#define MC_RGM_DBRE_BE_POR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_POR_SHIFT))&MC_RGM_DBRE_BE_POR_MASK)
#define MC_RGM_DBRE_BE_HSM_DEST_MASK             0x4u
#define MC_RGM_DBRE_BE_HSM_DEST_SHIFT            2u
#define MC_RGM_DBRE_BE_HSM_DEST_WIDTH            1u
#define MC_RGM_DBRE_BE_HSM_DEST(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_HSM_DEST_SHIFT))&MC_RGM_DBRE_BE_HSM_DEST_MASK)
#define MC_RGM_DBRE_BE_SOFT_DEST_MASK            0x8u
#define MC_RGM_DBRE_BE_SOFT_DEST_SHIFT           3u
#define MC_RGM_DBRE_BE_SOFT_DEST_WIDTH           1u
#define MC_RGM_DBRE_BE_SOFT_DEST(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SOFT_DEST_SHIFT))&MC_RGM_DBRE_BE_SOFT_DEST_MASK)
#define MC_RGM_DBRE_BE_SSCM_SEC_MASK             0x10u
#define MC_RGM_DBRE_BE_SSCM_SEC_SHIFT            4u
#define MC_RGM_DBRE_BE_SSCM_SEC_WIDTH            1u
#define MC_RGM_DBRE_BE_SSCM_SEC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SSCM_SEC_SHIFT))&MC_RGM_DBRE_BE_SSCM_SEC_MASK)
#define MC_RGM_DBRE_BE_FUNC_ESC_MASK             0x20u
#define MC_RGM_DBRE_BE_FUNC_ESC_SHIFT            5u
#define MC_RGM_DBRE_BE_FUNC_ESC_WIDTH            1u
#define MC_RGM_DBRE_BE_FUNC_ESC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_FUNC_ESC_SHIFT))&MC_RGM_DBRE_BE_FUNC_ESC_MASK)
#define MC_RGM_DBRE_BE_SUF_MASK                  0x40u
#define MC_RGM_DBRE_BE_SUF_SHIFT                 6u
#define MC_RGM_DBRE_BE_SUF_WIDTH                 1u
#define MC_RGM_DBRE_BE_SUF(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SUF_SHIFT))&MC_RGM_DBRE_BE_SUF_MASK)
#define MC_RGM_DBRE_BE_SWT0_RES_MASK             0x80u
#define MC_RGM_DBRE_BE_SWT0_RES_SHIFT            7u
#define MC_RGM_DBRE_BE_SWT0_RES_WIDTH            1u
#define MC_RGM_DBRE_BE_SWT0_RES(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SWT0_RES_SHIFT))&MC_RGM_DBRE_BE_SWT0_RES_MASK)
#define MC_RGM_DBRE_BE_SWT1_RES_MASK             0x100u
#define MC_RGM_DBRE_BE_SWT1_RES_SHIFT            8u
#define MC_RGM_DBRE_BE_SWT1_RES_WIDTH            1u
#define MC_RGM_DBRE_BE_SWT1_RES(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SWT1_RES_SHIFT))&MC_RGM_DBRE_BE_SWT1_RES_MASK)
#define MC_RGM_DBRE_BE_SWT2_RES_MASK             0x200u
#define MC_RGM_DBRE_BE_SWT2_RES_SHIFT            9u
#define MC_RGM_DBRE_BE_SWT2_RES_WIDTH            1u
#define MC_RGM_DBRE_BE_SWT2_RES(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_DBRE_BE_SWT2_RES_SHIFT))&MC_RGM_DBRE_BE_SWT2_RES_MASK)
/* FES Bit Fields */
#define MC_RGM_FES_F_EXR_MASK                    0x1u
#define MC_RGM_FES_F_EXR_SHIFT                   0u
#define MC_RGM_FES_F_EXR_WIDTH                   1u
#define MC_RGM_FES_F_EXR(x)                      (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_EXR_SHIFT))&MC_RGM_FES_F_EXR_MASK)
#define MC_RGM_FES_F_HSM_FUNC_MASK               0x4u
#define MC_RGM_FES_F_HSM_FUNC_SHIFT              2u
#define MC_RGM_FES_F_HSM_FUNC_WIDTH              1u
#define MC_RGM_FES_F_HSM_FUNC(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_HSM_FUNC_SHIFT))&MC_RGM_FES_F_HSM_FUNC_MASK)
#define MC_RGM_FES_F_SOFT_FUNC_MASK              0x8u
#define MC_RGM_FES_F_SOFT_FUNC_SHIFT             3u
#define MC_RGM_FES_F_SOFT_FUNC_WIDTH             1u
#define MC_RGM_FES_F_SOFT_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_SOFT_FUNC_SHIFT))&MC_RGM_FES_F_SOFT_FUNC_MASK)
#define MC_RGM_FES_F_NMI_WKPU_MASK               0x10u
#define MC_RGM_FES_F_NMI_WKPU_SHIFT              4u
#define MC_RGM_FES_F_NMI_WKPU_WIDTH              1u
#define MC_RGM_FES_F_NMI_WKPU(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_NMI_WKPU_SHIFT))&MC_RGM_FES_F_NMI_WKPU_MASK)
#define MC_RGM_FES_F_JTAG_FUNC_MASK              0x20u
#define MC_RGM_FES_F_JTAG_FUNC_SHIFT             5u
#define MC_RGM_FES_F_JTAG_FUNC_WIDTH             1u
#define MC_RGM_FES_F_JTAG_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_JTAG_FUNC_SHIFT))&MC_RGM_FES_F_JTAG_FUNC_MASK)
#define MC_RGM_FES_F_ST_DONE_MASK                0x40u
#define MC_RGM_FES_F_ST_DONE_SHIFT               6u
#define MC_RGM_FES_F_ST_DONE_WIDTH               1u
#define MC_RGM_FES_F_ST_DONE(x)                  (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_ST_DONE_SHIFT))&MC_RGM_FES_F_ST_DONE_MASK)
#define MC_RGM_FES_F_CMU_OLR_MASK                0x80u
#define MC_RGM_FES_F_CMU_OLR_SHIFT               7u
#define MC_RGM_FES_F_CMU_OLR_WIDTH               1u
#define MC_RGM_FES_F_CMU_OLR(x)                  (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_CMU_OLR_SHIFT))&MC_RGM_FES_F_CMU_OLR_MASK)
#define MC_RGM_FES_F_FCCU_LONG_MASK              0x100u
#define MC_RGM_FES_F_FCCU_LONG_SHIFT             8u
#define MC_RGM_FES_F_FCCU_LONG_WIDTH             1u
#define MC_RGM_FES_F_FCCU_LONG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_FCCU_LONG_SHIFT))&MC_RGM_FES_F_FCCU_LONG_MASK)
#define MC_RGM_FES_F_FCCU_SHORT_MASK             0x200u
#define MC_RGM_FES_F_FCCU_SHORT_SHIFT            9u
#define MC_RGM_FES_F_FCCU_SHORT_WIDTH            1u
#define MC_RGM_FES_F_FCCU_SHORT(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_FCCU_SHORT_SHIFT))&MC_RGM_FES_F_FCCU_SHORT_MASK)
#define MC_RGM_FES_F_Z4A_DBG_MASK                0x400u
#define MC_RGM_FES_F_Z4A_DBG_SHIFT               10u
#define MC_RGM_FES_F_Z4A_DBG_WIDTH               1u
#define MC_RGM_FES_F_Z4A_DBG(x)                  (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_Z4A_DBG_SHIFT))&MC_RGM_FES_F_Z4A_DBG_MASK)
#define MC_RGM_FES_F_Z4B_DBG_MASK                0x800u
#define MC_RGM_FES_F_Z4B_DBG_SHIFT               11u
#define MC_RGM_FES_F_Z4B_DBG_WIDTH               1u
#define MC_RGM_FES_F_Z4B_DBG(x)                  (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_Z4B_DBG_SHIFT))&MC_RGM_FES_F_Z4B_DBG_MASK)
#define MC_RGM_FES_F_Z2_DBG_MASK                 0x1000u
#define MC_RGM_FES_F_Z2_DBG_SHIFT                12u
#define MC_RGM_FES_F_Z2_DBG_WIDTH                1u
#define MC_RGM_FES_F_Z2_DBG(x)                   (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_Z2_DBG_SHIFT))&MC_RGM_FES_F_Z2_DBG_MASK)
#define MC_RGM_FES_F_LVD_IO_A_HI_MASK            0x2000u
#define MC_RGM_FES_F_LVD_IO_A_HI_SHIFT           13u
#define MC_RGM_FES_F_LVD_IO_A_HI_WIDTH           1u
#define MC_RGM_FES_F_LVD_IO_A_HI(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_LVD_IO_A_HI_SHIFT))&MC_RGM_FES_F_LVD_IO_A_HI_MASK)
#define MC_RGM_FES_F_HVD_LV_cold_MASK            0x4000u
#define MC_RGM_FES_F_HVD_LV_cold_SHIFT           14u
#define MC_RGM_FES_F_HVD_LV_cold_WIDTH           1u
#define MC_RGM_FES_F_HVD_LV_cold(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_HVD_LV_cold_SHIFT))&MC_RGM_FES_F_HVD_LV_cold_MASK)
#define MC_RGM_FES_F_LVD_LV_PD2_cold_MASK        0x20000u
#define MC_RGM_FES_F_LVD_LV_PD2_cold_SHIFT       17u
#define MC_RGM_FES_F_LVD_LV_PD2_cold_WIDTH       1u
#define MC_RGM_FES_F_LVD_LV_PD2_cold(x)          (((uint32_t)(((uint32_t)(x))<<MC_RGM_FES_F_LVD_LV_PD2_cold_SHIFT))&MC_RGM_FES_F_LVD_LV_PD2_cold_MASK)
/* FERD Bit Fields */
#define MC_RGM_FERD_D_EXR_MASK                   0x1u
#define MC_RGM_FERD_D_EXR_SHIFT                  0u
#define MC_RGM_FERD_D_EXR_WIDTH                  1u
#define MC_RGM_FERD_D_EXR(x)                     (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_EXR_SHIFT))&MC_RGM_FERD_D_EXR_MASK)
#define MC_RGM_FERD_D_HSM_FUNC_MASK              0x4u
#define MC_RGM_FERD_D_HSM_FUNC_SHIFT             2u
#define MC_RGM_FERD_D_HSM_FUNC_WIDTH             1u
#define MC_RGM_FERD_D_HSM_FUNC(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_HSM_FUNC_SHIFT))&MC_RGM_FERD_D_HSM_FUNC_MASK)
#define MC_RGM_FERD_D_SOFT_FUNC_MASK             0x8u
#define MC_RGM_FERD_D_SOFT_FUNC_SHIFT            3u
#define MC_RGM_FERD_D_SOFT_FUNC_WIDTH            1u
#define MC_RGM_FERD_D_SOFT_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_SOFT_FUNC_SHIFT))&MC_RGM_FERD_D_SOFT_FUNC_MASK)
#define MC_RGM_FERD_D_NMI_WKPU_MASK              0x10u
#define MC_RGM_FERD_D_NMI_WKPU_SHIFT             4u
#define MC_RGM_FERD_D_NMI_WKPU_WIDTH             1u
#define MC_RGM_FERD_D_NMI_WKPU(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_NMI_WKPU_SHIFT))&MC_RGM_FERD_D_NMI_WKPU_MASK)
#define MC_RGM_FERD_D_JTAG_FUNC_MASK             0x20u
#define MC_RGM_FERD_D_JTAG_FUNC_SHIFT            5u
#define MC_RGM_FERD_D_JTAG_FUNC_WIDTH            1u
#define MC_RGM_FERD_D_JTAG_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_JTAG_FUNC_SHIFT))&MC_RGM_FERD_D_JTAG_FUNC_MASK)
#define MC_RGM_FERD_D_ST_DONE_MASK               0x40u
#define MC_RGM_FERD_D_ST_DONE_SHIFT              6u
#define MC_RGM_FERD_D_ST_DONE_WIDTH              1u
#define MC_RGM_FERD_D_ST_DONE(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_ST_DONE_SHIFT))&MC_RGM_FERD_D_ST_DONE_MASK)
#define MC_RGM_FERD_D_CMU_OLR_MASK               0x80u
#define MC_RGM_FERD_D_CMU_OLR_SHIFT              7u
#define MC_RGM_FERD_D_CMU_OLR_WIDTH              1u
#define MC_RGM_FERD_D_CMU_OLR(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_CMU_OLR_SHIFT))&MC_RGM_FERD_D_CMU_OLR_MASK)
#define MC_RGM_FERD_D_FCCU_LONG_MASK             0x100u
#define MC_RGM_FERD_D_FCCU_LONG_SHIFT            8u
#define MC_RGM_FERD_D_FCCU_LONG_WIDTH            1u
#define MC_RGM_FERD_D_FCCU_LONG(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_FCCU_LONG_SHIFT))&MC_RGM_FERD_D_FCCU_LONG_MASK)
#define MC_RGM_FERD_D_FCCU_SHORT_MASK            0x200u
#define MC_RGM_FERD_D_FCCU_SHORT_SHIFT           9u
#define MC_RGM_FERD_D_FCCU_SHORT_WIDTH           1u
#define MC_RGM_FERD_D_FCCU_SHORT(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_FCCU_SHORT_SHIFT))&MC_RGM_FERD_D_FCCU_SHORT_MASK)
#define MC_RGM_FERD_D_Z4A_DBG_MASK               0x400u
#define MC_RGM_FERD_D_Z4A_DBG_SHIFT              10u
#define MC_RGM_FERD_D_Z4A_DBG_WIDTH              1u
#define MC_RGM_FERD_D_Z4A_DBG(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_Z4A_DBG_SHIFT))&MC_RGM_FERD_D_Z4A_DBG_MASK)
#define MC_RGM_FERD_D_Z4B_DBG_MASK               0x800u
#define MC_RGM_FERD_D_Z4B_DBG_SHIFT              11u
#define MC_RGM_FERD_D_Z4B_DBG_WIDTH              1u
#define MC_RGM_FERD_D_Z4B_DBG(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_Z4B_DBG_SHIFT))&MC_RGM_FERD_D_Z4B_DBG_MASK)
#define MC_RGM_FERD_D_Z2_DBG_MASK                0x1000u
#define MC_RGM_FERD_D_Z2_DBG_SHIFT               12u
#define MC_RGM_FERD_D_Z2_DBG_WIDTH               1u
#define MC_RGM_FERD_D_Z2_DBG(x)                  (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_Z2_DBG_SHIFT))&MC_RGM_FERD_D_Z2_DBG_MASK)
#define MC_RGM_FERD_D_LVD_IO_A_HI_MASK           0x2000u
#define MC_RGM_FERD_D_LVD_IO_A_HI_SHIFT          13u
#define MC_RGM_FERD_D_LVD_IO_A_HI_WIDTH          1u
#define MC_RGM_FERD_D_LVD_IO_A_HI(x)             (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_LVD_IO_A_HI_SHIFT))&MC_RGM_FERD_D_LVD_IO_A_HI_MASK)
#define MC_RGM_FERD_D_HVD_LV_cold_MASK           0x4000u
#define MC_RGM_FERD_D_HVD_LV_cold_SHIFT          14u
#define MC_RGM_FERD_D_HVD_LV_cold_WIDTH          1u
#define MC_RGM_FERD_D_HVD_LV_cold(x)             (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_HVD_LV_cold_SHIFT))&MC_RGM_FERD_D_HVD_LV_cold_MASK)
#define MC_RGM_FERD_D_LVD_LV_PD2_cold_MASK       0x20000u
#define MC_RGM_FERD_D_LVD_LV_PD2_cold_SHIFT      17u
#define MC_RGM_FERD_D_LVD_LV_PD2_cold_WIDTH      1u
#define MC_RGM_FERD_D_LVD_LV_PD2_cold(x)         (((uint32_t)(((uint32_t)(x))<<MC_RGM_FERD_D_LVD_LV_PD2_cold_SHIFT))&MC_RGM_FERD_D_LVD_LV_PD2_cold_MASK)
/* FEAR Bit Fields */
#define MC_RGM_FEAR_AR_EXR_MASK                  0x1u
#define MC_RGM_FEAR_AR_EXR_SHIFT                 0u
#define MC_RGM_FEAR_AR_EXR_WIDTH                 1u
#define MC_RGM_FEAR_AR_EXR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_EXR_SHIFT))&MC_RGM_FEAR_AR_EXR_MASK)
#define MC_RGM_FEAR_AR_NMI_WKPU_MASK             0x10u
#define MC_RGM_FEAR_AR_NMI_WKPU_SHIFT            4u
#define MC_RGM_FEAR_AR_NMI_WKPU_WIDTH            1u
#define MC_RGM_FEAR_AR_NMI_WKPU(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_NMI_WKPU_SHIFT))&MC_RGM_FEAR_AR_NMI_WKPU_MASK)
#define MC_RGM_FEAR_AR_JTAG_FUNC_MASK            0x20u
#define MC_RGM_FEAR_AR_JTAG_FUNC_SHIFT           5u
#define MC_RGM_FEAR_AR_JTAG_FUNC_WIDTH           1u
#define MC_RGM_FEAR_AR_JTAG_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_JTAG_FUNC_SHIFT))&MC_RGM_FEAR_AR_JTAG_FUNC_MASK)
#define MC_RGM_FEAR_AR_CMU_OLR_MASK              0x80u
#define MC_RGM_FEAR_AR_CMU_OLR_SHIFT             7u
#define MC_RGM_FEAR_AR_CMU_OLR_WIDTH             1u
#define MC_RGM_FEAR_AR_CMU_OLR(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_CMU_OLR_SHIFT))&MC_RGM_FEAR_AR_CMU_OLR_MASK)
#define MC_RGM_FEAR_AR_Z4A_DBG_MASK              0x400u
#define MC_RGM_FEAR_AR_Z4A_DBG_SHIFT             10u
#define MC_RGM_FEAR_AR_Z4A_DBG_WIDTH             1u
#define MC_RGM_FEAR_AR_Z4A_DBG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_Z4A_DBG_SHIFT))&MC_RGM_FEAR_AR_Z4A_DBG_MASK)
#define MC_RGM_FEAR_AR_Z4B_DBG_MASK              0x800u
#define MC_RGM_FEAR_AR_Z4B_DBG_SHIFT             11u
#define MC_RGM_FEAR_AR_Z4B_DBG_WIDTH             1u
#define MC_RGM_FEAR_AR_Z4B_DBG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_Z4B_DBG_SHIFT))&MC_RGM_FEAR_AR_Z4B_DBG_MASK)
#define MC_RGM_FEAR_AR_Z2_DBG_MASK               0x1000u
#define MC_RGM_FEAR_AR_Z2_DBG_SHIFT              12u
#define MC_RGM_FEAR_AR_Z2_DBG_WIDTH              1u
#define MC_RGM_FEAR_AR_Z2_DBG(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_Z2_DBG_SHIFT))&MC_RGM_FEAR_AR_Z2_DBG_MASK)
#define MC_RGM_FEAR_AR_LVD_IO_A_HI_MASK          0x2000u
#define MC_RGM_FEAR_AR_LVD_IO_A_HI_SHIFT         13u
#define MC_RGM_FEAR_AR_LVD_IO_A_HI_WIDTH         1u
#define MC_RGM_FEAR_AR_LVD_IO_A_HI(x)            (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_LVD_IO_A_HI_SHIFT))&MC_RGM_FEAR_AR_LVD_IO_A_HI_MASK)
#define MC_RGM_FEAR_AR_HVD_LV_cold_MASK          0x4000u
#define MC_RGM_FEAR_AR_HVD_LV_cold_SHIFT         14u
#define MC_RGM_FEAR_AR_HVD_LV_cold_WIDTH         1u
#define MC_RGM_FEAR_AR_HVD_LV_cold(x)            (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_HVD_LV_cold_SHIFT))&MC_RGM_FEAR_AR_HVD_LV_cold_MASK)
#define MC_RGM_FEAR_AR_LVD_LV_PD2_cold_MASK      0x20000u
#define MC_RGM_FEAR_AR_LVD_LV_PD2_cold_SHIFT     17u
#define MC_RGM_FEAR_AR_LVD_LV_PD2_cold_WIDTH     1u
#define MC_RGM_FEAR_AR_LVD_LV_PD2_cold(x)        (((uint32_t)(((uint32_t)(x))<<MC_RGM_FEAR_AR_LVD_LV_PD2_cold_SHIFT))&MC_RGM_FEAR_AR_LVD_LV_PD2_cold_MASK)
/* FBRE Bit Fields */
#define MC_RGM_FBRE_BE_EXR_MASK                  0x1u
#define MC_RGM_FBRE_BE_EXR_SHIFT                 0u
#define MC_RGM_FBRE_BE_EXR_WIDTH                 1u
#define MC_RGM_FBRE_BE_EXR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_EXR_SHIFT))&MC_RGM_FBRE_BE_EXR_MASK)
#define MC_RGM_FBRE_BE_HSM_FUNC_MASK             0x4u
#define MC_RGM_FBRE_BE_HSM_FUNC_SHIFT            2u
#define MC_RGM_FBRE_BE_HSM_FUNC_WIDTH            1u
#define MC_RGM_FBRE_BE_HSM_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_HSM_FUNC_SHIFT))&MC_RGM_FBRE_BE_HSM_FUNC_MASK)
#define MC_RGM_FBRE_BE_SOFT_FUNC_MASK            0x8u
#define MC_RGM_FBRE_BE_SOFT_FUNC_SHIFT           3u
#define MC_RGM_FBRE_BE_SOFT_FUNC_WIDTH           1u
#define MC_RGM_FBRE_BE_SOFT_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_SOFT_FUNC_SHIFT))&MC_RGM_FBRE_BE_SOFT_FUNC_MASK)
#define MC_RGM_FBRE_BE_NMI_WKPU_MASK             0x10u
#define MC_RGM_FBRE_BE_NMI_WKPU_SHIFT            4u
#define MC_RGM_FBRE_BE_NMI_WKPU_WIDTH            1u
#define MC_RGM_FBRE_BE_NMI_WKPU(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_NMI_WKPU_SHIFT))&MC_RGM_FBRE_BE_NMI_WKPU_MASK)
#define MC_RGM_FBRE_BE_JTAG_FUNC_MASK            0x20u
#define MC_RGM_FBRE_BE_JTAG_FUNC_SHIFT           5u
#define MC_RGM_FBRE_BE_JTAG_FUNC_WIDTH           1u
#define MC_RGM_FBRE_BE_JTAG_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_JTAG_FUNC_SHIFT))&MC_RGM_FBRE_BE_JTAG_FUNC_MASK)
#define MC_RGM_FBRE_BE_ST_DONE_MASK              0x40u
#define MC_RGM_FBRE_BE_ST_DONE_SHIFT             6u
#define MC_RGM_FBRE_BE_ST_DONE_WIDTH             1u
#define MC_RGM_FBRE_BE_ST_DONE(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_ST_DONE_SHIFT))&MC_RGM_FBRE_BE_ST_DONE_MASK)
#define MC_RGM_FBRE_BE_CMU_OLR_MASK              0x80u
#define MC_RGM_FBRE_BE_CMU_OLR_SHIFT             7u
#define MC_RGM_FBRE_BE_CMU_OLR_WIDTH             1u
#define MC_RGM_FBRE_BE_CMU_OLR(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_CMU_OLR_SHIFT))&MC_RGM_FBRE_BE_CMU_OLR_MASK)
#define MC_RGM_FBRE_BE_FCCU_LONG_MASK            0x100u
#define MC_RGM_FBRE_BE_FCCU_LONG_SHIFT           8u
#define MC_RGM_FBRE_BE_FCCU_LONG_WIDTH           1u
#define MC_RGM_FBRE_BE_FCCU_LONG(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_FCCU_LONG_SHIFT))&MC_RGM_FBRE_BE_FCCU_LONG_MASK)
#define MC_RGM_FBRE_BE_FCCU_SHORT_MASK           0x200u
#define MC_RGM_FBRE_BE_FCCU_SHORT_SHIFT          9u
#define MC_RGM_FBRE_BE_FCCU_SHORT_WIDTH          1u
#define MC_RGM_FBRE_BE_FCCU_SHORT(x)             (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_FCCU_SHORT_SHIFT))&MC_RGM_FBRE_BE_FCCU_SHORT_MASK)
#define MC_RGM_FBRE_BE_Z4A_DBG_MASK              0x400u
#define MC_RGM_FBRE_BE_Z4A_DBG_SHIFT             10u
#define MC_RGM_FBRE_BE_Z4A_DBG_WIDTH             1u
#define MC_RGM_FBRE_BE_Z4A_DBG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_Z4A_DBG_SHIFT))&MC_RGM_FBRE_BE_Z4A_DBG_MASK)
#define MC_RGM_FBRE_BE_Z4B_DBG_MASK              0x800u
#define MC_RGM_FBRE_BE_Z4B_DBG_SHIFT             11u
#define MC_RGM_FBRE_BE_Z4B_DBG_WIDTH             1u
#define MC_RGM_FBRE_BE_Z4B_DBG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_Z4B_DBG_SHIFT))&MC_RGM_FBRE_BE_Z4B_DBG_MASK)
#define MC_RGM_FBRE_BE_Z2_DBG_MASK               0x1000u
#define MC_RGM_FBRE_BE_Z2_DBG_SHIFT              12u
#define MC_RGM_FBRE_BE_Z2_DBG_WIDTH              1u
#define MC_RGM_FBRE_BE_Z2_DBG(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_Z2_DBG_SHIFT))&MC_RGM_FBRE_BE_Z2_DBG_MASK)
#define MC_RGM_FBRE_BE_LVD_IO_A_HI_MASK          0x2000u
#define MC_RGM_FBRE_BE_LVD_IO_A_HI_SHIFT         13u
#define MC_RGM_FBRE_BE_LVD_IO_A_HI_WIDTH         1u
#define MC_RGM_FBRE_BE_LVD_IO_A_HI(x)            (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_LVD_IO_A_HI_SHIFT))&MC_RGM_FBRE_BE_LVD_IO_A_HI_MASK)
#define MC_RGM_FBRE_BE_HVD_LV_cold_MASK          0x4000u
#define MC_RGM_FBRE_BE_HVD_LV_cold_SHIFT         14u
#define MC_RGM_FBRE_BE_HVD_LV_cold_WIDTH         1u
#define MC_RGM_FBRE_BE_HVD_LV_cold(x)            (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_HVD_LV_cold_SHIFT))&MC_RGM_FBRE_BE_HVD_LV_cold_MASK)
#define MC_RGM_FBRE_BE_LVD_LV_PD2_cold_MASK      0x20000u
#define MC_RGM_FBRE_BE_LVD_LV_PD2_cold_SHIFT     17u
#define MC_RGM_FBRE_BE_LVD_LV_PD2_cold_WIDTH     1u
#define MC_RGM_FBRE_BE_LVD_LV_PD2_cold(x)        (((uint32_t)(((uint32_t)(x))<<MC_RGM_FBRE_BE_LVD_LV_PD2_cold_SHIFT))&MC_RGM_FBRE_BE_LVD_LV_PD2_cold_MASK)
/* FESS Bit Fields */
#define MC_RGM_FESS_SS_EXR_MASK                  0x1u
#define MC_RGM_FESS_SS_EXR_SHIFT                 0u
#define MC_RGM_FESS_SS_EXR_WIDTH                 1u
#define MC_RGM_FESS_SS_EXR(x)                    (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_EXR_SHIFT))&MC_RGM_FESS_SS_EXR_MASK)
#define MC_RGM_FESS_SS_HSM_FUNC_MASK             0x4u
#define MC_RGM_FESS_SS_HSM_FUNC_SHIFT            2u
#define MC_RGM_FESS_SS_HSM_FUNC_WIDTH            1u
#define MC_RGM_FESS_SS_HSM_FUNC(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_HSM_FUNC_SHIFT))&MC_RGM_FESS_SS_HSM_FUNC_MASK)
#define MC_RGM_FESS_SS_SOFT_FUNC_MASK            0x8u
#define MC_RGM_FESS_SS_SOFT_FUNC_SHIFT           3u
#define MC_RGM_FESS_SS_SOFT_FUNC_WIDTH           1u
#define MC_RGM_FESS_SS_SOFT_FUNC(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_SOFT_FUNC_SHIFT))&MC_RGM_FESS_SS_SOFT_FUNC_MASK)
#define MC_RGM_FESS_SS_NMI_WKPU_MASK             0x10u
#define MC_RGM_FESS_SS_NMI_WKPU_SHIFT            4u
#define MC_RGM_FESS_SS_NMI_WKPU_WIDTH            1u
#define MC_RGM_FESS_SS_NMI_WKPU(x)               (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_NMI_WKPU_SHIFT))&MC_RGM_FESS_SS_NMI_WKPU_MASK)
#define MC_RGM_FESS_SS_FUNC_JTAG_MASK            0x20u
#define MC_RGM_FESS_SS_FUNC_JTAG_SHIFT           5u
#define MC_RGM_FESS_SS_FUNC_JTAG_WIDTH           1u
#define MC_RGM_FESS_SS_FUNC_JTAG(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_FUNC_JTAG_SHIFT))&MC_RGM_FESS_SS_FUNC_JTAG_MASK)
#define MC_RGM_FESS_SS_ST_DONE_MASK              0x40u
#define MC_RGM_FESS_SS_ST_DONE_SHIFT             6u
#define MC_RGM_FESS_SS_ST_DONE_WIDTH             1u
#define MC_RGM_FESS_SS_ST_DONE(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_ST_DONE_SHIFT))&MC_RGM_FESS_SS_ST_DONE_MASK)
#define MC_RGM_FESS_SS_CMU_OLR_MASK              0x80u
#define MC_RGM_FESS_SS_CMU_OLR_SHIFT             7u
#define MC_RGM_FESS_SS_CMU_OLR_WIDTH             1u
#define MC_RGM_FESS_SS_CMU_OLR(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_CMU_OLR_SHIFT))&MC_RGM_FESS_SS_CMU_OLR_MASK)
#define MC_RGM_FESS_SS_FCCU_LONG_MASK            0x100u
#define MC_RGM_FESS_SS_FCCU_LONG_SHIFT           8u
#define MC_RGM_FESS_SS_FCCU_LONG_WIDTH           1u
#define MC_RGM_FESS_SS_FCCU_LONG(x)              (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_FCCU_LONG_SHIFT))&MC_RGM_FESS_SS_FCCU_LONG_MASK)
#define MC_RGM_FESS_SS_FCCU_SHORT_MASK           0x200u
#define MC_RGM_FESS_SS_FCCU_SHORT_SHIFT          9u
#define MC_RGM_FESS_SS_FCCU_SHORT_WIDTH          1u
#define MC_RGM_FESS_SS_FCCU_SHORT(x)             (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_FCCU_SHORT_SHIFT))&MC_RGM_FESS_SS_FCCU_SHORT_MASK)
#define MC_RGM_FESS_SS_Z4A_DBG_MASK              0x400u
#define MC_RGM_FESS_SS_Z4A_DBG_SHIFT             10u
#define MC_RGM_FESS_SS_Z4A_DBG_WIDTH             1u
#define MC_RGM_FESS_SS_Z4A_DBG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_Z4A_DBG_SHIFT))&MC_RGM_FESS_SS_Z4A_DBG_MASK)
#define MC_RGM_FESS_SS_Z4B_DBG_MASK              0x800u
#define MC_RGM_FESS_SS_Z4B_DBG_SHIFT             11u
#define MC_RGM_FESS_SS_Z4B_DBG_WIDTH             1u
#define MC_RGM_FESS_SS_Z4B_DBG(x)                (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_Z4B_DBG_SHIFT))&MC_RGM_FESS_SS_Z4B_DBG_MASK)
#define MC_RGM_FESS_SS_Z2_DBG_MASK               0x1000u
#define MC_RGM_FESS_SS_Z2_DBG_SHIFT              12u
#define MC_RGM_FESS_SS_Z2_DBG_WIDTH              1u
#define MC_RGM_FESS_SS_Z2_DBG(x)                 (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_Z2_DBG_SHIFT))&MC_RGM_FESS_SS_Z2_DBG_MASK)
#define MC_RGM_FESS_SS_LVD_IO_A_HI_MASK          0x2000u
#define MC_RGM_FESS_SS_LVD_IO_A_HI_SHIFT         13u
#define MC_RGM_FESS_SS_LVD_IO_A_HI_WIDTH         1u
#define MC_RGM_FESS_SS_LVD_IO_A_HI(x)            (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_LVD_IO_A_HI_SHIFT))&MC_RGM_FESS_SS_LVD_IO_A_HI_MASK)
#define MC_RGM_FESS_SS_HVD_LV_cold_MASK          0x4000u
#define MC_RGM_FESS_SS_HVD_LV_cold_SHIFT         14u
#define MC_RGM_FESS_SS_HVD_LV_cold_WIDTH         1u
#define MC_RGM_FESS_SS_HVD_LV_cold(x)            (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_HVD_LV_cold_SHIFT))&MC_RGM_FESS_SS_HVD_LV_cold_MASK)
#define MC_RGM_FESS_SS_LVD_LV_PD2_cold_MASK      0x20000u
#define MC_RGM_FESS_SS_LVD_LV_PD2_cold_SHIFT     17u
#define MC_RGM_FESS_SS_LVD_LV_PD2_cold_WIDTH     1u
#define MC_RGM_FESS_SS_LVD_LV_PD2_cold(x)        (((uint32_t)(((uint32_t)(x))<<MC_RGM_FESS_SS_LVD_LV_PD2_cold_SHIFT))&MC_RGM_FESS_SS_LVD_LV_PD2_cold_MASK)
/* FRET Bit Fields */
#define MC_RGM_FRET_FRET_MASK                    0xFu
#define MC_RGM_FRET_FRET_SHIFT                   0u
#define MC_RGM_FRET_FRET_WIDTH                   4u
#define MC_RGM_FRET_FRET(x)                      (((uint8_t)(((uint8_t)(x))<<MC_RGM_FRET_FRET_SHIFT))&MC_RGM_FRET_FRET_MASK)
/* DRET Bit Fields */
#define MC_RGM_DRET_DRET_MASK                    0xFu
#define MC_RGM_DRET_DRET_SHIFT                   0u
#define MC_RGM_DRET_DRET_WIDTH                   4u
#define MC_RGM_DRET_DRET(x)                      (((uint8_t)(((uint8_t)(x))<<MC_RGM_DRET_DRET_SHIFT))&MC_RGM_DRET_DRET_MASK)

/*!
 * @}
 */ /* end of group MC_RGM_Register_Masks */


/*!
 * @}
 */ /* end of group MC_RGM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MEMU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MEMU_Peripheral_Access_Layer MEMU Peripheral Access Layer
 * @{
 */


/** MEMU - Size of Registers Arrays */
#define MEMU_SYS_RAM_CERR_COUNT                  10u
#define MEMU_SYS_RAM_OFLW_COUNT                  1u
#define MEMU_PERIPH_RAM_CERR_COUNT               2u
#define MEMU_FLASH_CERR_COUNT                    20u

/** MEMU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTRL;                              /**< Control register, offset: 0x0 */
  __IO uint32_t ERR_FLAG;                          /**< Error flag register, offset: 0x4 */
       uint8_t RESERVED_0[4];
  __IO uint32_t DEBUGr;                            /**< Debug register, offset: 0xC */
       uint8_t RESERVED_1[16];
  struct {                                         /* offset: 0x20, array step: 0x8 */
    __IO uint32_t STS;                               /**< System RAM correctable error reporting table status register, array offset: 0x20, array step: 0x8 */
    __IO uint32_t ADDR;                              /**< System RAM correctable error reporting table address register, array offset: 0x24, array step: 0x8 */
  } SYS_RAM_CERR[MEMU_SYS_RAM_CERR_COUNT];
  __IO uint32_t SYS_RAM_UNCERR_STS;                /**< System RAM uncorrectable error reporting table status register, offset: 0x70 */
  __IO uint32_t SYS_RAM_UNCERR_ADDR;               /**< System RAM uncorrectable error reporting table address register, offset: 0x74 */
  __IO uint32_t SYS_RAM_OFLW[MEMU_SYS_RAM_OFLW_COUNT]; /**< System RAM concurrent overflow register, array offset: 0x78, array step: 0x4 */
       uint8_t RESERVED_2[1444];
  struct {                                         /* offset: 0x620, array step: 0x8 */
    __IO uint32_t STS;                               /**< Peripheral RAM correctable error reporting table status register, array offset: 0x620, array step: 0x8 */
    __IO uint32_t ADDR;                              /**< Peripheral RAM correctable error reporting table address register, array offset: 0x624, array step: 0x8 */
  } PERIPH_RAM_CERR[MEMU_PERIPH_RAM_CERR_COUNT];
  __IO uint32_t PERIPH_RAM_UNCERR_STS;             /**< Peripheral RAM uncorrectable error reporting table status register, offset: 0x630 */
  __IO uint32_t PERIPH_RAM_UNCERR_ADDR;            /**< Peripheral RAM uncorrectable error reporting table address register, offset: 0x634 */
  __IO uint32_t PERIPH_RAM_OFLW0;                  /**< Peripheral RAM concurrent overflow register, offset: 0x638 */
       uint8_t RESERVED_3[1508];
  struct {                                         /* offset: 0xC20, array step: 0x8 */
    __IO uint32_t STS;                               /**< Flash memory correctable error reporting table status register, array offset: 0xC20, array step: 0x8 */
    __IO uint32_t ADDR;                              /**< Flash memory correctable error reporting table address register, array offset: 0xC24, array step: 0x8 */
  } FLASH_CERR[MEMU_FLASH_CERR_COUNT];
  __IO uint32_t FLASH_UNCERR_STS;                  /**< Flash memory uncorrectable error reporting table status register, offset: 0xCC0 */
  __IO uint32_t FLASH_UNCERR_ADDR;                 /**< Flash memory uncorrectable error reporting table address register, offset: 0xCC4 */
  __IO uint32_t FLASH_OFLW0;                       /**< Flash memory concurrent overflow register, offset: 0xCC8 */
} MEMU_Type, *MEMU_MemMapPtr;

 /** Number of instances of the MEMU module. */
#define MEMU_INSTANCE_COUNT                      (2u)


/* MEMU - Peripheral instance base addresses */
/** Peripheral MEMU_0 base address */
#define MEMU_0_BASE                              (0xFFF50000u)
/** Peripheral MEMU_0 base pointer */
#define MEMU_0                                   ((MEMU_Type *)MEMU_0_BASE)
/** Peripheral MEMU_1 base address */
#define MEMU_1_BASE                              (0xFFFEC000u)
/** Peripheral MEMU_1 base pointer */
#define MEMU_1                                   ((MEMU_Type *)MEMU_1_BASE)
/** Array initializer of MEMU peripheral base addresses */
#define MEMU_BASE_ADDRS                          { MEMU_0_BASE, MEMU_1_BASE }
/** Array initializer of MEMU peripheral base pointers */
#define MEMU_BASE_PTRS                           { MEMU_0, MEMU_1 }

/* ----------------------------------------------------------------------------
   -- MEMU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MEMU_Register_Masks MEMU Register Masks
 * @{
 */

/* CTRL Bit Fields */
#define MEMU_CTRL_SWR_MASK                       0x8000u
#define MEMU_CTRL_SWR_SHIFT                      15u
#define MEMU_CTRL_SWR_WIDTH                      1u
#define MEMU_CTRL_SWR(x)                         (((uint32_t)(((uint32_t)(x))<<MEMU_CTRL_SWR_SHIFT))&MEMU_CTRL_SWR_MASK)
/* ERR_FLAG Bit Fields */
#define MEMU_ERR_FLAG_SR_EBO_MASK                0x1u
#define MEMU_ERR_FLAG_SR_EBO_SHIFT               0u
#define MEMU_ERR_FLAG_SR_EBO_WIDTH               1u
#define MEMU_ERR_FLAG_SR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_EBO_SHIFT))&MEMU_ERR_FLAG_SR_EBO_MASK)
#define MEMU_ERR_FLAG_SR_UCO_MASK                0x2u
#define MEMU_ERR_FLAG_SR_UCO_SHIFT               1u
#define MEMU_ERR_FLAG_SR_UCO_WIDTH               1u
#define MEMU_ERR_FLAG_SR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_UCO_SHIFT))&MEMU_ERR_FLAG_SR_UCO_MASK)
#define MEMU_ERR_FLAG_SR_CEO_MASK                0x4u
#define MEMU_ERR_FLAG_SR_CEO_SHIFT               2u
#define MEMU_ERR_FLAG_SR_CEO_WIDTH               1u
#define MEMU_ERR_FLAG_SR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_CEO_SHIFT))&MEMU_ERR_FLAG_SR_CEO_MASK)
#define MEMU_ERR_FLAG_SR_UCE_MASK                0x8u
#define MEMU_ERR_FLAG_SR_UCE_SHIFT               3u
#define MEMU_ERR_FLAG_SR_UCE_WIDTH               1u
#define MEMU_ERR_FLAG_SR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_UCE_SHIFT))&MEMU_ERR_FLAG_SR_UCE_MASK)
#define MEMU_ERR_FLAG_SR_CE_MASK                 0x10u
#define MEMU_ERR_FLAG_SR_CE_SHIFT                4u
#define MEMU_ERR_FLAG_SR_CE_WIDTH                1u
#define MEMU_ERR_FLAG_SR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_SR_CE_SHIFT))&MEMU_ERR_FLAG_SR_CE_MASK)
#define MEMU_ERR_FLAG_F_EBO_MASK                 0x100u
#define MEMU_ERR_FLAG_F_EBO_SHIFT                8u
#define MEMU_ERR_FLAG_F_EBO_WIDTH                1u
#define MEMU_ERR_FLAG_F_EBO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_EBO_SHIFT))&MEMU_ERR_FLAG_F_EBO_MASK)
#define MEMU_ERR_FLAG_F_UCO_MASK                 0x200u
#define MEMU_ERR_FLAG_F_UCO_SHIFT                9u
#define MEMU_ERR_FLAG_F_UCO_WIDTH                1u
#define MEMU_ERR_FLAG_F_UCO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_UCO_SHIFT))&MEMU_ERR_FLAG_F_UCO_MASK)
#define MEMU_ERR_FLAG_F_CEO_MASK                 0x400u
#define MEMU_ERR_FLAG_F_CEO_SHIFT                10u
#define MEMU_ERR_FLAG_F_CEO_WIDTH                1u
#define MEMU_ERR_FLAG_F_CEO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_CEO_SHIFT))&MEMU_ERR_FLAG_F_CEO_MASK)
#define MEMU_ERR_FLAG_F_UCE_MASK                 0x800u
#define MEMU_ERR_FLAG_F_UCE_SHIFT                11u
#define MEMU_ERR_FLAG_F_UCE_WIDTH                1u
#define MEMU_ERR_FLAG_F_UCE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_UCE_SHIFT))&MEMU_ERR_FLAG_F_UCE_MASK)
#define MEMU_ERR_FLAG_F_CE_MASK                  0x1000u
#define MEMU_ERR_FLAG_F_CE_SHIFT                 12u
#define MEMU_ERR_FLAG_F_CE_WIDTH                 1u
#define MEMU_ERR_FLAG_F_CE(x)                    (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_F_CE_SHIFT))&MEMU_ERR_FLAG_F_CE_MASK)
#define MEMU_ERR_FLAG_PR_EBO_MASK                0x10000u
#define MEMU_ERR_FLAG_PR_EBO_SHIFT               16u
#define MEMU_ERR_FLAG_PR_EBO_WIDTH               1u
#define MEMU_ERR_FLAG_PR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_EBO_SHIFT))&MEMU_ERR_FLAG_PR_EBO_MASK)
#define MEMU_ERR_FLAG_PR_UCO_MASK                0x20000u
#define MEMU_ERR_FLAG_PR_UCO_SHIFT               17u
#define MEMU_ERR_FLAG_PR_UCO_WIDTH               1u
#define MEMU_ERR_FLAG_PR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_UCO_SHIFT))&MEMU_ERR_FLAG_PR_UCO_MASK)
#define MEMU_ERR_FLAG_PR_CEO_MASK                0x40000u
#define MEMU_ERR_FLAG_PR_CEO_SHIFT               18u
#define MEMU_ERR_FLAG_PR_CEO_WIDTH               1u
#define MEMU_ERR_FLAG_PR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_CEO_SHIFT))&MEMU_ERR_FLAG_PR_CEO_MASK)
#define MEMU_ERR_FLAG_PR_UCE_MASK                0x80000u
#define MEMU_ERR_FLAG_PR_UCE_SHIFT               19u
#define MEMU_ERR_FLAG_PR_UCE_WIDTH               1u
#define MEMU_ERR_FLAG_PR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_UCE_SHIFT))&MEMU_ERR_FLAG_PR_UCE_MASK)
#define MEMU_ERR_FLAG_PR_CE_MASK                 0x100000u
#define MEMU_ERR_FLAG_PR_CE_SHIFT                20u
#define MEMU_ERR_FLAG_PR_CE_WIDTH                1u
#define MEMU_ERR_FLAG_PR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_ERR_FLAG_PR_CE_SHIFT))&MEMU_ERR_FLAG_PR_CE_MASK)
/* DEBUG Bit Fields */
#define MEMU_DEBUG_FR_SR_EBO_MASK                0x1u
#define MEMU_DEBUG_FR_SR_EBO_SHIFT               0u
#define MEMU_DEBUG_FR_SR_EBO_WIDTH               1u
#define MEMU_DEBUG_FR_SR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_EBO_SHIFT))&MEMU_DEBUG_FR_SR_EBO_MASK)
#define MEMU_DEBUG_FR_SR_UCO_MASK                0x2u
#define MEMU_DEBUG_FR_SR_UCO_SHIFT               1u
#define MEMU_DEBUG_FR_SR_UCO_WIDTH               1u
#define MEMU_DEBUG_FR_SR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_UCO_SHIFT))&MEMU_DEBUG_FR_SR_UCO_MASK)
#define MEMU_DEBUG_FR_SR_CEO_MASK                0x4u
#define MEMU_DEBUG_FR_SR_CEO_SHIFT               2u
#define MEMU_DEBUG_FR_SR_CEO_WIDTH               1u
#define MEMU_DEBUG_FR_SR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_CEO_SHIFT))&MEMU_DEBUG_FR_SR_CEO_MASK)
#define MEMU_DEBUG_FR_SR_UCE_MASK                0x8u
#define MEMU_DEBUG_FR_SR_UCE_SHIFT               3u
#define MEMU_DEBUG_FR_SR_UCE_WIDTH               1u
#define MEMU_DEBUG_FR_SR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_UCE_SHIFT))&MEMU_DEBUG_FR_SR_UCE_MASK)
#define MEMU_DEBUG_FR_SR_CE_MASK                 0x10u
#define MEMU_DEBUG_FR_SR_CE_SHIFT                4u
#define MEMU_DEBUG_FR_SR_CE_WIDTH                1u
#define MEMU_DEBUG_FR_SR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_SR_CE_SHIFT))&MEMU_DEBUG_FR_SR_CE_MASK)
#define MEMU_DEBUG_FR_F_EBO_MASK                 0x100u
#define MEMU_DEBUG_FR_F_EBO_SHIFT                8u
#define MEMU_DEBUG_FR_F_EBO_WIDTH                1u
#define MEMU_DEBUG_FR_F_EBO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_EBO_SHIFT))&MEMU_DEBUG_FR_F_EBO_MASK)
#define MEMU_DEBUG_FR_F_UCO_MASK                 0x200u
#define MEMU_DEBUG_FR_F_UCO_SHIFT                9u
#define MEMU_DEBUG_FR_F_UCO_WIDTH                1u
#define MEMU_DEBUG_FR_F_UCO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_UCO_SHIFT))&MEMU_DEBUG_FR_F_UCO_MASK)
#define MEMU_DEBUG_FR_F_CEO_MASK                 0x400u
#define MEMU_DEBUG_FR_F_CEO_SHIFT                10u
#define MEMU_DEBUG_FR_F_CEO_WIDTH                1u
#define MEMU_DEBUG_FR_F_CEO(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_CEO_SHIFT))&MEMU_DEBUG_FR_F_CEO_MASK)
#define MEMU_DEBUG_FR_F_UCE_MASK                 0x800u
#define MEMU_DEBUG_FR_F_UCE_SHIFT                11u
#define MEMU_DEBUG_FR_F_UCE_WIDTH                1u
#define MEMU_DEBUG_FR_F_UCE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_UCE_SHIFT))&MEMU_DEBUG_FR_F_UCE_MASK)
#define MEMU_DEBUG_FR_F_CE_MASK                  0x1000u
#define MEMU_DEBUG_FR_F_CE_SHIFT                 12u
#define MEMU_DEBUG_FR_F_CE_WIDTH                 1u
#define MEMU_DEBUG_FR_F_CE(x)                    (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_F_CE_SHIFT))&MEMU_DEBUG_FR_F_CE_MASK)
#define MEMU_DEBUG_FR_PR_EBO_MASK                0x10000u
#define MEMU_DEBUG_FR_PR_EBO_SHIFT               16u
#define MEMU_DEBUG_FR_PR_EBO_WIDTH               1u
#define MEMU_DEBUG_FR_PR_EBO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_EBO_SHIFT))&MEMU_DEBUG_FR_PR_EBO_MASK)
#define MEMU_DEBUG_FR_PR_UCO_MASK                0x20000u
#define MEMU_DEBUG_FR_PR_UCO_SHIFT               17u
#define MEMU_DEBUG_FR_PR_UCO_WIDTH               1u
#define MEMU_DEBUG_FR_PR_UCO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_UCO_SHIFT))&MEMU_DEBUG_FR_PR_UCO_MASK)
#define MEMU_DEBUG_FR_PR_CEO_MASK                0x40000u
#define MEMU_DEBUG_FR_PR_CEO_SHIFT               18u
#define MEMU_DEBUG_FR_PR_CEO_WIDTH               1u
#define MEMU_DEBUG_FR_PR_CEO(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_CEO_SHIFT))&MEMU_DEBUG_FR_PR_CEO_MASK)
#define MEMU_DEBUG_FR_PR_UCE_MASK                0x80000u
#define MEMU_DEBUG_FR_PR_UCE_SHIFT               19u
#define MEMU_DEBUG_FR_PR_UCE_WIDTH               1u
#define MEMU_DEBUG_FR_PR_UCE(x)                  (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_UCE_SHIFT))&MEMU_DEBUG_FR_PR_UCE_MASK)
#define MEMU_DEBUG_FR_PR_CE_MASK                 0x100000u
#define MEMU_DEBUG_FR_PR_CE_SHIFT                20u
#define MEMU_DEBUG_FR_PR_CE_WIDTH                1u
#define MEMU_DEBUG_FR_PR_CE(x)                   (((uint32_t)(((uint32_t)(x))<<MEMU_DEBUG_FR_PR_CE_SHIFT))&MEMU_DEBUG_FR_PR_CE_MASK)
/* STS Bit Fields */
#define MEMU_STS_BAD_BIT_MASK                    0xFFu
#define MEMU_STS_BAD_BIT_SHIFT                   0u
#define MEMU_STS_BAD_BIT_WIDTH                   8u
#define MEMU_STS_BAD_BIT(x)                      (((uint32_t)(((uint32_t)(x))<<MEMU_STS_BAD_BIT_SHIFT))&MEMU_STS_BAD_BIT_MASK)
#define MEMU_STS_VLD_MASK                        0x80000000u
#define MEMU_STS_VLD_SHIFT                       31u
#define MEMU_STS_VLD_WIDTH                       1u
#define MEMU_STS_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MEMU_STS_VLD_SHIFT))&MEMU_STS_VLD_MASK)
/* ADDR Bit Fields */
#define MEMU_ADDR_ERR_ADD_MASK                   0xFFFFFFFFu
#define MEMU_ADDR_ERR_ADD_SHIFT                  0u
#define MEMU_ADDR_ERR_ADD_WIDTH                  32u
#define MEMU_ADDR_ERR_ADD(x)                     (((uint32_t)(((uint32_t)(x))<<MEMU_ADDR_ERR_ADD_SHIFT))&MEMU_ADDR_ERR_ADD_MASK)
/* SYS_RAM_UNCERR_STS Bit Fields */
#define MEMU_SYS_RAM_UNCERR_STS_VLD_MASK         0x80000000u
#define MEMU_SYS_RAM_UNCERR_STS_VLD_SHIFT        31u
#define MEMU_SYS_RAM_UNCERR_STS_VLD_WIDTH        1u
#define MEMU_SYS_RAM_UNCERR_STS_VLD(x)           (((uint32_t)(((uint32_t)(x))<<MEMU_SYS_RAM_UNCERR_STS_VLD_SHIFT))&MEMU_SYS_RAM_UNCERR_STS_VLD_MASK)
/* SYS_RAM_UNCERR_ADDR Bit Fields */
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_MASK    0xFFFFFFFFu
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_SHIFT   0u
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_WIDTH   32u
#define MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD(x)      (((uint32_t)(((uint32_t)(x))<<MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_SHIFT))&MEMU_SYS_RAM_UNCERR_ADDR_ERR_ADD_MASK)
/* SYS_RAM_OFLW Bit Fields */
#define MEMU_SYS_RAM_OFLW_OFLW_MASK              0xFFFFFFFFu
#define MEMU_SYS_RAM_OFLW_OFLW_SHIFT             0u
#define MEMU_SYS_RAM_OFLW_OFLW_WIDTH             32u
#define MEMU_SYS_RAM_OFLW_OFLW(x)                (((uint32_t)(((uint32_t)(x))<<MEMU_SYS_RAM_OFLW_OFLW_SHIFT))&MEMU_SYS_RAM_OFLW_OFLW_MASK)
/* STS Bit Fields */
#define MEMU_STS_BAD_BIT_MASK                    0xFFu
#define MEMU_STS_BAD_BIT_SHIFT                   0u
#define MEMU_STS_BAD_BIT_WIDTH                   8u
#define MEMU_STS_BAD_BIT(x)                      (((uint32_t)(((uint32_t)(x))<<MEMU_STS_BAD_BIT_SHIFT))&MEMU_STS_BAD_BIT_MASK)
#define MEMU_STS_VLD_MASK                        0x80000000u
#define MEMU_STS_VLD_SHIFT                       31u
#define MEMU_STS_VLD_WIDTH                       1u
#define MEMU_STS_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MEMU_STS_VLD_SHIFT))&MEMU_STS_VLD_MASK)
/* ADDR Bit Fields */
#define MEMU_ADDR_ERR_ADD_MASK                   0xFFFFFFFFu
#define MEMU_ADDR_ERR_ADD_SHIFT                  0u
#define MEMU_ADDR_ERR_ADD_WIDTH                  32u
#define MEMU_ADDR_ERR_ADD(x)                     (((uint32_t)(((uint32_t)(x))<<MEMU_ADDR_ERR_ADD_SHIFT))&MEMU_ADDR_ERR_ADD_MASK)
/* PERIPH_RAM_UNCERR_STS Bit Fields */
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD_MASK      0x80000000u
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD_SHIFT     31u
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD_WIDTH     1u
#define MEMU_PERIPH_RAM_UNCERR_STS_VLD(x)        (((uint32_t)(((uint32_t)(x))<<MEMU_PERIPH_RAM_UNCERR_STS_VLD_SHIFT))&MEMU_PERIPH_RAM_UNCERR_STS_VLD_MASK)
/* PERIPH_RAM_UNCERR_ADDR Bit Fields */
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_MASK 0xFFFFFFFFu
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_SHIFT 0u
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_WIDTH 32u
#define MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD(x)   (((uint32_t)(((uint32_t)(x))<<MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_SHIFT))&MEMU_PERIPH_RAM_UNCERR_ADDR_ERR_ADD_MASK)
/* PERIPH_RAM_OFLW0 Bit Fields */
#define MEMU_PERIPH_RAM_OFLW0_OFLW_MASK          0xFFFFFFFFu
#define MEMU_PERIPH_RAM_OFLW0_OFLW_SHIFT         0u
#define MEMU_PERIPH_RAM_OFLW0_OFLW_WIDTH         32u
#define MEMU_PERIPH_RAM_OFLW0_OFLW(x)            (((uint32_t)(((uint32_t)(x))<<MEMU_PERIPH_RAM_OFLW0_OFLW_SHIFT))&MEMU_PERIPH_RAM_OFLW0_OFLW_MASK)
/* STS Bit Fields */
#define MEMU_STS_BAD_BIT_MASK                    0xFFu
#define MEMU_STS_BAD_BIT_SHIFT                   0u
#define MEMU_STS_BAD_BIT_WIDTH                   8u
#define MEMU_STS_BAD_BIT(x)                      (((uint32_t)(((uint32_t)(x))<<MEMU_STS_BAD_BIT_SHIFT))&MEMU_STS_BAD_BIT_MASK)
#define MEMU_STS_VLD_MASK                        0x80000000u
#define MEMU_STS_VLD_SHIFT                       31u
#define MEMU_STS_VLD_WIDTH                       1u
#define MEMU_STS_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MEMU_STS_VLD_SHIFT))&MEMU_STS_VLD_MASK)
/* ADDR Bit Fields */
#define MEMU_ADDR_ERR_ADD_MASK                   0xFFFFFFFFu
#define MEMU_ADDR_ERR_ADD_SHIFT                  0u
#define MEMU_ADDR_ERR_ADD_WIDTH                  32u
#define MEMU_ADDR_ERR_ADD(x)                     (((uint32_t)(((uint32_t)(x))<<MEMU_ADDR_ERR_ADD_SHIFT))&MEMU_ADDR_ERR_ADD_MASK)
/* FLASH_UNCERR_STS Bit Fields */
#define MEMU_FLASH_UNCERR_STS_VLD_MASK           0x80000000u
#define MEMU_FLASH_UNCERR_STS_VLD_SHIFT          31u
#define MEMU_FLASH_UNCERR_STS_VLD_WIDTH          1u
#define MEMU_FLASH_UNCERR_STS_VLD(x)             (((uint32_t)(((uint32_t)(x))<<MEMU_FLASH_UNCERR_STS_VLD_SHIFT))&MEMU_FLASH_UNCERR_STS_VLD_MASK)
/* FLASH_UNCERR_ADDR Bit Fields */
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD_MASK      0xFFFFFFFFu
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD_SHIFT     0u
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD_WIDTH     32u
#define MEMU_FLASH_UNCERR_ADDR_ERR_ADD(x)        (((uint32_t)(((uint32_t)(x))<<MEMU_FLASH_UNCERR_ADDR_ERR_ADD_SHIFT))&MEMU_FLASH_UNCERR_ADDR_ERR_ADD_MASK)
/* FLASH_OFLW0 Bit Fields */
#define MEMU_FLASH_OFLW0_OFLW_MASK               0xFFFFFFFFu
#define MEMU_FLASH_OFLW0_OFLW_SHIFT              0u
#define MEMU_FLASH_OFLW0_OFLW_WIDTH              32u
#define MEMU_FLASH_OFLW0_OFLW(x)                 (((uint32_t)(((uint32_t)(x))<<MEMU_FLASH_OFLW0_OFLW_SHIFT))&MEMU_FLASH_OFLW0_OFLW_MASK)

/*!
 * @}
 */ /* end of group MEMU_Register_Masks */


/*!
 * @}
 */ /* end of group MEMU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- MLB Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MLB_Peripheral_Access_Layer MLB Peripheral Access Layer
 * @{
 */


/** MLB - Size of Registers Arrays */

/** MLB - Register Layout Typedef */
typedef struct {
  __IO uint32_t C0;                                /**< MediaLB Control 0 Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t PC0;                               /**< MediaLB 6-pin Control 0 Register, offset: 0x8 */
  __I  uint32_t MS0;                               /**< MediaLB Channel Status 0 Register, offset: 0xC */
       uint8_t RESERVED_1[4];
  __I  uint32_t MS1;                               /**< MediaLB Channel Status1 Register, offset: 0x14 */
       uint8_t RESERVED_2[8];
  __IO uint32_t MSS;                               /**< MediaLB System Status Register, offset: 0x20 */
  __I  uint32_t MSD;                               /**< MediaLB System Data Register, offset: 0x24 */
       uint8_t RESERVED_3[4];
  __IO uint32_t MIEN;                              /**< MediaLB Interrupt Enable Register, offset: 0x2C */
       uint8_t RESERVED_4[4];
  __IO uint32_t PC2;                               /**< MediaLB 6-pin Control 2 Register, offset: 0x34 */
  __IO uint32_t PC1;                               /**< MediaLB 6-pin Control 1 Register, offset: 0x38 */
  __IO uint32_t C1;                                /**< MediaLB Control 1 Register, offset: 0x3C */
       uint8_t RESERVED_5[64];
  __IO uint32_t HCTL;                              /**< HBI Control Register, offset: 0x80 */
       uint8_t RESERVED_6[4];
  __IO uint32_t HCMR0;                             /**< HBI Channel Mask 0 Register, offset: 0x88 */
  __IO uint32_t HCMR1;                             /**< HBI Channel Mask 1 Register, offset: 0x8C */
  __I  uint32_t HCER0;                             /**< HBI Channel Error 0 Register, offset: 0x90 */
  __I  uint32_t HCER1;                             /**< HBI Channel Error 1 Register, offset: 0x94 */
  __I  uint32_t HCBR0;                             /**< HBI Channel Busy 0 Register, offset: 0x98 */
  __I  uint32_t HCBR1;                             /**< HBI Channel Busy 1 Register, offset: 0x9C */
       uint8_t RESERVED_7[32];
  __IO uint32_t MDAT0;                             /**< MIF Data 0 Register, offset: 0xC0 */
  __IO uint32_t MDAT1;                             /**< MIF Data 1 Register, offset: 0xC4 */
  __IO uint32_t MDAT2;                             /**< MIF Data 2 Register, offset: 0xC8 */
  __IO uint32_t MDAT3;                             /**< MIF Data 3 Register, offset: 0xCC */
  __IO uint32_t MDWE0;                             /**< MIF Data Write Enable 0 Register, offset: 0xD0 */
  __IO uint32_t MDWE1;                             /**< MIF Data Write Enable 1 Register, offset: 0xD4 */
  __IO uint32_t MDWE2;                             /**< MIF Data Write Enable 2 Register, offset: 0xD8 */
  __IO uint32_t MDWE3;                             /**< MIF Data Write Enable 3 Register, offset: 0xDC */
  __I  uint32_t MCTL;                              /**< MIF Control Register, offset: 0xE0 */
  __IO uint32_t MADR;                              /**< MIF Address Register, offset: 0xE4 */
       uint8_t RESERVED_8[728];
  __IO uint32_t ACTL;                              /**< AHB Control Register, offset: 0x3C0 */
       uint8_t RESERVED_9[12];
  __I  uint32_t ACSR0;                             /**< AHB Channel Status 0 Register, offset: 0x3D0 */
  __I  uint32_t ACSR1;                             /**< AHB Channel Status 1 Register, offset: 0x3D4 */
  __IO uint32_t ACMR0;                             /**< AHB Channel Mask 0 Register, offset: 0x3D8 */
  __IO uint32_t ACMR1;                             /**< AHB Channel Mask 1 Register, offset: 0x3DC */
} MLB_Type, *MLB_MemMapPtr;

 /** Number of instances of the MLB module. */
#define MLB_INSTANCE_COUNT                       (1u)


/* MLB - Peripheral instance base addresses */
/** Peripheral MLB base address */
#define MLB_BASE                                 (0xFFC9C000u)
/** Peripheral MLB base pointer */
#define MLB                                      ((MLB_Type *)MLB_BASE)
/** Array initializer of MLB peripheral base addresses */
#define MLB_BASE_ADDRS                           { MLB_BASE }
/** Array initializer of MLB peripheral base pointers */
#define MLB_BASE_PTRS                            { MLB }

/* ----------------------------------------------------------------------------
   -- MLB Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup MLB_Register_Masks MLB Register Masks
 * @{
 */

/* C0 Bit Fields */
#define MLB_C0_MLBEN_MASK                        0x1u
#define MLB_C0_MLBEN_SHIFT                       0u
#define MLB_C0_MLBEN_WIDTH                       1u
#define MLB_C0_MLBEN(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_C0_MLBEN_SHIFT))&MLB_C0_MLBEN_MASK)
#define MLB_C0_MCK_MASK                          0x1Cu
#define MLB_C0_MCK_SHIFT                         2u
#define MLB_C0_MCK_WIDTH                         3u
#define MLB_C0_MCK(x)                            (((uint32_t)(((uint32_t)(x))<<MLB_C0_MCK_SHIFT))&MLB_C0_MCK_MASK)
#define MLB_C0_MLBPEN_MASK                       0x20u
#define MLB_C0_MLBPEN_SHIFT                      5u
#define MLB_C0_MLBPEN_WIDTH                      1u
#define MLB_C0_MLBPEN(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_C0_MLBPEN_SHIFT))&MLB_C0_MLBPEN_MASK)
#define MLB_C0_MLBLK_MASK                        0x80u
#define MLB_C0_MLBLK_SHIFT                       7u
#define MLB_C0_MLBLK_WIDTH                       1u
#define MLB_C0_MLBLK(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_C0_MLBLK_SHIFT))&MLB_C0_MLBLK_MASK)
#define MLB_C0_ASYRETRY_MASK                     0x1000u
#define MLB_C0_ASYRETRY_SHIFT                    12u
#define MLB_C0_ASYRETRY_WIDTH                    1u
#define MLB_C0_ASYRETRY(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_C0_ASYRETRY_SHIFT))&MLB_C0_ASYRETRY_MASK)
#define MLB_C0_CTLRETRY_MASK                     0x4000u
#define MLB_C0_CTLRETRY_SHIFT                    14u
#define MLB_C0_CTLRETRY_WIDTH                    1u
#define MLB_C0_CTLRETRY(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_C0_CTLRETRY_SHIFT))&MLB_C0_CTLRETRY_MASK)
#define MLB_C0_FCT_MASK                          0x38000u
#define MLB_C0_FCT_SHIFT                         15u
#define MLB_C0_FCT_WIDTH                         3u
#define MLB_C0_FCT(x)                            (((uint32_t)(((uint32_t)(x))<<MLB_C0_FCT_SHIFT))&MLB_C0_FCT_MASK)
/* PC0 Bit Fields */
#define MLB_PC0_MCLKHYS_MASK                     0x800u
#define MLB_PC0_MCLKHYS_SHIFT                    11u
#define MLB_PC0_MCLKHYS_WIDTH                    1u
#define MLB_PC0_MCLKHYS(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_PC0_MCLKHYS_SHIFT))&MLB_PC0_MCLKHYS_MASK)
/* MS0 Bit Fields */
#define MLB_MS0_MCS_MASK                         0xFFFFFFFFu
#define MLB_MS0_MCS_SHIFT                        0u
#define MLB_MS0_MCS_WIDTH                        32u
#define MLB_MS0_MCS(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MS0_MCS_SHIFT))&MLB_MS0_MCS_MASK)
/* MS1 Bit Fields */
#define MLB_MS1_MCS_MASK                         0xFFFFFFFFu
#define MLB_MS1_MCS_SHIFT                        0u
#define MLB_MS1_MCS_WIDTH                        32u
#define MLB_MS1_MCS(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MS1_MCS_SHIFT))&MLB_MS1_MCS_MASK)
/* MSS Bit Fields */
#define MLB_MSS_RSTSYCMD_MASK                    0x1u
#define MLB_MSS_RSTSYCMD_SHIFT                   0u
#define MLB_MSS_RSTSYCMD_WIDTH                   1u
#define MLB_MSS_RSTSYCMD(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MSS_RSTSYCMD_SHIFT))&MLB_MSS_RSTSYCMD_MASK)
#define MLB_MSS_LKSYSCMD_MASK                    0x2u
#define MLB_MSS_LKSYSCMD_SHIFT                   1u
#define MLB_MSS_LKSYSCMD_WIDTH                   1u
#define MLB_MSS_LKSYSCMD(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MSS_LKSYSCMD_SHIFT))&MLB_MSS_LKSYSCMD_MASK)
#define MLB_MSS_UKSYSCMD_MASK                    0x4u
#define MLB_MSS_UKSYSCMD_SHIFT                   2u
#define MLB_MSS_UKSYSCMD_WIDTH                   1u
#define MLB_MSS_UKSYSCMD(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MSS_UKSYSCMD_SHIFT))&MLB_MSS_UKSYSCMD_MASK)
#define MLB_MSS_CSSYSCMD_MASK                    0x8u
#define MLB_MSS_CSSYSCMD_SHIFT                   3u
#define MLB_MSS_CSSYSCMD_WIDTH                   1u
#define MLB_MSS_CSSYSCMD(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MSS_CSSYSCMD_SHIFT))&MLB_MSS_CSSYSCMD_MASK)
#define MLB_MSS_SWSYSCMD_MASK                    0x10u
#define MLB_MSS_SWSYSCMD_SHIFT                   4u
#define MLB_MSS_SWSYSCMD_WIDTH                   1u
#define MLB_MSS_SWSYSCMD(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MSS_SWSYSCMD_SHIFT))&MLB_MSS_SWSYSCMD_MASK)
#define MLB_MSS_SERVREQ_MASK                     0x20u
#define MLB_MSS_SERVREQ_SHIFT                    5u
#define MLB_MSS_SERVREQ_WIDTH                    1u
#define MLB_MSS_SERVREQ(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_MSS_SERVREQ_SHIFT))&MLB_MSS_SERVREQ_MASK)
/* MSD Bit Fields */
#define MLB_MSD_SD0_MASK                         0xFFu
#define MLB_MSD_SD0_SHIFT                        0u
#define MLB_MSD_SD0_WIDTH                        8u
#define MLB_MSD_SD0(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MSD_SD0_SHIFT))&MLB_MSD_SD0_MASK)
#define MLB_MSD_SD1_MASK                         0xFF00u
#define MLB_MSD_SD1_SHIFT                        8u
#define MLB_MSD_SD1_WIDTH                        8u
#define MLB_MSD_SD1(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MSD_SD1_SHIFT))&MLB_MSD_SD1_MASK)
#define MLB_MSD_SD2_MASK                         0xFF0000u
#define MLB_MSD_SD2_SHIFT                        16u
#define MLB_MSD_SD2_WIDTH                        8u
#define MLB_MSD_SD2(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MSD_SD2_SHIFT))&MLB_MSD_SD2_MASK)
#define MLB_MSD_SD3_MASK                         0xFF000000u
#define MLB_MSD_SD3_SHIFT                        24u
#define MLB_MSD_SD3_WIDTH                        8u
#define MLB_MSD_SD3(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MSD_SD3_SHIFT))&MLB_MSD_SD3_MASK)
/* MIEN Bit Fields */
#define MLB_MIEN_ISOC_PE_MASK                    0x1u
#define MLB_MIEN_ISOC_PE_SHIFT                   0u
#define MLB_MIEN_ISOC_PE_WIDTH                   1u
#define MLB_MIEN_ISOC_PE(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ISOC_PE_SHIFT))&MLB_MIEN_ISOC_PE_MASK)
#define MLB_MIEN_ISOC_BFO_MASK                   0x2u
#define MLB_MIEN_ISOC_BFO_SHIFT                  1u
#define MLB_MIEN_ISOC_BFO_WIDTH                  1u
#define MLB_MIEN_ISOC_BFO(x)                     (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ISOC_BFO_SHIFT))&MLB_MIEN_ISOC_BFO_MASK)
#define MLB_MIEN_SYNC_PE_MASK                    0x10000u
#define MLB_MIEN_SYNC_PE_SHIFT                   16u
#define MLB_MIEN_SYNC_PE_WIDTH                   1u
#define MLB_MIEN_SYNC_PE(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_SYNC_PE_SHIFT))&MLB_MIEN_SYNC_PE_MASK)
#define MLB_MIEN_ARX_DONE_MASK                   0x20000u
#define MLB_MIEN_ARX_DONE_SHIFT                  17u
#define MLB_MIEN_ARX_DONE_WIDTH                  1u
#define MLB_MIEN_ARX_DONE(x)                     (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ARX_DONE_SHIFT))&MLB_MIEN_ARX_DONE_MASK)
#define MLB_MIEN_ARX_PE_MASK                     0x40000u
#define MLB_MIEN_ARX_PE_SHIFT                    18u
#define MLB_MIEN_ARX_PE_WIDTH                    1u
#define MLB_MIEN_ARX_PE(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ARX_PE_SHIFT))&MLB_MIEN_ARX_PE_MASK)
#define MLB_MIEN_ARX_BRK_MASK                    0x80000u
#define MLB_MIEN_ARX_BRK_SHIFT                   19u
#define MLB_MIEN_ARX_BRK_WIDTH                   1u
#define MLB_MIEN_ARX_BRK(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ARX_BRK_SHIFT))&MLB_MIEN_ARX_BRK_MASK)
#define MLB_MIEN_ATX_DONE_MASK                   0x100000u
#define MLB_MIEN_ATX_DONE_SHIFT                  20u
#define MLB_MIEN_ATX_DONE_WIDTH                  1u
#define MLB_MIEN_ATX_DONE(x)                     (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ATX_DONE_SHIFT))&MLB_MIEN_ATX_DONE_MASK)
#define MLB_MIEN_ATX_PE_MASK                     0x200000u
#define MLB_MIEN_ATX_PE_SHIFT                    21u
#define MLB_MIEN_ATX_PE_WIDTH                    1u
#define MLB_MIEN_ATX_PE(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ATX_PE_SHIFT))&MLB_MIEN_ATX_PE_MASK)
#define MLB_MIEN_ATX_BRK_MASK                    0x400000u
#define MLB_MIEN_ATX_BRK_SHIFT                   22u
#define MLB_MIEN_ATX_BRK_WIDTH                   1u
#define MLB_MIEN_ATX_BRK(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_ATX_BRK_SHIFT))&MLB_MIEN_ATX_BRK_MASK)
#define MLB_MIEN_CRX_DONE_MASK                   0x1000000u
#define MLB_MIEN_CRX_DONE_SHIFT                  24u
#define MLB_MIEN_CRX_DONE_WIDTH                  1u
#define MLB_MIEN_CRX_DONE(x)                     (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_CRX_DONE_SHIFT))&MLB_MIEN_CRX_DONE_MASK)
#define MLB_MIEN_CRX_PE_MASK                     0x2000000u
#define MLB_MIEN_CRX_PE_SHIFT                    25u
#define MLB_MIEN_CRX_PE_WIDTH                    1u
#define MLB_MIEN_CRX_PE(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_CRX_PE_SHIFT))&MLB_MIEN_CRX_PE_MASK)
#define MLB_MIEN_CRX_BRK_MASK                    0x4000000u
#define MLB_MIEN_CRX_BRK_SHIFT                   26u
#define MLB_MIEN_CRX_BRK_WIDTH                   1u
#define MLB_MIEN_CRX_BRK(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_CRX_BRK_SHIFT))&MLB_MIEN_CRX_BRK_MASK)
#define MLB_MIEN_CTX_DONE_MASK                   0x8000000u
#define MLB_MIEN_CTX_DONE_SHIFT                  27u
#define MLB_MIEN_CTX_DONE_WIDTH                  1u
#define MLB_MIEN_CTX_DONE(x)                     (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_CTX_DONE_SHIFT))&MLB_MIEN_CTX_DONE_MASK)
#define MLB_MIEN_CTX_PE_MASK                     0x10000000u
#define MLB_MIEN_CTX_PE_SHIFT                    28u
#define MLB_MIEN_CTX_PE_WIDTH                    1u
#define MLB_MIEN_CTX_PE(x)                       (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_CTX_PE_SHIFT))&MLB_MIEN_CTX_PE_MASK)
#define MLB_MIEN_CTX_BRK_MASK                    0x20000000u
#define MLB_MIEN_CTX_BRK_SHIFT                   29u
#define MLB_MIEN_CTX_BRK_WIDTH                   1u
#define MLB_MIEN_CTX_BRK(x)                      (((uint32_t)(((uint32_t)(x))<<MLB_MIEN_CTX_BRK_SHIFT))&MLB_MIEN_CTX_BRK_MASK)
/* PC2 Bit Fields */
#define MLB_PC2_UC_MASK                          0xFFFFu
#define MLB_PC2_UC_SHIFT                         0u
#define MLB_PC2_UC_WIDTH                         16u
#define MLB_PC2_UC(x)                            (((uint32_t)(((uint32_t)(x))<<MLB_PC2_UC_SHIFT))&MLB_PC2_UC_MASK)
/* PC1 Bit Fields */
#define MLB_PC1_SDR_MASK                         0xFu
#define MLB_PC1_SDR_SHIFT                        0u
#define MLB_PC1_SDR_WIDTH                        4u
#define MLB_PC1_SDR(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_PC1_SDR_SHIFT))&MLB_PC1_SDR_MASK)
#define MLB_PC1_SDX_MASK                         0xF0u
#define MLB_PC1_SDX_SHIFT                        4u
#define MLB_PC1_SDX_WIDTH                        4u
#define MLB_PC1_SDX(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_PC1_SDX_SHIFT))&MLB_PC1_SDX_MASK)
#define MLB_PC1_CRB_MASK                         0xF00u
#define MLB_PC1_CRB_SHIFT                        8u
#define MLB_PC1_CRB_WIDTH                        4u
#define MLB_PC1_CRB(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_PC1_CRB_SHIFT))&MLB_PC1_CRB_MASK)
/* C1 Bit Fields */
#define MLB_C1_LOCK_MASK                         0x40u
#define MLB_C1_LOCK_SHIFT                        6u
#define MLB_C1_LOCK_WIDTH                        1u
#define MLB_C1_LOCK(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_C1_LOCK_SHIFT))&MLB_C1_LOCK_MASK)
#define MLB_C1_CLKM_MASK                         0x80u
#define MLB_C1_CLKM_SHIFT                        7u
#define MLB_C1_CLKM_WIDTH                        1u
#define MLB_C1_CLKM(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_C1_CLKM_SHIFT))&MLB_C1_CLKM_MASK)
#define MLB_C1_NDA_MASK                          0xFF00u
#define MLB_C1_NDA_SHIFT                         8u
#define MLB_C1_NDA_WIDTH                         8u
#define MLB_C1_NDA(x)                            (((uint32_t)(((uint32_t)(x))<<MLB_C1_NDA_SHIFT))&MLB_C1_NDA_MASK)
/* HCTL Bit Fields */
#define MLB_HCTL_RST0_MASK                       0x1u
#define MLB_HCTL_RST0_SHIFT                      0u
#define MLB_HCTL_RST0_WIDTH                      1u
#define MLB_HCTL_RST0(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_HCTL_RST0_SHIFT))&MLB_HCTL_RST0_MASK)
#define MLB_HCTL_RST1_MASK                       0x2u
#define MLB_HCTL_RST1_SHIFT                      1u
#define MLB_HCTL_RST1_WIDTH                      1u
#define MLB_HCTL_RST1(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_HCTL_RST1_SHIFT))&MLB_HCTL_RST1_MASK)
#define MLB_HCTL_EN_MASK                         0x8000u
#define MLB_HCTL_EN_SHIFT                        15u
#define MLB_HCTL_EN_WIDTH                        1u
#define MLB_HCTL_EN(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_HCTL_EN_SHIFT))&MLB_HCTL_EN_MASK)
/* HCMR0 Bit Fields */
#define MLB_HCMR0_CM_MASK                        0xFFFFFFFFu
#define MLB_HCMR0_CM_SHIFT                       0u
#define MLB_HCMR0_CM_WIDTH                       32u
#define MLB_HCMR0_CM(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_HCMR0_CM_SHIFT))&MLB_HCMR0_CM_MASK)
/* HCMR1 Bit Fields */
#define MLB_HCMR1_C_MASK                         0xFFFFFFFFu
#define MLB_HCMR1_C_SHIFT                        0u
#define MLB_HCMR1_C_WIDTH                        32u
#define MLB_HCMR1_C(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_HCMR1_C_SHIFT))&MLB_HCMR1_C_MASK)
/* HCER0 Bit Fields */
#define MLB_HCER0_CE_MASK                        0xFFFFFFFFu
#define MLB_HCER0_CE_SHIFT                       0u
#define MLB_HCER0_CE_WIDTH                       32u
#define MLB_HCER0_CE(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_HCER0_CE_SHIFT))&MLB_HCER0_CE_MASK)
/* HCER1 Bit Fields */
#define MLB_HCER1_E_MASK                         0xFFFFFFFFu
#define MLB_HCER1_E_SHIFT                        0u
#define MLB_HCER1_E_WIDTH                        32u
#define MLB_HCER1_E(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_HCER1_E_SHIFT))&MLB_HCER1_E_MASK)
/* HCBR0 Bit Fields */
#define MLB_HCBR0_CB_MASK                        0xFFFFFFFFu
#define MLB_HCBR0_CB_SHIFT                       0u
#define MLB_HCBR0_CB_WIDTH                       32u
#define MLB_HCBR0_CB(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_HCBR0_CB_SHIFT))&MLB_HCBR0_CB_MASK)
/* HCBR1 Bit Fields */
#define MLB_HCBR1_B_MASK                         0xFFFFFFFFu
#define MLB_HCBR1_B_SHIFT                        0u
#define MLB_HCBR1_B_WIDTH                        32u
#define MLB_HCBR1_B(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_HCBR1_B_SHIFT))&MLB_HCBR1_B_MASK)
/* MDAT0 Bit Fields */
#define MLB_MDAT0_D_MASK                         0xFFFFFFFFu
#define MLB_MDAT0_D_SHIFT                        0u
#define MLB_MDAT0_D_WIDTH                        32u
#define MLB_MDAT0_D(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDAT0_D_SHIFT))&MLB_MDAT0_D_MASK)
/* MDAT1 Bit Fields */
#define MLB_MDAT1_D_MASK                         0xFFFFFFFFu
#define MLB_MDAT1_D_SHIFT                        0u
#define MLB_MDAT1_D_WIDTH                        32u
#define MLB_MDAT1_D(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDAT1_D_SHIFT))&MLB_MDAT1_D_MASK)
/* MDAT2 Bit Fields */
#define MLB_MDAT2_D_MASK                         0xFFFFFFFFu
#define MLB_MDAT2_D_SHIFT                        0u
#define MLB_MDAT2_D_WIDTH                        32u
#define MLB_MDAT2_D(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDAT2_D_SHIFT))&MLB_MDAT2_D_MASK)
/* MDAT3 Bit Fields */
#define MLB_MDAT3_D_MASK                         0xFFFFFFFFu
#define MLB_MDAT3_D_SHIFT                        0u
#define MLB_MDAT3_D_WIDTH                        32u
#define MLB_MDAT3_D(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDAT3_D_SHIFT))&MLB_MDAT3_D_MASK)
/* MDWE0 Bit Fields */
#define MLB_MDWE0_M_MASK                         0xFFFFFFFFu
#define MLB_MDWE0_M_SHIFT                        0u
#define MLB_MDWE0_M_WIDTH                        32u
#define MLB_MDWE0_M(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDWE0_M_SHIFT))&MLB_MDWE0_M_MASK)
/* MDWE1 Bit Fields */
#define MLB_MDWE1_M_MASK                         0xFFFFFFFFu
#define MLB_MDWE1_M_SHIFT                        0u
#define MLB_MDWE1_M_WIDTH                        32u
#define MLB_MDWE1_M(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDWE1_M_SHIFT))&MLB_MDWE1_M_MASK)
/* MDWE2 Bit Fields */
#define MLB_MDWE2_M_MASK                         0xFFFFFFFFu
#define MLB_MDWE2_M_SHIFT                        0u
#define MLB_MDWE2_M_WIDTH                        32u
#define MLB_MDWE2_M(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDWE2_M_SHIFT))&MLB_MDWE2_M_MASK)
/* MDWE3 Bit Fields */
#define MLB_MDWE3_M_MASK                         0xFFFFFFFFu
#define MLB_MDWE3_M_SHIFT                        0u
#define MLB_MDWE3_M_WIDTH                        32u
#define MLB_MDWE3_M(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MDWE3_M_SHIFT))&MLB_MDWE3_M_MASK)
/* MCTL Bit Fields */
#define MLB_MCTL_XCMP_MASK                       0x1u
#define MLB_MCTL_XCMP_SHIFT                      0u
#define MLB_MCTL_XCMP_WIDTH                      1u
#define MLB_MCTL_XCMP(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_MCTL_XCMP_SHIFT))&MLB_MCTL_XCMP_MASK)
/* MADR Bit Fields */
#define MLB_MADR_ADR_MASK                        0xFFu
#define MLB_MADR_ADR_SHIFT                       0u
#define MLB_MADR_ADR_WIDTH                       8u
#define MLB_MADR_ADR(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_MADR_ADR_SHIFT))&MLB_MADR_ADR_MASK)
#define MLB_MADR_ADDR_MASK                       0x3F00u
#define MLB_MADR_ADDR_SHIFT                      8u
#define MLB_MADR_ADDR_WIDTH                      6u
#define MLB_MADR_ADDR(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_MADR_ADDR_SHIFT))&MLB_MADR_ADDR_MASK)
#define MLB_MADR_TB_MASK                         0x40000000u
#define MLB_MADR_TB_SHIFT                        30u
#define MLB_MADR_TB_WIDTH                        1u
#define MLB_MADR_TB(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_MADR_TB_SHIFT))&MLB_MADR_TB_MASK)
#define MLB_MADR_WNR_MASK                        0x80000000u
#define MLB_MADR_WNR_SHIFT                       31u
#define MLB_MADR_WNR_WIDTH                       1u
#define MLB_MADR_WNR(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_MADR_WNR_SHIFT))&MLB_MADR_WNR_MASK)
/* ACTL Bit Fields */
#define MLB_ACTL_SCE_MASK                        0x1u
#define MLB_ACTL_SCE_SHIFT                       0u
#define MLB_ACTL_SCE_WIDTH                       1u
#define MLB_ACTL_SCE(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_ACTL_SCE_SHIFT))&MLB_ACTL_SCE_MASK)
#define MLB_ACTL_SMX_MASK                        0x2u
#define MLB_ACTL_SMX_SHIFT                       1u
#define MLB_ACTL_SMX_WIDTH                       1u
#define MLB_ACTL_SMX(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_ACTL_SMX_SHIFT))&MLB_ACTL_SMX_MASK)
#define MLB_ACTL_DMA_MODE_MASK                   0x4u
#define MLB_ACTL_DMA_MODE_SHIFT                  2u
#define MLB_ACTL_DMA_MODE_WIDTH                  1u
#define MLB_ACTL_DMA_MODE(x)                     (((uint32_t)(((uint32_t)(x))<<MLB_ACTL_DMA_MODE_SHIFT))&MLB_ACTL_DMA_MODE_MASK)
#define MLB_ACTL_MPB_MASK                        0x10u
#define MLB_ACTL_MPB_SHIFT                       4u
#define MLB_ACTL_MPB_WIDTH                       1u
#define MLB_ACTL_MPB(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_ACTL_MPB_SHIFT))&MLB_ACTL_MPB_MASK)
/* ACSR0 Bit Fields */
#define MLB_ACSR0_INTS_LOG_MASK                  0xFFFFFFFFu
#define MLB_ACSR0_INTS_LOG_SHIFT                 0u
#define MLB_ACSR0_INTS_LOG_WIDTH                 32u
#define MLB_ACSR0_INTS_LOG(x)                    (((uint32_t)(((uint32_t)(x))<<MLB_ACSR0_INTS_LOG_SHIFT))&MLB_ACSR0_INTS_LOG_MASK)
/* ACSR1 Bit Fields */
#define MLB_ACSR1_L_MASK                         0xFFFFFFFFu
#define MLB_ACSR1_L_SHIFT                        0u
#define MLB_ACSR1_L_WIDTH                        32u
#define MLB_ACSR1_L(x)                           (((uint32_t)(((uint32_t)(x))<<MLB_ACSR1_L_SHIFT))&MLB_ACSR1_L_MASK)
/* ACMR0 Bit Fields */
#define MLB_ACMR0_CM_MASK                        0xFFFFFFFFu
#define MLB_ACMR0_CM_SHIFT                       0u
#define MLB_ACMR0_CM_WIDTH                       32u
#define MLB_ACMR0_CM(x)                          (((uint32_t)(((uint32_t)(x))<<MLB_ACMR0_CM_SHIFT))&MLB_ACMR0_CM_MASK)
/* ACMR1 Bit Fields */
#define MLB_ACMR1_CHM_MASK                       0xFFFFFFFFu
#define MLB_ACMR1_CHM_SHIFT                      0u
#define MLB_ACMR1_CHM_WIDTH                      32u
#define MLB_ACMR1_CHM(x)                         (((uint32_t)(((uint32_t)(x))<<MLB_ACMR1_CHM_SHIFT))&MLB_ACMR1_CHM_MASK)

/*!
 * @}
 */ /* end of group MLB_Register_Masks */


/*!
 * @}
 */ /* end of group MLB_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PASS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PASS_Peripheral_Access_Layer PASS Peripheral Access Layer
 * @{
 */


/** PASS - Size of Registers Arrays */
#define PASS_CIN_COUNT                           8u
#define PASS_PG_COUNT                            4u

/** PASS - Register Layout Typedef */
typedef struct {
  __I  uint32_t LCSTAT;                            /**< Life Cycle Status Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t CHSEL;                             /**< Challenge Selector Register, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __I  uint32_t CSTAT;                             /**< Challenge Status Register, offset: 0x10 */
       uint8_t RESERVED_2[12];
  __O  uint32_t CIN[PASS_CIN_COUNT];               /**< Challenge Input Register, array offset: 0x20, array step: 0x4 */
       uint8_t RESERVED_3[192];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __IO uint32_t LOCK0;                             /**< Password Group n - Lock 0 Status Register, array offset: 0x100, array step: 0x10 */
    __IO uint32_t LOCK1;                             /**< Password Group n - Lock 1 Status Register, array offset: 0x104, array step: 0x10 */
    __IO uint32_t LOCK2;                             /**< Password Group n - Lock 2 Status Register, array offset: 0x108, array step: 0x10 */
    __IO uint32_t LOCK3;                             /**< Password Group n - Lock 3 Status Register, array offset: 0x10C, array step: 0x10 */
  } PG[PASS_PG_COUNT];
} PASS_Type, *PASS_MemMapPtr;

 /** Number of instances of the PASS module. */
#define PASS_INSTANCE_COUNT                      (1u)


/* PASS - Peripheral instance base addresses */
/** Peripheral PASS base address */
#define PASS_BASE                                (0xFFFF4000u)
/** Peripheral PASS base pointer */
#define PASS                                     ((PASS_Type *)PASS_BASE)
/** Array initializer of PASS peripheral base addresses */
#define PASS_BASE_ADDRS                          { PASS_BASE }
/** Array initializer of PASS peripheral base pointers */
#define PASS_BASE_PTRS                           { PASS }

/* ----------------------------------------------------------------------------
   -- PASS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PASS_Register_Masks PASS Register Masks
 * @{
 */

/* LCSTAT Bit Fields */
#define PASS_LCSTAT_LIFE_MASK                    0x7u
#define PASS_LCSTAT_LIFE_SHIFT                   0u
#define PASS_LCSTAT_LIFE_WIDTH                   3u
#define PASS_LCSTAT_LIFE(x)                      (((uint32_t)(((uint32_t)(x))<<PASS_LCSTAT_LIFE_SHIFT))&PASS_LCSTAT_LIFE_MASK)
#define PASS_LCSTAT_TME_MASK                     0x20000000u
#define PASS_LCSTAT_TME_SHIFT                    29u
#define PASS_LCSTAT_TME_WIDTH                    1u
#define PASS_LCSTAT_TME(x)                       (((uint32_t)(((uint32_t)(x))<<PASS_LCSTAT_TME_SHIFT))&PASS_LCSTAT_TME_MASK)
#define PASS_LCSTAT_JUN_MASK                     0x40000000u
#define PASS_LCSTAT_JUN_SHIFT                    30u
#define PASS_LCSTAT_JUN_WIDTH                    1u
#define PASS_LCSTAT_JUN(x)                       (((uint32_t)(((uint32_t)(x))<<PASS_LCSTAT_JUN_SHIFT))&PASS_LCSTAT_JUN_MASK)
#define PASS_LCSTAT_CNS_MASK                     0x80000000u
#define PASS_LCSTAT_CNS_SHIFT                    31u
#define PASS_LCSTAT_CNS_WIDTH                    1u
#define PASS_LCSTAT_CNS(x)                       (((uint32_t)(((uint32_t)(x))<<PASS_LCSTAT_CNS_SHIFT))&PASS_LCSTAT_CNS_MASK)
/* CHSEL Bit Fields */
#define PASS_CHSEL_GRP_MASK                      0x3u
#define PASS_CHSEL_GRP_SHIFT                     0u
#define PASS_CHSEL_GRP_WIDTH                     2u
#define PASS_CHSEL_GRP(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_CHSEL_GRP_SHIFT))&PASS_CHSEL_GRP_MASK)
/* CSTAT Bit Fields */
#define PASS_CSTAT_CMST_MASK                     0xFu
#define PASS_CSTAT_CMST_SHIFT                    0u
#define PASS_CSTAT_CMST_WIDTH                    4u
#define PASS_CSTAT_CMST(x)                       (((uint32_t)(((uint32_t)(x))<<PASS_CSTAT_CMST_SHIFT))&PASS_CSTAT_CMST_MASK)
/* CIN Bit Fields */
#define PASS_CIN_PW32_MASK                       0xFFFFFFFFu
#define PASS_CIN_PW32_SHIFT                      0u
#define PASS_CIN_PW32_WIDTH                      32u
#define PASS_CIN_PW32(x)                         (((uint32_t)(((uint32_t)(x))<<PASS_CIN_PW32_SHIFT))&PASS_CIN_PW32_MASK)
/* LOCK0 Bit Fields */
#define PASS_LOCK0_MIDLOCK_MASK                  0xFFFFu
#define PASS_LOCK0_MIDLOCK_SHIFT                 0u
#define PASS_LOCK0_MIDLOCK_WIDTH                 16u
#define PASS_LOCK0_MIDLOCK(x)                    (((uint32_t)(((uint32_t)(x))<<PASS_LOCK0_MIDLOCK_SHIFT))&PASS_LOCK0_MIDLOCK_MASK)
#define PASS_LOCK0_LOWLOCK_MASK                  0x3FFF0000u
#define PASS_LOCK0_LOWLOCK_SHIFT                 16u
#define PASS_LOCK0_LOWLOCK_WIDTH                 14u
#define PASS_LOCK0_LOWLOCK(x)                    (((uint32_t)(((uint32_t)(x))<<PASS_LOCK0_LOWLOCK_SHIFT))&PASS_LOCK0_LOWLOCK_MASK)
#define PASS_LOCK0_ATSL_MASK                     0x40000000u
#define PASS_LOCK0_ATSL_SHIFT                    30u
#define PASS_LOCK0_ATSL_WIDTH                    1u
#define PASS_LOCK0_ATSL(x)                       (((uint32_t)(((uint32_t)(x))<<PASS_LOCK0_ATSL_SHIFT))&PASS_LOCK0_ATSL_MASK)
#define PASS_LOCK0_TSLOCK_MASK                   0x80000000u
#define PASS_LOCK0_TSLOCK_SHIFT                  31u
#define PASS_LOCK0_TSLOCK_WIDTH                  1u
#define PASS_LOCK0_TSLOCK(x)                     (((uint32_t)(((uint32_t)(x))<<PASS_LOCK0_TSLOCK_SHIFT))&PASS_LOCK0_TSLOCK_MASK)
/* LOCK1 Bit Fields */
#define PASS_LOCK1_HIGHLOCK_MASK                 0xFFFFu
#define PASS_LOCK1_HIGHLOCK_SHIFT                0u
#define PASS_LOCK1_HIGHLOCK_WIDTH                16u
#define PASS_LOCK1_HIGHLOCK(x)                   (((uint32_t)(((uint32_t)(x))<<PASS_LOCK1_HIGHLOCK_SHIFT))&PASS_LOCK1_HIGHLOCK_MASK)
/* LOCK2 Bit Fields */
#define PASS_LOCK2_L_256LCK_MASK                 0xFFFFFFFFu
#define PASS_LOCK2_L_256LCK_SHIFT                0u
#define PASS_LOCK2_L_256LCK_WIDTH                32u
#define PASS_LOCK2_L_256LCK(x)                   (((uint32_t)(((uint32_t)(x))<<PASS_LOCK2_L_256LCK_SHIFT))&PASS_LOCK2_L_256LCK_MASK)
/* LOCK3 Bit Fields */
#define PASS_LOCK3_U_256LCK_MASK                 0xFFFFu
#define PASS_LOCK3_U_256LCK_SHIFT                0u
#define PASS_LOCK3_U_256LCK_WIDTH                16u
#define PASS_LOCK3_U_256LCK(x)                   (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_U_256LCK_SHIFT))&PASS_LOCK3_U_256LCK_MASK)
#define PASS_LOCK3_RL0_MASK                      0x10000u
#define PASS_LOCK3_RL0_SHIFT                     16u
#define PASS_LOCK3_RL0_WIDTH                     1u
#define PASS_LOCK3_RL0(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_RL0_SHIFT))&PASS_LOCK3_RL0_MASK)
#define PASS_LOCK3_RL1_MASK                      0x20000u
#define PASS_LOCK3_RL1_SHIFT                     17u
#define PASS_LOCK3_RL1_WIDTH                     1u
#define PASS_LOCK3_RL1(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_RL1_SHIFT))&PASS_LOCK3_RL1_MASK)
#define PASS_LOCK3_RL2_MASK                      0x40000u
#define PASS_LOCK3_RL2_SHIFT                     18u
#define PASS_LOCK3_RL2_WIDTH                     1u
#define PASS_LOCK3_RL2(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_RL2_SHIFT))&PASS_LOCK3_RL2_MASK)
#define PASS_LOCK3_RL3_MASK                      0x80000u
#define PASS_LOCK3_RL3_SHIFT                     19u
#define PASS_LOCK3_RL3_WIDTH                     1u
#define PASS_LOCK3_RL3(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_RL3_SHIFT))&PASS_LOCK3_RL3_MASK)
#define PASS_LOCK3_RL4_MASK                      0x100000u
#define PASS_LOCK3_RL4_SHIFT                     20u
#define PASS_LOCK3_RL4_WIDTH                     1u
#define PASS_LOCK3_RL4(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_RL4_SHIFT))&PASS_LOCK3_RL4_MASK)
#define PASS_LOCK3_MSTR_MASK                     0xF000000u
#define PASS_LOCK3_MSTR_SHIFT                    24u
#define PASS_LOCK3_MSTR_WIDTH                    4u
#define PASS_LOCK3_MSTR(x)                       (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_MSTR_SHIFT))&PASS_LOCK3_MSTR_MASK)
#define PASS_LOCK3_MO_MASK                       0x20000000u
#define PASS_LOCK3_MO_SHIFT                      29u
#define PASS_LOCK3_MO_WIDTH                      1u
#define PASS_LOCK3_MO(x)                         (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_MO_SHIFT))&PASS_LOCK3_MO_MASK)
#define PASS_LOCK3_DBL_MASK                      0x40000000u
#define PASS_LOCK3_DBL_SHIFT                     30u
#define PASS_LOCK3_DBL_WIDTH                     1u
#define PASS_LOCK3_DBL(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_DBL_SHIFT))&PASS_LOCK3_DBL_MASK)
#define PASS_LOCK3_PGL_MASK                      0x80000000u
#define PASS_LOCK3_PGL_SHIFT                     31u
#define PASS_LOCK3_PGL_WIDTH                     1u
#define PASS_LOCK3_PGL(x)                        (((uint32_t)(((uint32_t)(x))<<PASS_LOCK3_PGL_SHIFT))&PASS_LOCK3_PGL_MASK)

/*!
 * @}
 */ /* end of group PASS_Register_Masks */


/*!
 * @}
 */ /* end of group PASS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCM_Peripheral_Access_Layer PCM Peripheral Access Layer
 * @{
 */


/** PCM - Size of Registers Arrays */

/** PCM - Register Layout Typedef */
typedef struct {
  __IO uint32_t IAHB_BE0;                          /**< Bus Bridge Configuration Register 0, offset: 0x0 */
  __IO uint32_t IAHB_BE1;                          /**< Bus Bridge Configuration Register 1, offset: 0x4 */
  __IO uint32_t IAHB_BE2;                          /**< Bus Bridge Configuration Register 2, offset: 0x8 */
  __IO uint32_t IAHB_BE3;                          /**< Bus Bridge Configuration Register 3, offset: 0xC */
  __IO uint32_t IPS_CGM_EN0;                       /**< IPS Clock Gating Module Enable 0 Register, offset: 0x10 */
  __IO uint32_t IPS_CGM_EN1;                       /**< IPS Clock Gating Enable 1 Register, offset: 0x14 */
} PCM_Type, *PCM_MemMapPtr;

 /** Number of instances of the PCM module. */
#define PCM_INSTANCE_COUNT                       (1u)


/* PCM - Peripheral instance base addresses */
/** Peripheral PCM base address */
#define PCM_BASE                                 (0xFC028000u)
/** Peripheral PCM base pointer */
#define PCM                                      ((PCM_Type *)PCM_BASE)
/** Array initializer of PCM peripheral base addresses */
#define PCM_BASE_ADDRS                           { PCM_BASE }
/** Array initializer of PCM peripheral base pointers */
#define PCM_BASE_PTRS                            { PCM }

/* ----------------------------------------------------------------------------
   -- PCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PCM_Register_Masks PCM Register Masks
 * @{
 */

/* IAHB_BE0 Bit Fields */
#define PCM_IAHB_BE0_BWE_DMA_MASK                0x100u
#define PCM_IAHB_BE0_BWE_DMA_SHIFT               8u
#define PCM_IAHB_BE0_BWE_DMA_WIDTH               1u
#define PCM_IAHB_BE0_BWE_DMA(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_BWE_DMA_SHIFT))&PCM_IAHB_BE0_BWE_DMA_MASK)
#define PCM_IAHB_BE0_BRE_DMA_MASK                0x200u
#define PCM_IAHB_BE0_BRE_DMA_SHIFT               9u
#define PCM_IAHB_BE0_BRE_DMA_WIDTH               1u
#define PCM_IAHB_BE0_BRE_DMA(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_BRE_DMA_SHIFT))&PCM_IAHB_BE0_BRE_DMA_MASK)
#define PCM_IAHB_BE0_PRE_DMA_MASK                0x400u
#define PCM_IAHB_BE0_PRE_DMA_SHIFT               10u
#define PCM_IAHB_BE0_PRE_DMA_WIDTH               1u
#define PCM_IAHB_BE0_PRE_DMA(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_PRE_DMA_SHIFT))&PCM_IAHB_BE0_PRE_DMA_MASK)
#define PCM_IAHB_BE0_BWE_ENET_MASK               0x10000u
#define PCM_IAHB_BE0_BWE_ENET_SHIFT              16u
#define PCM_IAHB_BE0_BWE_ENET_WIDTH              1u
#define PCM_IAHB_BE0_BWE_ENET(x)                 (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_BWE_ENET_SHIFT))&PCM_IAHB_BE0_BWE_ENET_MASK)
#define PCM_IAHB_BE0_BRE_ENET_MASK               0x20000u
#define PCM_IAHB_BE0_BRE_ENET_SHIFT              17u
#define PCM_IAHB_BE0_BRE_ENET_WIDTH              1u
#define PCM_IAHB_BE0_BRE_ENET(x)                 (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_BRE_ENET_SHIFT))&PCM_IAHB_BE0_BRE_ENET_MASK)
#define PCM_IAHB_BE0_PRE_ENET_MASK               0x40000u
#define PCM_IAHB_BE0_PRE_ENET_SHIFT              18u
#define PCM_IAHB_BE0_PRE_ENET_WIDTH              1u
#define PCM_IAHB_BE0_PRE_ENET(x)                 (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_PRE_ENET_SHIFT))&PCM_IAHB_BE0_PRE_ENET_MASK)
#define PCM_IAHB_BE0_BWE_FLX_MASK                0x1000000u
#define PCM_IAHB_BE0_BWE_FLX_SHIFT               24u
#define PCM_IAHB_BE0_BWE_FLX_WIDTH               1u
#define PCM_IAHB_BE0_BWE_FLX(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_BWE_FLX_SHIFT))&PCM_IAHB_BE0_BWE_FLX_MASK)
#define PCM_IAHB_BE0_BRE_FLX_MASK                0x2000000u
#define PCM_IAHB_BE0_BRE_FLX_SHIFT               25u
#define PCM_IAHB_BE0_BRE_FLX_WIDTH               1u
#define PCM_IAHB_BE0_BRE_FLX(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_BRE_FLX_SHIFT))&PCM_IAHB_BE0_BRE_FLX_MASK)
#define PCM_IAHB_BE0_PRE_FLX_MASK                0x4000000u
#define PCM_IAHB_BE0_PRE_FLX_SHIFT               26u
#define PCM_IAHB_BE0_PRE_FLX_WIDTH               1u
#define PCM_IAHB_BE0_PRE_FLX(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE0_PRE_FLX_SHIFT))&PCM_IAHB_BE0_PRE_FLX_MASK)
/* IAHB_BE1 Bit Fields */
#define PCM_IAHB_BE1_BWE_MLB_MASK                0x1u
#define PCM_IAHB_BE1_BWE_MLB_SHIFT               0u
#define PCM_IAHB_BE1_BWE_MLB_WIDTH               1u
#define PCM_IAHB_BE1_BWE_MLB(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BWE_MLB_SHIFT))&PCM_IAHB_BE1_BWE_MLB_MASK)
#define PCM_IAHB_BE1_BRE_MLB_MASK                0x2u
#define PCM_IAHB_BE1_BRE_MLB_SHIFT               1u
#define PCM_IAHB_BE1_BRE_MLB_WIDTH               1u
#define PCM_IAHB_BE1_BRE_MLB(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BRE_MLB_SHIFT))&PCM_IAHB_BE1_BRE_MLB_MASK)
#define PCM_IAHB_BE1_PRE_MLB_MASK                0x4u
#define PCM_IAHB_BE1_PRE_MLB_SHIFT               2u
#define PCM_IAHB_BE1_PRE_MLB_WIDTH               1u
#define PCM_IAHB_BE1_PRE_MLB(x)                  (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_PRE_MLB_SHIFT))&PCM_IAHB_BE1_PRE_MLB_MASK)
#define PCM_IAHB_BE1_BWE_USB_0_MASK              0x100u
#define PCM_IAHB_BE1_BWE_USB_0_SHIFT             8u
#define PCM_IAHB_BE1_BWE_USB_0_WIDTH             1u
#define PCM_IAHB_BE1_BWE_USB_0(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BWE_USB_0_SHIFT))&PCM_IAHB_BE1_BWE_USB_0_MASK)
#define PCM_IAHB_BE1_BRE_USB_0_MASK              0x200u
#define PCM_IAHB_BE1_BRE_USB_0_SHIFT             9u
#define PCM_IAHB_BE1_BRE_USB_0_WIDTH             1u
#define PCM_IAHB_BE1_BRE_USB_0(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BRE_USB_0_SHIFT))&PCM_IAHB_BE1_BRE_USB_0_MASK)
#define PCM_IAHB_BE1_PRE_USB_0_MASK              0x400u
#define PCM_IAHB_BE1_PRE_USB_0_SHIFT             10u
#define PCM_IAHB_BE1_PRE_USB_0_WIDTH             1u
#define PCM_IAHB_BE1_PRE_USB_0(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_PRE_USB_0_SHIFT))&PCM_IAHB_BE1_PRE_USB_0_MASK)
#define PCM_IAHB_BE1_BWE_USB_1_MASK              0x10000u
#define PCM_IAHB_BE1_BWE_USB_1_SHIFT             16u
#define PCM_IAHB_BE1_BWE_USB_1_WIDTH             1u
#define PCM_IAHB_BE1_BWE_USB_1(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BWE_USB_1_SHIFT))&PCM_IAHB_BE1_BWE_USB_1_MASK)
#define PCM_IAHB_BE1_BRE_USB_1_MASK              0x20000u
#define PCM_IAHB_BE1_BRE_USB_1_SHIFT             17u
#define PCM_IAHB_BE1_BRE_USB_1_WIDTH             1u
#define PCM_IAHB_BE1_BRE_USB_1(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BRE_USB_1_SHIFT))&PCM_IAHB_BE1_BRE_USB_1_MASK)
#define PCM_IAHB_BE1_PRE_USB_1_MASK              0x40000u
#define PCM_IAHB_BE1_PRE_USB_1_SHIFT             18u
#define PCM_IAHB_BE1_PRE_USB_1_WIDTH             1u
#define PCM_IAHB_BE1_PRE_USB_1(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_PRE_USB_1_SHIFT))&PCM_IAHB_BE1_PRE_USB_1_MASK)
#define PCM_IAHB_BE1_BWE_uSDHC_MASK              0x1000000u
#define PCM_IAHB_BE1_BWE_uSDHC_SHIFT             24u
#define PCM_IAHB_BE1_BWE_uSDHC_WIDTH             1u
#define PCM_IAHB_BE1_BWE_uSDHC(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BWE_uSDHC_SHIFT))&PCM_IAHB_BE1_BWE_uSDHC_MASK)
#define PCM_IAHB_BE1_BRE_uSDHC_MASK              0x2000000u
#define PCM_IAHB_BE1_BRE_uSDHC_SHIFT             25u
#define PCM_IAHB_BE1_BRE_uSDHC_WIDTH             1u
#define PCM_IAHB_BE1_BRE_uSDHC(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_BRE_uSDHC_SHIFT))&PCM_IAHB_BE1_BRE_uSDHC_MASK)
#define PCM_IAHB_BE1_PRE_uSDHC_MASK              0x4000000u
#define PCM_IAHB_BE1_PRE_uSDHC_SHIFT             26u
#define PCM_IAHB_BE1_PRE_uSDHC_WIDTH             1u
#define PCM_IAHB_BE1_PRE_uSDHC(x)                (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE1_PRE_uSDHC_SHIFT))&PCM_IAHB_BE1_PRE_uSDHC_MASK)
/* IAHB_BE2 Bit Fields */
#define PCM_IAHB_BE2_BWE_Z2_INST_MASK            0x1u
#define PCM_IAHB_BE2_BWE_Z2_INST_SHIFT           0u
#define PCM_IAHB_BE2_BWE_Z2_INST_WIDTH           1u
#define PCM_IAHB_BE2_BWE_Z2_INST(x)              (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BWE_Z2_INST_SHIFT))&PCM_IAHB_BE2_BWE_Z2_INST_MASK)
#define PCM_IAHB_BE2_BRE_Z2_INST_MASK            0x2u
#define PCM_IAHB_BE2_BRE_Z2_INST_SHIFT           1u
#define PCM_IAHB_BE2_BRE_Z2_INST_WIDTH           1u
#define PCM_IAHB_BE2_BRE_Z2_INST(x)              (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BRE_Z2_INST_SHIFT))&PCM_IAHB_BE2_BRE_Z2_INST_MASK)
#define PCM_IAHB_BE2_PRE_Z2_INST_MASK            0x4u
#define PCM_IAHB_BE2_PRE_Z2_INST_SHIFT           2u
#define PCM_IAHB_BE2_PRE_Z2_INST_WIDTH           1u
#define PCM_IAHB_BE2_PRE_Z2_INST(x)              (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_PRE_Z2_INST_SHIFT))&PCM_IAHB_BE2_PRE_Z2_INST_MASK)
#define PCM_IAHB_BE2_BWE_Z2_DATA_MASK            0x100u
#define PCM_IAHB_BE2_BWE_Z2_DATA_SHIFT           8u
#define PCM_IAHB_BE2_BWE_Z2_DATA_WIDTH           1u
#define PCM_IAHB_BE2_BWE_Z2_DATA(x)              (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BWE_Z2_DATA_SHIFT))&PCM_IAHB_BE2_BWE_Z2_DATA_MASK)
#define PCM_IAHB_BE2_BRE_Z2_DATA_MASK            0x200u
#define PCM_IAHB_BE2_BRE_Z2_DATA_SHIFT           9u
#define PCM_IAHB_BE2_BRE_Z2_DATA_WIDTH           1u
#define PCM_IAHB_BE2_BRE_Z2_DATA(x)              (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BRE_Z2_DATA_SHIFT))&PCM_IAHB_BE2_BRE_Z2_DATA_MASK)
#define PCM_IAHB_BE2_PRE_Z2_DATA_MASK            0x400u
#define PCM_IAHB_BE2_PRE_Z2_DATA_SHIFT           10u
#define PCM_IAHB_BE2_PRE_Z2_DATA_WIDTH           1u
#define PCM_IAHB_BE2_PRE_Z2_DATA(x)              (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_PRE_Z2_DATA_SHIFT))&PCM_IAHB_BE2_PRE_Z2_DATA_MASK)
#define PCM_IAHB_BE2_BWE_PBRIDGE_B_MASK          0x10000u
#define PCM_IAHB_BE2_BWE_PBRIDGE_B_SHIFT         16u
#define PCM_IAHB_BE2_BWE_PBRIDGE_B_WIDTH         1u
#define PCM_IAHB_BE2_BWE_PBRIDGE_B(x)            (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BWE_PBRIDGE_B_SHIFT))&PCM_IAHB_BE2_BWE_PBRIDGE_B_MASK)
#define PCM_IAHB_BE2_BRE_PBRIDGE_B_MASK          0x20000u
#define PCM_IAHB_BE2_BRE_PBRIDGE_B_SHIFT         17u
#define PCM_IAHB_BE2_BRE_PBRIDGE_B_WIDTH         1u
#define PCM_IAHB_BE2_BRE_PBRIDGE_B(x)            (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BRE_PBRIDGE_B_SHIFT))&PCM_IAHB_BE2_BRE_PBRIDGE_B_MASK)
#define PCM_IAHB_BE2_PRE_PBRIDGE_B_MASK          0x40000u
#define PCM_IAHB_BE2_PRE_PBRIDGE_B_SHIFT         18u
#define PCM_IAHB_BE2_PRE_PBRIDGE_B_WIDTH         1u
#define PCM_IAHB_BE2_PRE_PBRIDGE_B(x)            (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_PRE_PBRIDGE_B_SHIFT))&PCM_IAHB_BE2_PRE_PBRIDGE_B_MASK)
#define PCM_IAHB_BE2_BWE_PBRIDGE_A_MASK          0x1000000u
#define PCM_IAHB_BE2_BWE_PBRIDGE_A_SHIFT         24u
#define PCM_IAHB_BE2_BWE_PBRIDGE_A_WIDTH         1u
#define PCM_IAHB_BE2_BWE_PBRIDGE_A(x)            (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BWE_PBRIDGE_A_SHIFT))&PCM_IAHB_BE2_BWE_PBRIDGE_A_MASK)
#define PCM_IAHB_BE2_BRE_PBRIDGE_A_MASK          0x2000000u
#define PCM_IAHB_BE2_BRE_PBRIDGE_A_SHIFT         25u
#define PCM_IAHB_BE2_BRE_PBRIDGE_A_WIDTH         1u
#define PCM_IAHB_BE2_BRE_PBRIDGE_A(x)            (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_BRE_PBRIDGE_A_SHIFT))&PCM_IAHB_BE2_BRE_PBRIDGE_A_MASK)
#define PCM_IAHB_BE2_PRE_PBRIDGE_A_MASK          0x4000000u
#define PCM_IAHB_BE2_PRE_PBRIDGE_A_SHIFT         26u
#define PCM_IAHB_BE2_PRE_PBRIDGE_A_WIDTH         1u
#define PCM_IAHB_BE2_PRE_PBRIDGE_A(x)            (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE2_PRE_PBRIDGE_A_SHIFT))&PCM_IAHB_BE2_PRE_PBRIDGE_A_MASK)
/* IAHB_BE3 Bit Fields */
#define PCM_IAHB_BE3_BWE_M0_MASK                 0x1u
#define PCM_IAHB_BE3_BWE_M0_SHIFT                0u
#define PCM_IAHB_BE3_BWE_M0_WIDTH                1u
#define PCM_IAHB_BE3_BWE_M0(x)                   (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BWE_M0_SHIFT))&PCM_IAHB_BE3_BWE_M0_MASK)
#define PCM_IAHB_BE3_BRE_M0_MASK                 0x2u
#define PCM_IAHB_BE3_BRE_M0_SHIFT                1u
#define PCM_IAHB_BE3_BRE_M0_WIDTH                1u
#define PCM_IAHB_BE3_BRE_M0(x)                   (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BRE_M0_SHIFT))&PCM_IAHB_BE3_BRE_M0_MASK)
#define PCM_IAHB_BE3_PRE_M0_MASK                 0x4u
#define PCM_IAHB_BE3_PRE_M0_SHIFT                2u
#define PCM_IAHB_BE3_PRE_M0_WIDTH                1u
#define PCM_IAHB_BE3_PRE_M0(x)                   (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_PRE_M0_SHIFT))&PCM_IAHB_BE3_PRE_M0_MASK)
#define PCM_IAHB_BE3_BWE_M1_MASK                 0x100u
#define PCM_IAHB_BE3_BWE_M1_SHIFT                8u
#define PCM_IAHB_BE3_BWE_M1_WIDTH                1u
#define PCM_IAHB_BE3_BWE_M1(x)                   (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BWE_M1_SHIFT))&PCM_IAHB_BE3_BWE_M1_MASK)
#define PCM_IAHB_BE3_BRE_M1_MASK                 0x200u
#define PCM_IAHB_BE3_BRE_M1_SHIFT                9u
#define PCM_IAHB_BE3_BRE_M1_WIDTH                1u
#define PCM_IAHB_BE3_BRE_M1(x)                   (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_BRE_M1_SHIFT))&PCM_IAHB_BE3_BRE_M1_MASK)
#define PCM_IAHB_BE3_PRE_M1_MASK                 0x400u
#define PCM_IAHB_BE3_PRE_M1_SHIFT                10u
#define PCM_IAHB_BE3_PRE_M1_WIDTH                1u
#define PCM_IAHB_BE3_PRE_M1(x)                   (((uint32_t)(((uint32_t)(x))<<PCM_IAHB_BE3_PRE_M1_SHIFT))&PCM_IAHB_BE3_PRE_M1_MASK)
/* IPS_CGM_EN0 Bit Fields */
#define PCM_IPS_CGM_EN0_BWE_MLB32_MASK           0x1u
#define PCM_IPS_CGM_EN0_BWE_MLB32_SHIFT          0u
#define PCM_IPS_CGM_EN0_BWE_MLB32_WIDTH          1u
#define PCM_IPS_CGM_EN0_BWE_MLB32(x)             (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_BWE_MLB32_SHIFT))&PCM_IPS_CGM_EN0_BWE_MLB32_MASK)
#define PCM_IPS_CGM_EN0_BRE_MLB32_MASK           0x10u
#define PCM_IPS_CGM_EN0_BRE_MLB32_SHIFT          4u
#define PCM_IPS_CGM_EN0_BRE_MLB32_WIDTH          1u
#define PCM_IPS_CGM_EN0_BRE_MLB32(x)             (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_BRE_MLB32_SHIFT))&PCM_IPS_CGM_EN0_BRE_MLB32_MASK)
#define PCM_IPS_CGM_EN0_PRE_MLB32_MASK           0x100u
#define PCM_IPS_CGM_EN0_PRE_MLB32_SHIFT          8u
#define PCM_IPS_CGM_EN0_PRE_MLB32_WIDTH          1u
#define PCM_IPS_CGM_EN0_PRE_MLB32(x)             (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_PRE_MLB32_SHIFT))&PCM_IPS_CGM_EN0_PRE_MLB32_MASK)
#define PCM_IPS_CGM_EN0_IPS_CGM_FLASH_MASK       0x1000u
#define PCM_IPS_CGM_EN0_IPS_CGM_FLASH_SHIFT      12u
#define PCM_IPS_CGM_EN0_IPS_CGM_FLASH_WIDTH      1u
#define PCM_IPS_CGM_EN0_IPS_CGM_FLASH(x)         (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_IPS_CGM_FLASH_SHIFT))&PCM_IPS_CGM_EN0_IPS_CGM_FLASH_MASK)
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM0_MASK       0x10000u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM0_SHIFT      16u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM0_WIDTH      1u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM0(x)         (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_IPS_CGM_PRAM0_SHIFT))&PCM_IPS_CGM_EN0_IPS_CGM_PRAM0_MASK)
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM1_MASK       0x100000u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM1_SHIFT      20u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM1_WIDTH      1u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM1(x)         (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_IPS_CGM_PRAM1_SHIFT))&PCM_IPS_CGM_EN0_IPS_CGM_PRAM1_MASK)
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM2_MASK       0x1000000u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM2_SHIFT      24u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM2_WIDTH      1u
#define PCM_IPS_CGM_EN0_IPS_CGM_PRAM2(x)         (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_IPS_CGM_PRAM2_SHIFT))&PCM_IPS_CGM_EN0_IPS_CGM_PRAM2_MASK)
#define PCM_IPS_CGM_EN0_IPS_CGM_AXBS_0_MASK      0x10000000u
#define PCM_IPS_CGM_EN0_IPS_CGM_AXBS_0_SHIFT     28u
#define PCM_IPS_CGM_EN0_IPS_CGM_AXBS_0_WIDTH     1u
#define PCM_IPS_CGM_EN0_IPS_CGM_AXBS_0(x)        (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN0_IPS_CGM_AXBS_0_SHIFT))&PCM_IPS_CGM_EN0_IPS_CGM_AXBS_0_MASK)
/* IPS_CGM_EN1 Bit Fields */
#define PCM_IPS_CGM_EN1_IPS_CGM_AXBS_1_MASK      0x1u
#define PCM_IPS_CGM_EN1_IPS_CGM_AXBS_1_SHIFT     0u
#define PCM_IPS_CGM_EN1_IPS_CGM_AXBS_1_WIDTH     1u
#define PCM_IPS_CGM_EN1_IPS_CGM_AXBS_1(x)        (((uint32_t)(((uint32_t)(x))<<PCM_IPS_CGM_EN1_IPS_CGM_AXBS_1_SHIFT))&PCM_IPS_CGM_EN1_IPS_CGM_AXBS_1_MASK)

/*!
 * @}
 */ /* end of group PCM_Register_Masks */


/*!
 * @}
 */ /* end of group PCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PFLASH Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PFLASH_Peripheral_Access_Layer PFLASH Peripheral Access Layer
 * @{
 */


/** PFLASH - Size of Registers Arrays */
#define PFLASH_PFCRD_COUNT                       16u

/** PFLASH - Register Layout Typedef */
typedef struct {
  __IO uint32_t PFCR1;                             /**< Platform Flash Configuration Register 1, offset: 0x0 */
  __IO uint32_t PFCR2;                             /**< Platform Flash Configuration Register 2, offset: 0x4 */
  __IO uint32_t PFCR3;                             /**< Platform Flash Configuration Register 3, offset: 0x8 */
  __IO uint32_t PFAPR;                             /**< Platform Flash Access Protection Register, offset: 0xC */
  __IO uint32_t PFCRCR;                            /**< Platform Flash Remap Control Register, offset: 0x10 */
  __IO uint32_t PFCRDE;                            /**< Platform Flash Remap Descriptor Enable Register, offset: 0x14 */
  __IO uint32_t PFCR4;                             /**< Platform Flash Configuration Register 4, offset: 0x18 */
       uint8_t RESERVED_0[228];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __IO uint32_t Word0;                             /**< Platform Flash Calibration Region Descriptor n Word0, array offset: 0x100, array step: 0x10 */
    __IO uint32_t Word1;                             /**< Platform Flash Calibration Region Descriptor n Word1, array offset: 0x104, array step: 0x10 */
    __IO uint32_t Word2;                             /**< Platform Flash Calibration Region Descriptor n Word2, array offset: 0x108, array step: 0x10 */
         uint8_t RESERVED_0[4];
  } PFCRD[PFLASH_PFCRD_COUNT];
} PFLASH_Type, *PFLASH_MemMapPtr;

 /** Number of instances of the PFLASH module. */
#define PFLASH_INSTANCE_COUNT                    (1u)


/* PFLASH - Peripheral instance base addresses */
/** Peripheral PFLASH base address */
#define PFLASH_BASE                              (0xFC030000u)
/** Peripheral PFLASH base pointer */
#define PFLASH                                   ((PFLASH_Type *)PFLASH_BASE)
/** Array initializer of PFLASH peripheral base addresses */
#define PFLASH_BASE_ADDRS                        { PFLASH_BASE }
/** Array initializer of PFLASH peripheral base pointers */
#define PFLASH_BASE_PTRS                         { PFLASH }

/* ----------------------------------------------------------------------------
   -- PFLASH Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PFLASH_Register_Masks PFLASH Register Masks
 * @{
 */

/* PFCR1 Bit Fields */
#define PFLASH_PFCR1_P0_BFEN_MASK                0x1u
#define PFLASH_PFCR1_P0_BFEN_SHIFT               0u
#define PFLASH_PFCR1_P0_BFEN_WIDTH               1u
#define PFLASH_PFCR1_P0_BFEN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_BFEN_SHIFT))&PFLASH_PFCR1_P0_BFEN_MASK)
#define PFLASH_PFCR1_P0_PFLIM_MASK               0x6u
#define PFLASH_PFCR1_P0_PFLIM_SHIFT              1u
#define PFLASH_PFCR1_P0_PFLIM_WIDTH              2u
#define PFLASH_PFCR1_P0_PFLIM(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_PFLIM_SHIFT))&PFLASH_PFCR1_P0_PFLIM_MASK)
#define PFLASH_PFCR1_P0_IPFEN_MASK               0x10u
#define PFLASH_PFCR1_P0_IPFEN_SHIFT              4u
#define PFLASH_PFCR1_P0_IPFEN_WIDTH              1u
#define PFLASH_PFCR1_P0_IPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_IPFEN_SHIFT))&PFLASH_PFCR1_P0_IPFEN_MASK)
#define PFLASH_PFCR1_P0_DPFEN_MASK               0x40u
#define PFLASH_PFCR1_P0_DPFEN_SHIFT              6u
#define PFLASH_PFCR1_P0_DPFEN_WIDTH              1u
#define PFLASH_PFCR1_P0_DPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_DPFEN_SHIFT))&PFLASH_PFCR1_P0_DPFEN_MASK)
#define PFLASH_PFCR1_RWSC_MASK                   0x1F00u
#define PFLASH_PFCR1_RWSC_SHIFT                  8u
#define PFLASH_PFCR1_RWSC_WIDTH                  5u
#define PFLASH_PFCR1_RWSC(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_RWSC_SHIFT))&PFLASH_PFCR1_RWSC_MASK)
#define PFLASH_PFCR1_APC_MASK                    0xE000u
#define PFLASH_PFCR1_APC_SHIFT                   13u
#define PFLASH_PFCR1_APC_WIDTH                   3u
#define PFLASH_PFCR1_APC(x)                      (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_APC_SHIFT))&PFLASH_PFCR1_APC_MASK)
#define PFLASH_PFCR1_P0_M0PFE_MASK               0x10000u
#define PFLASH_PFCR1_P0_M0PFE_SHIFT              16u
#define PFLASH_PFCR1_P0_M0PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M0PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M0PFE_SHIFT))&PFLASH_PFCR1_P0_M0PFE_MASK)
#define PFLASH_PFCR1_P0_M1PFE_MASK               0x20000u
#define PFLASH_PFCR1_P0_M1PFE_SHIFT              17u
#define PFLASH_PFCR1_P0_M1PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M1PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M1PFE_SHIFT))&PFLASH_PFCR1_P0_M1PFE_MASK)
#define PFLASH_PFCR1_P0_M2PFE_MASK               0x40000u
#define PFLASH_PFCR1_P0_M2PFE_SHIFT              18u
#define PFLASH_PFCR1_P0_M2PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M2PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M2PFE_SHIFT))&PFLASH_PFCR1_P0_M2PFE_MASK)
#define PFLASH_PFCR1_P0_M3PFE_MASK               0x80000u
#define PFLASH_PFCR1_P0_M3PFE_SHIFT              19u
#define PFLASH_PFCR1_P0_M3PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M3PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M3PFE_SHIFT))&PFLASH_PFCR1_P0_M3PFE_MASK)
#define PFLASH_PFCR1_P0_M4PFE_MASK               0x100000u
#define PFLASH_PFCR1_P0_M4PFE_SHIFT              20u
#define PFLASH_PFCR1_P0_M4PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M4PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M4PFE_SHIFT))&PFLASH_PFCR1_P0_M4PFE_MASK)
#define PFLASH_PFCR1_P0_M5PFE_MASK               0x200000u
#define PFLASH_PFCR1_P0_M5PFE_SHIFT              21u
#define PFLASH_PFCR1_P0_M5PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M5PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M5PFE_SHIFT))&PFLASH_PFCR1_P0_M5PFE_MASK)
#define PFLASH_PFCR1_P0_M6PFE_MASK               0x400000u
#define PFLASH_PFCR1_P0_M6PFE_SHIFT              22u
#define PFLASH_PFCR1_P0_M6PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M6PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M6PFE_SHIFT))&PFLASH_PFCR1_P0_M6PFE_MASK)
#define PFLASH_PFCR1_P0_M7PFE_MASK               0x800000u
#define PFLASH_PFCR1_P0_M7PFE_SHIFT              23u
#define PFLASH_PFCR1_P0_M7PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M7PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M7PFE_SHIFT))&PFLASH_PFCR1_P0_M7PFE_MASK)
#define PFLASH_PFCR1_P0_M8PFE_MASK               0x1000000u
#define PFLASH_PFCR1_P0_M8PFE_SHIFT              24u
#define PFLASH_PFCR1_P0_M8PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M8PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M8PFE_SHIFT))&PFLASH_PFCR1_P0_M8PFE_MASK)
#define PFLASH_PFCR1_P0_M9PFE_MASK               0x2000000u
#define PFLASH_PFCR1_P0_M9PFE_SHIFT              25u
#define PFLASH_PFCR1_P0_M9PFE_WIDTH              1u
#define PFLASH_PFCR1_P0_M9PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M9PFE_SHIFT))&PFLASH_PFCR1_P0_M9PFE_MASK)
#define PFLASH_PFCR1_P0_M10PFE_MASK              0x4000000u
#define PFLASH_PFCR1_P0_M10PFE_SHIFT             26u
#define PFLASH_PFCR1_P0_M10PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M10PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M10PFE_SHIFT))&PFLASH_PFCR1_P0_M10PFE_MASK)
#define PFLASH_PFCR1_P0_M11PFE_MASK              0x8000000u
#define PFLASH_PFCR1_P0_M11PFE_SHIFT             27u
#define PFLASH_PFCR1_P0_M11PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M11PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M11PFE_SHIFT))&PFLASH_PFCR1_P0_M11PFE_MASK)
#define PFLASH_PFCR1_P0_M12PFE_MASK              0x10000000u
#define PFLASH_PFCR1_P0_M12PFE_SHIFT             28u
#define PFLASH_PFCR1_P0_M12PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M12PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M12PFE_SHIFT))&PFLASH_PFCR1_P0_M12PFE_MASK)
#define PFLASH_PFCR1_P0_M13PFE_MASK              0x20000000u
#define PFLASH_PFCR1_P0_M13PFE_SHIFT             29u
#define PFLASH_PFCR1_P0_M13PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M13PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M13PFE_SHIFT))&PFLASH_PFCR1_P0_M13PFE_MASK)
#define PFLASH_PFCR1_P0_M14PFE_MASK              0x40000000u
#define PFLASH_PFCR1_P0_M14PFE_SHIFT             30u
#define PFLASH_PFCR1_P0_M14PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M14PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M14PFE_SHIFT))&PFLASH_PFCR1_P0_M14PFE_MASK)
#define PFLASH_PFCR1_P0_M15PFE_MASK              0x80000000u
#define PFLASH_PFCR1_P0_M15PFE_SHIFT             31u
#define PFLASH_PFCR1_P0_M15PFE_WIDTH             1u
#define PFLASH_PFCR1_P0_M15PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR1_P0_M15PFE_SHIFT))&PFLASH_PFCR1_P0_M15PFE_MASK)
/* PFCR2 Bit Fields */
#define PFLASH_PFCR2_P1_BFEN_MASK                0x1u
#define PFLASH_PFCR2_P1_BFEN_SHIFT               0u
#define PFLASH_PFCR2_P1_BFEN_WIDTH               1u
#define PFLASH_PFCR2_P1_BFEN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_BFEN_SHIFT))&PFLASH_PFCR2_P1_BFEN_MASK)
#define PFLASH_PFCR2_P1_PFLIM_MASK               0x6u
#define PFLASH_PFCR2_P1_PFLIM_SHIFT              1u
#define PFLASH_PFCR2_P1_PFLIM_WIDTH              2u
#define PFLASH_PFCR2_P1_PFLIM(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_PFLIM_SHIFT))&PFLASH_PFCR2_P1_PFLIM_MASK)
#define PFLASH_PFCR2_P1_IPFEN_MASK               0x10u
#define PFLASH_PFCR2_P1_IPFEN_SHIFT              4u
#define PFLASH_PFCR2_P1_IPFEN_WIDTH              1u
#define PFLASH_PFCR2_P1_IPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_IPFEN_SHIFT))&PFLASH_PFCR2_P1_IPFEN_MASK)
#define PFLASH_PFCR2_P1_DPFEN_MASK               0x40u
#define PFLASH_PFCR2_P1_DPFEN_SHIFT              6u
#define PFLASH_PFCR2_P1_DPFEN_WIDTH              1u
#define PFLASH_PFCR2_P1_DPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_DPFEN_SHIFT))&PFLASH_PFCR2_P1_DPFEN_MASK)
#define PFLASH_PFCR2_P1_M0PFE_MASK               0x10000u
#define PFLASH_PFCR2_P1_M0PFE_SHIFT              16u
#define PFLASH_PFCR2_P1_M0PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M0PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M0PFE_SHIFT))&PFLASH_PFCR2_P1_M0PFE_MASK)
#define PFLASH_PFCR2_P1_M1PFE_MASK               0x20000u
#define PFLASH_PFCR2_P1_M1PFE_SHIFT              17u
#define PFLASH_PFCR2_P1_M1PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M1PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M1PFE_SHIFT))&PFLASH_PFCR2_P1_M1PFE_MASK)
#define PFLASH_PFCR2_P1_M2PFE_MASK               0x40000u
#define PFLASH_PFCR2_P1_M2PFE_SHIFT              18u
#define PFLASH_PFCR2_P1_M2PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M2PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M2PFE_SHIFT))&PFLASH_PFCR2_P1_M2PFE_MASK)
#define PFLASH_PFCR2_P1_M3PFE_MASK               0x80000u
#define PFLASH_PFCR2_P1_M3PFE_SHIFT              19u
#define PFLASH_PFCR2_P1_M3PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M3PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M3PFE_SHIFT))&PFLASH_PFCR2_P1_M3PFE_MASK)
#define PFLASH_PFCR2_P1_M4PFE_MASK               0x100000u
#define PFLASH_PFCR2_P1_M4PFE_SHIFT              20u
#define PFLASH_PFCR2_P1_M4PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M4PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M4PFE_SHIFT))&PFLASH_PFCR2_P1_M4PFE_MASK)
#define PFLASH_PFCR2_P1_M5PFE_MASK               0x200000u
#define PFLASH_PFCR2_P1_M5PFE_SHIFT              21u
#define PFLASH_PFCR2_P1_M5PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M5PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M5PFE_SHIFT))&PFLASH_PFCR2_P1_M5PFE_MASK)
#define PFLASH_PFCR2_P1_M6PFE_MASK               0x400000u
#define PFLASH_PFCR2_P1_M6PFE_SHIFT              22u
#define PFLASH_PFCR2_P1_M6PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M6PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M6PFE_SHIFT))&PFLASH_PFCR2_P1_M6PFE_MASK)
#define PFLASH_PFCR2_P1_M7PFE_MASK               0x800000u
#define PFLASH_PFCR2_P1_M7PFE_SHIFT              23u
#define PFLASH_PFCR2_P1_M7PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M7PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M7PFE_SHIFT))&PFLASH_PFCR2_P1_M7PFE_MASK)
#define PFLASH_PFCR2_P1_M8PFE_MASK               0x1000000u
#define PFLASH_PFCR2_P1_M8PFE_SHIFT              24u
#define PFLASH_PFCR2_P1_M8PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M8PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M8PFE_SHIFT))&PFLASH_PFCR2_P1_M8PFE_MASK)
#define PFLASH_PFCR2_P1_M9PFE_MASK               0x2000000u
#define PFLASH_PFCR2_P1_M9PFE_SHIFT              25u
#define PFLASH_PFCR2_P1_M9PFE_WIDTH              1u
#define PFLASH_PFCR2_P1_M9PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M9PFE_SHIFT))&PFLASH_PFCR2_P1_M9PFE_MASK)
#define PFLASH_PFCR2_P1_M10PFE_MASK              0x4000000u
#define PFLASH_PFCR2_P1_M10PFE_SHIFT             26u
#define PFLASH_PFCR2_P1_M10PFE_WIDTH             1u
#define PFLASH_PFCR2_P1_M10PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M10PFE_SHIFT))&PFLASH_PFCR2_P1_M10PFE_MASK)
#define PFLASH_PFCR2_P1_M11PFE_MASK              0x8000000u
#define PFLASH_PFCR2_P1_M11PFE_SHIFT             27u
#define PFLASH_PFCR2_P1_M11PFE_WIDTH             1u
#define PFLASH_PFCR2_P1_M11PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M11PFE_SHIFT))&PFLASH_PFCR2_P1_M11PFE_MASK)
#define PFLASH_PFCR2_P1_M12PFE_MASK              0x10000000u
#define PFLASH_PFCR2_P1_M12PFE_SHIFT             28u
#define PFLASH_PFCR2_P1_M12PFE_WIDTH             1u
#define PFLASH_PFCR2_P1_M12PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M12PFE_SHIFT))&PFLASH_PFCR2_P1_M12PFE_MASK)
#define PFLASH_PFCR2_P1_M13PFE_MASK              0x20000000u
#define PFLASH_PFCR2_P1_M13PFE_SHIFT             29u
#define PFLASH_PFCR2_P1_M13PFE_WIDTH             1u
#define PFLASH_PFCR2_P1_M13PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M13PFE_SHIFT))&PFLASH_PFCR2_P1_M13PFE_MASK)
#define PFLASH_PFCR2_P1_M14PFE_MASK              0x40000000u
#define PFLASH_PFCR2_P1_M14PFE_SHIFT             30u
#define PFLASH_PFCR2_P1_M14PFE_WIDTH             1u
#define PFLASH_PFCR2_P1_M14PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M14PFE_SHIFT))&PFLASH_PFCR2_P1_M14PFE_MASK)
#define PFLASH_PFCR2_P1_M15PFE_MASK              0x80000000u
#define PFLASH_PFCR2_P1_M15PFE_SHIFT             31u
#define PFLASH_PFCR2_P1_M15PFE_WIDTH             1u
#define PFLASH_PFCR2_P1_M15PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR2_P1_M15PFE_SHIFT))&PFLASH_PFCR2_P1_M15PFE_MASK)
/* PFCR3 Bit Fields */
#define PFLASH_PFCR3_ARBM_MASK                   0xF000u
#define PFLASH_PFCR3_ARBM_SHIFT                  12u
#define PFLASH_PFCR3_ARBM_WIDTH                  4u
#define PFLASH_PFCR3_ARBM(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_ARBM_SHIFT))&PFLASH_PFCR3_ARBM_MASK)
#define PFLASH_PFCR3_BAF_DIS_MASK                0x10000u
#define PFLASH_PFCR3_BAF_DIS_SHIFT               16u
#define PFLASH_PFCR3_BAF_DIS_WIDTH               1u
#define PFLASH_PFCR3_BAF_DIS(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_BAF_DIS_SHIFT))&PFLASH_PFCR3_BAF_DIS_MASK)
#define PFLASH_PFCR3_P2_WCFG_MASK                0xC000000u
#define PFLASH_PFCR3_P2_WCFG_SHIFT               26u
#define PFLASH_PFCR3_P2_WCFG_WIDTH               2u
#define PFLASH_PFCR3_P2_WCFG(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_P2_WCFG_SHIFT))&PFLASH_PFCR3_P2_WCFG_MASK)
#define PFLASH_PFCR3_P1_WCFG_MASK                0x30000000u
#define PFLASH_PFCR3_P1_WCFG_SHIFT               28u
#define PFLASH_PFCR3_P1_WCFG_WIDTH               2u
#define PFLASH_PFCR3_P1_WCFG(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_P1_WCFG_SHIFT))&PFLASH_PFCR3_P1_WCFG_MASK)
#define PFLASH_PFCR3_P0_WCFG_MASK                0xC0000000u
#define PFLASH_PFCR3_P0_WCFG_SHIFT               30u
#define PFLASH_PFCR3_P0_WCFG_WIDTH               2u
#define PFLASH_PFCR3_P0_WCFG(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR3_P0_WCFG_SHIFT))&PFLASH_PFCR3_P0_WCFG_MASK)
/* PFAPR Bit Fields */
#define PFLASH_PFAPR_M15AP_MASK                  0x3u
#define PFLASH_PFAPR_M15AP_SHIFT                 0u
#define PFLASH_PFAPR_M15AP_WIDTH                 2u
#define PFLASH_PFAPR_M15AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M15AP_SHIFT))&PFLASH_PFAPR_M15AP_MASK)
#define PFLASH_PFAPR_M14AP_MASK                  0xCu
#define PFLASH_PFAPR_M14AP_SHIFT                 2u
#define PFLASH_PFAPR_M14AP_WIDTH                 2u
#define PFLASH_PFAPR_M14AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M14AP_SHIFT))&PFLASH_PFAPR_M14AP_MASK)
#define PFLASH_PFAPR_M13AP_MASK                  0x30u
#define PFLASH_PFAPR_M13AP_SHIFT                 4u
#define PFLASH_PFAPR_M13AP_WIDTH                 2u
#define PFLASH_PFAPR_M13AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M13AP_SHIFT))&PFLASH_PFAPR_M13AP_MASK)
#define PFLASH_PFAPR_M12AP_MASK                  0xC0u
#define PFLASH_PFAPR_M12AP_SHIFT                 6u
#define PFLASH_PFAPR_M12AP_WIDTH                 2u
#define PFLASH_PFAPR_M12AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M12AP_SHIFT))&PFLASH_PFAPR_M12AP_MASK)
#define PFLASH_PFAPR_M11AP_MASK                  0x300u
#define PFLASH_PFAPR_M11AP_SHIFT                 8u
#define PFLASH_PFAPR_M11AP_WIDTH                 2u
#define PFLASH_PFAPR_M11AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M11AP_SHIFT))&PFLASH_PFAPR_M11AP_MASK)
#define PFLASH_PFAPR_M10AP_MASK                  0xC00u
#define PFLASH_PFAPR_M10AP_SHIFT                 10u
#define PFLASH_PFAPR_M10AP_WIDTH                 2u
#define PFLASH_PFAPR_M10AP(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M10AP_SHIFT))&PFLASH_PFAPR_M10AP_MASK)
#define PFLASH_PFAPR_M9AP_MASK                   0x3000u
#define PFLASH_PFAPR_M9AP_SHIFT                  12u
#define PFLASH_PFAPR_M9AP_WIDTH                  2u
#define PFLASH_PFAPR_M9AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M9AP_SHIFT))&PFLASH_PFAPR_M9AP_MASK)
#define PFLASH_PFAPR_M8AP_MASK                   0xC000u
#define PFLASH_PFAPR_M8AP_SHIFT                  14u
#define PFLASH_PFAPR_M8AP_WIDTH                  2u
#define PFLASH_PFAPR_M8AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M8AP_SHIFT))&PFLASH_PFAPR_M8AP_MASK)
#define PFLASH_PFAPR_M7AP_MASK                   0x30000u
#define PFLASH_PFAPR_M7AP_SHIFT                  16u
#define PFLASH_PFAPR_M7AP_WIDTH                  2u
#define PFLASH_PFAPR_M7AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M7AP_SHIFT))&PFLASH_PFAPR_M7AP_MASK)
#define PFLASH_PFAPR_M6AP_MASK                   0xC0000u
#define PFLASH_PFAPR_M6AP_SHIFT                  18u
#define PFLASH_PFAPR_M6AP_WIDTH                  2u
#define PFLASH_PFAPR_M6AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M6AP_SHIFT))&PFLASH_PFAPR_M6AP_MASK)
#define PFLASH_PFAPR_M5AP_MASK                   0x300000u
#define PFLASH_PFAPR_M5AP_SHIFT                  20u
#define PFLASH_PFAPR_M5AP_WIDTH                  2u
#define PFLASH_PFAPR_M5AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M5AP_SHIFT))&PFLASH_PFAPR_M5AP_MASK)
#define PFLASH_PFAPR_M4AP_MASK                   0xC00000u
#define PFLASH_PFAPR_M4AP_SHIFT                  22u
#define PFLASH_PFAPR_M4AP_WIDTH                  2u
#define PFLASH_PFAPR_M4AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M4AP_SHIFT))&PFLASH_PFAPR_M4AP_MASK)
#define PFLASH_PFAPR_M3AP_MASK                   0x3000000u
#define PFLASH_PFAPR_M3AP_SHIFT                  24u
#define PFLASH_PFAPR_M3AP_WIDTH                  2u
#define PFLASH_PFAPR_M3AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M3AP_SHIFT))&PFLASH_PFAPR_M3AP_MASK)
#define PFLASH_PFAPR_M2AP_MASK                   0xC000000u
#define PFLASH_PFAPR_M2AP_SHIFT                  26u
#define PFLASH_PFAPR_M2AP_WIDTH                  2u
#define PFLASH_PFAPR_M2AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M2AP_SHIFT))&PFLASH_PFAPR_M2AP_MASK)
#define PFLASH_PFAPR_M1AP_MASK                   0x30000000u
#define PFLASH_PFAPR_M1AP_SHIFT                  28u
#define PFLASH_PFAPR_M1AP_WIDTH                  2u
#define PFLASH_PFAPR_M1AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M1AP_SHIFT))&PFLASH_PFAPR_M1AP_MASK)
#define PFLASH_PFAPR_M0AP_MASK                   0xC0000000u
#define PFLASH_PFAPR_M0AP_SHIFT                  30u
#define PFLASH_PFAPR_M0AP_WIDTH                  2u
#define PFLASH_PFAPR_M0AP(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_PFAPR_M0AP_SHIFT))&PFLASH_PFAPR_M0AP_MASK)
/* PFCRCR Bit Fields */
#define PFLASH_PFCRCR_GRMEN_MASK                 0x1u
#define PFLASH_PFCRCR_GRMEN_SHIFT                0u
#define PFLASH_PFCRCR_GRMEN_WIDTH                1u
#define PFLASH_PFCRCR_GRMEN(x)                   (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRCR_GRMEN_SHIFT))&PFLASH_PFCRCR_GRMEN_MASK)
#define PFLASH_PFCRCR_IRMEN_MASK                 0x10u
#define PFLASH_PFCRCR_IRMEN_SHIFT                4u
#define PFLASH_PFCRCR_IRMEN_WIDTH                1u
#define PFLASH_PFCRCR_IRMEN(x)                   (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRCR_IRMEN_SHIFT))&PFLASH_PFCRCR_IRMEN_MASK)
#define PFLASH_PFCRCR_SAFE_CAL_MASK              0x100u
#define PFLASH_PFCRCR_SAFE_CAL_SHIFT             8u
#define PFLASH_PFCRCR_SAFE_CAL_WIDTH             1u
#define PFLASH_PFCRCR_SAFE_CAL(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRCR_SAFE_CAL_SHIFT))&PFLASH_PFCRCR_SAFE_CAL_MASK)
/* PFCRDE Bit Fields */
#define PFLASH_PFCRDE_CRD15EN_MASK               0x10000u
#define PFLASH_PFCRDE_CRD15EN_SHIFT              16u
#define PFLASH_PFCRDE_CRD15EN_WIDTH              1u
#define PFLASH_PFCRDE_CRD15EN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD15EN_SHIFT))&PFLASH_PFCRDE_CRD15EN_MASK)
#define PFLASH_PFCRDE_CRD14EN_MASK               0x20000u
#define PFLASH_PFCRDE_CRD14EN_SHIFT              17u
#define PFLASH_PFCRDE_CRD14EN_WIDTH              1u
#define PFLASH_PFCRDE_CRD14EN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD14EN_SHIFT))&PFLASH_PFCRDE_CRD14EN_MASK)
#define PFLASH_PFCRDE_CRD13EN_MASK               0x40000u
#define PFLASH_PFCRDE_CRD13EN_SHIFT              18u
#define PFLASH_PFCRDE_CRD13EN_WIDTH              1u
#define PFLASH_PFCRDE_CRD13EN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD13EN_SHIFT))&PFLASH_PFCRDE_CRD13EN_MASK)
#define PFLASH_PFCRDE_CRD12EN_MASK               0x80000u
#define PFLASH_PFCRDE_CRD12EN_SHIFT              19u
#define PFLASH_PFCRDE_CRD12EN_WIDTH              1u
#define PFLASH_PFCRDE_CRD12EN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD12EN_SHIFT))&PFLASH_PFCRDE_CRD12EN_MASK)
#define PFLASH_PFCRDE_CRD11EN_MASK               0x100000u
#define PFLASH_PFCRDE_CRD11EN_SHIFT              20u
#define PFLASH_PFCRDE_CRD11EN_WIDTH              1u
#define PFLASH_PFCRDE_CRD11EN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD11EN_SHIFT))&PFLASH_PFCRDE_CRD11EN_MASK)
#define PFLASH_PFCRDE_CRD10EN_MASK               0x200000u
#define PFLASH_PFCRDE_CRD10EN_SHIFT              21u
#define PFLASH_PFCRDE_CRD10EN_WIDTH              1u
#define PFLASH_PFCRDE_CRD10EN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD10EN_SHIFT))&PFLASH_PFCRDE_CRD10EN_MASK)
#define PFLASH_PFCRDE_CRD9EN_MASK                0x400000u
#define PFLASH_PFCRDE_CRD9EN_SHIFT               22u
#define PFLASH_PFCRDE_CRD9EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD9EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD9EN_SHIFT))&PFLASH_PFCRDE_CRD9EN_MASK)
#define PFLASH_PFCRDE_CRD8EN_MASK                0x800000u
#define PFLASH_PFCRDE_CRD8EN_SHIFT               23u
#define PFLASH_PFCRDE_CRD8EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD8EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD8EN_SHIFT))&PFLASH_PFCRDE_CRD8EN_MASK)
#define PFLASH_PFCRDE_CRD7EN_MASK                0x1000000u
#define PFLASH_PFCRDE_CRD7EN_SHIFT               24u
#define PFLASH_PFCRDE_CRD7EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD7EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD7EN_SHIFT))&PFLASH_PFCRDE_CRD7EN_MASK)
#define PFLASH_PFCRDE_CRD6EN_MASK                0x2000000u
#define PFLASH_PFCRDE_CRD6EN_SHIFT               25u
#define PFLASH_PFCRDE_CRD6EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD6EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD6EN_SHIFT))&PFLASH_PFCRDE_CRD6EN_MASK)
#define PFLASH_PFCRDE_CRD5EN_MASK                0x4000000u
#define PFLASH_PFCRDE_CRD5EN_SHIFT               26u
#define PFLASH_PFCRDE_CRD5EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD5EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD5EN_SHIFT))&PFLASH_PFCRDE_CRD5EN_MASK)
#define PFLASH_PFCRDE_CRD4EN_MASK                0x8000000u
#define PFLASH_PFCRDE_CRD4EN_SHIFT               27u
#define PFLASH_PFCRDE_CRD4EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD4EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD4EN_SHIFT))&PFLASH_PFCRDE_CRD4EN_MASK)
#define PFLASH_PFCRDE_CRD3EN_MASK                0x10000000u
#define PFLASH_PFCRDE_CRD3EN_SHIFT               28u
#define PFLASH_PFCRDE_CRD3EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD3EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD3EN_SHIFT))&PFLASH_PFCRDE_CRD3EN_MASK)
#define PFLASH_PFCRDE_CRD2EN_MASK                0x20000000u
#define PFLASH_PFCRDE_CRD2EN_SHIFT               29u
#define PFLASH_PFCRDE_CRD2EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD2EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD2EN_SHIFT))&PFLASH_PFCRDE_CRD2EN_MASK)
#define PFLASH_PFCRDE_CRD1EN_MASK                0x40000000u
#define PFLASH_PFCRDE_CRD1EN_SHIFT               30u
#define PFLASH_PFCRDE_CRD1EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD1EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD1EN_SHIFT))&PFLASH_PFCRDE_CRD1EN_MASK)
#define PFLASH_PFCRDE_CRD0EN_MASK                0x80000000u
#define PFLASH_PFCRDE_CRD0EN_SHIFT               31u
#define PFLASH_PFCRDE_CRD0EN_WIDTH               1u
#define PFLASH_PFCRDE_CRD0EN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCRDE_CRD0EN_SHIFT))&PFLASH_PFCRDE_CRD0EN_MASK)
/* PFCR4 Bit Fields */
#define PFLASH_PFCR4_P2_BFEN_MASK                0x1u
#define PFLASH_PFCR4_P2_BFEN_SHIFT               0u
#define PFLASH_PFCR4_P2_BFEN_WIDTH               1u
#define PFLASH_PFCR4_P2_BFEN(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_BFEN_SHIFT))&PFLASH_PFCR4_P2_BFEN_MASK)
#define PFLASH_PFCR4_P2_PFLIM_MASK               0x6u
#define PFLASH_PFCR4_P2_PFLIM_SHIFT              1u
#define PFLASH_PFCR4_P2_PFLIM_WIDTH              2u
#define PFLASH_PFCR4_P2_PFLIM(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_PFLIM_SHIFT))&PFLASH_PFCR4_P2_PFLIM_MASK)
#define PFLASH_PFCR4_P2_IPFEN_MASK               0x10u
#define PFLASH_PFCR4_P2_IPFEN_SHIFT              4u
#define PFLASH_PFCR4_P2_IPFEN_WIDTH              1u
#define PFLASH_PFCR4_P2_IPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_IPFEN_SHIFT))&PFLASH_PFCR4_P2_IPFEN_MASK)
#define PFLASH_PFCR4_P2_DPFEN_MASK               0x40u
#define PFLASH_PFCR4_P2_DPFEN_SHIFT              6u
#define PFLASH_PFCR4_P2_DPFEN_WIDTH              1u
#define PFLASH_PFCR4_P2_DPFEN(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_DPFEN_SHIFT))&PFLASH_PFCR4_P2_DPFEN_MASK)
#define PFLASH_PFCR4_P2_M0PFE_MASK               0x10000u
#define PFLASH_PFCR4_P2_M0PFE_SHIFT              16u
#define PFLASH_PFCR4_P2_M0PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M0PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M0PFE_SHIFT))&PFLASH_PFCR4_P2_M0PFE_MASK)
#define PFLASH_PFCR4_P2_M1PFE_MASK               0x20000u
#define PFLASH_PFCR4_P2_M1PFE_SHIFT              17u
#define PFLASH_PFCR4_P2_M1PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M1PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M1PFE_SHIFT))&PFLASH_PFCR4_P2_M1PFE_MASK)
#define PFLASH_PFCR4_P2_M2PFE_MASK               0x40000u
#define PFLASH_PFCR4_P2_M2PFE_SHIFT              18u
#define PFLASH_PFCR4_P2_M2PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M2PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M2PFE_SHIFT))&PFLASH_PFCR4_P2_M2PFE_MASK)
#define PFLASH_PFCR4_P2_M3PFE_MASK               0x80000u
#define PFLASH_PFCR4_P2_M3PFE_SHIFT              19u
#define PFLASH_PFCR4_P2_M3PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M3PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M3PFE_SHIFT))&PFLASH_PFCR4_P2_M3PFE_MASK)
#define PFLASH_PFCR4_P2_M4PFE_MASK               0x100000u
#define PFLASH_PFCR4_P2_M4PFE_SHIFT              20u
#define PFLASH_PFCR4_P2_M4PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M4PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M4PFE_SHIFT))&PFLASH_PFCR4_P2_M4PFE_MASK)
#define PFLASH_PFCR4_P2_M5PFE_MASK               0x200000u
#define PFLASH_PFCR4_P2_M5PFE_SHIFT              21u
#define PFLASH_PFCR4_P2_M5PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M5PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M5PFE_SHIFT))&PFLASH_PFCR4_P2_M5PFE_MASK)
#define PFLASH_PFCR4_P2_M6PFE_MASK               0x400000u
#define PFLASH_PFCR4_P2_M6PFE_SHIFT              22u
#define PFLASH_PFCR4_P2_M6PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M6PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M6PFE_SHIFT))&PFLASH_PFCR4_P2_M6PFE_MASK)
#define PFLASH_PFCR4_P2_M7PFE_MASK               0x800000u
#define PFLASH_PFCR4_P2_M7PFE_SHIFT              23u
#define PFLASH_PFCR4_P2_M7PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M7PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M7PFE_SHIFT))&PFLASH_PFCR4_P2_M7PFE_MASK)
#define PFLASH_PFCR4_P2_M8PFE_MASK               0x1000000u
#define PFLASH_PFCR4_P2_M8PFE_SHIFT              24u
#define PFLASH_PFCR4_P2_M8PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M8PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M8PFE_SHIFT))&PFLASH_PFCR4_P2_M8PFE_MASK)
#define PFLASH_PFCR4_P2_M9PFE_MASK               0x2000000u
#define PFLASH_PFCR4_P2_M9PFE_SHIFT              25u
#define PFLASH_PFCR4_P2_M9PFE_WIDTH              1u
#define PFLASH_PFCR4_P2_M9PFE(x)                 (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M9PFE_SHIFT))&PFLASH_PFCR4_P2_M9PFE_MASK)
#define PFLASH_PFCR4_P2_M10PFE_MASK              0x4000000u
#define PFLASH_PFCR4_P2_M10PFE_SHIFT             26u
#define PFLASH_PFCR4_P2_M10PFE_WIDTH             1u
#define PFLASH_PFCR4_P2_M10PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M10PFE_SHIFT))&PFLASH_PFCR4_P2_M10PFE_MASK)
#define PFLASH_PFCR4_P2_M11PFE_MASK              0x8000000u
#define PFLASH_PFCR4_P2_M11PFE_SHIFT             27u
#define PFLASH_PFCR4_P2_M11PFE_WIDTH             1u
#define PFLASH_PFCR4_P2_M11PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M11PFE_SHIFT))&PFLASH_PFCR4_P2_M11PFE_MASK)
#define PFLASH_PFCR4_P2_M12PFE_MASK              0x10000000u
#define PFLASH_PFCR4_P2_M12PFE_SHIFT             28u
#define PFLASH_PFCR4_P2_M12PFE_WIDTH             1u
#define PFLASH_PFCR4_P2_M12PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M12PFE_SHIFT))&PFLASH_PFCR4_P2_M12PFE_MASK)
#define PFLASH_PFCR4_P2_M13PFE_MASK              0x20000000u
#define PFLASH_PFCR4_P2_M13PFE_SHIFT             29u
#define PFLASH_PFCR4_P2_M13PFE_WIDTH             1u
#define PFLASH_PFCR4_P2_M13PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M13PFE_SHIFT))&PFLASH_PFCR4_P2_M13PFE_MASK)
#define PFLASH_PFCR4_P2_M14PFE_MASK              0x40000000u
#define PFLASH_PFCR4_P2_M14PFE_SHIFT             30u
#define PFLASH_PFCR4_P2_M14PFE_WIDTH             1u
#define PFLASH_PFCR4_P2_M14PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M14PFE_SHIFT))&PFLASH_PFCR4_P2_M14PFE_MASK)
#define PFLASH_PFCR4_P2_M15PFE_MASK              0x80000000u
#define PFLASH_PFCR4_P2_M15PFE_SHIFT             31u
#define PFLASH_PFCR4_P2_M15PFE_WIDTH             1u
#define PFLASH_PFCR4_P2_M15PFE(x)                (((uint32_t)(((uint32_t)(x))<<PFLASH_PFCR4_P2_M15PFE_SHIFT))&PFLASH_PFCR4_P2_M15PFE_MASK)
/* Word0 Bit Fields */
#define PFLASH_Word0_LSTARTADDR_MASK             0xFFFFFFF0u
#define PFLASH_Word0_LSTARTADDR_SHIFT            4u
#define PFLASH_Word0_LSTARTADDR_WIDTH            28u
#define PFLASH_Word0_LSTARTADDR(x)               (((uint32_t)(((uint32_t)(x))<<PFLASH_Word0_LSTARTADDR_SHIFT))&PFLASH_Word0_LSTARTADDR_MASK)
/* Word1 Bit Fields */
#define PFLASH_Word1_PSTARTADDR_MASK             0xFFFFFFF0u
#define PFLASH_Word1_PSTARTADDR_SHIFT            4u
#define PFLASH_Word1_PSTARTADDR_WIDTH            28u
#define PFLASH_Word1_PSTARTADDR(x)               (((uint32_t)(((uint32_t)(x))<<PFLASH_Word1_PSTARTADDR_SHIFT))&PFLASH_Word1_PSTARTADDR_MASK)
/* Word2 Bit Fields */
#define PFLASH_Word2_CRDSize_MASK                0x1Fu
#define PFLASH_Word2_CRDSize_SHIFT               0u
#define PFLASH_Word2_CRDSize_WIDTH               5u
#define PFLASH_Word2_CRDSize(x)                  (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_CRDSize_SHIFT))&PFLASH_Word2_CRDSize_MASK)
#define PFLASH_Word2_M15EN_MASK                  0x10000u
#define PFLASH_Word2_M15EN_SHIFT                 16u
#define PFLASH_Word2_M15EN_WIDTH                 1u
#define PFLASH_Word2_M15EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M15EN_SHIFT))&PFLASH_Word2_M15EN_MASK)
#define PFLASH_Word2_M14EN_MASK                  0x20000u
#define PFLASH_Word2_M14EN_SHIFT                 17u
#define PFLASH_Word2_M14EN_WIDTH                 1u
#define PFLASH_Word2_M14EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M14EN_SHIFT))&PFLASH_Word2_M14EN_MASK)
#define PFLASH_Word2_M13EN_MASK                  0x40000u
#define PFLASH_Word2_M13EN_SHIFT                 18u
#define PFLASH_Word2_M13EN_WIDTH                 1u
#define PFLASH_Word2_M13EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M13EN_SHIFT))&PFLASH_Word2_M13EN_MASK)
#define PFLASH_Word2_M12EN_MASK                  0x80000u
#define PFLASH_Word2_M12EN_SHIFT                 19u
#define PFLASH_Word2_M12EN_WIDTH                 1u
#define PFLASH_Word2_M12EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M12EN_SHIFT))&PFLASH_Word2_M12EN_MASK)
#define PFLASH_Word2_M11EN_MASK                  0x100000u
#define PFLASH_Word2_M11EN_SHIFT                 20u
#define PFLASH_Word2_M11EN_WIDTH                 1u
#define PFLASH_Word2_M11EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M11EN_SHIFT))&PFLASH_Word2_M11EN_MASK)
#define PFLASH_Word2_M10EN_MASK                  0x200000u
#define PFLASH_Word2_M10EN_SHIFT                 21u
#define PFLASH_Word2_M10EN_WIDTH                 1u
#define PFLASH_Word2_M10EN(x)                    (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M10EN_SHIFT))&PFLASH_Word2_M10EN_MASK)
#define PFLASH_Word2_M9EN_MASK                   0x400000u
#define PFLASH_Word2_M9EN_SHIFT                  22u
#define PFLASH_Word2_M9EN_WIDTH                  1u
#define PFLASH_Word2_M9EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M9EN_SHIFT))&PFLASH_Word2_M9EN_MASK)
#define PFLASH_Word2_M8EN_MASK                   0x800000u
#define PFLASH_Word2_M8EN_SHIFT                  23u
#define PFLASH_Word2_M8EN_WIDTH                  1u
#define PFLASH_Word2_M8EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M8EN_SHIFT))&PFLASH_Word2_M8EN_MASK)
#define PFLASH_Word2_M7EN_MASK                   0x1000000u
#define PFLASH_Word2_M7EN_SHIFT                  24u
#define PFLASH_Word2_M7EN_WIDTH                  1u
#define PFLASH_Word2_M7EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M7EN_SHIFT))&PFLASH_Word2_M7EN_MASK)
#define PFLASH_Word2_M6EN_MASK                   0x2000000u
#define PFLASH_Word2_M6EN_SHIFT                  25u
#define PFLASH_Word2_M6EN_WIDTH                  1u
#define PFLASH_Word2_M6EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M6EN_SHIFT))&PFLASH_Word2_M6EN_MASK)
#define PFLASH_Word2_M5EN_MASK                   0x4000000u
#define PFLASH_Word2_M5EN_SHIFT                  26u
#define PFLASH_Word2_M5EN_WIDTH                  1u
#define PFLASH_Word2_M5EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M5EN_SHIFT))&PFLASH_Word2_M5EN_MASK)
#define PFLASH_Word2_M4EN_MASK                   0x8000000u
#define PFLASH_Word2_M4EN_SHIFT                  27u
#define PFLASH_Word2_M4EN_WIDTH                  1u
#define PFLASH_Word2_M4EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M4EN_SHIFT))&PFLASH_Word2_M4EN_MASK)
#define PFLASH_Word2_M3EN_MASK                   0x10000000u
#define PFLASH_Word2_M3EN_SHIFT                  28u
#define PFLASH_Word2_M3EN_WIDTH                  1u
#define PFLASH_Word2_M3EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M3EN_SHIFT))&PFLASH_Word2_M3EN_MASK)
#define PFLASH_Word2_M2EN_MASK                   0x20000000u
#define PFLASH_Word2_M2EN_SHIFT                  29u
#define PFLASH_Word2_M2EN_WIDTH                  1u
#define PFLASH_Word2_M2EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M2EN_SHIFT))&PFLASH_Word2_M2EN_MASK)
#define PFLASH_Word2_M1EN_MASK                   0x40000000u
#define PFLASH_Word2_M1EN_SHIFT                  30u
#define PFLASH_Word2_M1EN_WIDTH                  1u
#define PFLASH_Word2_M1EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M1EN_SHIFT))&PFLASH_Word2_M1EN_MASK)
#define PFLASH_Word2_M0EN_MASK                   0x80000000u
#define PFLASH_Word2_M0EN_SHIFT                  31u
#define PFLASH_Word2_M0EN_WIDTH                  1u
#define PFLASH_Word2_M0EN(x)                     (((uint32_t)(((uint32_t)(x))<<PFLASH_Word2_M0EN_SHIFT))&PFLASH_Word2_M0EN_MASK)

/*!
 * @}
 */ /* end of group PFLASH_Register_Masks */


/*!
 * @}
 */ /* end of group PFLASH_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PIT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PIT_Peripheral_Access_Layer PIT Peripheral Access Layer
 * @{
 */


/** PIT - Size of Registers Arrays */
#define PIT_TIMER_COUNT                          16u

/** PIT - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< PIT Module Control Register, offset: 0x0 */
       uint8_t RESERVED_0[220];
  __I  uint32_t LTMR64H;                           /**< PIT Upper Lifetime Timer Register, offset: 0xE0 */
  __I  uint32_t LTMR64L;                           /**< PIT Lower Lifetime Timer Register, offset: 0xE4 */
       uint8_t RESERVED_1[8];
  __IO uint32_t RTI_LDVAL;                         /**< Timer Load Value Register, offset: 0xF0 */
  __I  uint32_t RTI_CVAL;                          /**< Current Timer Value Register, offset: 0xF4 */
  __IO uint32_t RTI_TCTRL;                         /**< Timer Control Register, offset: 0xF8 */
  __IO uint32_t RTI_TFLG;                          /**< Timer Flag Register, offset: 0xFC */
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __IO uint32_t LDVAL;                             /**< Timer Load Value Register, array offset: 0x100, array step: 0x10 */
    __I  uint32_t CVAL;                              /**< Current Timer Value Register, array offset: 0x104, array step: 0x10 */
    __IO uint32_t TCTRL;                             /**< Timer Control Register, array offset: 0x108, array step: 0x10 */
    __IO uint32_t TFLG;                              /**< Timer Flag Register, array offset: 0x10C, array step: 0x10 */
  } TIMER[PIT_TIMER_COUNT];
} PIT_Type, *PIT_MemMapPtr;

 /** Number of instances of the PIT module. */
#define PIT_INSTANCE_COUNT                       (1u)


/* PIT - Peripheral instance base addresses */
/** Peripheral PIT base address */
#define PIT_BASE                                 (0xFFF84000u)
/** Peripheral PIT base pointer */
#define PIT                                      ((PIT_Type *)PIT_BASE)
/** Array initializer of PIT peripheral base addresses */
#define PIT_BASE_ADDRS                           { PIT_BASE }
/** Array initializer of PIT peripheral base pointers */
#define PIT_BASE_PTRS                            { PIT }
/** Number of interrupt vector arrays for the PIT module. */
#define PIT_IRQS_ARR_COUNT                       (1u)
/** Number of interrupt channels for the PIT module. */
#define PIT_IRQS_CH_COUNT                        (17u)
/** Interrupt vectors for the PIT peripheral type */
#define PIT_IRQS                                 { PIT_Ch0_IRQn, PIT_Ch1_IRQn, PIT_Ch2_IRQn, PIT_Ch3_IRQn, PIT_Ch4_IRQn, PIT_Ch5_IRQn, PIT_Ch6_IRQn, PIT_Ch7_IRQn, PIT_Ch8_IRQn, PIT_Ch9_IRQn, PIT_Ch10_IRQn, PIT_Ch11_IRQn, PIT_Ch12_IRQn, PIT_Ch13_IRQn, PIT_Ch14_IRQn, PIT_Ch15_IRQn, PIT_RTI_IRQn }
/* ----------------------------------------------------------------------------
   -- PIT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PIT_Register_Masks PIT Register Masks
 * @{
 */

/* MCR Bit Fields */
#define PIT_MCR_FRZ_MASK                         0x1u
#define PIT_MCR_FRZ_SHIFT                        0u
#define PIT_MCR_FRZ_WIDTH                        1u
#define PIT_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<PIT_MCR_FRZ_SHIFT))&PIT_MCR_FRZ_MASK)
#define PIT_MCR_MDIS_MASK                        0x2u
#define PIT_MCR_MDIS_SHIFT                       1u
#define PIT_MCR_MDIS_WIDTH                       1u
#define PIT_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_MCR_MDIS_SHIFT))&PIT_MCR_MDIS_MASK)
#define PIT_MCR_MDIS_RTI_MASK                    0x4u
#define PIT_MCR_MDIS_RTI_SHIFT                   2u
#define PIT_MCR_MDIS_RTI_WIDTH                   1u
#define PIT_MCR_MDIS_RTI(x)                      (((uint32_t)(((uint32_t)(x))<<PIT_MCR_MDIS_RTI_SHIFT))&PIT_MCR_MDIS_RTI_MASK)
/* LTMR64H Bit Fields */
#define PIT_LTMR64H_LTH_MASK                     0xFFFFFFFFu
#define PIT_LTMR64H_LTH_SHIFT                    0u
#define PIT_LTMR64H_LTH_WIDTH                    32u
#define PIT_LTMR64H_LTH(x)                       (((uint32_t)(((uint32_t)(x))<<PIT_LTMR64H_LTH_SHIFT))&PIT_LTMR64H_LTH_MASK)
/* LTMR64L Bit Fields */
#define PIT_LTMR64L_LTL_MASK                     0xFFFFFFFFu
#define PIT_LTMR64L_LTL_SHIFT                    0u
#define PIT_LTMR64L_LTL_WIDTH                    32u
#define PIT_LTMR64L_LTL(x)                       (((uint32_t)(((uint32_t)(x))<<PIT_LTMR64L_LTL_SHIFT))&PIT_LTMR64L_LTL_MASK)
/* RTI_LDVAL Bit Fields */
#define PIT_RTI_LDVAL_TSV_MASK                   0xFFFFFFFFu
#define PIT_RTI_LDVAL_TSV_SHIFT                  0u
#define PIT_RTI_LDVAL_TSV_WIDTH                  32u
#define PIT_RTI_LDVAL_TSV(x)                     (((uint32_t)(((uint32_t)(x))<<PIT_RTI_LDVAL_TSV_SHIFT))&PIT_RTI_LDVAL_TSV_MASK)
/* RTI_CVAL Bit Fields */
#define PIT_RTI_CVAL_TVL_MASK                    0xFFFFFFFFu
#define PIT_RTI_CVAL_TVL_SHIFT                   0u
#define PIT_RTI_CVAL_TVL_WIDTH                   32u
#define PIT_RTI_CVAL_TVL(x)                      (((uint32_t)(((uint32_t)(x))<<PIT_RTI_CVAL_TVL_SHIFT))&PIT_RTI_CVAL_TVL_MASK)
/* RTI_TCTRL Bit Fields */
#define PIT_RTI_TCTRL_TEN_MASK                   0x1u
#define PIT_RTI_TCTRL_TEN_SHIFT                  0u
#define PIT_RTI_TCTRL_TEN_WIDTH                  1u
#define PIT_RTI_TCTRL_TEN(x)                     (((uint32_t)(((uint32_t)(x))<<PIT_RTI_TCTRL_TEN_SHIFT))&PIT_RTI_TCTRL_TEN_MASK)
#define PIT_RTI_TCTRL_TIE_MASK                   0x2u
#define PIT_RTI_TCTRL_TIE_SHIFT                  1u
#define PIT_RTI_TCTRL_TIE_WIDTH                  1u
#define PIT_RTI_TCTRL_TIE(x)                     (((uint32_t)(((uint32_t)(x))<<PIT_RTI_TCTRL_TIE_SHIFT))&PIT_RTI_TCTRL_TIE_MASK)
/* RTI_TFLG Bit Fields */
#define PIT_RTI_TFLG_TIF_MASK                    0x1u
#define PIT_RTI_TFLG_TIF_SHIFT                   0u
#define PIT_RTI_TFLG_TIF_WIDTH                   1u
#define PIT_RTI_TFLG_TIF(x)                      (((uint32_t)(((uint32_t)(x))<<PIT_RTI_TFLG_TIF_SHIFT))&PIT_RTI_TFLG_TIF_MASK)
/* LDVAL Bit Fields */
#define PIT_LDVAL_TSV_MASK                       0xFFFFFFFFu
#define PIT_LDVAL_TSV_SHIFT                      0u
#define PIT_LDVAL_TSV_WIDTH                      32u
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_LDVAL_TSV_SHIFT))&PIT_LDVAL_TSV_MASK)
/* CVAL Bit Fields */
#define PIT_CVAL_TVL_MASK                        0xFFFFFFFFu
#define PIT_CVAL_TVL_SHIFT                       0u
#define PIT_CVAL_TVL_WIDTH                       32u
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_CVAL_TVL_SHIFT))&PIT_CVAL_TVL_MASK)
/* TCTRL Bit Fields */
#define PIT_TCTRL_TEN_MASK                       0x1u
#define PIT_TCTRL_TEN_SHIFT                      0u
#define PIT_TCTRL_TEN_WIDTH                      1u
#define PIT_TCTRL_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TEN_SHIFT))&PIT_TCTRL_TEN_MASK)
#define PIT_TCTRL_TIE_MASK                       0x2u
#define PIT_TCTRL_TIE_SHIFT                      1u
#define PIT_TCTRL_TIE_WIDTH                      1u
#define PIT_TCTRL_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TIE_SHIFT))&PIT_TCTRL_TIE_MASK)
#define PIT_TCTRL_CHN_MASK                       0x4u
#define PIT_TCTRL_CHN_SHIFT                      2u
#define PIT_TCTRL_CHN_WIDTH                      1u
#define PIT_TCTRL_CHN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_CHN_SHIFT))&PIT_TCTRL_CHN_MASK)
/* TFLG Bit Fields */
#define PIT_TFLG_TIF_MASK                        0x1u
#define PIT_TFLG_TIF_SHIFT                       0u
#define PIT_TFLG_TIF_WIDTH                       1u
#define PIT_TFLG_TIF(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_TFLG_TIF_SHIFT))&PIT_TFLG_TIF_MASK)

/*!
 * @}
 */ /* end of group PIT_Register_Masks */


/*!
 * @}
 */ /* end of group PIT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PLLDIG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PLLDIG_Peripheral_Access_Layer PLLDIG Peripheral Access Layer
 * @{
 */


/** PLLDIG - Size of Registers Arrays */

/** PLLDIG - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[24];
  __IO uint32_t PLLCAL3;                           /**< PLL Calibration Register 3, offset: 0x18 */
       uint8_t RESERVED_1[4];
  __IO uint32_t PLLCR;                             /**< PLLDIG PLL Control Register, offset: 0x20 */
  __IO uint32_t PLLSR;                             /**< PLLDIG PLL Status Register, offset: 0x24 */
  __IO uint32_t PLLDV;                             /**< PLLDIG PLL Divider Register, offset: 0x28 */
  __IO uint32_t PLLFM;                             /**< PLLDIG PLL Frequency Modulation Register, offset: 0x2C */
  __IO uint32_t PLLFD;                             /**< PLLDIG PLL Fractional Divide Register, offset: 0x30 */
       uint8_t RESERVED_2[4];
  __IO uint32_t PLLCAL1;                           /**< PLL Calibration Register 1, offset: 0x38 */
} PLLDIG_Type, *PLLDIG_MemMapPtr;

 /** Number of instances of the PLLDIG module. */
#define PLLDIG_INSTANCE_COUNT                    (1u)


/* PLLDIG - Peripheral instance base addresses */
/** Peripheral PLLDIG base address */
#define PLLDIG_BASE                              (0xFFFB0080u)
/** Peripheral PLLDIG base pointer */
#define PLLDIG                                   ((PLLDIG_Type *)PLLDIG_BASE)
/** Array initializer of PLLDIG peripheral base addresses */
#define PLLDIG_BASE_ADDRS                        { PLLDIG_BASE }
/** Array initializer of PLLDIG peripheral base pointers */
#define PLLDIG_BASE_PTRS                         { PLLDIG }

/* ----------------------------------------------------------------------------
   -- PLLDIG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PLLDIG_Register_Masks PLLDIG Register Masks
 * @{
 */

/* PLLCAL3 Bit Fields */
#define PLLDIG_PLLCAL3_MFDEN_MASK                0x3FFFC000u
#define PLLDIG_PLLCAL3_MFDEN_SHIFT               14u
#define PLLDIG_PLLCAL3_MFDEN_WIDTH               16u
#define PLLDIG_PLLCAL3_MFDEN(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLCAL3_MFDEN_SHIFT))&PLLDIG_PLLCAL3_MFDEN_MASK)
/* PLLCR Bit Fields */
#define PLLDIG_PLLCR_LOLRE_MASK                  0x4u
#define PLLDIG_PLLCR_LOLRE_SHIFT                 2u
#define PLLDIG_PLLCR_LOLRE_WIDTH                 1u
#define PLLDIG_PLLCR_LOLRE(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLCR_LOLRE_SHIFT))&PLLDIG_PLLCR_LOLRE_MASK)
#define PLLDIG_PLLCR_LOLIE_MASK                  0x8u
#define PLLDIG_PLLCR_LOLIE_SHIFT                 3u
#define PLLDIG_PLLCR_LOLIE_WIDTH                 1u
#define PLLDIG_PLLCR_LOLIE(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLCR_LOLIE_SHIFT))&PLLDIG_PLLCR_LOLIE_MASK)
/* PLLSR Bit Fields */
#define PLLDIG_PLLSR_LOCK_MASK                   0x4u
#define PLLDIG_PLLSR_LOCK_SHIFT                  2u
#define PLLDIG_PLLSR_LOCK_WIDTH                  1u
#define PLLDIG_PLLSR_LOCK(x)                     (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLSR_LOCK_SHIFT))&PLLDIG_PLLSR_LOCK_MASK)
#define PLLDIG_PLLSR_LOLF_MASK                   0x8u
#define PLLDIG_PLLSR_LOLF_SHIFT                  3u
#define PLLDIG_PLLSR_LOLF_WIDTH                  1u
#define PLLDIG_PLLSR_LOLF(x)                     (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLSR_LOLF_SHIFT))&PLLDIG_PLLSR_LOLF_MASK)
#define PLLDIG_PLLSR_EXTPDF_MASK                 0x80u
#define PLLDIG_PLLSR_EXTPDF_SHIFT                7u
#define PLLDIG_PLLSR_EXTPDF_WIDTH                1u
#define PLLDIG_PLLSR_EXTPDF(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLSR_EXTPDF_SHIFT))&PLLDIG_PLLSR_EXTPDF_MASK)
#define PLLDIG_PLLSR_ENPHI_MASK                  0x100u
#define PLLDIG_PLLSR_ENPHI_SHIFT                 8u
#define PLLDIG_PLLSR_ENPHI_WIDTH                 1u
#define PLLDIG_PLLSR_ENPHI(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLSR_ENPHI_SHIFT))&PLLDIG_PLLSR_ENPHI_MASK)
#define PLLDIG_PLLSR_ENPHI1_MASK                 0x200u
#define PLLDIG_PLLSR_ENPHI1_SHIFT                9u
#define PLLDIG_PLLSR_ENPHI1_WIDTH                1u
#define PLLDIG_PLLSR_ENPHI1(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLSR_ENPHI1_SHIFT))&PLLDIG_PLLSR_ENPHI1_MASK)
/* PLLDV Bit Fields */
#define PLLDIG_PLLDV_MFD_MASK                    0xFFu
#define PLLDIG_PLLDV_MFD_SHIFT                   0u
#define PLLDIG_PLLDV_MFD_WIDTH                   8u
#define PLLDIG_PLLDV_MFD(x)                      (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLDV_MFD_SHIFT))&PLLDIG_PLLDV_MFD_MASK)
#define PLLDIG_PLLDV_PREDIV_MASK                 0x7000u
#define PLLDIG_PLLDV_PREDIV_SHIFT                12u
#define PLLDIG_PLLDV_PREDIV_WIDTH                3u
#define PLLDIG_PLLDV_PREDIV(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLDV_PREDIV_SHIFT))&PLLDIG_PLLDV_PREDIV_MASK)
#define PLLDIG_PLLDV_RFDPHI_MASK                 0x3F0000u
#define PLLDIG_PLLDV_RFDPHI_SHIFT                16u
#define PLLDIG_PLLDV_RFDPHI_WIDTH                6u
#define PLLDIG_PLLDV_RFDPHI(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLDV_RFDPHI_SHIFT))&PLLDIG_PLLDV_RFDPHI_MASK)
#define PLLDIG_PLLDV_RFDPHI1_MASK                0x7E000000u
#define PLLDIG_PLLDV_RFDPHI1_SHIFT               25u
#define PLLDIG_PLLDV_RFDPHI1_WIDTH               6u
#define PLLDIG_PLLDV_RFDPHI1(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLDV_RFDPHI1_SHIFT))&PLLDIG_PLLDV_RFDPHI1_MASK)
/* PLLFM Bit Fields */
#define PLLDIG_PLLFM_INCSTP_MASK                 0x7FFu
#define PLLDIG_PLLFM_INCSTP_SHIFT                0u
#define PLLDIG_PLLFM_INCSTP_WIDTH                11u
#define PLLDIG_PLLFM_INCSTP(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFM_INCSTP_SHIFT))&PLLDIG_PLLFM_INCSTP_MASK)
#define PLLDIG_PLLFM_MODPRD_MASK                 0x3FF0000u
#define PLLDIG_PLLFM_MODPRD_SHIFT                16u
#define PLLDIG_PLLFM_MODPRD_WIDTH                10u
#define PLLDIG_PLLFM_MODPRD(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFM_MODPRD_SHIFT))&PLLDIG_PLLFM_MODPRD_MASK)
#define PLLDIG_PLLFM_SSCGBYP_MASK                0x40000000u
#define PLLDIG_PLLFM_SSCGBYP_SHIFT               30u
#define PLLDIG_PLLFM_SSCGBYP_WIDTH               1u
#define PLLDIG_PLLFM_SSCGBYP(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFM_SSCGBYP_SHIFT))&PLLDIG_PLLFM_SSCGBYP_MASK)
/* PLLFD Bit Fields */
#define PLLDIG_PLLFD_MFN_MASK                    0x7FFFu
#define PLLDIG_PLLFD_MFN_SHIFT                   0u
#define PLLDIG_PLLFD_MFN_WIDTH                   15u
#define PLLDIG_PLLFD_MFN(x)                      (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFD_MFN_SHIFT))&PLLDIG_PLLFD_MFN_MASK)
#define PLLDIG_PLLFD_DTHDIS_MASK                 0x30000u
#define PLLDIG_PLLFD_DTHDIS_SHIFT                16u
#define PLLDIG_PLLFD_DTHDIS_WIDTH                2u
#define PLLDIG_PLLFD_DTHDIS(x)                   (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFD_DTHDIS_SHIFT))&PLLDIG_PLLFD_DTHDIS_MASK)
#define PLLDIG_PLLFD_DTHRCTL_MASK                0x3C0000u
#define PLLDIG_PLLFD_DTHRCTL_SHIFT               18u
#define PLLDIG_PLLFD_DTHRCTL_WIDTH               4u
#define PLLDIG_PLLFD_DTHRCTL(x)                  (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFD_DTHRCTL_SHIFT))&PLLDIG_PLLFD_DTHRCTL_MASK)
#define PLLDIG_PLLFD_SDM3_MASK                   0x10000000u
#define PLLDIG_PLLFD_SDM3_SHIFT                  28u
#define PLLDIG_PLLFD_SDM3_WIDTH                  1u
#define PLLDIG_PLLFD_SDM3(x)                     (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFD_SDM3_SHIFT))&PLLDIG_PLLFD_SDM3_MASK)
#define PLLDIG_PLLFD_SDM2_MASK                   0x20000000u
#define PLLDIG_PLLFD_SDM2_SHIFT                  29u
#define PLLDIG_PLLFD_SDM2_WIDTH                  1u
#define PLLDIG_PLLFD_SDM2(x)                     (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFD_SDM2_SHIFT))&PLLDIG_PLLFD_SDM2_MASK)
#define PLLDIG_PLLFD_SMDEN_MASK                  0x40000000u
#define PLLDIG_PLLFD_SMDEN_SHIFT                 30u
#define PLLDIG_PLLFD_SMDEN_WIDTH                 1u
#define PLLDIG_PLLFD_SMDEN(x)                    (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLFD_SMDEN_SHIFT))&PLLDIG_PLLFD_SMDEN_MASK)
/* PLLCAL1 Bit Fields */
#define PLLDIG_PLLCAL1_BYPCAL_MASK               0x80000000u
#define PLLDIG_PLLCAL1_BYPCAL_SHIFT              31u
#define PLLDIG_PLLCAL1_BYPCAL_WIDTH              1u
#define PLLDIG_PLLCAL1_BYPCAL(x)                 (((uint32_t)(((uint32_t)(x))<<PLLDIG_PLLCAL1_BYPCAL_SHIFT))&PLLDIG_PLLCAL1_BYPCAL_MASK)

/*!
 * @}
 */ /* end of group PLLDIG_Register_Masks */


/*!
 * @}
 */ /* end of group PLLDIG_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PMCDIG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMCDIG_Peripheral_Access_Layer PMCDIG Peripheral Access Layer
 * @{
 */


/** PMCDIG - Size of Registers Arrays */

/** PMCDIG - Register Layout Typedef */
typedef struct {
  __IO uint32_t RDCR;                              /**< RAM Domain Configuration Register, offset: 0x0 */
  __IO uint32_t SGSR;                              /**< Supply Gauge Status Register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  __IO uint32_t MCR;                               /**< MISC Control Register, offset: 0x10 */
} PMCDIG_Type, *PMCDIG_MemMapPtr;

 /** Number of instances of the PMCDIG module. */
#define PMCDIG_INSTANCE_COUNT                    (1u)


/* PMCDIG - Peripheral instance base addresses */
/** Peripheral PMCDIG base address */
#define PMCDIG_BASE                              (0xFFFA0400u)
/** Peripheral PMCDIG base pointer */
#define PMCDIG                                   ((PMCDIG_Type *)PMCDIG_BASE)
/** Array initializer of PMCDIG peripheral base addresses */
#define PMCDIG_BASE_ADDRS                        { PMCDIG_BASE }
/** Array initializer of PMCDIG peripheral base pointers */
#define PMCDIG_BASE_PTRS                         { PMCDIG }

/* ----------------------------------------------------------------------------
   -- PMCDIG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PMCDIG_Register_Masks PMCDIG Register Masks
 * @{
 */

/* RDCR Bit Fields */
#define PMCDIG_RDCR_RD64_RET_MASK                0x1u
#define PMCDIG_RDCR_RD64_RET_SHIFT               0u
#define PMCDIG_RDCR_RD64_RET_WIDTH               1u
#define PMCDIG_RDCR_RD64_RET(x)                  (((uint32_t)(((uint32_t)(x))<<PMCDIG_RDCR_RD64_RET_SHIFT))&PMCDIG_RDCR_RD64_RET_MASK)
#define PMCDIG_RDCR_RD128_RET_MASK               0x10u
#define PMCDIG_RDCR_RD128_RET_SHIFT              4u
#define PMCDIG_RDCR_RD128_RET_WIDTH              1u
#define PMCDIG_RDCR_RD128_RET(x)                 (((uint32_t)(((uint32_t)(x))<<PMCDIG_RDCR_RD128_RET_SHIFT))&PMCDIG_RDCR_RD128_RET_MASK)
#define PMCDIG_RDCR_RD256_RET_MASK               0x100u
#define PMCDIG_RDCR_RD256_RET_SHIFT              8u
#define PMCDIG_RDCR_RD256_RET_WIDTH              1u
#define PMCDIG_RDCR_RD256_RET(x)                 (((uint32_t)(((uint32_t)(x))<<PMCDIG_RDCR_RD256_RET_SHIFT))&PMCDIG_RDCR_RD256_RET_MASK)
#define PMCDIG_RDCR_PAD_KEEP_EN_MASK             0x10000u
#define PMCDIG_RDCR_PAD_KEEP_EN_SHIFT            16u
#define PMCDIG_RDCR_PAD_KEEP_EN_WIDTH            1u
#define PMCDIG_RDCR_PAD_KEEP_EN(x)               (((uint32_t)(((uint32_t)(x))<<PMCDIG_RDCR_PAD_KEEP_EN_SHIFT))&PMCDIG_RDCR_PAD_KEEP_EN_MASK)
#define PMCDIG_RDCR_MEM_SLEEP_EN_MASK            0x100000u
#define PMCDIG_RDCR_MEM_SLEEP_EN_SHIFT           20u
#define PMCDIG_RDCR_MEM_SLEEP_EN_WIDTH           1u
#define PMCDIG_RDCR_MEM_SLEEP_EN(x)              (((uint32_t)(((uint32_t)(x))<<PMCDIG_RDCR_MEM_SLEEP_EN_SHIFT))&PMCDIG_RDCR_MEM_SLEEP_EN_MASK)
/* SGSR Bit Fields */
#define PMCDIG_SGSR_POR_LV_MASK                  0x1u
#define PMCDIG_SGSR_POR_LV_SHIFT                 0u
#define PMCDIG_SGSR_POR_LV_WIDTH                 1u
#define PMCDIG_SGSR_POR_LV(x)                    (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_POR_LV_SHIFT))&PMCDIG_SGSR_POR_LV_MASK)
#define PMCDIG_SGSR_LVD_LV_PD2_HOT_MASK          0x2u
#define PMCDIG_SGSR_LVD_LV_PD2_HOT_SHIFT         1u
#define PMCDIG_SGSR_LVD_LV_PD2_HOT_WIDTH         1u
#define PMCDIG_SGSR_LVD_LV_PD2_HOT(x)            (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_LV_PD2_HOT_SHIFT))&PMCDIG_SGSR_LVD_LV_PD2_HOT_MASK)
#define PMCDIG_SGSR_LVD_LV_PD2_COLD_MASK         0x4u
#define PMCDIG_SGSR_LVD_LV_PD2_COLD_SHIFT        2u
#define PMCDIG_SGSR_LVD_LV_PD2_COLD_WIDTH        1u
#define PMCDIG_SGSR_LVD_LV_PD2_COLD(x)           (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_LV_PD2_COLD_SHIFT))&PMCDIG_SGSR_LVD_LV_PD2_COLD_MASK)
#define PMCDIG_SGSR_LVD_LV_PD1_hot_MASK          0x8u
#define PMCDIG_SGSR_LVD_LV_PD1_hot_SHIFT         3u
#define PMCDIG_SGSR_LVD_LV_PD1_hot_WIDTH         1u
#define PMCDIG_SGSR_LVD_LV_PD1_hot(x)            (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_LV_PD1_hot_SHIFT))&PMCDIG_SGSR_LVD_LV_PD1_hot_MASK)
#define PMCDIG_SGSR_LVD_LV_PD0_hot_MASK          0x10u
#define PMCDIG_SGSR_LVD_LV_PD0_hot_SHIFT         4u
#define PMCDIG_SGSR_LVD_LV_PD0_hot_WIDTH         1u
#define PMCDIG_SGSR_LVD_LV_PD0_hot(x)            (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_LV_PD0_hot_SHIFT))&PMCDIG_SGSR_LVD_LV_PD0_hot_MASK)
#define PMCDIG_SGSR_LVD_IO_A_LO_MASK             0x20u
#define PMCDIG_SGSR_LVD_IO_A_LO_SHIFT            5u
#define PMCDIG_SGSR_LVD_IO_A_LO_WIDTH            1u
#define PMCDIG_SGSR_LVD_IO_A_LO(x)               (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_IO_A_LO_SHIFT))&PMCDIG_SGSR_LVD_IO_A_LO_MASK)
#define PMCDIG_SGSR_LVD_IO_A_HI_MASK             0x40u
#define PMCDIG_SGSR_LVD_IO_A_HI_SHIFT            6u
#define PMCDIG_SGSR_LVD_IO_A_HI_WIDTH            1u
#define PMCDIG_SGSR_LVD_IO_A_HI(x)               (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_IO_A_HI_SHIFT))&PMCDIG_SGSR_LVD_IO_A_HI_MASK)
#define PMCDIG_SGSR_LVD_FLASH_MASK               0x80u
#define PMCDIG_SGSR_LVD_FLASH_SHIFT              7u
#define PMCDIG_SGSR_LVD_FLASH_WIDTH              1u
#define PMCDIG_SGSR_LVD_FLASH(x)                 (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LVD_FLASH_SHIFT))&PMCDIG_SGSR_LVD_FLASH_MASK)
#define PMCDIG_SGSR_HVD_LV_COLD_MASK             0x200u
#define PMCDIG_SGSR_HVD_LV_COLD_SHIFT            9u
#define PMCDIG_SGSR_HVD_LV_COLD_WIDTH            1u
#define PMCDIG_SGSR_HVD_LV_COLD(x)               (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_HVD_LV_COLD_SHIFT))&PMCDIG_SGSR_HVD_LV_COLD_MASK)
#define PMCDIG_SGSR_LP_STATUS_MASK               0x1800u
#define PMCDIG_SGSR_LP_STATUS_SHIFT              11u
#define PMCDIG_SGSR_LP_STATUS_WIDTH              2u
#define PMCDIG_SGSR_LP_STATUS(x)                 (((uint32_t)(((uint32_t)(x))<<PMCDIG_SGSR_LP_STATUS_SHIFT))&PMCDIG_SGSR_LP_STATUS_MASK)
/* MCR Bit Fields */
#define PMCDIG_MCR_LVD_IO_HI_REE_MASK            0x100u
#define PMCDIG_MCR_LVD_IO_HI_REE_SHIFT           8u
#define PMCDIG_MCR_LVD_IO_HI_REE_WIDTH           1u
#define PMCDIG_MCR_LVD_IO_HI_REE(x)              (((uint32_t)(((uint32_t)(x))<<PMCDIG_MCR_LVD_IO_HI_REE_SHIFT))&PMCDIG_MCR_LVD_IO_HI_REE_MASK)
#define PMCDIG_MCR_HVD_REE_MASK                  0x400u
#define PMCDIG_MCR_HVD_REE_SHIFT                 10u
#define PMCDIG_MCR_HVD_REE_WIDTH                 1u
#define PMCDIG_MCR_HVD_REE(x)                    (((uint32_t)(((uint32_t)(x))<<PMCDIG_MCR_HVD_REE_SHIFT))&PMCDIG_MCR_HVD_REE_MASK)
#define PMCDIG_MCR_LVD_PD2_COLD_REE_MASK         0x800u
#define PMCDIG_MCR_LVD_PD2_COLD_REE_SHIFT        11u
#define PMCDIG_MCR_LVD_PD2_COLD_REE_WIDTH        1u
#define PMCDIG_MCR_LVD_PD2_COLD_REE(x)           (((uint32_t)(((uint32_t)(x))<<PMCDIG_MCR_LVD_PD2_COLD_REE_SHIFT))&PMCDIG_MCR_LVD_PD2_COLD_REE_MASK)
#define PMCDIG_MCR_FLASH_LP_FAST_EXIT_DIS_MASK   0x8000u
#define PMCDIG_MCR_FLASH_LP_FAST_EXIT_DIS_SHIFT  15u
#define PMCDIG_MCR_FLASH_LP_FAST_EXIT_DIS_WIDTH  1u
#define PMCDIG_MCR_FLASH_LP_FAST_EXIT_DIS(x)     (((uint32_t)(((uint32_t)(x))<<PMCDIG_MCR_FLASH_LP_FAST_EXIT_DIS_SHIFT))&PMCDIG_MCR_FLASH_LP_FAST_EXIT_DIS_MASK)
#define PMCDIG_MCR_LP_ST_CHG_IN_PRGRS_MASK       0x10000u
#define PMCDIG_MCR_LP_ST_CHG_IN_PRGRS_SHIFT      16u
#define PMCDIG_MCR_LP_ST_CHG_IN_PRGRS_WIDTH      1u
#define PMCDIG_MCR_LP_ST_CHG_IN_PRGRS(x)         (((uint32_t)(((uint32_t)(x))<<PMCDIG_MCR_LP_ST_CHG_IN_PRGRS_SHIFT))&PMCDIG_MCR_LP_ST_CHG_IN_PRGRS_MASK)

/*!
 * @}
 */ /* end of group PMCDIG_Register_Masks */


/*!
 * @}
 */ /* end of group PMCDIG_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- PRAMC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PRAMC_Peripheral_Access_Layer PRAMC Peripheral Access Layer
 * @{
 */


/** PRAMC - Size of Registers Arrays */

/** PRAMC - Register Layout Typedef */
typedef struct {
  __IO uint32_t PRCR1;                             /**< Platform RAM Configuration Register 1, offset: 0x0 */
} PRAMC_Type, *PRAMC_MemMapPtr;

 /** Number of instances of the PRAMC module. */
#define PRAMC_INSTANCE_COUNT                     (3u)


/* PRAMC - Peripheral instance base addresses */
/** Peripheral PRAMC_0 base address */
#define PRAMC_0_BASE                             (0xFC020000u)
/** Peripheral PRAMC_0 base pointer */
#define PRAMC_0                                  ((PRAMC_Type *)PRAMC_0_BASE)
/** Peripheral PRAMC_1 base address */
#define PRAMC_1_BASE                             (0xFC024000u)
/** Peripheral PRAMC_1 base pointer */
#define PRAMC_1                                  ((PRAMC_Type *)PRAMC_1_BASE)
/** Peripheral PRAMC_2 base address */
#define PRAMC_2_BASE                             (0xFC02C000u)
/** Peripheral PRAMC_2 base pointer */
#define PRAMC_2                                  ((PRAMC_Type *)PRAMC_2_BASE)
/** Array initializer of PRAMC peripheral base addresses */
#define PRAMC_BASE_ADDRS                         { PRAMC_0_BASE, PRAMC_1_BASE, PRAMC_2_BASE }
/** Array initializer of PRAMC peripheral base pointers */
#define PRAMC_BASE_PTRS                          { PRAMC_0, PRAMC_1, PRAMC_2 }

/* ----------------------------------------------------------------------------
   -- PRAMC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup PRAMC_Register_Masks PRAMC Register Masks
 * @{
 */

/* PRCR1 Bit Fields */
#define PRAMC_PRCR1_FT_DIS_MASK                  0x1u
#define PRAMC_PRCR1_FT_DIS_SHIFT                 0u
#define PRAMC_PRCR1_FT_DIS_WIDTH                 1u
#define PRAMC_PRCR1_FT_DIS(x)                    (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_FT_DIS_SHIFT))&PRAMC_PRCR1_FT_DIS_MASK)
#define PRAMC_PRCR1_P0_BO_DIS_MASK               0x40u
#define PRAMC_PRCR1_P0_BO_DIS_SHIFT              6u
#define PRAMC_PRCR1_P0_BO_DIS_WIDTH              1u
#define PRAMC_PRCR1_P0_BO_DIS(x)                 (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_P0_BO_DIS_SHIFT))&PRAMC_PRCR1_P0_BO_DIS_MASK)
#define PRAMC_PRCR1_P1_BO_DIS_MASK               0x80u
#define PRAMC_PRCR1_P1_BO_DIS_SHIFT              7u
#define PRAMC_PRCR1_P1_BO_DIS_WIDTH              1u
#define PRAMC_PRCR1_P1_BO_DIS(x)                 (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_P1_BO_DIS_SHIFT))&PRAMC_PRCR1_P1_BO_DIS_MASK)
#define PRAMC_PRCR1_PRI_MASK                     0x300u
#define PRAMC_PRCR1_PRI_SHIFT                    8u
#define PRAMC_PRCR1_PRI_WIDTH                    2u
#define PRAMC_PRCR1_PRI(x)                       (((uint32_t)(((uint32_t)(x))<<PRAMC_PRCR1_PRI_SHIFT))&PRAMC_PRCR1_PRI_MASK)

/*!
 * @}
 */ /* end of group PRAMC_Register_Masks */


/*!
 * @}
 */ /* end of group PRAMC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- RTC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Peripheral_Access_Layer RTC Peripheral Access Layer
 * @{
 */


/** RTC - Size of Registers Arrays */

/** RTC - Register Layout Typedef */
typedef struct {
  __IO uint32_t RTCSUPV;                           /**< RTC Supervisor Control register, offset: 0x0 */
  __IO uint32_t RTCC;                              /**< RTC Control register, offset: 0x4 */
  __IO uint32_t RTCS;                              /**< RTC Status register, offset: 0x8 */
  __I  uint32_t RTCCNT;                            /**< RTC Counter register, offset: 0xC */
  __IO uint32_t APIVAL;                            /**< API Compare Value register, offset: 0x10 */
  __IO uint32_t RTCVAL;                            /**< RTC Compare Value register, offset: 0x14 */
  __IO uint32_t ANLCMP_CNT;                        /**< RTC Analogue comparator count register, offset: 0x18 */
} RTC_Type, *RTC_MemMapPtr;

 /** Number of instances of the RTC module. */
#define RTC_INSTANCE_COUNT                       (1u)


/* RTC - Peripheral instance base addresses */
/** Peripheral RTC base address */
#define RTC_BASE                                 (0xFFFF0000u)
/** Peripheral RTC base pointer */
#define RTC                                      ((RTC_Type *)RTC_BASE)
/** Array initializer of RTC peripheral base addresses */
#define RTC_BASE_ADDRS                           { RTC_BASE }
/** Array initializer of RTC peripheral base pointers */
#define RTC_BASE_PTRS                            { RTC }
/** Number of interrupt vector arrays for the RTC module. */
#define RTC_IRQS_ARR_COUNT                       (2u)
/** Number of interrupt channels for the RTC module. */
#define RTC_IRQS_CH_COUNT                        (1u)
/** Number of interrupt channels for the API type of RTC module. */
#define RTC_API_IRQS_CH_COUNT                    (1u)
/** Interrupt vectors for the RTC peripheral type */
#define RTC_IRQS                                 { RTC0_IRQn }
#define RTC_API_IRQS                             { API0_IRQn }

/* ----------------------------------------------------------------------------
   -- RTC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup RTC_Register_Masks RTC Register Masks
 * @{
 */

/* RTCSUPV Bit Fields */
#define RTC_RTCSUPV_SUPV_MASK                    0x80000000u
#define RTC_RTCSUPV_SUPV_SHIFT                   31u
#define RTC_RTCSUPV_SUPV_WIDTH                   1u
#define RTC_RTCSUPV_SUPV(x)                      (((uint32_t)(((uint32_t)(x))<<RTC_RTCSUPV_SUPV_SHIFT))&RTC_RTCSUPV_SUPV_MASK)
/* RTCC Bit Fields */
#define RTC_RTCC_TRIG_EN_MASK                    0x1u
#define RTC_RTCC_TRIG_EN_SHIFT                   0u
#define RTC_RTCC_TRIG_EN_WIDTH                   1u
#define RTC_RTCC_TRIG_EN(x)                      (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_TRIG_EN_SHIFT))&RTC_RTCC_TRIG_EN_MASK)
#define RTC_RTCC_DIV32EN_MASK                    0x400u
#define RTC_RTCC_DIV32EN_SHIFT                   10u
#define RTC_RTCC_DIV32EN_WIDTH                   1u
#define RTC_RTCC_DIV32EN(x)                      (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_DIV32EN_SHIFT))&RTC_RTCC_DIV32EN_MASK)
#define RTC_RTCC_DIV512EN_MASK                   0x800u
#define RTC_RTCC_DIV512EN_SHIFT                  11u
#define RTC_RTCC_DIV512EN_WIDTH                  1u
#define RTC_RTCC_DIV512EN(x)                     (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_DIV512EN_SHIFT))&RTC_RTCC_DIV512EN_MASK)
#define RTC_RTCC_CLKSEL_MASK                     0x3000u
#define RTC_RTCC_CLKSEL_SHIFT                    12u
#define RTC_RTCC_CLKSEL_WIDTH                    2u
#define RTC_RTCC_CLKSEL(x)                       (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_CLKSEL_SHIFT))&RTC_RTCC_CLKSEL_MASK)
#define RTC_RTCC_APIIE_MASK                      0x4000u
#define RTC_RTCC_APIIE_SHIFT                     14u
#define RTC_RTCC_APIIE_WIDTH                     1u
#define RTC_RTCC_APIIE(x)                        (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_APIIE_SHIFT))&RTC_RTCC_APIIE_MASK)
#define RTC_RTCC_APIEN_MASK                      0x8000u
#define RTC_RTCC_APIEN_SHIFT                     15u
#define RTC_RTCC_APIEN_WIDTH                     1u
#define RTC_RTCC_APIEN(x)                        (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_APIEN_SHIFT))&RTC_RTCC_APIEN_MASK)
#define RTC_RTCC_ROVREN_MASK                     0x10000000u
#define RTC_RTCC_ROVREN_SHIFT                    28u
#define RTC_RTCC_ROVREN_WIDTH                    1u
#define RTC_RTCC_ROVREN(x)                       (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_ROVREN_SHIFT))&RTC_RTCC_ROVREN_MASK)
#define RTC_RTCC_FRZEN_MASK                      0x20000000u
#define RTC_RTCC_FRZEN_SHIFT                     29u
#define RTC_RTCC_FRZEN_WIDTH                     1u
#define RTC_RTCC_FRZEN(x)                        (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_FRZEN_SHIFT))&RTC_RTCC_FRZEN_MASK)
#define RTC_RTCC_RTCIE_MASK                      0x40000000u
#define RTC_RTCC_RTCIE_SHIFT                     30u
#define RTC_RTCC_RTCIE_WIDTH                     1u
#define RTC_RTCC_RTCIE(x)                        (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_RTCIE_SHIFT))&RTC_RTCC_RTCIE_MASK)
#define RTC_RTCC_CNTEN_MASK                      0x80000000u
#define RTC_RTCC_CNTEN_SHIFT                     31u
#define RTC_RTCC_CNTEN_WIDTH                     1u
#define RTC_RTCC_CNTEN(x)                        (((uint32_t)(((uint32_t)(x))<<RTC_RTCC_CNTEN_SHIFT))&RTC_RTCC_CNTEN_MASK)
/* RTCS Bit Fields */
#define RTC_RTCS_ROVRF_MASK                      0x400u
#define RTC_RTCS_ROVRF_SHIFT                     10u
#define RTC_RTCS_ROVRF_WIDTH                     1u
#define RTC_RTCS_ROVRF(x)                        (((uint32_t)(((uint32_t)(x))<<RTC_RTCS_ROVRF_SHIFT))&RTC_RTCS_ROVRF_MASK)
#define RTC_RTCS_APIF_MASK                       0x2000u
#define RTC_RTCS_APIF_SHIFT                      13u
#define RTC_RTCS_APIF_WIDTH                      1u
#define RTC_RTCS_APIF(x)                         (((uint32_t)(((uint32_t)(x))<<RTC_RTCS_APIF_SHIFT))&RTC_RTCS_APIF_MASK)
#define RTC_RTCS_INV_ANL_MASK                    0x10000u
#define RTC_RTCS_INV_ANL_SHIFT                   16u
#define RTC_RTCS_INV_ANL_WIDTH                   1u
#define RTC_RTCS_INV_ANL(x)                      (((uint32_t)(((uint32_t)(x))<<RTC_RTCS_INV_ANL_SHIFT))&RTC_RTCS_INV_ANL_MASK)
#define RTC_RTCS_INV_API_MASK                    0x20000u
#define RTC_RTCS_INV_API_SHIFT                   17u
#define RTC_RTCS_INV_API_WIDTH                   1u
#define RTC_RTCS_INV_API(x)                      (((uint32_t)(((uint32_t)(x))<<RTC_RTCS_INV_API_SHIFT))&RTC_RTCS_INV_API_MASK)
#define RTC_RTCS_INV_RTC_MASK                    0x40000u
#define RTC_RTCS_INV_RTC_SHIFT                   18u
#define RTC_RTCS_INV_RTC_WIDTH                   1u
#define RTC_RTCS_INV_RTC(x)                      (((uint32_t)(((uint32_t)(x))<<RTC_RTCS_INV_RTC_SHIFT))&RTC_RTCS_INV_RTC_MASK)
#define RTC_RTCS_RTCF_MASK                       0x20000000u
#define RTC_RTCS_RTCF_SHIFT                      29u
#define RTC_RTCS_RTCF_WIDTH                      1u
#define RTC_RTCS_RTCF(x)                         (((uint32_t)(((uint32_t)(x))<<RTC_RTCS_RTCF_SHIFT))&RTC_RTCS_RTCF_MASK)
/* RTCCNT Bit Fields */
#define RTC_RTCCNT_RTCCNT_MASK                   0xFFFFFFFFu
#define RTC_RTCCNT_RTCCNT_SHIFT                  0u
#define RTC_RTCCNT_RTCCNT_WIDTH                  32u
#define RTC_RTCCNT_RTCCNT(x)                     (((uint32_t)(((uint32_t)(x))<<RTC_RTCCNT_RTCCNT_SHIFT))&RTC_RTCCNT_RTCCNT_MASK)
/* APIVAL Bit Fields */
#define RTC_APIVAL_APIVAL_MASK                   0xFFFFFFFFu
#define RTC_APIVAL_APIVAL_SHIFT                  0u
#define RTC_APIVAL_APIVAL_WIDTH                  32u
#define RTC_APIVAL_APIVAL(x)                     (((uint32_t)(((uint32_t)(x))<<RTC_APIVAL_APIVAL_SHIFT))&RTC_APIVAL_APIVAL_MASK)
/* RTCVAL Bit Fields */
#define RTC_RTCVAL_RTCVAL_MASK                   0xFFFFFFFFu
#define RTC_RTCVAL_RTCVAL_SHIFT                  0u
#define RTC_RTCVAL_RTCVAL_WIDTH                  32u
#define RTC_RTCVAL_RTCVAL(x)                     (((uint32_t)(((uint32_t)(x))<<RTC_RTCVAL_RTCVAL_SHIFT))&RTC_RTCVAL_RTCVAL_MASK)
/* ANLCMP_CNT Bit Fields */
#define RTC_ANLCMP_CNT_ANLCMP_MASK               0xFFFFFFFFu
#define RTC_ANLCMP_CNT_ANLCMP_SHIFT              0u
#define RTC_ANLCMP_CNT_ANLCMP_WIDTH              32u
#define RTC_ANLCMP_CNT_ANLCMP(x)                 (((uint32_t)(((uint32_t)(x))<<RTC_ANLCMP_CNT_ANLCMP_SHIFT))&RTC_ANLCMP_CNT_ANLCMP_MASK)

/*!
 * @}
 */ /* end of group RTC_Register_Masks */


/*!
 * @}
 */ /* end of group RTC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SEMA42 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SEMA42_Peripheral_Access_Layer SEMA42 Peripheral Access Layer
 * @{
 */


/** SEMA42 - Size of Registers Arrays */
#define SEMA42_GATE_COUNT                        16u

/** SEMA42 - Register Layout Typedef */
typedef struct {
  __IO uint8_t GATE[SEMA42_GATE_COUNT];            /**< Gate Register, array offset: 0x0, array step: 0x1 */
       uint8_t RESERVED_0[48];
  union {                                          /* offset: 0x40 */
    __I  uint16_t R;                                 /**< Reset Gate Read, offset: 0x40 */
    __O  uint16_t W;                                 /**< Reset Gate Write, offset: 0x40 */
  } RSTGT;
} SEMA42_Type, *SEMA42_MemMapPtr;

 /** Number of instances of the SEMA42 module. */
#define SEMA42_INSTANCE_COUNT                    (1u)


/* SEMA42 - Peripheral instance base addresses */
/** Peripheral SEMA42 base address */
#define SEMA42_BASE                              (0xFC03C000u)
/** Peripheral SEMA42 base pointer */
#define SEMA42                                   ((SEMA42_Type *)SEMA42_BASE)
/** Array initializer of SEMA42 peripheral base addresses */
#define SEMA42_BASE_ADDRS                        { SEMA42_BASE }
/** Array initializer of SEMA42 peripheral base pointers */
#define SEMA42_BASE_PTRS                         { SEMA42 }

/* ----------------------------------------------------------------------------
   -- SEMA42 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SEMA42_Register_Masks SEMA42 Register Masks
 * @{
 */

/* GATE Bit Fields */
#define SEMA42_GATE_GTFSM_MASK                   0xFu
#define SEMA42_GATE_GTFSM_SHIFT                  0u
#define SEMA42_GATE_GTFSM_WIDTH                  4u
#define SEMA42_GATE_GTFSM(x)                     (((uint8_t)(((uint8_t)(x))<<SEMA42_GATE_GTFSM_SHIFT))&SEMA42_GATE_GTFSM_MASK)
/* RSTGT_R Bit Fields */
#define SEMA42_RSTGT_R_RSTGTN_MASK               0xFFu
#define SEMA42_RSTGT_R_RSTGTN_SHIFT              0u
#define SEMA42_RSTGT_R_RSTGTN_WIDTH              8u
#define SEMA42_RSTGT_R_RSTGTN(x)                 (((uint16_t)(((uint16_t)(x))<<SEMA42_RSTGT_R_RSTGTN_SHIFT))&SEMA42_RSTGT_R_RSTGTN_MASK)
#define SEMA42_RSTGT_R_RSTGMS_MASK               0xF00u
#define SEMA42_RSTGT_R_RSTGMS_SHIFT              8u
#define SEMA42_RSTGT_R_RSTGMS_WIDTH              4u
#define SEMA42_RSTGT_R_RSTGMS(x)                 (((uint16_t)(((uint16_t)(x))<<SEMA42_RSTGT_R_RSTGMS_SHIFT))&SEMA42_RSTGT_R_RSTGMS_MASK)
#define SEMA42_RSTGT_R_RSTGSM_MASK               0x3000u
#define SEMA42_RSTGT_R_RSTGSM_SHIFT              12u
#define SEMA42_RSTGT_R_RSTGSM_WIDTH              2u
#define SEMA42_RSTGT_R_RSTGSM(x)                 (((uint16_t)(((uint16_t)(x))<<SEMA42_RSTGT_R_RSTGSM_SHIFT))&SEMA42_RSTGT_R_RSTGSM_MASK)
#define SEMA42_RSTGT_R_ROZ_MASK                  0xC000u
#define SEMA42_RSTGT_R_ROZ_SHIFT                 14u
#define SEMA42_RSTGT_R_ROZ_WIDTH                 2u
#define SEMA42_RSTGT_R_ROZ(x)                    (((uint16_t)(((uint16_t)(x))<<SEMA42_RSTGT_R_ROZ_SHIFT))&SEMA42_RSTGT_R_ROZ_MASK)
/* RSTGT_W Bit Fields */
#define SEMA42_RSTGT_W_RSTGTN_MASK               0xFFu
#define SEMA42_RSTGT_W_RSTGTN_SHIFT              0u
#define SEMA42_RSTGT_W_RSTGTN_WIDTH              8u
#define SEMA42_RSTGT_W_RSTGTN(x)                 (((uint16_t)(((uint16_t)(x))<<SEMA42_RSTGT_W_RSTGTN_SHIFT))&SEMA42_RSTGT_W_RSTGTN_MASK)
#define SEMA42_RSTGT_W_RSTGDP_MASK               0xFF00u
#define SEMA42_RSTGT_W_RSTGDP_SHIFT              8u
#define SEMA42_RSTGT_W_RSTGDP_WIDTH              8u
#define SEMA42_RSTGT_W_RSTGDP(x)                 (((uint16_t)(((uint16_t)(x))<<SEMA42_RSTGT_W_RSTGDP_SHIFT))&SEMA42_RSTGT_W_RSTGDP_MASK)

/*!
 * @}
 */ /* end of group SEMA42_Register_Masks */


/*!
 * @}
 */ /* end of group SEMA42_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SIRC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIRC_Peripheral_Access_Layer SIRC Peripheral Access Layer
 * @{
 */


/** SIRC - Size of Registers Arrays */

/** SIRC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< Control register, offset: 0x0 */
} SIRC_Type, *SIRC_MemMapPtr;

 /** Number of instances of the SIRC module. */
#define SIRC_INSTANCE_COUNT                      (1u)


/* SIRC - Peripheral instance base addresses */
/** Peripheral SIRC base address */
#define SIRC_BASE                                (0xFFFB00C0u)
/** Peripheral SIRC base pointer */
#define SIRC                                     ((SIRC_Type *)SIRC_BASE)
/** Array initializer of SIRC peripheral base addresses */
#define SIRC_BASE_ADDRS                          { SIRC_BASE }
/** Array initializer of SIRC peripheral base pointers */
#define SIRC_BASE_PTRS                           { SIRC }

/* ----------------------------------------------------------------------------
   -- SIRC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIRC_Register_Masks SIRC Register Masks
 * @{
 */

/* CTL Bit Fields */
#define SIRC_CTL_SIRCS_MASK                      0x10u
#define SIRC_CTL_SIRCS_SHIFT                     4u
#define SIRC_CTL_SIRCS_WIDTH                     1u
#define SIRC_CTL_SIRCS(x)                        (((uint32_t)(((uint32_t)(x))<<SIRC_CTL_SIRCS_SHIFT))&SIRC_CTL_SIRCS_MASK)
#define SIRC_CTL_SIRCDIV_MASK                    0x1F00u
#define SIRC_CTL_SIRCDIV_SHIFT                   8u
#define SIRC_CTL_SIRCDIV_WIDTH                   5u
#define SIRC_CTL_SIRCDIV(x)                      (((uint32_t)(((uint32_t)(x))<<SIRC_CTL_SIRCDIV_SHIFT))&SIRC_CTL_SIRCDIV_MASK)

/*!
 * @}
 */ /* end of group SIRC_Register_Masks */


/*!
 * @}
 */ /* end of group SIRC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SIUL2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIUL2_Peripheral_Access_Layer SIUL2 Peripheral Access Layer
 * @{
 */


/** SIUL2 - Size of Registers Arrays */
#define SIUL2_IFMCR_COUNT                        32u
#define SIUL2_MSCR_COUNT                         264u
#define SIUL2_IMCR_COUNT                         512u
#define SIUL2_GPDO_COUNT                         66u
#define SIUL2_GPDI_COUNT                         66u
#define SIUL2_PGPDO_COUNT                        32u
#define SIUL2_PGPDI_COUNT                        32u
#define SIUL2_MPGPDO_COUNT                       32u

/** SIUL2 - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[4];
  __I  uint32_t MIDR1;                             /**< SIUL2 MCU ID Register #1, offset: 0x4 */
  __I  uint32_t MIDR2;                             /**< SIUL2 MCU ID Register #2, offset: 0x8 */
       uint8_t RESERVED_1[4];
  __IO uint32_t ISR0;                              /**< SIUL2 Interrupt Status Flag Register0, offset: 0x10 */
       uint8_t RESERVED_2[4];
  __IO uint32_t IRER0;                             /**< SIUL2 Interrupt Request Enable Register0, offset: 0x18 */
       uint8_t RESERVED_3[4];
  __IO uint32_t IRSR0;                             /**< SIUL2 Interrupt Request Select Register0, offset: 0x20 */
       uint8_t RESERVED_4[4];
  __IO uint32_t IREER0;                            /**< SIUL2 Interrupt Rising-Edge Event Enable Register 0, offset: 0x28 */
       uint8_t RESERVED_5[4];
  __IO uint32_t IFEER0;                            /**< SIUL2 Interrupt Falling-Edge Event Enable Register 0, offset: 0x30 */
       uint8_t RESERVED_6[4];
  __IO uint32_t IFER0;                             /**< SIUL2 Interrupt Filter Enable Register 0, offset: 0x38 */
       uint8_t RESERVED_7[4];
  __IO uint32_t IFMCR[SIUL2_IFMCR_COUNT];          /**< SIUL2 Interrupt Filter Maximum Counter Register, array offset: 0x40, array step: 0x4 */
  __IO uint32_t IFCPR;                             /**< SIUL2 Interrupt Filter Clock Prescaler Register, offset: 0xC0 */
       uint8_t RESERVED_8[380];
  __IO uint32_t MSCR[SIUL2_MSCR_COUNT];            /**< SIUL2 Multiplexed Signal Configuration Register, array offset: 0x240, array step: 0x4 */
       uint8_t RESERVED_9[992];
  __IO uint32_t IMCR[SIUL2_IMCR_COUNT];            /**< SIUL2 Input Multiplexed Signal Configuration Register, array offset: 0xA40, array step: 0x4 */
       uint8_t RESERVED_10[192];
  __IO uint32_t GPDO[SIUL2_GPDO_COUNT];            /**< SIUL2 GPIO Pad Data Output Register, array offset: 0x1300, array step: 0x4 */
       uint8_t RESERVED_11[248];
  __I  uint32_t GPDI[SIUL2_GPDI_COUNT];            /**< SIUL2 GPIO Pad Data Input Register, array offset: 0x1500, array step: 0x4 */
       uint8_t RESERVED_12[248];
  __IO uint16_t PGPDO[SIUL2_PGPDO_COUNT];          /**< SIUL2 Parallel GPIO Pad Data Out Register, array offset: 0x1700, array step: 0x2 */
  __I  uint16_t PGPDI[SIUL2_PGPDI_COUNT];          /**< SIUL2 Parallel GPIO Pad Data In Register, array offset: 0x1740, array step: 0x2 */
  __O  uint32_t MPGPDO[SIUL2_MPGPDO_COUNT];        /**< SIUL2 Masked Parallel GPIO Pad Data Out Register, array offset: 0x1780, array step: 0x4 */
} SIUL2_Type, *SIUL2_MemMapPtr;

 /** Number of instances of the SIUL2 module. */
#define SIUL2_INSTANCE_COUNT                     (1u)


/* SIUL2 - Peripheral instance base addresses */
/** Peripheral SIUL2 base address */
#define SIUL2_BASE                               (0xFFFC0000u)
/** Peripheral SIUL2 base pointer */
#define SIUL2                                    ((SIUL2_Type *)SIUL2_BASE)
/** Array initializer of SIUL2 peripheral base addresses */
#define SIUL2_BASE_ADDRS                         { SIUL2_BASE }
/** Array initializer of SIUL2 peripheral base pointers */
#define SIUL2_BASE_PTRS                          { SIUL2 }

/* ----------------------------------------------------------------------------
   -- SIUL2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SIUL2_Register_Masks SIUL2 Register Masks
 * @{
 */

/* MIDR1 Bit Fields */
#define SIUL2_MIDR1_MINOR_MASK_MASK              0xFu
#define SIUL2_MIDR1_MINOR_MASK_SHIFT             0u
#define SIUL2_MIDR1_MINOR_MASK_WIDTH             4u
#define SIUL2_MIDR1_MINOR_MASK(x)                (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_MINOR_MASK_SHIFT))&SIUL2_MIDR1_MINOR_MASK_MASK)
#define SIUL2_MIDR1_MAJOR_MASK_MASK              0xF0u
#define SIUL2_MIDR1_MAJOR_MASK_SHIFT             4u
#define SIUL2_MIDR1_MAJOR_MASK_WIDTH             4u
#define SIUL2_MIDR1_MAJOR_MASK(x)                (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_MAJOR_MASK_SHIFT))&SIUL2_MIDR1_MAJOR_MASK_MASK)
#define SIUL2_MIDR1_PKG_MASK                     0x7C00u
#define SIUL2_MIDR1_PKG_SHIFT                    10u
#define SIUL2_MIDR1_PKG_WIDTH                    5u
#define SIUL2_MIDR1_PKG(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_PKG_SHIFT))&SIUL2_MIDR1_PKG_MASK)
#define SIUL2_MIDR1_PARTNUM_MASK                 0xFFFF0000u
#define SIUL2_MIDR1_PARTNUM_SHIFT                16u
#define SIUL2_MIDR1_PARTNUM_WIDTH                16u
#define SIUL2_MIDR1_PARTNUM(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR1_PARTNUM_SHIFT))&SIUL2_MIDR1_PARTNUM_MASK)
/* MIDR2 Bit Fields */
#define SIUL2_MIDR2_PARTNUM_MASK                 0xFF00u
#define SIUL2_MIDR2_PARTNUM_SHIFT                8u
#define SIUL2_MIDR2_PARTNUM_WIDTH                8u
#define SIUL2_MIDR2_PARTNUM(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_PARTNUM_SHIFT))&SIUL2_MIDR2_PARTNUM_MASK)
#define SIUL2_MIDR2_FLASH_SIZE_2_MASK            0x7800000u
#define SIUL2_MIDR2_FLASH_SIZE_2_SHIFT           23u
#define SIUL2_MIDR2_FLASH_SIZE_2_WIDTH           4u
#define SIUL2_MIDR2_FLASH_SIZE_2(x)              (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_FLASH_SIZE_2_SHIFT))&SIUL2_MIDR2_FLASH_SIZE_2_MASK)
#define SIUL2_MIDR2_FLASH_SIZE_1_MASK            0x78000000u
#define SIUL2_MIDR2_FLASH_SIZE_1_SHIFT           27u
#define SIUL2_MIDR2_FLASH_SIZE_1_WIDTH           4u
#define SIUL2_MIDR2_FLASH_SIZE_1(x)              (((uint32_t)(((uint32_t)(x))<<SIUL2_MIDR2_FLASH_SIZE_1_SHIFT))&SIUL2_MIDR2_FLASH_SIZE_1_MASK)
/* ISR0 Bit Fields */
#define SIUL2_ISR0_EIF0_MASK                     0x1u
#define SIUL2_ISR0_EIF0_SHIFT                    0u
#define SIUL2_ISR0_EIF0_WIDTH                    1u
#define SIUL2_ISR0_EIF0(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF0_SHIFT))&SIUL2_ISR0_EIF0_MASK)
#define SIUL2_ISR0_EIF1_MASK                     0x2u
#define SIUL2_ISR0_EIF1_SHIFT                    1u
#define SIUL2_ISR0_EIF1_WIDTH                    1u
#define SIUL2_ISR0_EIF1(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF1_SHIFT))&SIUL2_ISR0_EIF1_MASK)
#define SIUL2_ISR0_EIF2_MASK                     0x4u
#define SIUL2_ISR0_EIF2_SHIFT                    2u
#define SIUL2_ISR0_EIF2_WIDTH                    1u
#define SIUL2_ISR0_EIF2(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF2_SHIFT))&SIUL2_ISR0_EIF2_MASK)
#define SIUL2_ISR0_EIF3_MASK                     0x8u
#define SIUL2_ISR0_EIF3_SHIFT                    3u
#define SIUL2_ISR0_EIF3_WIDTH                    1u
#define SIUL2_ISR0_EIF3(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF3_SHIFT))&SIUL2_ISR0_EIF3_MASK)
#define SIUL2_ISR0_EIF4_MASK                     0x10u
#define SIUL2_ISR0_EIF4_SHIFT                    4u
#define SIUL2_ISR0_EIF4_WIDTH                    1u
#define SIUL2_ISR0_EIF4(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF4_SHIFT))&SIUL2_ISR0_EIF4_MASK)
#define SIUL2_ISR0_EIF5_MASK                     0x20u
#define SIUL2_ISR0_EIF5_SHIFT                    5u
#define SIUL2_ISR0_EIF5_WIDTH                    1u
#define SIUL2_ISR0_EIF5(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF5_SHIFT))&SIUL2_ISR0_EIF5_MASK)
#define SIUL2_ISR0_EIF6_MASK                     0x40u
#define SIUL2_ISR0_EIF6_SHIFT                    6u
#define SIUL2_ISR0_EIF6_WIDTH                    1u
#define SIUL2_ISR0_EIF6(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF6_SHIFT))&SIUL2_ISR0_EIF6_MASK)
#define SIUL2_ISR0_EIF7_MASK                     0x80u
#define SIUL2_ISR0_EIF7_SHIFT                    7u
#define SIUL2_ISR0_EIF7_WIDTH                    1u
#define SIUL2_ISR0_EIF7(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF7_SHIFT))&SIUL2_ISR0_EIF7_MASK)
#define SIUL2_ISR0_EIF8_MASK                     0x100u
#define SIUL2_ISR0_EIF8_SHIFT                    8u
#define SIUL2_ISR0_EIF8_WIDTH                    1u
#define SIUL2_ISR0_EIF8(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF8_SHIFT))&SIUL2_ISR0_EIF8_MASK)
#define SIUL2_ISR0_EIF9_MASK                     0x200u
#define SIUL2_ISR0_EIF9_SHIFT                    9u
#define SIUL2_ISR0_EIF9_WIDTH                    1u
#define SIUL2_ISR0_EIF9(x)                       (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF9_SHIFT))&SIUL2_ISR0_EIF9_MASK)
#define SIUL2_ISR0_EIF10_MASK                    0x400u
#define SIUL2_ISR0_EIF10_SHIFT                   10u
#define SIUL2_ISR0_EIF10_WIDTH                   1u
#define SIUL2_ISR0_EIF10(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF10_SHIFT))&SIUL2_ISR0_EIF10_MASK)
#define SIUL2_ISR0_EIF11_MASK                    0x800u
#define SIUL2_ISR0_EIF11_SHIFT                   11u
#define SIUL2_ISR0_EIF11_WIDTH                   1u
#define SIUL2_ISR0_EIF11(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF11_SHIFT))&SIUL2_ISR0_EIF11_MASK)
#define SIUL2_ISR0_EIF12_MASK                    0x1000u
#define SIUL2_ISR0_EIF12_SHIFT                   12u
#define SIUL2_ISR0_EIF12_WIDTH                   1u
#define SIUL2_ISR0_EIF12(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF12_SHIFT))&SIUL2_ISR0_EIF12_MASK)
#define SIUL2_ISR0_EIF13_MASK                    0x2000u
#define SIUL2_ISR0_EIF13_SHIFT                   13u
#define SIUL2_ISR0_EIF13_WIDTH                   1u
#define SIUL2_ISR0_EIF13(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF13_SHIFT))&SIUL2_ISR0_EIF13_MASK)
#define SIUL2_ISR0_EIF14_MASK                    0x4000u
#define SIUL2_ISR0_EIF14_SHIFT                   14u
#define SIUL2_ISR0_EIF14_WIDTH                   1u
#define SIUL2_ISR0_EIF14(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF14_SHIFT))&SIUL2_ISR0_EIF14_MASK)
#define SIUL2_ISR0_EIF15_MASK                    0x8000u
#define SIUL2_ISR0_EIF15_SHIFT                   15u
#define SIUL2_ISR0_EIF15_WIDTH                   1u
#define SIUL2_ISR0_EIF15(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF15_SHIFT))&SIUL2_ISR0_EIF15_MASK)
#define SIUL2_ISR0_EIF16_MASK                    0x10000u
#define SIUL2_ISR0_EIF16_SHIFT                   16u
#define SIUL2_ISR0_EIF16_WIDTH                   1u
#define SIUL2_ISR0_EIF16(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF16_SHIFT))&SIUL2_ISR0_EIF16_MASK)
#define SIUL2_ISR0_EIF17_MASK                    0x20000u
#define SIUL2_ISR0_EIF17_SHIFT                   17u
#define SIUL2_ISR0_EIF17_WIDTH                   1u
#define SIUL2_ISR0_EIF17(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF17_SHIFT))&SIUL2_ISR0_EIF17_MASK)
#define SIUL2_ISR0_EIF18_MASK                    0x40000u
#define SIUL2_ISR0_EIF18_SHIFT                   18u
#define SIUL2_ISR0_EIF18_WIDTH                   1u
#define SIUL2_ISR0_EIF18(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF18_SHIFT))&SIUL2_ISR0_EIF18_MASK)
#define SIUL2_ISR0_EIF19_MASK                    0x80000u
#define SIUL2_ISR0_EIF19_SHIFT                   19u
#define SIUL2_ISR0_EIF19_WIDTH                   1u
#define SIUL2_ISR0_EIF19(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF19_SHIFT))&SIUL2_ISR0_EIF19_MASK)
#define SIUL2_ISR0_EIF20_MASK                    0x100000u
#define SIUL2_ISR0_EIF20_SHIFT                   20u
#define SIUL2_ISR0_EIF20_WIDTH                   1u
#define SIUL2_ISR0_EIF20(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF20_SHIFT))&SIUL2_ISR0_EIF20_MASK)
#define SIUL2_ISR0_EIF21_MASK                    0x200000u
#define SIUL2_ISR0_EIF21_SHIFT                   21u
#define SIUL2_ISR0_EIF21_WIDTH                   1u
#define SIUL2_ISR0_EIF21(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF21_SHIFT))&SIUL2_ISR0_EIF21_MASK)
#define SIUL2_ISR0_EIF22_MASK                    0x400000u
#define SIUL2_ISR0_EIF22_SHIFT                   22u
#define SIUL2_ISR0_EIF22_WIDTH                   1u
#define SIUL2_ISR0_EIF22(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF22_SHIFT))&SIUL2_ISR0_EIF22_MASK)
#define SIUL2_ISR0_EIF23_MASK                    0x800000u
#define SIUL2_ISR0_EIF23_SHIFT                   23u
#define SIUL2_ISR0_EIF23_WIDTH                   1u
#define SIUL2_ISR0_EIF23(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF23_SHIFT))&SIUL2_ISR0_EIF23_MASK)
#define SIUL2_ISR0_EIF24_MASK                    0x1000000u
#define SIUL2_ISR0_EIF24_SHIFT                   24u
#define SIUL2_ISR0_EIF24_WIDTH                   1u
#define SIUL2_ISR0_EIF24(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF24_SHIFT))&SIUL2_ISR0_EIF24_MASK)
#define SIUL2_ISR0_EIF25_MASK                    0x2000000u
#define SIUL2_ISR0_EIF25_SHIFT                   25u
#define SIUL2_ISR0_EIF25_WIDTH                   1u
#define SIUL2_ISR0_EIF25(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF25_SHIFT))&SIUL2_ISR0_EIF25_MASK)
#define SIUL2_ISR0_EIF26_MASK                    0x4000000u
#define SIUL2_ISR0_EIF26_SHIFT                   26u
#define SIUL2_ISR0_EIF26_WIDTH                   1u
#define SIUL2_ISR0_EIF26(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF26_SHIFT))&SIUL2_ISR0_EIF26_MASK)
#define SIUL2_ISR0_EIF27_MASK                    0x8000000u
#define SIUL2_ISR0_EIF27_SHIFT                   27u
#define SIUL2_ISR0_EIF27_WIDTH                   1u
#define SIUL2_ISR0_EIF27(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF27_SHIFT))&SIUL2_ISR0_EIF27_MASK)
#define SIUL2_ISR0_EIF28_MASK                    0x10000000u
#define SIUL2_ISR0_EIF28_SHIFT                   28u
#define SIUL2_ISR0_EIF28_WIDTH                   1u
#define SIUL2_ISR0_EIF28(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF28_SHIFT))&SIUL2_ISR0_EIF28_MASK)
#define SIUL2_ISR0_EIF29_MASK                    0x20000000u
#define SIUL2_ISR0_EIF29_SHIFT                   29u
#define SIUL2_ISR0_EIF29_WIDTH                   1u
#define SIUL2_ISR0_EIF29(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF29_SHIFT))&SIUL2_ISR0_EIF29_MASK)
#define SIUL2_ISR0_EIF30_MASK                    0x40000000u
#define SIUL2_ISR0_EIF30_SHIFT                   30u
#define SIUL2_ISR0_EIF30_WIDTH                   1u
#define SIUL2_ISR0_EIF30(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF30_SHIFT))&SIUL2_ISR0_EIF30_MASK)
#define SIUL2_ISR0_EIF31_MASK                    0x80000000u
#define SIUL2_ISR0_EIF31_SHIFT                   31u
#define SIUL2_ISR0_EIF31_WIDTH                   1u
#define SIUL2_ISR0_EIF31(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_ISR0_EIF31_SHIFT))&SIUL2_ISR0_EIF31_MASK)
/* IRER0 Bit Fields */
#define SIUL2_IRER0_EIRE0_MASK                   0x1u
#define SIUL2_IRER0_EIRE0_SHIFT                  0u
#define SIUL2_IRER0_EIRE0_WIDTH                  1u
#define SIUL2_IRER0_EIRE0(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE0_SHIFT))&SIUL2_IRER0_EIRE0_MASK)
#define SIUL2_IRER0_EIRE1_MASK                   0x2u
#define SIUL2_IRER0_EIRE1_SHIFT                  1u
#define SIUL2_IRER0_EIRE1_WIDTH                  1u
#define SIUL2_IRER0_EIRE1(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE1_SHIFT))&SIUL2_IRER0_EIRE1_MASK)
#define SIUL2_IRER0_EIRE2_MASK                   0x4u
#define SIUL2_IRER0_EIRE2_SHIFT                  2u
#define SIUL2_IRER0_EIRE2_WIDTH                  1u
#define SIUL2_IRER0_EIRE2(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE2_SHIFT))&SIUL2_IRER0_EIRE2_MASK)
#define SIUL2_IRER0_EIRE3_MASK                   0x8u
#define SIUL2_IRER0_EIRE3_SHIFT                  3u
#define SIUL2_IRER0_EIRE3_WIDTH                  1u
#define SIUL2_IRER0_EIRE3(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE3_SHIFT))&SIUL2_IRER0_EIRE3_MASK)
#define SIUL2_IRER0_EIRE4_MASK                   0x10u
#define SIUL2_IRER0_EIRE4_SHIFT                  4u
#define SIUL2_IRER0_EIRE4_WIDTH                  1u
#define SIUL2_IRER0_EIRE4(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE4_SHIFT))&SIUL2_IRER0_EIRE4_MASK)
#define SIUL2_IRER0_EIRE5_MASK                   0x20u
#define SIUL2_IRER0_EIRE5_SHIFT                  5u
#define SIUL2_IRER0_EIRE5_WIDTH                  1u
#define SIUL2_IRER0_EIRE5(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE5_SHIFT))&SIUL2_IRER0_EIRE5_MASK)
#define SIUL2_IRER0_EIRE6_MASK                   0x40u
#define SIUL2_IRER0_EIRE6_SHIFT                  6u
#define SIUL2_IRER0_EIRE6_WIDTH                  1u
#define SIUL2_IRER0_EIRE6(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE6_SHIFT))&SIUL2_IRER0_EIRE6_MASK)
#define SIUL2_IRER0_EIRE7_MASK                   0x80u
#define SIUL2_IRER0_EIRE7_SHIFT                  7u
#define SIUL2_IRER0_EIRE7_WIDTH                  1u
#define SIUL2_IRER0_EIRE7(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE7_SHIFT))&SIUL2_IRER0_EIRE7_MASK)
#define SIUL2_IRER0_EIRE8_MASK                   0x100u
#define SIUL2_IRER0_EIRE8_SHIFT                  8u
#define SIUL2_IRER0_EIRE8_WIDTH                  1u
#define SIUL2_IRER0_EIRE8(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE8_SHIFT))&SIUL2_IRER0_EIRE8_MASK)
#define SIUL2_IRER0_EIRE9_MASK                   0x200u
#define SIUL2_IRER0_EIRE9_SHIFT                  9u
#define SIUL2_IRER0_EIRE9_WIDTH                  1u
#define SIUL2_IRER0_EIRE9(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE9_SHIFT))&SIUL2_IRER0_EIRE9_MASK)
#define SIUL2_IRER0_EIRE10_MASK                  0x400u
#define SIUL2_IRER0_EIRE10_SHIFT                 10u
#define SIUL2_IRER0_EIRE10_WIDTH                 1u
#define SIUL2_IRER0_EIRE10(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE10_SHIFT))&SIUL2_IRER0_EIRE10_MASK)
#define SIUL2_IRER0_EIRE11_MASK                  0x800u
#define SIUL2_IRER0_EIRE11_SHIFT                 11u
#define SIUL2_IRER0_EIRE11_WIDTH                 1u
#define SIUL2_IRER0_EIRE11(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE11_SHIFT))&SIUL2_IRER0_EIRE11_MASK)
#define SIUL2_IRER0_EIRE12_MASK                  0x1000u
#define SIUL2_IRER0_EIRE12_SHIFT                 12u
#define SIUL2_IRER0_EIRE12_WIDTH                 1u
#define SIUL2_IRER0_EIRE12(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE12_SHIFT))&SIUL2_IRER0_EIRE12_MASK)
#define SIUL2_IRER0_EIRE13_MASK                  0x2000u
#define SIUL2_IRER0_EIRE13_SHIFT                 13u
#define SIUL2_IRER0_EIRE13_WIDTH                 1u
#define SIUL2_IRER0_EIRE13(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE13_SHIFT))&SIUL2_IRER0_EIRE13_MASK)
#define SIUL2_IRER0_EIRE14_MASK                  0x4000u
#define SIUL2_IRER0_EIRE14_SHIFT                 14u
#define SIUL2_IRER0_EIRE14_WIDTH                 1u
#define SIUL2_IRER0_EIRE14(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE14_SHIFT))&SIUL2_IRER0_EIRE14_MASK)
#define SIUL2_IRER0_EIRE15_MASK                  0x8000u
#define SIUL2_IRER0_EIRE15_SHIFT                 15u
#define SIUL2_IRER0_EIRE15_WIDTH                 1u
#define SIUL2_IRER0_EIRE15(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE15_SHIFT))&SIUL2_IRER0_EIRE15_MASK)
#define SIUL2_IRER0_EIRE16_MASK                  0x10000u
#define SIUL2_IRER0_EIRE16_SHIFT                 16u
#define SIUL2_IRER0_EIRE16_WIDTH                 1u
#define SIUL2_IRER0_EIRE16(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE16_SHIFT))&SIUL2_IRER0_EIRE16_MASK)
#define SIUL2_IRER0_EIRE17_MASK                  0x20000u
#define SIUL2_IRER0_EIRE17_SHIFT                 17u
#define SIUL2_IRER0_EIRE17_WIDTH                 1u
#define SIUL2_IRER0_EIRE17(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE17_SHIFT))&SIUL2_IRER0_EIRE17_MASK)
#define SIUL2_IRER0_EIRE18_MASK                  0x40000u
#define SIUL2_IRER0_EIRE18_SHIFT                 18u
#define SIUL2_IRER0_EIRE18_WIDTH                 1u
#define SIUL2_IRER0_EIRE18(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE18_SHIFT))&SIUL2_IRER0_EIRE18_MASK)
#define SIUL2_IRER0_EIRE19_MASK                  0x80000u
#define SIUL2_IRER0_EIRE19_SHIFT                 19u
#define SIUL2_IRER0_EIRE19_WIDTH                 1u
#define SIUL2_IRER0_EIRE19(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE19_SHIFT))&SIUL2_IRER0_EIRE19_MASK)
#define SIUL2_IRER0_EIRE20_MASK                  0x100000u
#define SIUL2_IRER0_EIRE20_SHIFT                 20u
#define SIUL2_IRER0_EIRE20_WIDTH                 1u
#define SIUL2_IRER0_EIRE20(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE20_SHIFT))&SIUL2_IRER0_EIRE20_MASK)
#define SIUL2_IRER0_EIRE21_MASK                  0x200000u
#define SIUL2_IRER0_EIRE21_SHIFT                 21u
#define SIUL2_IRER0_EIRE21_WIDTH                 1u
#define SIUL2_IRER0_EIRE21(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE21_SHIFT))&SIUL2_IRER0_EIRE21_MASK)
#define SIUL2_IRER0_EIRE22_MASK                  0x400000u
#define SIUL2_IRER0_EIRE22_SHIFT                 22u
#define SIUL2_IRER0_EIRE22_WIDTH                 1u
#define SIUL2_IRER0_EIRE22(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE22_SHIFT))&SIUL2_IRER0_EIRE22_MASK)
#define SIUL2_IRER0_EIRE23_MASK                  0x800000u
#define SIUL2_IRER0_EIRE23_SHIFT                 23u
#define SIUL2_IRER0_EIRE23_WIDTH                 1u
#define SIUL2_IRER0_EIRE23(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE23_SHIFT))&SIUL2_IRER0_EIRE23_MASK)
#define SIUL2_IRER0_EIRE24_MASK                  0x1000000u
#define SIUL2_IRER0_EIRE24_SHIFT                 24u
#define SIUL2_IRER0_EIRE24_WIDTH                 1u
#define SIUL2_IRER0_EIRE24(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE24_SHIFT))&SIUL2_IRER0_EIRE24_MASK)
#define SIUL2_IRER0_EIRE25_MASK                  0x2000000u
#define SIUL2_IRER0_EIRE25_SHIFT                 25u
#define SIUL2_IRER0_EIRE25_WIDTH                 1u
#define SIUL2_IRER0_EIRE25(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE25_SHIFT))&SIUL2_IRER0_EIRE25_MASK)
#define SIUL2_IRER0_EIRE26_MASK                  0x4000000u
#define SIUL2_IRER0_EIRE26_SHIFT                 26u
#define SIUL2_IRER0_EIRE26_WIDTH                 1u
#define SIUL2_IRER0_EIRE26(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE26_SHIFT))&SIUL2_IRER0_EIRE26_MASK)
#define SIUL2_IRER0_EIRE27_MASK                  0x8000000u
#define SIUL2_IRER0_EIRE27_SHIFT                 27u
#define SIUL2_IRER0_EIRE27_WIDTH                 1u
#define SIUL2_IRER0_EIRE27(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE27_SHIFT))&SIUL2_IRER0_EIRE27_MASK)
#define SIUL2_IRER0_EIRE28_MASK                  0x10000000u
#define SIUL2_IRER0_EIRE28_SHIFT                 28u
#define SIUL2_IRER0_EIRE28_WIDTH                 1u
#define SIUL2_IRER0_EIRE28(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE28_SHIFT))&SIUL2_IRER0_EIRE28_MASK)
#define SIUL2_IRER0_EIRE29_MASK                  0x20000000u
#define SIUL2_IRER0_EIRE29_SHIFT                 29u
#define SIUL2_IRER0_EIRE29_WIDTH                 1u
#define SIUL2_IRER0_EIRE29(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE29_SHIFT))&SIUL2_IRER0_EIRE29_MASK)
#define SIUL2_IRER0_EIRE30_MASK                  0x40000000u
#define SIUL2_IRER0_EIRE30_SHIFT                 30u
#define SIUL2_IRER0_EIRE30_WIDTH                 1u
#define SIUL2_IRER0_EIRE30(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE30_SHIFT))&SIUL2_IRER0_EIRE30_MASK)
#define SIUL2_IRER0_EIRE31_MASK                  0x80000000u
#define SIUL2_IRER0_EIRE31_SHIFT                 31u
#define SIUL2_IRER0_EIRE31_WIDTH                 1u
#define SIUL2_IRER0_EIRE31(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRER0_EIRE31_SHIFT))&SIUL2_IRER0_EIRE31_MASK)
/* IRSR0 Bit Fields */
#define SIUL2_IRSR0_DIRSR0_MASK                  0x1u
#define SIUL2_IRSR0_DIRSR0_SHIFT                 0u
#define SIUL2_IRSR0_DIRSR0_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR0(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR0_SHIFT))&SIUL2_IRSR0_DIRSR0_MASK)
#define SIUL2_IRSR0_DIRSR1_MASK                  0x2u
#define SIUL2_IRSR0_DIRSR1_SHIFT                 1u
#define SIUL2_IRSR0_DIRSR1_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR1_SHIFT))&SIUL2_IRSR0_DIRSR1_MASK)
#define SIUL2_IRSR0_DIRSR2_MASK                  0x4u
#define SIUL2_IRSR0_DIRSR2_SHIFT                 2u
#define SIUL2_IRSR0_DIRSR2_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR2_SHIFT))&SIUL2_IRSR0_DIRSR2_MASK)
#define SIUL2_IRSR0_DIRSR3_MASK                  0x8u
#define SIUL2_IRSR0_DIRSR3_SHIFT                 3u
#define SIUL2_IRSR0_DIRSR3_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR3_SHIFT))&SIUL2_IRSR0_DIRSR3_MASK)
#define SIUL2_IRSR0_DIRSR4_MASK                  0x10u
#define SIUL2_IRSR0_DIRSR4_SHIFT                 4u
#define SIUL2_IRSR0_DIRSR4_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR4(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR4_SHIFT))&SIUL2_IRSR0_DIRSR4_MASK)
#define SIUL2_IRSR0_DIRSR5_MASK                  0x20u
#define SIUL2_IRSR0_DIRSR5_SHIFT                 5u
#define SIUL2_IRSR0_DIRSR5_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR5(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR5_SHIFT))&SIUL2_IRSR0_DIRSR5_MASK)
#define SIUL2_IRSR0_DIRSR6_MASK                  0x40u
#define SIUL2_IRSR0_DIRSR6_SHIFT                 6u
#define SIUL2_IRSR0_DIRSR6_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR6(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR6_SHIFT))&SIUL2_IRSR0_DIRSR6_MASK)
#define SIUL2_IRSR0_DIRSR7_MASK                  0x80u
#define SIUL2_IRSR0_DIRSR7_SHIFT                 7u
#define SIUL2_IRSR0_DIRSR7_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR7(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR7_SHIFT))&SIUL2_IRSR0_DIRSR7_MASK)
#define SIUL2_IRSR0_DIRSR8_MASK                  0x100u
#define SIUL2_IRSR0_DIRSR8_SHIFT                 8u
#define SIUL2_IRSR0_DIRSR8_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR8(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR8_SHIFT))&SIUL2_IRSR0_DIRSR8_MASK)
#define SIUL2_IRSR0_DIRSR9_MASK                  0x200u
#define SIUL2_IRSR0_DIRSR9_SHIFT                 9u
#define SIUL2_IRSR0_DIRSR9_WIDTH                 1u
#define SIUL2_IRSR0_DIRSR9(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR9_SHIFT))&SIUL2_IRSR0_DIRSR9_MASK)
#define SIUL2_IRSR0_DIRSR10_MASK                 0x400u
#define SIUL2_IRSR0_DIRSR10_SHIFT                10u
#define SIUL2_IRSR0_DIRSR10_WIDTH                1u
#define SIUL2_IRSR0_DIRSR10(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR10_SHIFT))&SIUL2_IRSR0_DIRSR10_MASK)
#define SIUL2_IRSR0_DIRSR11_MASK                 0x800u
#define SIUL2_IRSR0_DIRSR11_SHIFT                11u
#define SIUL2_IRSR0_DIRSR11_WIDTH                1u
#define SIUL2_IRSR0_DIRSR11(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR11_SHIFT))&SIUL2_IRSR0_DIRSR11_MASK)
#define SIUL2_IRSR0_DIRSR12_MASK                 0x1000u
#define SIUL2_IRSR0_DIRSR12_SHIFT                12u
#define SIUL2_IRSR0_DIRSR12_WIDTH                1u
#define SIUL2_IRSR0_DIRSR12(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR12_SHIFT))&SIUL2_IRSR0_DIRSR12_MASK)
#define SIUL2_IRSR0_DIRSR13_MASK                 0x2000u
#define SIUL2_IRSR0_DIRSR13_SHIFT                13u
#define SIUL2_IRSR0_DIRSR13_WIDTH                1u
#define SIUL2_IRSR0_DIRSR13(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR13_SHIFT))&SIUL2_IRSR0_DIRSR13_MASK)
#define SIUL2_IRSR0_DIRSR14_MASK                 0x4000u
#define SIUL2_IRSR0_DIRSR14_SHIFT                14u
#define SIUL2_IRSR0_DIRSR14_WIDTH                1u
#define SIUL2_IRSR0_DIRSR14(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR14_SHIFT))&SIUL2_IRSR0_DIRSR14_MASK)
#define SIUL2_IRSR0_DIRSR15_MASK                 0x8000u
#define SIUL2_IRSR0_DIRSR15_SHIFT                15u
#define SIUL2_IRSR0_DIRSR15_WIDTH                1u
#define SIUL2_IRSR0_DIRSR15(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR15_SHIFT))&SIUL2_IRSR0_DIRSR15_MASK)
#define SIUL2_IRSR0_DIRSR16_MASK                 0x10000u
#define SIUL2_IRSR0_DIRSR16_SHIFT                16u
#define SIUL2_IRSR0_DIRSR16_WIDTH                1u
#define SIUL2_IRSR0_DIRSR16(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR16_SHIFT))&SIUL2_IRSR0_DIRSR16_MASK)
#define SIUL2_IRSR0_DIRSR17_MASK                 0x20000u
#define SIUL2_IRSR0_DIRSR17_SHIFT                17u
#define SIUL2_IRSR0_DIRSR17_WIDTH                1u
#define SIUL2_IRSR0_DIRSR17(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR17_SHIFT))&SIUL2_IRSR0_DIRSR17_MASK)
#define SIUL2_IRSR0_DIRSR18_MASK                 0x40000u
#define SIUL2_IRSR0_DIRSR18_SHIFT                18u
#define SIUL2_IRSR0_DIRSR18_WIDTH                1u
#define SIUL2_IRSR0_DIRSR18(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR18_SHIFT))&SIUL2_IRSR0_DIRSR18_MASK)
#define SIUL2_IRSR0_DIRSR19_MASK                 0x80000u
#define SIUL2_IRSR0_DIRSR19_SHIFT                19u
#define SIUL2_IRSR0_DIRSR19_WIDTH                1u
#define SIUL2_IRSR0_DIRSR19(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR19_SHIFT))&SIUL2_IRSR0_DIRSR19_MASK)
#define SIUL2_IRSR0_DIRSR20_MASK                 0x100000u
#define SIUL2_IRSR0_DIRSR20_SHIFT                20u
#define SIUL2_IRSR0_DIRSR20_WIDTH                1u
#define SIUL2_IRSR0_DIRSR20(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR20_SHIFT))&SIUL2_IRSR0_DIRSR20_MASK)
#define SIUL2_IRSR0_DIRSR21_MASK                 0x200000u
#define SIUL2_IRSR0_DIRSR21_SHIFT                21u
#define SIUL2_IRSR0_DIRSR21_WIDTH                1u
#define SIUL2_IRSR0_DIRSR21(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR21_SHIFT))&SIUL2_IRSR0_DIRSR21_MASK)
#define SIUL2_IRSR0_DIRSR22_MASK                 0x400000u
#define SIUL2_IRSR0_DIRSR22_SHIFT                22u
#define SIUL2_IRSR0_DIRSR22_WIDTH                1u
#define SIUL2_IRSR0_DIRSR22(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR22_SHIFT))&SIUL2_IRSR0_DIRSR22_MASK)
#define SIUL2_IRSR0_DIRSR23_MASK                 0x800000u
#define SIUL2_IRSR0_DIRSR23_SHIFT                23u
#define SIUL2_IRSR0_DIRSR23_WIDTH                1u
#define SIUL2_IRSR0_DIRSR23(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR23_SHIFT))&SIUL2_IRSR0_DIRSR23_MASK)
#define SIUL2_IRSR0_DIRSR24_MASK                 0x1000000u
#define SIUL2_IRSR0_DIRSR24_SHIFT                24u
#define SIUL2_IRSR0_DIRSR24_WIDTH                1u
#define SIUL2_IRSR0_DIRSR24(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR24_SHIFT))&SIUL2_IRSR0_DIRSR24_MASK)
#define SIUL2_IRSR0_DIRSR25_MASK                 0x2000000u
#define SIUL2_IRSR0_DIRSR25_SHIFT                25u
#define SIUL2_IRSR0_DIRSR25_WIDTH                1u
#define SIUL2_IRSR0_DIRSR25(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR25_SHIFT))&SIUL2_IRSR0_DIRSR25_MASK)
#define SIUL2_IRSR0_DIRSR26_MASK                 0x4000000u
#define SIUL2_IRSR0_DIRSR26_SHIFT                26u
#define SIUL2_IRSR0_DIRSR26_WIDTH                1u
#define SIUL2_IRSR0_DIRSR26(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR26_SHIFT))&SIUL2_IRSR0_DIRSR26_MASK)
#define SIUL2_IRSR0_DIRSR27_MASK                 0x8000000u
#define SIUL2_IRSR0_DIRSR27_SHIFT                27u
#define SIUL2_IRSR0_DIRSR27_WIDTH                1u
#define SIUL2_IRSR0_DIRSR27(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR27_SHIFT))&SIUL2_IRSR0_DIRSR27_MASK)
#define SIUL2_IRSR0_DIRSR28_MASK                 0x10000000u
#define SIUL2_IRSR0_DIRSR28_SHIFT                28u
#define SIUL2_IRSR0_DIRSR28_WIDTH                1u
#define SIUL2_IRSR0_DIRSR28(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR28_SHIFT))&SIUL2_IRSR0_DIRSR28_MASK)
#define SIUL2_IRSR0_DIRSR29_MASK                 0x20000000u
#define SIUL2_IRSR0_DIRSR29_SHIFT                29u
#define SIUL2_IRSR0_DIRSR29_WIDTH                1u
#define SIUL2_IRSR0_DIRSR29(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR29_SHIFT))&SIUL2_IRSR0_DIRSR29_MASK)
#define SIUL2_IRSR0_DIRSR30_MASK                 0x40000000u
#define SIUL2_IRSR0_DIRSR30_SHIFT                30u
#define SIUL2_IRSR0_DIRSR30_WIDTH                1u
#define SIUL2_IRSR0_DIRSR30(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR30_SHIFT))&SIUL2_IRSR0_DIRSR30_MASK)
#define SIUL2_IRSR0_DIRSR31_MASK                 0x80000000u
#define SIUL2_IRSR0_DIRSR31_SHIFT                31u
#define SIUL2_IRSR0_DIRSR31_WIDTH                1u
#define SIUL2_IRSR0_DIRSR31(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IRSR0_DIRSR31_SHIFT))&SIUL2_IRSR0_DIRSR31_MASK)
/* IREER0 Bit Fields */
#define SIUL2_IREER0_IREE0_MASK                  0x1u
#define SIUL2_IREER0_IREE0_SHIFT                 0u
#define SIUL2_IREER0_IREE0_WIDTH                 1u
#define SIUL2_IREER0_IREE0(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE0_SHIFT))&SIUL2_IREER0_IREE0_MASK)
#define SIUL2_IREER0_IREE1_MASK                  0x2u
#define SIUL2_IREER0_IREE1_SHIFT                 1u
#define SIUL2_IREER0_IREE1_WIDTH                 1u
#define SIUL2_IREER0_IREE1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE1_SHIFT))&SIUL2_IREER0_IREE1_MASK)
#define SIUL2_IREER0_IREE2_MASK                  0x4u
#define SIUL2_IREER0_IREE2_SHIFT                 2u
#define SIUL2_IREER0_IREE2_WIDTH                 1u
#define SIUL2_IREER0_IREE2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE2_SHIFT))&SIUL2_IREER0_IREE2_MASK)
#define SIUL2_IREER0_IREE3_MASK                  0x8u
#define SIUL2_IREER0_IREE3_SHIFT                 3u
#define SIUL2_IREER0_IREE3_WIDTH                 1u
#define SIUL2_IREER0_IREE3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE3_SHIFT))&SIUL2_IREER0_IREE3_MASK)
#define SIUL2_IREER0_IREE4_MASK                  0x10u
#define SIUL2_IREER0_IREE4_SHIFT                 4u
#define SIUL2_IREER0_IREE4_WIDTH                 1u
#define SIUL2_IREER0_IREE4(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE4_SHIFT))&SIUL2_IREER0_IREE4_MASK)
#define SIUL2_IREER0_IREE5_MASK                  0x20u
#define SIUL2_IREER0_IREE5_SHIFT                 5u
#define SIUL2_IREER0_IREE5_WIDTH                 1u
#define SIUL2_IREER0_IREE5(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE5_SHIFT))&SIUL2_IREER0_IREE5_MASK)
#define SIUL2_IREER0_IREE6_MASK                  0x40u
#define SIUL2_IREER0_IREE6_SHIFT                 6u
#define SIUL2_IREER0_IREE6_WIDTH                 1u
#define SIUL2_IREER0_IREE6(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE6_SHIFT))&SIUL2_IREER0_IREE6_MASK)
#define SIUL2_IREER0_IREE7_MASK                  0x80u
#define SIUL2_IREER0_IREE7_SHIFT                 7u
#define SIUL2_IREER0_IREE7_WIDTH                 1u
#define SIUL2_IREER0_IREE7(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE7_SHIFT))&SIUL2_IREER0_IREE7_MASK)
#define SIUL2_IREER0_IREE8_MASK                  0x100u
#define SIUL2_IREER0_IREE8_SHIFT                 8u
#define SIUL2_IREER0_IREE8_WIDTH                 1u
#define SIUL2_IREER0_IREE8(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE8_SHIFT))&SIUL2_IREER0_IREE8_MASK)
#define SIUL2_IREER0_IREE9_MASK                  0x200u
#define SIUL2_IREER0_IREE9_SHIFT                 9u
#define SIUL2_IREER0_IREE9_WIDTH                 1u
#define SIUL2_IREER0_IREE9(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE9_SHIFT))&SIUL2_IREER0_IREE9_MASK)
#define SIUL2_IREER0_IREE10_MASK                 0x400u
#define SIUL2_IREER0_IREE10_SHIFT                10u
#define SIUL2_IREER0_IREE10_WIDTH                1u
#define SIUL2_IREER0_IREE10(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE10_SHIFT))&SIUL2_IREER0_IREE10_MASK)
#define SIUL2_IREER0_IREE11_MASK                 0x800u
#define SIUL2_IREER0_IREE11_SHIFT                11u
#define SIUL2_IREER0_IREE11_WIDTH                1u
#define SIUL2_IREER0_IREE11(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE11_SHIFT))&SIUL2_IREER0_IREE11_MASK)
#define SIUL2_IREER0_IREE12_MASK                 0x1000u
#define SIUL2_IREER0_IREE12_SHIFT                12u
#define SIUL2_IREER0_IREE12_WIDTH                1u
#define SIUL2_IREER0_IREE12(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE12_SHIFT))&SIUL2_IREER0_IREE12_MASK)
#define SIUL2_IREER0_IREE13_MASK                 0x2000u
#define SIUL2_IREER0_IREE13_SHIFT                13u
#define SIUL2_IREER0_IREE13_WIDTH                1u
#define SIUL2_IREER0_IREE13(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE13_SHIFT))&SIUL2_IREER0_IREE13_MASK)
#define SIUL2_IREER0_IREE14_MASK                 0x4000u
#define SIUL2_IREER0_IREE14_SHIFT                14u
#define SIUL2_IREER0_IREE14_WIDTH                1u
#define SIUL2_IREER0_IREE14(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE14_SHIFT))&SIUL2_IREER0_IREE14_MASK)
#define SIUL2_IREER0_IREE15_MASK                 0x8000u
#define SIUL2_IREER0_IREE15_SHIFT                15u
#define SIUL2_IREER0_IREE15_WIDTH                1u
#define SIUL2_IREER0_IREE15(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE15_SHIFT))&SIUL2_IREER0_IREE15_MASK)
#define SIUL2_IREER0_IREE16_MASK                 0x10000u
#define SIUL2_IREER0_IREE16_SHIFT                16u
#define SIUL2_IREER0_IREE16_WIDTH                1u
#define SIUL2_IREER0_IREE16(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE16_SHIFT))&SIUL2_IREER0_IREE16_MASK)
#define SIUL2_IREER0_IREE17_MASK                 0x20000u
#define SIUL2_IREER0_IREE17_SHIFT                17u
#define SIUL2_IREER0_IREE17_WIDTH                1u
#define SIUL2_IREER0_IREE17(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE17_SHIFT))&SIUL2_IREER0_IREE17_MASK)
#define SIUL2_IREER0_IREE18_MASK                 0x40000u
#define SIUL2_IREER0_IREE18_SHIFT                18u
#define SIUL2_IREER0_IREE18_WIDTH                1u
#define SIUL2_IREER0_IREE18(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE18_SHIFT))&SIUL2_IREER0_IREE18_MASK)
#define SIUL2_IREER0_IREE19_MASK                 0x80000u
#define SIUL2_IREER0_IREE19_SHIFT                19u
#define SIUL2_IREER0_IREE19_WIDTH                1u
#define SIUL2_IREER0_IREE19(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE19_SHIFT))&SIUL2_IREER0_IREE19_MASK)
#define SIUL2_IREER0_IREE20_MASK                 0x100000u
#define SIUL2_IREER0_IREE20_SHIFT                20u
#define SIUL2_IREER0_IREE20_WIDTH                1u
#define SIUL2_IREER0_IREE20(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE20_SHIFT))&SIUL2_IREER0_IREE20_MASK)
#define SIUL2_IREER0_IREE21_MASK                 0x200000u
#define SIUL2_IREER0_IREE21_SHIFT                21u
#define SIUL2_IREER0_IREE21_WIDTH                1u
#define SIUL2_IREER0_IREE21(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE21_SHIFT))&SIUL2_IREER0_IREE21_MASK)
#define SIUL2_IREER0_IREE22_MASK                 0x400000u
#define SIUL2_IREER0_IREE22_SHIFT                22u
#define SIUL2_IREER0_IREE22_WIDTH                1u
#define SIUL2_IREER0_IREE22(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE22_SHIFT))&SIUL2_IREER0_IREE22_MASK)
#define SIUL2_IREER0_IREE23_MASK                 0x800000u
#define SIUL2_IREER0_IREE23_SHIFT                23u
#define SIUL2_IREER0_IREE23_WIDTH                1u
#define SIUL2_IREER0_IREE23(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE23_SHIFT))&SIUL2_IREER0_IREE23_MASK)
#define SIUL2_IREER0_IREE24_MASK                 0x1000000u
#define SIUL2_IREER0_IREE24_SHIFT                24u
#define SIUL2_IREER0_IREE24_WIDTH                1u
#define SIUL2_IREER0_IREE24(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE24_SHIFT))&SIUL2_IREER0_IREE24_MASK)
#define SIUL2_IREER0_IREE25_MASK                 0x2000000u
#define SIUL2_IREER0_IREE25_SHIFT                25u
#define SIUL2_IREER0_IREE25_WIDTH                1u
#define SIUL2_IREER0_IREE25(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE25_SHIFT))&SIUL2_IREER0_IREE25_MASK)
#define SIUL2_IREER0_IREE26_MASK                 0x4000000u
#define SIUL2_IREER0_IREE26_SHIFT                26u
#define SIUL2_IREER0_IREE26_WIDTH                1u
#define SIUL2_IREER0_IREE26(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE26_SHIFT))&SIUL2_IREER0_IREE26_MASK)
#define SIUL2_IREER0_IREE27_MASK                 0x8000000u
#define SIUL2_IREER0_IREE27_SHIFT                27u
#define SIUL2_IREER0_IREE27_WIDTH                1u
#define SIUL2_IREER0_IREE27(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE27_SHIFT))&SIUL2_IREER0_IREE27_MASK)
#define SIUL2_IREER0_IREE28_MASK                 0x10000000u
#define SIUL2_IREER0_IREE28_SHIFT                28u
#define SIUL2_IREER0_IREE28_WIDTH                1u
#define SIUL2_IREER0_IREE28(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE28_SHIFT))&SIUL2_IREER0_IREE28_MASK)
#define SIUL2_IREER0_IREE29_MASK                 0x20000000u
#define SIUL2_IREER0_IREE29_SHIFT                29u
#define SIUL2_IREER0_IREE29_WIDTH                1u
#define SIUL2_IREER0_IREE29(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE29_SHIFT))&SIUL2_IREER0_IREE29_MASK)
#define SIUL2_IREER0_IREE30_MASK                 0x40000000u
#define SIUL2_IREER0_IREE30_SHIFT                30u
#define SIUL2_IREER0_IREE30_WIDTH                1u
#define SIUL2_IREER0_IREE30(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE30_SHIFT))&SIUL2_IREER0_IREE30_MASK)
#define SIUL2_IREER0_IREE31_MASK                 0x80000000u
#define SIUL2_IREER0_IREE31_SHIFT                31u
#define SIUL2_IREER0_IREE31_WIDTH                1u
#define SIUL2_IREER0_IREE31(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IREER0_IREE31_SHIFT))&SIUL2_IREER0_IREE31_MASK)
/* IFEER0 Bit Fields */
#define SIUL2_IFEER0_IFEE0_MASK                  0x1u
#define SIUL2_IFEER0_IFEE0_SHIFT                 0u
#define SIUL2_IFEER0_IFEE0_WIDTH                 1u
#define SIUL2_IFEER0_IFEE0(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE0_SHIFT))&SIUL2_IFEER0_IFEE0_MASK)
#define SIUL2_IFEER0_IFEE1_MASK                  0x2u
#define SIUL2_IFEER0_IFEE1_SHIFT                 1u
#define SIUL2_IFEER0_IFEE1_WIDTH                 1u
#define SIUL2_IFEER0_IFEE1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE1_SHIFT))&SIUL2_IFEER0_IFEE1_MASK)
#define SIUL2_IFEER0_IFEE2_MASK                  0x4u
#define SIUL2_IFEER0_IFEE2_SHIFT                 2u
#define SIUL2_IFEER0_IFEE2_WIDTH                 1u
#define SIUL2_IFEER0_IFEE2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE2_SHIFT))&SIUL2_IFEER0_IFEE2_MASK)
#define SIUL2_IFEER0_IFEE3_MASK                  0x8u
#define SIUL2_IFEER0_IFEE3_SHIFT                 3u
#define SIUL2_IFEER0_IFEE3_WIDTH                 1u
#define SIUL2_IFEER0_IFEE3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE3_SHIFT))&SIUL2_IFEER0_IFEE3_MASK)
#define SIUL2_IFEER0_IFEE4_MASK                  0x10u
#define SIUL2_IFEER0_IFEE4_SHIFT                 4u
#define SIUL2_IFEER0_IFEE4_WIDTH                 1u
#define SIUL2_IFEER0_IFEE4(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE4_SHIFT))&SIUL2_IFEER0_IFEE4_MASK)
#define SIUL2_IFEER0_IFEE5_MASK                  0x20u
#define SIUL2_IFEER0_IFEE5_SHIFT                 5u
#define SIUL2_IFEER0_IFEE5_WIDTH                 1u
#define SIUL2_IFEER0_IFEE5(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE5_SHIFT))&SIUL2_IFEER0_IFEE5_MASK)
#define SIUL2_IFEER0_IFEE6_MASK                  0x40u
#define SIUL2_IFEER0_IFEE6_SHIFT                 6u
#define SIUL2_IFEER0_IFEE6_WIDTH                 1u
#define SIUL2_IFEER0_IFEE6(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE6_SHIFT))&SIUL2_IFEER0_IFEE6_MASK)
#define SIUL2_IFEER0_IFEE7_MASK                  0x80u
#define SIUL2_IFEER0_IFEE7_SHIFT                 7u
#define SIUL2_IFEER0_IFEE7_WIDTH                 1u
#define SIUL2_IFEER0_IFEE7(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE7_SHIFT))&SIUL2_IFEER0_IFEE7_MASK)
#define SIUL2_IFEER0_IFEE8_MASK                  0x100u
#define SIUL2_IFEER0_IFEE8_SHIFT                 8u
#define SIUL2_IFEER0_IFEE8_WIDTH                 1u
#define SIUL2_IFEER0_IFEE8(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE8_SHIFT))&SIUL2_IFEER0_IFEE8_MASK)
#define SIUL2_IFEER0_IFEE9_MASK                  0x200u
#define SIUL2_IFEER0_IFEE9_SHIFT                 9u
#define SIUL2_IFEER0_IFEE9_WIDTH                 1u
#define SIUL2_IFEER0_IFEE9(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE9_SHIFT))&SIUL2_IFEER0_IFEE9_MASK)
#define SIUL2_IFEER0_IFEE10_MASK                 0x400u
#define SIUL2_IFEER0_IFEE10_SHIFT                10u
#define SIUL2_IFEER0_IFEE10_WIDTH                1u
#define SIUL2_IFEER0_IFEE10(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE10_SHIFT))&SIUL2_IFEER0_IFEE10_MASK)
#define SIUL2_IFEER0_IFEE11_MASK                 0x800u
#define SIUL2_IFEER0_IFEE11_SHIFT                11u
#define SIUL2_IFEER0_IFEE11_WIDTH                1u
#define SIUL2_IFEER0_IFEE11(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE11_SHIFT))&SIUL2_IFEER0_IFEE11_MASK)
#define SIUL2_IFEER0_IFEE12_MASK                 0x1000u
#define SIUL2_IFEER0_IFEE12_SHIFT                12u
#define SIUL2_IFEER0_IFEE12_WIDTH                1u
#define SIUL2_IFEER0_IFEE12(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE12_SHIFT))&SIUL2_IFEER0_IFEE12_MASK)
#define SIUL2_IFEER0_IFEE13_MASK                 0x2000u
#define SIUL2_IFEER0_IFEE13_SHIFT                13u
#define SIUL2_IFEER0_IFEE13_WIDTH                1u
#define SIUL2_IFEER0_IFEE13(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE13_SHIFT))&SIUL2_IFEER0_IFEE13_MASK)
#define SIUL2_IFEER0_IFEE14_MASK                 0x4000u
#define SIUL2_IFEER0_IFEE14_SHIFT                14u
#define SIUL2_IFEER0_IFEE14_WIDTH                1u
#define SIUL2_IFEER0_IFEE14(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE14_SHIFT))&SIUL2_IFEER0_IFEE14_MASK)
#define SIUL2_IFEER0_IFEE15_MASK                 0x8000u
#define SIUL2_IFEER0_IFEE15_SHIFT                15u
#define SIUL2_IFEER0_IFEE15_WIDTH                1u
#define SIUL2_IFEER0_IFEE15(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE15_SHIFT))&SIUL2_IFEER0_IFEE15_MASK)
#define SIUL2_IFEER0_IFEE16_MASK                 0x10000u
#define SIUL2_IFEER0_IFEE16_SHIFT                16u
#define SIUL2_IFEER0_IFEE16_WIDTH                1u
#define SIUL2_IFEER0_IFEE16(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE16_SHIFT))&SIUL2_IFEER0_IFEE16_MASK)
#define SIUL2_IFEER0_IFEE17_MASK                 0x20000u
#define SIUL2_IFEER0_IFEE17_SHIFT                17u
#define SIUL2_IFEER0_IFEE17_WIDTH                1u
#define SIUL2_IFEER0_IFEE17(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE17_SHIFT))&SIUL2_IFEER0_IFEE17_MASK)
#define SIUL2_IFEER0_IFEE18_MASK                 0x40000u
#define SIUL2_IFEER0_IFEE18_SHIFT                18u
#define SIUL2_IFEER0_IFEE18_WIDTH                1u
#define SIUL2_IFEER0_IFEE18(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE18_SHIFT))&SIUL2_IFEER0_IFEE18_MASK)
#define SIUL2_IFEER0_IFEE19_MASK                 0x80000u
#define SIUL2_IFEER0_IFEE19_SHIFT                19u
#define SIUL2_IFEER0_IFEE19_WIDTH                1u
#define SIUL2_IFEER0_IFEE19(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE19_SHIFT))&SIUL2_IFEER0_IFEE19_MASK)
#define SIUL2_IFEER0_IFEE20_MASK                 0x100000u
#define SIUL2_IFEER0_IFEE20_SHIFT                20u
#define SIUL2_IFEER0_IFEE20_WIDTH                1u
#define SIUL2_IFEER0_IFEE20(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE20_SHIFT))&SIUL2_IFEER0_IFEE20_MASK)
#define SIUL2_IFEER0_IFEE21_MASK                 0x200000u
#define SIUL2_IFEER0_IFEE21_SHIFT                21u
#define SIUL2_IFEER0_IFEE21_WIDTH                1u
#define SIUL2_IFEER0_IFEE21(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE21_SHIFT))&SIUL2_IFEER0_IFEE21_MASK)
#define SIUL2_IFEER0_IFEE22_MASK                 0x400000u
#define SIUL2_IFEER0_IFEE22_SHIFT                22u
#define SIUL2_IFEER0_IFEE22_WIDTH                1u
#define SIUL2_IFEER0_IFEE22(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE22_SHIFT))&SIUL2_IFEER0_IFEE22_MASK)
#define SIUL2_IFEER0_IFEE23_MASK                 0x800000u
#define SIUL2_IFEER0_IFEE23_SHIFT                23u
#define SIUL2_IFEER0_IFEE23_WIDTH                1u
#define SIUL2_IFEER0_IFEE23(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE23_SHIFT))&SIUL2_IFEER0_IFEE23_MASK)
#define SIUL2_IFEER0_IFEE24_MASK                 0x1000000u
#define SIUL2_IFEER0_IFEE24_SHIFT                24u
#define SIUL2_IFEER0_IFEE24_WIDTH                1u
#define SIUL2_IFEER0_IFEE24(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE24_SHIFT))&SIUL2_IFEER0_IFEE24_MASK)
#define SIUL2_IFEER0_IFEE25_MASK                 0x2000000u
#define SIUL2_IFEER0_IFEE25_SHIFT                25u
#define SIUL2_IFEER0_IFEE25_WIDTH                1u
#define SIUL2_IFEER0_IFEE25(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE25_SHIFT))&SIUL2_IFEER0_IFEE25_MASK)
#define SIUL2_IFEER0_IFEE26_MASK                 0x4000000u
#define SIUL2_IFEER0_IFEE26_SHIFT                26u
#define SIUL2_IFEER0_IFEE26_WIDTH                1u
#define SIUL2_IFEER0_IFEE26(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE26_SHIFT))&SIUL2_IFEER0_IFEE26_MASK)
#define SIUL2_IFEER0_IFEE27_MASK                 0x8000000u
#define SIUL2_IFEER0_IFEE27_SHIFT                27u
#define SIUL2_IFEER0_IFEE27_WIDTH                1u
#define SIUL2_IFEER0_IFEE27(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE27_SHIFT))&SIUL2_IFEER0_IFEE27_MASK)
#define SIUL2_IFEER0_IFEE28_MASK                 0x10000000u
#define SIUL2_IFEER0_IFEE28_SHIFT                28u
#define SIUL2_IFEER0_IFEE28_WIDTH                1u
#define SIUL2_IFEER0_IFEE28(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE28_SHIFT))&SIUL2_IFEER0_IFEE28_MASK)
#define SIUL2_IFEER0_IFEE29_MASK                 0x20000000u
#define SIUL2_IFEER0_IFEE29_SHIFT                29u
#define SIUL2_IFEER0_IFEE29_WIDTH                1u
#define SIUL2_IFEER0_IFEE29(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE29_SHIFT))&SIUL2_IFEER0_IFEE29_MASK)
#define SIUL2_IFEER0_IFEE30_MASK                 0x40000000u
#define SIUL2_IFEER0_IFEE30_SHIFT                30u
#define SIUL2_IFEER0_IFEE30_WIDTH                1u
#define SIUL2_IFEER0_IFEE30(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE30_SHIFT))&SIUL2_IFEER0_IFEE30_MASK)
#define SIUL2_IFEER0_IFEE31_MASK                 0x80000000u
#define SIUL2_IFEER0_IFEE31_SHIFT                31u
#define SIUL2_IFEER0_IFEE31_WIDTH                1u
#define SIUL2_IFEER0_IFEE31(x)                   (((uint32_t)(((uint32_t)(x))<<SIUL2_IFEER0_IFEE31_SHIFT))&SIUL2_IFEER0_IFEE31_MASK)
/* IFER0 Bit Fields */
#define SIUL2_IFER0_IFE0_MASK                    0x1u
#define SIUL2_IFER0_IFE0_SHIFT                   0u
#define SIUL2_IFER0_IFE0_WIDTH                   1u
#define SIUL2_IFER0_IFE0(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE0_SHIFT))&SIUL2_IFER0_IFE0_MASK)
#define SIUL2_IFER0_IFE1_MASK                    0x2u
#define SIUL2_IFER0_IFE1_SHIFT                   1u
#define SIUL2_IFER0_IFE1_WIDTH                   1u
#define SIUL2_IFER0_IFE1(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE1_SHIFT))&SIUL2_IFER0_IFE1_MASK)
#define SIUL2_IFER0_IFE2_MASK                    0x4u
#define SIUL2_IFER0_IFE2_SHIFT                   2u
#define SIUL2_IFER0_IFE2_WIDTH                   1u
#define SIUL2_IFER0_IFE2(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE2_SHIFT))&SIUL2_IFER0_IFE2_MASK)
#define SIUL2_IFER0_IFE3_MASK                    0x8u
#define SIUL2_IFER0_IFE3_SHIFT                   3u
#define SIUL2_IFER0_IFE3_WIDTH                   1u
#define SIUL2_IFER0_IFE3(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE3_SHIFT))&SIUL2_IFER0_IFE3_MASK)
#define SIUL2_IFER0_IFE4_MASK                    0x10u
#define SIUL2_IFER0_IFE4_SHIFT                   4u
#define SIUL2_IFER0_IFE4_WIDTH                   1u
#define SIUL2_IFER0_IFE4(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE4_SHIFT))&SIUL2_IFER0_IFE4_MASK)
#define SIUL2_IFER0_IFE5_MASK                    0x20u
#define SIUL2_IFER0_IFE5_SHIFT                   5u
#define SIUL2_IFER0_IFE5_WIDTH                   1u
#define SIUL2_IFER0_IFE5(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE5_SHIFT))&SIUL2_IFER0_IFE5_MASK)
#define SIUL2_IFER0_IFE6_MASK                    0x40u
#define SIUL2_IFER0_IFE6_SHIFT                   6u
#define SIUL2_IFER0_IFE6_WIDTH                   1u
#define SIUL2_IFER0_IFE6(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE6_SHIFT))&SIUL2_IFER0_IFE6_MASK)
#define SIUL2_IFER0_IFE7_MASK                    0x80u
#define SIUL2_IFER0_IFE7_SHIFT                   7u
#define SIUL2_IFER0_IFE7_WIDTH                   1u
#define SIUL2_IFER0_IFE7(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE7_SHIFT))&SIUL2_IFER0_IFE7_MASK)
#define SIUL2_IFER0_IFE8_MASK                    0x100u
#define SIUL2_IFER0_IFE8_SHIFT                   8u
#define SIUL2_IFER0_IFE8_WIDTH                   1u
#define SIUL2_IFER0_IFE8(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE8_SHIFT))&SIUL2_IFER0_IFE8_MASK)
#define SIUL2_IFER0_IFE9_MASK                    0x200u
#define SIUL2_IFER0_IFE9_SHIFT                   9u
#define SIUL2_IFER0_IFE9_WIDTH                   1u
#define SIUL2_IFER0_IFE9(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE9_SHIFT))&SIUL2_IFER0_IFE9_MASK)
#define SIUL2_IFER0_IFE10_MASK                   0x400u
#define SIUL2_IFER0_IFE10_SHIFT                  10u
#define SIUL2_IFER0_IFE10_WIDTH                  1u
#define SIUL2_IFER0_IFE10(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE10_SHIFT))&SIUL2_IFER0_IFE10_MASK)
#define SIUL2_IFER0_IFE11_MASK                   0x800u
#define SIUL2_IFER0_IFE11_SHIFT                  11u
#define SIUL2_IFER0_IFE11_WIDTH                  1u
#define SIUL2_IFER0_IFE11(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE11_SHIFT))&SIUL2_IFER0_IFE11_MASK)
#define SIUL2_IFER0_IFE12_MASK                   0x1000u
#define SIUL2_IFER0_IFE12_SHIFT                  12u
#define SIUL2_IFER0_IFE12_WIDTH                  1u
#define SIUL2_IFER0_IFE12(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE12_SHIFT))&SIUL2_IFER0_IFE12_MASK)
#define SIUL2_IFER0_IFE13_MASK                   0x2000u
#define SIUL2_IFER0_IFE13_SHIFT                  13u
#define SIUL2_IFER0_IFE13_WIDTH                  1u
#define SIUL2_IFER0_IFE13(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE13_SHIFT))&SIUL2_IFER0_IFE13_MASK)
#define SIUL2_IFER0_IFE14_MASK                   0x4000u
#define SIUL2_IFER0_IFE14_SHIFT                  14u
#define SIUL2_IFER0_IFE14_WIDTH                  1u
#define SIUL2_IFER0_IFE14(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE14_SHIFT))&SIUL2_IFER0_IFE14_MASK)
#define SIUL2_IFER0_IFE15_MASK                   0x8000u
#define SIUL2_IFER0_IFE15_SHIFT                  15u
#define SIUL2_IFER0_IFE15_WIDTH                  1u
#define SIUL2_IFER0_IFE15(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE15_SHIFT))&SIUL2_IFER0_IFE15_MASK)
#define SIUL2_IFER0_IFE16_MASK                   0x10000u
#define SIUL2_IFER0_IFE16_SHIFT                  16u
#define SIUL2_IFER0_IFE16_WIDTH                  1u
#define SIUL2_IFER0_IFE16(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE16_SHIFT))&SIUL2_IFER0_IFE16_MASK)
#define SIUL2_IFER0_IFE17_MASK                   0x20000u
#define SIUL2_IFER0_IFE17_SHIFT                  17u
#define SIUL2_IFER0_IFE17_WIDTH                  1u
#define SIUL2_IFER0_IFE17(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE17_SHIFT))&SIUL2_IFER0_IFE17_MASK)
#define SIUL2_IFER0_IFE18_MASK                   0x40000u
#define SIUL2_IFER0_IFE18_SHIFT                  18u
#define SIUL2_IFER0_IFE18_WIDTH                  1u
#define SIUL2_IFER0_IFE18(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE18_SHIFT))&SIUL2_IFER0_IFE18_MASK)
#define SIUL2_IFER0_IFE19_MASK                   0x80000u
#define SIUL2_IFER0_IFE19_SHIFT                  19u
#define SIUL2_IFER0_IFE19_WIDTH                  1u
#define SIUL2_IFER0_IFE19(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE19_SHIFT))&SIUL2_IFER0_IFE19_MASK)
#define SIUL2_IFER0_IFE20_MASK                   0x100000u
#define SIUL2_IFER0_IFE20_SHIFT                  20u
#define SIUL2_IFER0_IFE20_WIDTH                  1u
#define SIUL2_IFER0_IFE20(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE20_SHIFT))&SIUL2_IFER0_IFE20_MASK)
#define SIUL2_IFER0_IFE21_MASK                   0x200000u
#define SIUL2_IFER0_IFE21_SHIFT                  21u
#define SIUL2_IFER0_IFE21_WIDTH                  1u
#define SIUL2_IFER0_IFE21(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE21_SHIFT))&SIUL2_IFER0_IFE21_MASK)
#define SIUL2_IFER0_IFE22_MASK                   0x400000u
#define SIUL2_IFER0_IFE22_SHIFT                  22u
#define SIUL2_IFER0_IFE22_WIDTH                  1u
#define SIUL2_IFER0_IFE22(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE22_SHIFT))&SIUL2_IFER0_IFE22_MASK)
#define SIUL2_IFER0_IFE23_MASK                   0x800000u
#define SIUL2_IFER0_IFE23_SHIFT                  23u
#define SIUL2_IFER0_IFE23_WIDTH                  1u
#define SIUL2_IFER0_IFE23(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE23_SHIFT))&SIUL2_IFER0_IFE23_MASK)
#define SIUL2_IFER0_IFE24_MASK                   0x1000000u
#define SIUL2_IFER0_IFE24_SHIFT                  24u
#define SIUL2_IFER0_IFE24_WIDTH                  1u
#define SIUL2_IFER0_IFE24(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE24_SHIFT))&SIUL2_IFER0_IFE24_MASK)
#define SIUL2_IFER0_IFE25_MASK                   0x2000000u
#define SIUL2_IFER0_IFE25_SHIFT                  25u
#define SIUL2_IFER0_IFE25_WIDTH                  1u
#define SIUL2_IFER0_IFE25(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE25_SHIFT))&SIUL2_IFER0_IFE25_MASK)
#define SIUL2_IFER0_IFE26_MASK                   0x4000000u
#define SIUL2_IFER0_IFE26_SHIFT                  26u
#define SIUL2_IFER0_IFE26_WIDTH                  1u
#define SIUL2_IFER0_IFE26(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE26_SHIFT))&SIUL2_IFER0_IFE26_MASK)
#define SIUL2_IFER0_IFE27_MASK                   0x8000000u
#define SIUL2_IFER0_IFE27_SHIFT                  27u
#define SIUL2_IFER0_IFE27_WIDTH                  1u
#define SIUL2_IFER0_IFE27(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE27_SHIFT))&SIUL2_IFER0_IFE27_MASK)
#define SIUL2_IFER0_IFE28_MASK                   0x10000000u
#define SIUL2_IFER0_IFE28_SHIFT                  28u
#define SIUL2_IFER0_IFE28_WIDTH                  1u
#define SIUL2_IFER0_IFE28(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE28_SHIFT))&SIUL2_IFER0_IFE28_MASK)
#define SIUL2_IFER0_IFE29_MASK                   0x20000000u
#define SIUL2_IFER0_IFE29_SHIFT                  29u
#define SIUL2_IFER0_IFE29_WIDTH                  1u
#define SIUL2_IFER0_IFE29(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE29_SHIFT))&SIUL2_IFER0_IFE29_MASK)
#define SIUL2_IFER0_IFE30_MASK                   0x40000000u
#define SIUL2_IFER0_IFE30_SHIFT                  30u
#define SIUL2_IFER0_IFE30_WIDTH                  1u
#define SIUL2_IFER0_IFE30(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE30_SHIFT))&SIUL2_IFER0_IFE30_MASK)
#define SIUL2_IFER0_IFE31_MASK                   0x80000000u
#define SIUL2_IFER0_IFE31_SHIFT                  31u
#define SIUL2_IFER0_IFE31_WIDTH                  1u
#define SIUL2_IFER0_IFE31(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_IFER0_IFE31_SHIFT))&SIUL2_IFER0_IFE31_MASK)
/* IFMCR Bit Fields */
#define SIUL2_IFMCR_MAXCNT_MASK                  0xFu
#define SIUL2_IFMCR_MAXCNT_SHIFT                 0u
#define SIUL2_IFMCR_MAXCNT_WIDTH                 4u
#define SIUL2_IFMCR_MAXCNT(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_IFMCR_MAXCNT_SHIFT))&SIUL2_IFMCR_MAXCNT_MASK)
/* IFCPR Bit Fields */
#define SIUL2_IFCPR_IFCP_MASK                    0xFu
#define SIUL2_IFCPR_IFCP_SHIFT                   0u
#define SIUL2_IFCPR_IFCP_WIDTH                   4u
#define SIUL2_IFCPR_IFCP(x)                      (((uint32_t)(((uint32_t)(x))<<SIUL2_IFCPR_IFCP_SHIFT))&SIUL2_IFCPR_IFCP_MASK)
/* MSCR Bit Fields */
#define SIUL2_MSCR_SSS_MASK                      0xFu
#define SIUL2_MSCR_SSS_SHIFT                     0u
#define SIUL2_MSCR_SSS_WIDTH                     4u
#define SIUL2_MSCR_SSS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_SSS_SHIFT))&SIUL2_MSCR_SSS_MASK)
#define SIUL2_MSCR_PUE_MASK                      0x10000u
#define SIUL2_MSCR_PUE_SHIFT                     16u
#define SIUL2_MSCR_PUE_WIDTH                     1u
#define SIUL2_MSCR_PUE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_PUE_SHIFT))&SIUL2_MSCR_PUE_MASK)
#define SIUL2_MSCR_PUS_MASK                      0x20000u
#define SIUL2_MSCR_PUS_SHIFT                     17u
#define SIUL2_MSCR_PUS_WIDTH                     1u
#define SIUL2_MSCR_PUS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_PUS_SHIFT))&SIUL2_MSCR_PUS_MASK)
#define SIUL2_MSCR_HYS_MASK                      0x40000u
#define SIUL2_MSCR_HYS_SHIFT                     18u
#define SIUL2_MSCR_HYS_WIDTH                     1u
#define SIUL2_MSCR_HYS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_HYS_SHIFT))&SIUL2_MSCR_HYS_MASK)
#define SIUL2_MSCR_IBE_MASK                      0x80000u
#define SIUL2_MSCR_IBE_SHIFT                     19u
#define SIUL2_MSCR_IBE_WIDTH                     1u
#define SIUL2_MSCR_IBE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_IBE_SHIFT))&SIUL2_MSCR_IBE_MASK)
#define SIUL2_MSCR_APC_MASK                      0x400000u
#define SIUL2_MSCR_APC_SHIFT                     22u
#define SIUL2_MSCR_APC_WIDTH                     1u
#define SIUL2_MSCR_APC(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_APC_SHIFT))&SIUL2_MSCR_APC_MASK)
#define SIUL2_MSCR_SMC_MASK                      0x800000u
#define SIUL2_MSCR_SMC_SHIFT                     23u
#define SIUL2_MSCR_SMC_WIDTH                     1u
#define SIUL2_MSCR_SMC(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_SMC_SHIFT))&SIUL2_MSCR_SMC_MASK)
#define SIUL2_MSCR_ODE_MASK                      0x1000000u
#define SIUL2_MSCR_ODE_SHIFT                     24u
#define SIUL2_MSCR_ODE_WIDTH                     1u
#define SIUL2_MSCR_ODE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_ODE_SHIFT))&SIUL2_MSCR_ODE_MASK)
#define SIUL2_MSCR_OBE_MASK                      0x2000000u
#define SIUL2_MSCR_OBE_SHIFT                     25u
#define SIUL2_MSCR_OBE_WIDTH                     1u
#define SIUL2_MSCR_OBE(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_OBE_SHIFT))&SIUL2_MSCR_OBE_MASK)
#define SIUL2_MSCR_SRC_MASK                      0x30000000u
#define SIUL2_MSCR_SRC_SHIFT                     28u
#define SIUL2_MSCR_SRC_WIDTH                     2u
#define SIUL2_MSCR_SRC(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_MSCR_SRC_SHIFT))&SIUL2_MSCR_SRC_MASK)
/* IMCR Bit Fields */
#define SIUL2_IMCR_SSS_MASK                      0xFu
#define SIUL2_IMCR_SSS_SHIFT                     0u
#define SIUL2_IMCR_SSS_WIDTH                     4u
#define SIUL2_IMCR_SSS(x)                        (((uint32_t)(((uint32_t)(x))<<SIUL2_IMCR_SSS_SHIFT))&SIUL2_IMCR_SSS_MASK)
/* GPDO Bit Fields */
#define SIUL2_GPDO_PDO_4n3_MASK                  0x1u
#define SIUL2_GPDO_PDO_4n3_SHIFT                 0u
#define SIUL2_GPDO_PDO_4n3_WIDTH                 1u
#define SIUL2_GPDO_PDO_4n3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n3_SHIFT))&SIUL2_GPDO_PDO_4n3_MASK)
#define SIUL2_GPDO_PDO_4n2_MASK                  0x100u
#define SIUL2_GPDO_PDO_4n2_SHIFT                 8u
#define SIUL2_GPDO_PDO_4n2_WIDTH                 1u
#define SIUL2_GPDO_PDO_4n2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n2_SHIFT))&SIUL2_GPDO_PDO_4n2_MASK)
#define SIUL2_GPDO_PDO_4n1_MASK                  0x10000u
#define SIUL2_GPDO_PDO_4n1_SHIFT                 16u
#define SIUL2_GPDO_PDO_4n1_WIDTH                 1u
#define SIUL2_GPDO_PDO_4n1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n1_SHIFT))&SIUL2_GPDO_PDO_4n1_MASK)
#define SIUL2_GPDO_PDO_4n_MASK                   0x1000000u
#define SIUL2_GPDO_PDO_4n_SHIFT                  24u
#define SIUL2_GPDO_PDO_4n_WIDTH                  1u
#define SIUL2_GPDO_PDO_4n(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDO_PDO_4n_SHIFT))&SIUL2_GPDO_PDO_4n_MASK)
/* GPDI Bit Fields */
#define SIUL2_GPDI_PDI_4n3_MASK                  0x1u
#define SIUL2_GPDI_PDI_4n3_SHIFT                 0u
#define SIUL2_GPDI_PDI_4n3_WIDTH                 1u
#define SIUL2_GPDI_PDI_4n3(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n3_SHIFT))&SIUL2_GPDI_PDI_4n3_MASK)
#define SIUL2_GPDI_PDI_4n2_MASK                  0x100u
#define SIUL2_GPDI_PDI_4n2_SHIFT                 8u
#define SIUL2_GPDI_PDI_4n2_WIDTH                 1u
#define SIUL2_GPDI_PDI_4n2(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n2_SHIFT))&SIUL2_GPDI_PDI_4n2_MASK)
#define SIUL2_GPDI_PDI_4n1_MASK                  0x10000u
#define SIUL2_GPDI_PDI_4n1_SHIFT                 16u
#define SIUL2_GPDI_PDI_4n1_WIDTH                 1u
#define SIUL2_GPDI_PDI_4n1(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n1_SHIFT))&SIUL2_GPDI_PDI_4n1_MASK)
#define SIUL2_GPDI_PDI_4n_MASK                   0x1000000u
#define SIUL2_GPDI_PDI_4n_SHIFT                  24u
#define SIUL2_GPDI_PDI_4n_WIDTH                  1u
#define SIUL2_GPDI_PDI_4n(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_GPDI_PDI_4n_SHIFT))&SIUL2_GPDI_PDI_4n_MASK)
/* PGPDO Bit Fields */
#define SIUL2_PGPDO_PPDO_MASK                    0xFFFFu
#define SIUL2_PGPDO_PPDO_SHIFT                   0u
#define SIUL2_PGPDO_PPDO_WIDTH                   16u
#define SIUL2_PGPDO_PPDO(x)                      (((uint16_t)(((uint16_t)(x))<<SIUL2_PGPDO_PPDO_SHIFT))&SIUL2_PGPDO_PPDO_MASK)
/* PGPDI Bit Fields */
#define SIUL2_PGPDI_PPDI_MASK                    0xFFFFu
#define SIUL2_PGPDI_PPDI_SHIFT                   0u
#define SIUL2_PGPDI_PPDI_WIDTH                   16u
#define SIUL2_PGPDI_PPDI(x)                      (((uint16_t)(((uint16_t)(x))<<SIUL2_PGPDI_PPDI_SHIFT))&SIUL2_PGPDI_PPDI_MASK)
/* MPGPDO Bit Fields */
#define SIUL2_MPGPDO_MPPDO_MASK                  0xFFFFu
#define SIUL2_MPGPDO_MPPDO_SHIFT                 0u
#define SIUL2_MPGPDO_MPPDO_WIDTH                 16u
#define SIUL2_MPGPDO_MPPDO(x)                    (((uint32_t)(((uint32_t)(x))<<SIUL2_MPGPDO_MPPDO_SHIFT))&SIUL2_MPGPDO_MPPDO_MASK)
#define SIUL2_MPGPDO_MASK_MASK                   0xFFFF0000u
#define SIUL2_MPGPDO_MASK_SHIFT                  16u
#define SIUL2_MPGPDO_MASK_WIDTH                  16u
#define SIUL2_MPGPDO_MASK(x)                     (((uint32_t)(((uint32_t)(x))<<SIUL2_MPGPDO_MASK_SHIFT))&SIUL2_MPGPDO_MASK_MASK)

/*!
 * @}
 */ /* end of group SIUL2_Register_Masks */


/*!
 * @}
 */ /* end of group SIUL2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SMPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMPU_Peripheral_Access_Layer SMPU Peripheral Access Layer
 * @{
 */


/** SMPU - Size of Registers Arrays */
#define SMPU_ERROR_COUNT                         16u
#define SMPU_RGD_COUNT                           16u

/** SMPU - Register Layout Typedef */
typedef struct {
  __IO uint32_t CES0;                              /**< Control/Error Status Register 0, offset: 0x0 */
  __I  uint32_t CES1;                              /**< Control/Error Status Register 1, offset: 0x4 */
       uint8_t RESERVED_0[248];
  struct {                                         /* offset: 0x100, array step: 0x10 */
    __I  uint32_t ADR;                               /**< Error Address Register, Bus Master, array offset: 0x100, array step: 0x10 */
    __I  uint32_t ADTL;                              /**< Error Attribute Detail Register, Bus Master, array offset: 0x104, array step: 0x10 */
    __I  uint32_t ACDL;                              /**< Error Attribute Control Detail Register, Bus Master, array offset: 0x108, array step: 0x10 */
         uint8_t RESERVED_0[4];
  } ERROR[SMPU_ERROR_COUNT];
       uint8_t RESERVED_1[512];
  struct {                                         /* offset: 0x400, array step: 0x40 */
    __IO uint32_t WORD0;                             /**< Region Descriptor n, Word 0, array offset: 0x400, array step: 0x40 */
    __IO uint32_t WORD1;                             /**< Region Descriptor n, Word 1, array offset: 0x404, array step: 0x40 */
    __IO uint32_t WORD2;                             /**< Region Descriptor n, Word 2, array offset: 0x408, array step: 0x40 */
    __IO uint32_t WORD3;                             /**< Region Descriptor n, Word 3, array offset: 0x40C, array step: 0x40 */
    __IO uint32_t WORD4;                             /**< Region Descriptor n, Word 4, array offset: 0x410, array step: 0x40 */
    __IO uint32_t WORD5;                             /**< Region Descriptor n, Word 5, array offset: 0x414, array step: 0x40 */
         uint8_t RESERVED_0[40];
  } RGD[SMPU_RGD_COUNT];
} SMPU_Type, *SMPU_MemMapPtr;

 /** Number of instances of the SMPU module. */
#define SMPU_INSTANCE_COUNT                      (2u)


/* SMPU - Peripheral instance base addresses */
/** Peripheral SMPU_0 base address */
#define SMPU_0_BASE                              (0xFC010000u)
/** Peripheral SMPU_0 base pointer */
#define SMPU_0                                   ((SMPU_Type *)SMPU_0_BASE)
/** Peripheral SMPU_1 base address */
#define SMPU_1_BASE                              (0xFC014000u)
/** Peripheral SMPU_1 base pointer */
#define SMPU_1                                   ((SMPU_Type *)SMPU_1_BASE)
/** Array initializer of SMPU peripheral base addresses */
#define SMPU_BASE_ADDRS                          { SMPU_0_BASE, SMPU_1_BASE }
/** Array initializer of SMPU peripheral base pointers */
#define SMPU_BASE_PTRS                           { SMPU_0, SMPU_1 }

/* ----------------------------------------------------------------------------
   -- SMPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SMPU_Register_Masks SMPU Register Masks
 * @{
 */

/* CES0 Bit Fields */
#define SMPU_CES0_GVLD_MASK                      0x1u
#define SMPU_CES0_GVLD_SHIFT                     0u
#define SMPU_CES0_GVLD_WIDTH                     1u
#define SMPU_CES0_GVLD(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_CES0_GVLD_SHIFT))&SMPU_CES0_GVLD_MASK)
#define SMPU_CES0_HRL_MASK                       0xEu
#define SMPU_CES0_HRL_SHIFT                      1u
#define SMPU_CES0_HRL_WIDTH                      3u
#define SMPU_CES0_HRL(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_CES0_HRL_SHIFT))&SMPU_CES0_HRL_MASK)
#define SMPU_CES0_MERR_MASK                      0xFFFF0000u
#define SMPU_CES0_MERR_SHIFT                     16u
#define SMPU_CES0_MERR_WIDTH                     16u
#define SMPU_CES0_MERR(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_CES0_MERR_SHIFT))&SMPU_CES0_MERR_MASK)
/* CES1 Bit Fields */
#define SMPU_CES1_NRGD_MASK                      0xFu
#define SMPU_CES1_NRGD_SHIFT                     0u
#define SMPU_CES1_NRGD_WIDTH                     4u
#define SMPU_CES1_NRGD(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_CES1_NRGD_SHIFT))&SMPU_CES1_NRGD_MASK)
#define SMPU_CES1_MEOVR_MASK                     0xFFFF0000u
#define SMPU_CES1_MEOVR_SHIFT                    16u
#define SMPU_CES1_MEOVR_WIDTH                    16u
#define SMPU_CES1_MEOVR(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_CES1_MEOVR_SHIFT))&SMPU_CES1_MEOVR_MASK)
/* ADR Bit Fields */
#define SMPU_ADR_EADDR_MASK                      0xFFFFFFFFu
#define SMPU_ADR_EADDR_SHIFT                     0u
#define SMPU_ADR_EADDR_WIDTH                     32u
#define SMPU_ADR_EADDR(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_ADR_EADDR_SHIFT))&SMPU_ADR_EADDR_MASK)
/* ADTL Bit Fields */
#define SMPU_ADTL_EMN_MASK                       0x7Fu
#define SMPU_ADTL_EMN_SHIFT                      0u
#define SMPU_ADTL_EMN_WIDTH                      7u
#define SMPU_ADTL_EMN(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_ADTL_EMN_SHIFT))&SMPU_ADTL_EMN_MASK)
#define SMPU_ADTL_ERW_MASK                       0x80u
#define SMPU_ADTL_ERW_SHIFT                      7u
#define SMPU_ADTL_ERW_WIDTH                      1u
#define SMPU_ADTL_ERW(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_ADTL_ERW_SHIFT))&SMPU_ADTL_ERW_MASK)
#define SMPU_ADTL_EATTR_MASK                     0x300u
#define SMPU_ADTL_EATTR_SHIFT                    8u
#define SMPU_ADTL_EATTR_WIDTH                    2u
#define SMPU_ADTL_EATTR(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_ADTL_EATTR_SHIFT))&SMPU_ADTL_EATTR_MASK)
#define SMPU_ADTL_PID_MASK                       0xFF000000u
#define SMPU_ADTL_PID_SHIFT                      24u
#define SMPU_ADTL_PID_WIDTH                      8u
#define SMPU_ADTL_PID(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_ADTL_PID_SHIFT))&SMPU_ADTL_PID_MASK)
/* ACDL Bit Fields */
#define SMPU_ACDL_EACD_MASK                      0xFFFFFF00u
#define SMPU_ACDL_EACD_SHIFT                     8u
#define SMPU_ACDL_EACD_WIDTH                     24u
#define SMPU_ACDL_EACD(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_ACDL_EACD_SHIFT))&SMPU_ACDL_EACD_MASK)
/* WORD0 Bit Fields */
#define SMPU_WORD0_SRTADDR_MASK                  0xFFFFFFF0u
#define SMPU_WORD0_SRTADDR_SHIFT                 4u
#define SMPU_WORD0_SRTADDR_WIDTH                 28u
#define SMPU_WORD0_SRTADDR(x)                    (((uint32_t)(((uint32_t)(x))<<SMPU_WORD0_SRTADDR_SHIFT))&SMPU_WORD0_SRTADDR_MASK)
/* WORD1 Bit Fields */
#define SMPU_WORD1_ENDADDR_MASK                  0xFFFFFFF0u
#define SMPU_WORD1_ENDADDR_SHIFT                 4u
#define SMPU_WORD1_ENDADDR_WIDTH                 28u
#define SMPU_WORD1_ENDADDR(x)                    (((uint32_t)(((uint32_t)(x))<<SMPU_WORD1_ENDADDR_SHIFT))&SMPU_WORD1_ENDADDR_MASK)
/* WORD2 Bit Fields */
#define SMPU_WORD2_M15P_MASK                     0x3u
#define SMPU_WORD2_M15P_SHIFT                    0u
#define SMPU_WORD2_M15P_WIDTH                    2u
#define SMPU_WORD2_M15P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M15P_SHIFT))&SMPU_WORD2_M15P_MASK)
#define SMPU_WORD2_M14P_MASK                     0xCu
#define SMPU_WORD2_M14P_SHIFT                    2u
#define SMPU_WORD2_M14P_WIDTH                    2u
#define SMPU_WORD2_M14P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M14P_SHIFT))&SMPU_WORD2_M14P_MASK)
#define SMPU_WORD2_M13P_MASK                     0x30u
#define SMPU_WORD2_M13P_SHIFT                    4u
#define SMPU_WORD2_M13P_WIDTH                    2u
#define SMPU_WORD2_M13P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M13P_SHIFT))&SMPU_WORD2_M13P_MASK)
#define SMPU_WORD2_M12P_MASK                     0xC0u
#define SMPU_WORD2_M12P_SHIFT                    6u
#define SMPU_WORD2_M12P_WIDTH                    2u
#define SMPU_WORD2_M12P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M12P_SHIFT))&SMPU_WORD2_M12P_MASK)
#define SMPU_WORD2_M11P_MASK                     0x300u
#define SMPU_WORD2_M11P_SHIFT                    8u
#define SMPU_WORD2_M11P_WIDTH                    2u
#define SMPU_WORD2_M11P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M11P_SHIFT))&SMPU_WORD2_M11P_MASK)
#define SMPU_WORD2_M10P_MASK                     0xC00u
#define SMPU_WORD2_M10P_SHIFT                    10u
#define SMPU_WORD2_M10P_WIDTH                    2u
#define SMPU_WORD2_M10P(x)                       (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M10P_SHIFT))&SMPU_WORD2_M10P_MASK)
#define SMPU_WORD2_M9P_MASK                      0x3000u
#define SMPU_WORD2_M9P_SHIFT                     12u
#define SMPU_WORD2_M9P_WIDTH                     2u
#define SMPU_WORD2_M9P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M9P_SHIFT))&SMPU_WORD2_M9P_MASK)
#define SMPU_WORD2_M8P_MASK                      0xC000u
#define SMPU_WORD2_M8P_SHIFT                     14u
#define SMPU_WORD2_M8P_WIDTH                     2u
#define SMPU_WORD2_M8P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M8P_SHIFT))&SMPU_WORD2_M8P_MASK)
#define SMPU_WORD2_M7P_MASK                      0x30000u
#define SMPU_WORD2_M7P_SHIFT                     16u
#define SMPU_WORD2_M7P_WIDTH                     2u
#define SMPU_WORD2_M7P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M7P_SHIFT))&SMPU_WORD2_M7P_MASK)
#define SMPU_WORD2_M6P_MASK                      0xC0000u
#define SMPU_WORD2_M6P_SHIFT                     18u
#define SMPU_WORD2_M6P_WIDTH                     2u
#define SMPU_WORD2_M6P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M6P_SHIFT))&SMPU_WORD2_M6P_MASK)
#define SMPU_WORD2_M5P_MASK                      0x300000u
#define SMPU_WORD2_M5P_SHIFT                     20u
#define SMPU_WORD2_M5P_WIDTH                     2u
#define SMPU_WORD2_M5P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M5P_SHIFT))&SMPU_WORD2_M5P_MASK)
#define SMPU_WORD2_M4P_MASK                      0xC00000u
#define SMPU_WORD2_M4P_SHIFT                     22u
#define SMPU_WORD2_M4P_WIDTH                     2u
#define SMPU_WORD2_M4P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M4P_SHIFT))&SMPU_WORD2_M4P_MASK)
#define SMPU_WORD2_M3P_MASK                      0x3000000u
#define SMPU_WORD2_M3P_SHIFT                     24u
#define SMPU_WORD2_M3P_WIDTH                     2u
#define SMPU_WORD2_M3P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M3P_SHIFT))&SMPU_WORD2_M3P_MASK)
#define SMPU_WORD2_M2P_MASK                      0xC000000u
#define SMPU_WORD2_M2P_SHIFT                     26u
#define SMPU_WORD2_M2P_WIDTH                     2u
#define SMPU_WORD2_M2P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M2P_SHIFT))&SMPU_WORD2_M2P_MASK)
#define SMPU_WORD2_M1P_MASK                      0x30000000u
#define SMPU_WORD2_M1P_SHIFT                     28u
#define SMPU_WORD2_M1P_WIDTH                     2u
#define SMPU_WORD2_M1P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M1P_SHIFT))&SMPU_WORD2_M1P_MASK)
#define SMPU_WORD2_M0P_MASK                      0xC0000000u
#define SMPU_WORD2_M0P_SHIFT                     30u
#define SMPU_WORD2_M0P_WIDTH                     2u
#define SMPU_WORD2_M0P(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD2_M0P_SHIFT))&SMPU_WORD2_M0P_MASK)
/* WORD3 Bit Fields */
#define SMPU_WORD3_CI_MASK                       0x2u
#define SMPU_WORD3_CI_SHIFT                      1u
#define SMPU_WORD3_CI_WIDTH                      1u
#define SMPU_WORD3_CI(x)                         (((uint32_t)(((uint32_t)(x))<<SMPU_WORD3_CI_SHIFT))&SMPU_WORD3_CI_MASK)
/* WORD4 Bit Fields */
#define SMPU_WORD4_PIDEN_MASK                    0x1u
#define SMPU_WORD4_PIDEN_SHIFT                   0u
#define SMPU_WORD4_PIDEN_WIDTH                   1u
#define SMPU_WORD4_PIDEN(x)                      (((uint32_t)(((uint32_t)(x))<<SMPU_WORD4_PIDEN_SHIFT))&SMPU_WORD4_PIDEN_MASK)
#define SMPU_WORD4_PID_MSK_MASK                  0xFF0000u
#define SMPU_WORD4_PID_MSK_SHIFT                 16u
#define SMPU_WORD4_PID_MSK_WIDTH                 8u
#define SMPU_WORD4_PID_MSK(x)                    (((uint32_t)(((uint32_t)(x))<<SMPU_WORD4_PID_MSK_SHIFT))&SMPU_WORD4_PID_MSK_MASK)
#define SMPU_WORD4_PID_MASK                      0xFF000000u
#define SMPU_WORD4_PID_SHIFT                     24u
#define SMPU_WORD4_PID_WIDTH                     8u
#define SMPU_WORD4_PID(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD4_PID_SHIFT))&SMPU_WORD4_PID_MASK)
/* WORD5 Bit Fields */
#define SMPU_WORD5_VLD_MASK                      0x1u
#define SMPU_WORD5_VLD_SHIFT                     0u
#define SMPU_WORD5_VLD_WIDTH                     1u
#define SMPU_WORD5_VLD(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD5_VLD_SHIFT))&SMPU_WORD5_VLD_MASK)
#define SMPU_WORD5_LCK_MASK                      0xCu
#define SMPU_WORD5_LCK_SHIFT                     2u
#define SMPU_WORD5_LCK_WIDTH                     2u
#define SMPU_WORD5_LCK(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD5_LCK_SHIFT))&SMPU_WORD5_LCK_MASK)
#define SMPU_WORD5_MID_MASK                      0xFF000000u
#define SMPU_WORD5_MID_SHIFT                     24u
#define SMPU_WORD5_MID_WIDTH                     8u
#define SMPU_WORD5_MID(x)                        (((uint32_t)(((uint32_t)(x))<<SMPU_WORD5_MID_SHIFT))&SMPU_WORD5_MID_MASK)

/*!
 * @}
 */ /* end of group SMPU_Register_Masks */


/*!
 * @}
 */ /* end of group SMPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SPI Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SPI_Peripheral_Access_Layer SPI Peripheral Access Layer
 * @{
 */


/** SPI - Size of Registers Arrays */
#define SPI_CTAR_COUNT                           6u
#define SPI_CTAR_SLAVE_COUNT                     2u
#define SPI_TXFR_COUNT                           4u
#define SPI_RXFR_COUNT                           4u
#define SPI_CTARE_COUNT                          6u

/** SPI - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< Module Configuration Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t TCR;                               /**< Transfer Count Register, offset: 0x8 */
  union {                                          /* offset: 0xC */
    __IO uint32_t CTAR[SPI_CTAR_COUNT];              /**< Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 */
    __IO uint32_t CTAR_SLAVE[SPI_CTAR_SLAVE_COUNT];  /**< Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 */
  } MODE;
       uint8_t RESERVED_1[8];
  __IO uint32_t SR;                                /**< Status Register, offset: 0x2C */
  __IO uint32_t RSER;                              /**< DMA/Interrupt Request Select and Enable Register, offset: 0x30 */
  union {                                          /* offset: 0x34 */
    struct {                                         /* offset: 0x34 */
      __IO uint16_t CMD;                               /**< SPI_1_PUSHR_FIFO_CMD register...SPI_4_PUSHR_FIFO_CMD register., offset: 0x34 */
      __IO uint16_t TX;                                /**< SPI_1_PUSHR_FIFO_TX register...SPI_4_PUSHR_FIFO_TX register., offset: 0x36 */
    } FIFO;
    __IO uint32_t PUSHR;                             /**< PUSH TX FIFO Register In Master Mode, offset: 0x34 */
    __IO uint32_t SLAVE;                             /**< PUSH TX FIFO Register In Slave Mode, offset: 0x34 */
  } PUSHR;
  __I  uint32_t POPR;                              /**< POP RX FIFO Register, offset: 0x38 */
  __I  uint32_t TXFR[SPI_TXFR_COUNT];              /**< Transmit FIFO Registers, array offset: 0x3C, array step: 0x4 */
       uint8_t RESERVED_2[48];
  __I  uint32_t RXFR[SPI_RXFR_COUNT];              /**< Receive FIFO Registers, array offset: 0x7C, array step: 0x4 */
       uint8_t RESERVED_3[144];
  __IO uint32_t CTARE[SPI_CTARE_COUNT];            /**< Clock and Transfer Attributes Register Extended, array offset: 0x11C, array step: 0x4 */
       uint8_t RESERVED_4[8];
  __I  uint32_t SREX;                              /**< Status Register Extended, offset: 0x13C */
       uint8_t RESERVED_5[16];
  __IO uint32_t TSL;                               /**< Time Slot Length Register, offset: 0x150 */
  __IO uint32_t TS_CONF;                           /**< Time Slot Configuration Register, offset: 0x154 */
} SPI_Type, *SPI_MemMapPtr;

 /** Number of instances of the SPI module. */
#define SPI_INSTANCE_COUNT                       (6u)


/* SPI - Peripheral instance base addresses */
/** Peripheral SPI_0 base address */
#define SPI_0_BASE                               (0xFFFCC000u)
/** Peripheral SPI_0 base pointer */
#define SPI_0                                    ((SPI_Type *)SPI_0_BASE)
/** Peripheral SPI_1 base address */
#define SPI_1_BASE                               (0xFBF9C000u)
/** Peripheral SPI_1 base pointer */
#define SPI_1                                    ((SPI_Type *)SPI_1_BASE)
/** Peripheral SPI_2 base address */
#define SPI_2_BASE                               (0xFFFD0000u)
/** Peripheral SPI_2 base pointer */
#define SPI_2                                    ((SPI_Type *)SPI_2_BASE)
/** Peripheral SPI_3 base address */
#define SPI_3_BASE                               (0xFBFA0000u)
/** Peripheral SPI_3 base pointer */
#define SPI_3                                    ((SPI_Type *)SPI_3_BASE)
/** Peripheral SPI_4 base address */
#define SPI_4_BASE                               (0xFFFD4000u)
/** Peripheral SPI_4 base pointer */
#define SPI_4                                    ((SPI_Type *)SPI_4_BASE)
/** Peripheral SPI_5 base address */
#define SPI_5_BASE                               (0xFBFA4000u)
/** Peripheral SPI_5 base pointer */
#define SPI_5                                    ((SPI_Type *)SPI_5_BASE)
/** Array initializer of SPI peripheral base addresses */
#define SPI_BASE_ADDRS                           { SPI_0_BASE, SPI_1_BASE, SPI_2_BASE, SPI_3_BASE, SPI_4_BASE, SPI_5_BASE }
/** Array initializer of SPI peripheral base pointers */
#define SPI_BASE_PTRS                            { SPI_0, SPI_1, SPI_2, SPI_3, SPI_4, SPI_5 }

/* ----------------------------------------------------------------------------
   -- SPI Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SPI_Register_Masks SPI Register Masks
 * @{
 */

/* MCR Bit Fields */
#define SPI_MCR_HALT_MASK                        0x1u
#define SPI_MCR_HALT_SHIFT                       0u
#define SPI_MCR_HALT_WIDTH                       1u
#define SPI_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_HALT_SHIFT))&SPI_MCR_HALT_MASK)
#define SPI_MCR_PES_MASK                         0x2u
#define SPI_MCR_PES_SHIFT                        1u
#define SPI_MCR_PES_WIDTH                        1u
#define SPI_MCR_PES(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PES_SHIFT))&SPI_MCR_PES_MASK)
#define SPI_MCR_FCPCS_MASK                       0x4u
#define SPI_MCR_FCPCS_SHIFT                      2u
#define SPI_MCR_FCPCS_WIDTH                      1u
#define SPI_MCR_FCPCS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_FCPCS_SHIFT))&SPI_MCR_FCPCS_MASK)
#define SPI_MCR_XSPI_MASK                        0x8u
#define SPI_MCR_XSPI_SHIFT                       3u
#define SPI_MCR_XSPI_WIDTH                       1u
#define SPI_MCR_XSPI(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_XSPI_SHIFT))&SPI_MCR_XSPI_MASK)
#define SPI_MCR_SMPL_PT_MASK                     0x300u
#define SPI_MCR_SMPL_PT_SHIFT                    8u
#define SPI_MCR_SMPL_PT_WIDTH                    2u
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_SMPL_PT_SHIFT))&SPI_MCR_SMPL_PT_MASK)
#define SPI_MCR_CLR_RXF_MASK                     0x400u
#define SPI_MCR_CLR_RXF_SHIFT                    10u
#define SPI_MCR_CLR_RXF_WIDTH                    1u
#define SPI_MCR_CLR_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_RXF_SHIFT))&SPI_MCR_CLR_RXF_MASK)
#define SPI_MCR_CLR_TXF_MASK                     0x800u
#define SPI_MCR_CLR_TXF_SHIFT                    11u
#define SPI_MCR_CLR_TXF_WIDTH                    1u
#define SPI_MCR_CLR_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_TXF_SHIFT))&SPI_MCR_CLR_TXF_MASK)
#define SPI_MCR_DIS_RXF_MASK                     0x1000u
#define SPI_MCR_DIS_RXF_SHIFT                    12u
#define SPI_MCR_DIS_RXF_WIDTH                    1u
#define SPI_MCR_DIS_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_RXF_SHIFT))&SPI_MCR_DIS_RXF_MASK)
#define SPI_MCR_DIS_TXF_MASK                     0x2000u
#define SPI_MCR_DIS_TXF_SHIFT                    13u
#define SPI_MCR_DIS_TXF_WIDTH                    1u
#define SPI_MCR_DIS_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_TXF_SHIFT))&SPI_MCR_DIS_TXF_MASK)
#define SPI_MCR_MDIS_MASK                        0x4000u
#define SPI_MCR_MDIS_SHIFT                       14u
#define SPI_MCR_MDIS_WIDTH                       1u
#define SPI_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MDIS_SHIFT))&SPI_MCR_MDIS_MASK)
#define SPI_MCR_PCSIS_MASK                       0x3F0000u
#define SPI_MCR_PCSIS_SHIFT                      16u
#define SPI_MCR_PCSIS_WIDTH                      6u
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSIS_SHIFT))&SPI_MCR_PCSIS_MASK)
#define SPI_MCR_ROOE_MASK                        0x1000000u
#define SPI_MCR_ROOE_SHIFT                       24u
#define SPI_MCR_ROOE_WIDTH                       1u
#define SPI_MCR_ROOE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_ROOE_SHIFT))&SPI_MCR_ROOE_MASK)
#define SPI_MCR_PCSSE_MASK                       0x2000000u
#define SPI_MCR_PCSSE_SHIFT                      25u
#define SPI_MCR_PCSSE_WIDTH                      1u
#define SPI_MCR_PCSSE(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSSE_SHIFT))&SPI_MCR_PCSSE_MASK)
#define SPI_MCR_MTFE_MASK                        0x4000000u
#define SPI_MCR_MTFE_SHIFT                       26u
#define SPI_MCR_MTFE_WIDTH                       1u
#define SPI_MCR_MTFE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MTFE_SHIFT))&SPI_MCR_MTFE_MASK)
#define SPI_MCR_FRZ_MASK                         0x8000000u
#define SPI_MCR_FRZ_SHIFT                        27u
#define SPI_MCR_FRZ_WIDTH                        1u
#define SPI_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_MCR_FRZ_SHIFT))&SPI_MCR_FRZ_MASK)
#define SPI_MCR_DCONF_MASK                       0x30000000u
#define SPI_MCR_DCONF_SHIFT                      28u
#define SPI_MCR_DCONF_WIDTH                      2u
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DCONF_SHIFT))&SPI_MCR_DCONF_MASK)
#define SPI_MCR_CONT_SCKE_MASK                   0x40000000u
#define SPI_MCR_CONT_SCKE_SHIFT                  30u
#define SPI_MCR_CONT_SCKE_WIDTH                  1u
#define SPI_MCR_CONT_SCKE(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CONT_SCKE_SHIFT))&SPI_MCR_CONT_SCKE_MASK)
#define SPI_MCR_MSTR_MASK                        0x80000000u
#define SPI_MCR_MSTR_SHIFT                       31u
#define SPI_MCR_MSTR_WIDTH                       1u
#define SPI_MCR_MSTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MSTR_SHIFT))&SPI_MCR_MSTR_MASK)
/* TCR Bit Fields */
#define SPI_TCR_SPI_TCNT_MASK                    0xFFFF0000u
#define SPI_TCR_SPI_TCNT_SHIFT                   16u
#define SPI_TCR_SPI_TCNT_WIDTH                   16u
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TCR_SPI_TCNT_SHIFT))&SPI_TCR_SPI_TCNT_MASK)
/* CTAR Bit Fields */
#define SPI_CTAR_BR_MASK                         0xFu
#define SPI_CTAR_BR_SHIFT                        0u
#define SPI_CTAR_BR_WIDTH                        4u
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_BR_SHIFT))&SPI_CTAR_BR_MASK)
#define SPI_CTAR_DT_MASK                         0xF0u
#define SPI_CTAR_DT_SHIFT                        4u
#define SPI_CTAR_DT_WIDTH                        4u
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DT_SHIFT))&SPI_CTAR_DT_MASK)
#define SPI_CTAR_ASC_MASK                        0xF00u
#define SPI_CTAR_ASC_SHIFT                       8u
#define SPI_CTAR_ASC_WIDTH                       4u
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_ASC_SHIFT))&SPI_CTAR_ASC_MASK)
#define SPI_CTAR_CSSCK_MASK                      0xF000u
#define SPI_CTAR_CSSCK_SHIFT                     12u
#define SPI_CTAR_CSSCK_WIDTH                     4u
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CSSCK_SHIFT))&SPI_CTAR_CSSCK_MASK)
#define SPI_CTAR_PBR_MASK                        0x30000u
#define SPI_CTAR_PBR_SHIFT                       16u
#define SPI_CTAR_PBR_WIDTH                       2u
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PBR_SHIFT))&SPI_CTAR_PBR_MASK)
#define SPI_CTAR_PDT_MASK                        0xC0000u
#define SPI_CTAR_PDT_SHIFT                       18u
#define SPI_CTAR_PDT_WIDTH                       2u
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PDT_SHIFT))&SPI_CTAR_PDT_MASK)
#define SPI_CTAR_PASC_MASK                       0x300000u
#define SPI_CTAR_PASC_SHIFT                      20u
#define SPI_CTAR_PASC_WIDTH                      2u
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PASC_SHIFT))&SPI_CTAR_PASC_MASK)
#define SPI_CTAR_PCSSCK_MASK                     0xC00000u
#define SPI_CTAR_PCSSCK_SHIFT                    22u
#define SPI_CTAR_PCSSCK_WIDTH                    2u
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PCSSCK_SHIFT))&SPI_CTAR_PCSSCK_MASK)
#define SPI_CTAR_LSBFE_MASK                      0x1000000u
#define SPI_CTAR_LSBFE_SHIFT                     24u
#define SPI_CTAR_LSBFE_WIDTH                     1u
#define SPI_CTAR_LSBFE(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_LSBFE_SHIFT))&SPI_CTAR_LSBFE_MASK)
#define SPI_CTAR_CPHA_MASK                       0x2000000u
#define SPI_CTAR_CPHA_SHIFT                      25u
#define SPI_CTAR_CPHA_WIDTH                      1u
#define SPI_CTAR_CPHA(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPHA_SHIFT))&SPI_CTAR_CPHA_MASK)
#define SPI_CTAR_CPOL_MASK                       0x4000000u
#define SPI_CTAR_CPOL_SHIFT                      26u
#define SPI_CTAR_CPOL_WIDTH                      1u
#define SPI_CTAR_CPOL(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPOL_SHIFT))&SPI_CTAR_CPOL_MASK)
#define SPI_CTAR_FMSZ_MASK                       0x78000000u
#define SPI_CTAR_FMSZ_SHIFT                      27u
#define SPI_CTAR_FMSZ_WIDTH                      4u
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_FMSZ_SHIFT))&SPI_CTAR_FMSZ_MASK)
#define SPI_CTAR_DBR_MASK                        0x80000000u
#define SPI_CTAR_DBR_SHIFT                       31u
#define SPI_CTAR_DBR_WIDTH                       1u
#define SPI_CTAR_DBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DBR_SHIFT))&SPI_CTAR_DBR_MASK)
/* CTAR_SLAVE Bit Fields */
#define SPI_CTAR_SLAVE_FMSZ5_MASK                0x400000u
#define SPI_CTAR_SLAVE_FMSZ5_SHIFT               22u
#define SPI_CTAR_SLAVE_FMSZ5_WIDTH               1u
#define SPI_CTAR_SLAVE_FMSZ5(x)                  (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_FMSZ5_SHIFT))&SPI_CTAR_SLAVE_FMSZ5_MASK)
#define SPI_CTAR_SLAVE_PP_MASK                   0x800000u
#define SPI_CTAR_SLAVE_PP_SHIFT                  23u
#define SPI_CTAR_SLAVE_PP_WIDTH                  1u
#define SPI_CTAR_SLAVE_PP(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_PP_SHIFT))&SPI_CTAR_SLAVE_PP_MASK)
#define SPI_CTAR_SLAVE_PE_MASK                   0x1000000u
#define SPI_CTAR_SLAVE_PE_SHIFT                  24u
#define SPI_CTAR_SLAVE_PE_WIDTH                  1u
#define SPI_CTAR_SLAVE_PE(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_PE_SHIFT))&SPI_CTAR_SLAVE_PE_MASK)
#define SPI_CTAR_SLAVE_CPHA_MASK                 0x2000000u
#define SPI_CTAR_SLAVE_CPHA_SHIFT                25u
#define SPI_CTAR_SLAVE_CPHA_WIDTH                1u
#define SPI_CTAR_SLAVE_CPHA(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPHA_SHIFT))&SPI_CTAR_SLAVE_CPHA_MASK)
#define SPI_CTAR_SLAVE_CPOL_MASK                 0x4000000u
#define SPI_CTAR_SLAVE_CPOL_SHIFT                26u
#define SPI_CTAR_SLAVE_CPOL_WIDTH                1u
#define SPI_CTAR_SLAVE_CPOL(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPOL_SHIFT))&SPI_CTAR_SLAVE_CPOL_MASK)
#define SPI_CTAR_SLAVE_FMSZ_MASK                 0xF8000000u
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                27u
#define SPI_CTAR_SLAVE_FMSZ_WIDTH                5u
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_FMSZ_SHIFT))&SPI_CTAR_SLAVE_FMSZ_MASK)
/* SR Bit Fields */
#define SPI_SR_POPNXTPTR_MASK                    0xFu
#define SPI_SR_POPNXTPTR_SHIFT                   0u
#define SPI_SR_POPNXTPTR_WIDTH                   4u
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_SR_POPNXTPTR_SHIFT))&SPI_SR_POPNXTPTR_MASK)
#define SPI_SR_RXCTR_MASK                        0xF0u
#define SPI_SR_RXCTR_SHIFT                       4u
#define SPI_SR_RXCTR_WIDTH                       4u
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_RXCTR_SHIFT))&SPI_SR_RXCTR_MASK)
#define SPI_SR_TXNXTPTR_MASK                     0xF00u
#define SPI_SR_TXNXTPTR_SHIFT                    8u
#define SPI_SR_TXNXTPTR_WIDTH                    4u
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXNXTPTR_SHIFT))&SPI_SR_TXNXTPTR_MASK)
#define SPI_SR_TXCTR_MASK                        0xF000u
#define SPI_SR_TXCTR_SHIFT                       12u
#define SPI_SR_TXCTR_WIDTH                       4u
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXCTR_SHIFT))&SPI_SR_TXCTR_MASK)
#define SPI_SR_CMDFFF_MASK                       0x10000u
#define SPI_SR_CMDFFF_SHIFT                      16u
#define SPI_SR_CMDFFF_WIDTH                      1u
#define SPI_SR_CMDFFF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_SR_CMDFFF_SHIFT))&SPI_SR_CMDFFF_MASK)
#define SPI_SR_RFDF_MASK                         0x20000u
#define SPI_SR_RFDF_SHIFT                        17u
#define SPI_SR_RFDF_WIDTH                        1u
#define SPI_SR_RFDF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFDF_SHIFT))&SPI_SR_RFDF_MASK)
#define SPI_SR_TFIWF_MASK                        0x40000u
#define SPI_SR_TFIWF_SHIFT                       18u
#define SPI_SR_TFIWF_WIDTH                       1u
#define SPI_SR_TFIWF(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFIWF_SHIFT))&SPI_SR_TFIWF_MASK)
#define SPI_SR_RFOF_MASK                         0x80000u
#define SPI_SR_RFOF_SHIFT                        19u
#define SPI_SR_RFOF_WIDTH                        1u
#define SPI_SR_RFOF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFOF_SHIFT))&SPI_SR_RFOF_MASK)
#define SPI_SR_DDIF_MASK                         0x100000u
#define SPI_SR_DDIF_SHIFT                        20u
#define SPI_SR_DDIF_WIDTH                        1u
#define SPI_SR_DDIF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_DDIF_SHIFT))&SPI_SR_DDIF_MASK)
#define SPI_SR_SPEF_MASK                         0x200000u
#define SPI_SR_SPEF_SHIFT                        21u
#define SPI_SR_SPEF_WIDTH                        1u
#define SPI_SR_SPEF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_SPEF_SHIFT))&SPI_SR_SPEF_MASK)
#define SPI_SR_DPEF_MASK                         0x400000u
#define SPI_SR_DPEF_SHIFT                        22u
#define SPI_SR_DPEF_WIDTH                        1u
#define SPI_SR_DPEF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_DPEF_SHIFT))&SPI_SR_DPEF_MASK)
#define SPI_SR_CMDTCF_MASK                       0x800000u
#define SPI_SR_CMDTCF_SHIFT                      23u
#define SPI_SR_CMDTCF_WIDTH                      1u
#define SPI_SR_CMDTCF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_SR_CMDTCF_SHIFT))&SPI_SR_CMDTCF_MASK)
#define SPI_SR_BSYF_MASK                         0x1000000u
#define SPI_SR_BSYF_SHIFT                        24u
#define SPI_SR_BSYF_WIDTH                        1u
#define SPI_SR_BSYF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_BSYF_SHIFT))&SPI_SR_BSYF_MASK)
#define SPI_SR_TFFF_MASK                         0x2000000u
#define SPI_SR_TFFF_SHIFT                        25u
#define SPI_SR_TFFF_WIDTH                        1u
#define SPI_SR_TFFF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFFF_SHIFT))&SPI_SR_TFFF_MASK)
#define SPI_SR_DSITCF_MASK                       0x4000000u
#define SPI_SR_DSITCF_SHIFT                      26u
#define SPI_SR_DSITCF_WIDTH                      1u
#define SPI_SR_DSITCF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_SR_DSITCF_SHIFT))&SPI_SR_DSITCF_MASK)
#define SPI_SR_TFUF_MASK                         0x8000000u
#define SPI_SR_TFUF_SHIFT                        27u
#define SPI_SR_TFUF_WIDTH                        1u
#define SPI_SR_TFUF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFUF_SHIFT))&SPI_SR_TFUF_MASK)
#define SPI_SR_EOQF_MASK                         0x10000000u
#define SPI_SR_EOQF_SHIFT                        28u
#define SPI_SR_EOQF_WIDTH                        1u
#define SPI_SR_EOQF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_EOQF_SHIFT))&SPI_SR_EOQF_MASK)
#define SPI_SR_SPITCF_MASK                       0x20000000u
#define SPI_SR_SPITCF_SHIFT                      29u
#define SPI_SR_SPITCF_WIDTH                      1u
#define SPI_SR_SPITCF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_SR_SPITCF_SHIFT))&SPI_SR_SPITCF_MASK)
#define SPI_SR_TXRXS_MASK                        0x40000000u
#define SPI_SR_TXRXS_SHIFT                       30u
#define SPI_SR_TXRXS_WIDTH                       1u
#define SPI_SR_TXRXS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXRXS_SHIFT))&SPI_SR_TXRXS_MASK)
#define SPI_SR_TCF_MASK                          0x80000000u
#define SPI_SR_TCF_SHIFT                         31u
#define SPI_SR_TCF_WIDTH                         1u
#define SPI_SR_TCF(x)                            (((uint32_t)(((uint32_t)(x))<<SPI_SR_TCF_SHIFT))&SPI_SR_TCF_MASK)
/* RSER Bit Fields */
#define SPI_RSER_DDIF_DIRS_MASK                  0x4000u
#define SPI_RSER_DDIF_DIRS_SHIFT                 14u
#define SPI_RSER_DDIF_DIRS_WIDTH                 1u
#define SPI_RSER_DDIF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_DDIF_DIRS_SHIFT))&SPI_RSER_DDIF_DIRS_MASK)
#define SPI_RSER_CMDFFF_DIRS_MASK                0x8000u
#define SPI_RSER_CMDFFF_DIRS_SHIFT               15u
#define SPI_RSER_CMDFFF_DIRS_WIDTH               1u
#define SPI_RSER_CMDFFF_DIRS(x)                  (((uint32_t)(((uint32_t)(x))<<SPI_RSER_CMDFFF_DIRS_SHIFT))&SPI_RSER_CMDFFF_DIRS_MASK)
#define SPI_RSER_RFDF_DIRS_MASK                  0x10000u
#define SPI_RSER_RFDF_DIRS_SHIFT                 16u
#define SPI_RSER_RFDF_DIRS_WIDTH                 1u
#define SPI_RSER_RFDF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_DIRS_SHIFT))&SPI_RSER_RFDF_DIRS_MASK)
#define SPI_RSER_RFDF_RE_MASK                    0x20000u
#define SPI_RSER_RFDF_RE_SHIFT                   17u
#define SPI_RSER_RFDF_RE_WIDTH                   1u
#define SPI_RSER_RFDF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_RE_SHIFT))&SPI_RSER_RFDF_RE_MASK)
#define SPI_RSER_TFIWF_RE_MASK                   0x40000u
#define SPI_RSER_TFIWF_RE_SHIFT                  18u
#define SPI_RSER_TFIWF_RE_WIDTH                  1u
#define SPI_RSER_TFIWF_RE(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFIWF_RE_SHIFT))&SPI_RSER_TFIWF_RE_MASK)
#define SPI_RSER_RFOF_RE_MASK                    0x80000u
#define SPI_RSER_RFOF_RE_SHIFT                   19u
#define SPI_RSER_RFOF_RE_WIDTH                   1u
#define SPI_RSER_RFOF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFOF_RE_SHIFT))&SPI_RSER_RFOF_RE_MASK)
#define SPI_RSER_DDIF_RE_MASK                    0x100000u
#define SPI_RSER_DDIF_RE_SHIFT                   20u
#define SPI_RSER_DDIF_RE_WIDTH                   1u
#define SPI_RSER_DDIF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_DDIF_RE_SHIFT))&SPI_RSER_DDIF_RE_MASK)
#define SPI_RSER_SPEF_RE_MASK                    0x200000u
#define SPI_RSER_SPEF_RE_SHIFT                   21u
#define SPI_RSER_SPEF_RE_WIDTH                   1u
#define SPI_RSER_SPEF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_SPEF_RE_SHIFT))&SPI_RSER_SPEF_RE_MASK)
#define SPI_RSER_DPEF_RE_MASK                    0x400000u
#define SPI_RSER_DPEF_RE_SHIFT                   22u
#define SPI_RSER_DPEF_RE_WIDTH                   1u
#define SPI_RSER_DPEF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_DPEF_RE_SHIFT))&SPI_RSER_DPEF_RE_MASK)
#define SPI_RSER_CMDTCF_RE_MASK                  0x800000u
#define SPI_RSER_CMDTCF_RE_SHIFT                 23u
#define SPI_RSER_CMDTCF_RE_WIDTH                 1u
#define SPI_RSER_CMDTCF_RE(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_CMDTCF_RE_SHIFT))&SPI_RSER_CMDTCF_RE_MASK)
#define SPI_RSER_TFFF_DIRS_MASK                  0x1000000u
#define SPI_RSER_TFFF_DIRS_SHIFT                 24u
#define SPI_RSER_TFFF_DIRS_WIDTH                 1u
#define SPI_RSER_TFFF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_DIRS_SHIFT))&SPI_RSER_TFFF_DIRS_MASK)
#define SPI_RSER_TFFF_RE_MASK                    0x2000000u
#define SPI_RSER_TFFF_RE_SHIFT                   25u
#define SPI_RSER_TFFF_RE_WIDTH                   1u
#define SPI_RSER_TFFF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_RE_SHIFT))&SPI_RSER_TFFF_RE_MASK)
#define SPI_RSER_DSITCF_RE_MASK                  0x4000000u
#define SPI_RSER_DSITCF_RE_SHIFT                 26u
#define SPI_RSER_DSITCF_RE_WIDTH                 1u
#define SPI_RSER_DSITCF_RE(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_DSITCF_RE_SHIFT))&SPI_RSER_DSITCF_RE_MASK)
#define SPI_RSER_TFUF_RE_MASK                    0x8000000u
#define SPI_RSER_TFUF_RE_SHIFT                   27u
#define SPI_RSER_TFUF_RE_WIDTH                   1u
#define SPI_RSER_TFUF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFUF_RE_SHIFT))&SPI_RSER_TFUF_RE_MASK)
#define SPI_RSER_EOQF_RE_MASK                    0x10000000u
#define SPI_RSER_EOQF_RE_SHIFT                   28u
#define SPI_RSER_EOQF_RE_WIDTH                   1u
#define SPI_RSER_EOQF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_EOQF_RE_SHIFT))&SPI_RSER_EOQF_RE_MASK)
#define SPI_RSER_SPITCF_RE_MASK                  0x20000000u
#define SPI_RSER_SPITCF_RE_SHIFT                 29u
#define SPI_RSER_SPITCF_RE_WIDTH                 1u
#define SPI_RSER_SPITCF_RE(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_SPITCF_RE_SHIFT))&SPI_RSER_SPITCF_RE_MASK)
#define SPI_RSER_CMDFFF_RE_MASK                  0x40000000u
#define SPI_RSER_CMDFFF_RE_SHIFT                 30u
#define SPI_RSER_CMDFFF_RE_WIDTH                 1u
#define SPI_RSER_CMDFFF_RE(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_CMDFFF_RE_SHIFT))&SPI_RSER_CMDFFF_RE_MASK)
#define SPI_RSER_TCF_RE_MASK                     0x80000000u
#define SPI_RSER_TCF_RE_SHIFT                    31u
#define SPI_RSER_TCF_RE_WIDTH                    1u
#define SPI_RSER_TCF_RE(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TCF_RE_SHIFT))&SPI_RSER_TCF_RE_MASK)
/* PUSHR_FIFO_CMD Bit Fields */
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_MASK   0xFFFFu
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_SHIFT  0u
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_WIDTH  16u
#define SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD(x)     (((uint16_t)(((uint16_t)(x))<<SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_SHIFT))&SPI_PUSHR_FIFO_CMD_PUSHR_FIFO_CMD_MASK)
/* PUSHR_FIFO_TX Bit Fields */
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_MASK     0xFFFFu
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_SHIFT    0u
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_WIDTH    16u
#define SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX(x)       (((uint16_t)(((uint16_t)(x))<<SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_SHIFT))&SPI_PUSHR_FIFO_TX_PUSHR_FIFO_TX_MASK)
/* PUSHR_PUSHR Bit Fields */
#define SPI_PUSHR_PUSHR_TXDATA_MASK              0xFFFFu
#define SPI_PUSHR_PUSHR_TXDATA_SHIFT             0u
#define SPI_PUSHR_PUSHR_TXDATA_WIDTH             16u
#define SPI_PUSHR_PUSHR_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_TXDATA_SHIFT))&SPI_PUSHR_PUSHR_TXDATA_MASK)
#define SPI_PUSHR_PUSHR_PCS_MASK                 0x3F0000u
#define SPI_PUSHR_PUSHR_PCS_SHIFT                16u
#define SPI_PUSHR_PUSHR_PCS_WIDTH                6u
#define SPI_PUSHR_PUSHR_PCS(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_PCS_SHIFT))&SPI_PUSHR_PUSHR_PCS_MASK)
#define SPI_PUSHR_PUSHR_PP_MCSC_MASK             0x1000000u
#define SPI_PUSHR_PUSHR_PP_MCSC_SHIFT            24u
#define SPI_PUSHR_PUSHR_PP_MCSC_WIDTH            1u
#define SPI_PUSHR_PUSHR_PP_MCSC(x)               (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_PP_MCSC_SHIFT))&SPI_PUSHR_PUSHR_PP_MCSC_MASK)
#define SPI_PUSHR_PUSHR_PE_MASC_MASK             0x2000000u
#define SPI_PUSHR_PUSHR_PE_MASC_SHIFT            25u
#define SPI_PUSHR_PUSHR_PE_MASC_WIDTH            1u
#define SPI_PUSHR_PUSHR_PE_MASC(x)               (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_PE_MASC_SHIFT))&SPI_PUSHR_PUSHR_PE_MASC_MASK)
#define SPI_PUSHR_PUSHR_CTCNT_MASK               0x4000000u
#define SPI_PUSHR_PUSHR_CTCNT_SHIFT              26u
#define SPI_PUSHR_PUSHR_CTCNT_WIDTH              1u
#define SPI_PUSHR_PUSHR_CTCNT(x)                 (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_CTCNT_SHIFT))&SPI_PUSHR_PUSHR_CTCNT_MASK)
#define SPI_PUSHR_PUSHR_EOQ_MASK                 0x8000000u
#define SPI_PUSHR_PUSHR_EOQ_SHIFT                27u
#define SPI_PUSHR_PUSHR_EOQ_WIDTH                1u
#define SPI_PUSHR_PUSHR_EOQ(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_EOQ_SHIFT))&SPI_PUSHR_PUSHR_EOQ_MASK)
#define SPI_PUSHR_PUSHR_CTAS_MASK                0x70000000u
#define SPI_PUSHR_PUSHR_CTAS_SHIFT               28u
#define SPI_PUSHR_PUSHR_CTAS_WIDTH               3u
#define SPI_PUSHR_PUSHR_CTAS(x)                  (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_CTAS_SHIFT))&SPI_PUSHR_PUSHR_CTAS_MASK)
#define SPI_PUSHR_PUSHR_CONT_MASK                0x80000000u
#define SPI_PUSHR_PUSHR_CONT_SHIFT               31u
#define SPI_PUSHR_PUSHR_CONT_WIDTH               1u
#define SPI_PUSHR_PUSHR_CONT(x)                  (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PUSHR_CONT_SHIFT))&SPI_PUSHR_PUSHR_CONT_MASK)
/* PUSHR_SLAVE Bit Fields */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              0xFFFFu
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             0u
#define SPI_PUSHR_SLAVE_TXDATA_WIDTH             16u
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_SLAVE_TXDATA_SHIFT))&SPI_PUSHR_SLAVE_TXDATA_MASK)
/* POPR Bit Fields */
#define SPI_POPR_RXDATA_MASK                     0xFFFFFFFFu
#define SPI_POPR_RXDATA_SHIFT                    0u
#define SPI_POPR_RXDATA_WIDTH                    32u
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_POPR_RXDATA_SHIFT))&SPI_POPR_RXDATA_MASK)
/* TXFR Bit Fields */
#define SPI_TXFR_TXDATA_MASK                     0xFFFFu
#define SPI_TXFR_TXDATA_SHIFT                    0u
#define SPI_TXFR_TXDATA_WIDTH                    16u
#define SPI_TXFR_TXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXDATA_SHIFT))&SPI_TXFR_TXDATA_MASK)
#define SPI_TXFR_TXCMD_TXDATA_MASK               0xFFFF0000u
#define SPI_TXFR_TXCMD_TXDATA_SHIFT              16u
#define SPI_TXFR_TXCMD_TXDATA_WIDTH              16u
#define SPI_TXFR_TXCMD_TXDATA(x)                 (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXCMD_TXDATA_SHIFT))&SPI_TXFR_TXCMD_TXDATA_MASK)
/* RXFR Bit Fields */
#define SPI_RXFR_RXDATA_MASK                     0xFFFFFFFFu
#define SPI_RXFR_RXDATA_SHIFT                    0u
#define SPI_RXFR_RXDATA_WIDTH                    32u
#define SPI_RXFR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RXFR_RXDATA_SHIFT))&SPI_RXFR_RXDATA_MASK)
/* CTARE Bit Fields */
#define SPI_CTARE_DTCP_MASK                      0x7FFu
#define SPI_CTARE_DTCP_SHIFT                     0u
#define SPI_CTARE_DTCP_WIDTH                     11u
#define SPI_CTARE_DTCP(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTARE_DTCP_SHIFT))&SPI_CTARE_DTCP_MASK)
#define SPI_CTARE_FMSZE_MASK                     0x10000u
#define SPI_CTARE_FMSZE_SHIFT                    16u
#define SPI_CTARE_FMSZE_WIDTH                    1u
#define SPI_CTARE_FMSZE(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_CTARE_FMSZE_SHIFT))&SPI_CTARE_FMSZE_MASK)
/* SREX Bit Fields */
#define SPI_SREX_CMDNXTPTR_MASK                  0xFu
#define SPI_SREX_CMDNXTPTR_SHIFT                 0u
#define SPI_SREX_CMDNXTPTR_WIDTH                 4u
#define SPI_SREX_CMDNXTPTR(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_SREX_CMDNXTPTR_SHIFT))&SPI_SREX_CMDNXTPTR_MASK)
#define SPI_SREX_CMDCTR_MASK                     0x1F0u
#define SPI_SREX_CMDCTR_SHIFT                    4u
#define SPI_SREX_CMDCTR_WIDTH                    5u
#define SPI_SREX_CMDCTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SREX_CMDCTR_SHIFT))&SPI_SREX_CMDCTR_MASK)
#define SPI_SREX_TXCTR4_MASK                     0x800u
#define SPI_SREX_TXCTR4_SHIFT                    11u
#define SPI_SREX_TXCTR4_WIDTH                    1u
#define SPI_SREX_TXCTR4(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SREX_TXCTR4_SHIFT))&SPI_SREX_TXCTR4_MASK)
#define SPI_SREX_RXCTR4_MASK                     0x4000u
#define SPI_SREX_RXCTR4_SHIFT                    14u
#define SPI_SREX_RXCTR4_WIDTH                    1u
#define SPI_SREX_RXCTR4(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SREX_RXCTR4_SHIFT))&SPI_SREX_RXCTR4_MASK)
/* TSL Bit Fields */
#define SPI_TSL_TS0_LEN_MASK                     0x7Fu
#define SPI_TSL_TS0_LEN_SHIFT                    0u
#define SPI_TSL_TS0_LEN_WIDTH                    7u
#define SPI_TSL_TS0_LEN(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TSL_TS0_LEN_SHIFT))&SPI_TSL_TS0_LEN_MASK)
#define SPI_TSL_TS1_LEN_MASK                     0x7F00u
#define SPI_TSL_TS1_LEN_SHIFT                    8u
#define SPI_TSL_TS1_LEN_WIDTH                    7u
#define SPI_TSL_TS1_LEN(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TSL_TS1_LEN_SHIFT))&SPI_TSL_TS1_LEN_MASK)
#define SPI_TSL_TS2_LEN_MASK                     0x7F0000u
#define SPI_TSL_TS2_LEN_SHIFT                    16u
#define SPI_TSL_TS2_LEN_WIDTH                    7u
#define SPI_TSL_TS2_LEN(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TSL_TS2_LEN_SHIFT))&SPI_TSL_TS2_LEN_MASK)
#define SPI_TSL_TS3_LEN_MASK                     0x7F000000u
#define SPI_TSL_TS3_LEN_SHIFT                    24u
#define SPI_TSL_TS3_LEN_WIDTH                    7u
#define SPI_TSL_TS3_LEN(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TSL_TS3_LEN_SHIFT))&SPI_TSL_TS3_LEN_MASK)
/* TS_CONF Bit Fields */
#define SPI_TS_CONF_TS0_MASK                     0xFu
#define SPI_TS_CONF_TS0_SHIFT                    0u
#define SPI_TS_CONF_TS0_WIDTH                    4u
#define SPI_TS_CONF_TS0(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TS_CONF_TS0_SHIFT))&SPI_TS_CONF_TS0_MASK)
#define SPI_TS_CONF_TS1_MASK                     0xF0u
#define SPI_TS_CONF_TS1_SHIFT                    4u
#define SPI_TS_CONF_TS1_WIDTH                    4u
#define SPI_TS_CONF_TS1(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TS_CONF_TS1_SHIFT))&SPI_TS_CONF_TS1_MASK)
#define SPI_TS_CONF_TS2_MASK                     0xF00u
#define SPI_TS_CONF_TS2_SHIFT                    8u
#define SPI_TS_CONF_TS2_WIDTH                    4u
#define SPI_TS_CONF_TS2(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TS_CONF_TS2_SHIFT))&SPI_TS_CONF_TS2_MASK)
#define SPI_TS_CONF_TS3_MASK                     0xF000u
#define SPI_TS_CONF_TS3_SHIFT                    12u
#define SPI_TS_CONF_TS3_WIDTH                    4u
#define SPI_TS_CONF_TS3(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TS_CONF_TS3_SHIFT))&SPI_TS_CONF_TS3_MASK)

/*!
 * @}
 */ /* end of group SPI_Register_Masks */


/*!
 * @}
 */ /* end of group SPI_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SSCM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SSCM_Peripheral_Access_Layer SSCM Peripheral Access Layer
 * @{
 */


/** SSCM - Size of Registers Arrays */

/** SSCM - Register Layout Typedef */
typedef struct {
  __IO uint16_t STATUS;                            /**< SSCM System Status, offset: 0x0 */
  __I  uint16_t MEMCONFIG;                         /**< SSCM System Memory and ID Register, offset: 0x2 */
       uint8_t RESERVED_0[4];
  __IO uint16_t DEBUGPORT;                         /**< SSCM Debug Status Port Register, offset: 0x8 */
       uint8_t RESERVED_1[22];
  __I  uint32_t UOPS;                              /**< SSCM HSM and User Option Status Register, offset: 0x20 */
       uint8_t RESERVED_2[4];
  __I  uint32_t PSA;                               /**< Processor Start Address Register, offset: 0x28 */
       uint8_t RESERVED_3[4];
  __I  uint32_t HSA;                               /**< SSCM HSM Start Address Register, offset: 0x30 */
  __I  uint32_t LCSTAT;                            /**< Life Cycle Status Register, offset: 0x34 */
} SSCM_Type, *SSCM_MemMapPtr;

 /** Number of instances of the SSCM module. */
#define SSCM_INSTANCE_COUNT                      (1u)


/* SSCM - Peripheral instance base addresses */
/** Peripheral SSCM base address */
#define SSCM_BASE                                (0xFFFF8000u)
/** Peripheral SSCM base pointer */
#define SSCM                                     ((SSCM_Type *)SSCM_BASE)
/** Array initializer of SSCM peripheral base addresses */
#define SSCM_BASE_ADDRS                          { SSCM_BASE }
/** Array initializer of SSCM peripheral base pointers */
#define SSCM_BASE_PTRS                           { SSCM }

/* ----------------------------------------------------------------------------
   -- SSCM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SSCM_Register_Masks SSCM Register Masks
 * @{
 */

/* STATUS Bit Fields */
#define SSCM_STATUS_BMODE_MASK                   0xE0u
#define SSCM_STATUS_BMODE_SHIFT                  5u
#define SSCM_STATUS_BMODE_WIDTH                  3u
#define SSCM_STATUS_BMODE(x)                     (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_BMODE_SHIFT))&SSCM_STATUS_BMODE_MASK)
#define SSCM_STATUS_NXEN_MASK                    0x800u
#define SSCM_STATUS_NXEN_SHIFT                   11u
#define SSCM_STATUS_NXEN_WIDTH                   1u
#define SSCM_STATUS_NXEN(x)                      (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_NXEN_SHIFT))&SSCM_STATUS_NXEN_MASK)
#define SSCM_STATUS_CERS_MASK                    0x2000u
#define SSCM_STATUS_CERS_SHIFT                   13u
#define SSCM_STATUS_CERS_WIDTH                   1u
#define SSCM_STATUS_CERS(x)                      (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_CERS_SHIFT))&SSCM_STATUS_CERS_MASK)
#define SSCM_STATUS_CER_MASK                     0x4000u
#define SSCM_STATUS_CER_SHIFT                    14u
#define SSCM_STATUS_CER_WIDTH                    1u
#define SSCM_STATUS_CER(x)                       (((uint16_t)(((uint16_t)(x))<<SSCM_STATUS_CER_SHIFT))&SSCM_STATUS_CER_MASK)
/* MEMCONFIG Bit Fields */
#define SSCM_MEMCONFIG_MREV_MASK                 0x1Eu
#define SSCM_MEMCONFIG_MREV_SHIFT                1u
#define SSCM_MEMCONFIG_MREV_WIDTH                4u
#define SSCM_MEMCONFIG_MREV(x)                   (((uint16_t)(((uint16_t)(x))<<SSCM_MEMCONFIG_MREV_SHIFT))&SSCM_MEMCONFIG_MREV_MASK)
#define SSCM_MEMCONFIG_JPIN_MASK                 0xFFC0u
#define SSCM_MEMCONFIG_JPIN_SHIFT                6u
#define SSCM_MEMCONFIG_JPIN_WIDTH                10u
#define SSCM_MEMCONFIG_JPIN(x)                   (((uint16_t)(((uint16_t)(x))<<SSCM_MEMCONFIG_JPIN_SHIFT))&SSCM_MEMCONFIG_JPIN_MASK)
/* DEBUGPORT Bit Fields */
#define SSCM_DEBUGPORT_DEBUG_MODE_MASK           0x7u
#define SSCM_DEBUGPORT_DEBUG_MODE_SHIFT          0u
#define SSCM_DEBUGPORT_DEBUG_MODE_WIDTH          3u
#define SSCM_DEBUGPORT_DEBUG_MODE(x)             (((uint16_t)(((uint16_t)(x))<<SSCM_DEBUGPORT_DEBUG_MODE_SHIFT))&SSCM_DEBUGPORT_DEBUG_MODE_MASK)
/* UOPS Bit Fields */
#define SSCM_UOPS_HSE_MASK                       0x1u
#define SSCM_UOPS_HSE_SHIFT                      0u
#define SSCM_UOPS_HSE_WIDTH                      1u
#define SSCM_UOPS_HSE(x)                         (((uint32_t)(((uint32_t)(x))<<SSCM_UOPS_HSE_SHIFT))&SSCM_UOPS_HSE_MASK)
#define SSCM_UOPS_HSB_MASK                       0xEu
#define SSCM_UOPS_HSB_SHIFT                      1u
#define SSCM_UOPS_HSB_WIDTH                      3u
#define SSCM_UOPS_HSB(x)                         (((uint32_t)(((uint32_t)(x))<<SSCM_UOPS_HSB_SHIFT))&SSCM_UOPS_HSB_MASK)
/* PSA Bit Fields */
#define SSCM_PSA_SADR_MASK                       0xFFFFFFFFu
#define SSCM_PSA_SADR_SHIFT                      0u
#define SSCM_PSA_SADR_WIDTH                      32u
#define SSCM_PSA_SADR(x)                         (((uint32_t)(((uint32_t)(x))<<SSCM_PSA_SADR_SHIFT))&SSCM_PSA_SADR_MASK)
/* HSA Bit Fields */
#define SSCM_HSA_HADR_MASK                       0xFFFFFFFFu
#define SSCM_HSA_HADR_SHIFT                      0u
#define SSCM_HSA_HADR_WIDTH                      32u
#define SSCM_HSA_HADR(x)                         (((uint32_t)(((uint32_t)(x))<<SSCM_HSA_HADR_SHIFT))&SSCM_HSA_HADR_MASK)
/* LCSTAT Bit Fields */
#define SSCM_LCSTAT_LC_MASK                      0x7u
#define SSCM_LCSTAT_LC_SHIFT                     0u
#define SSCM_LCSTAT_LC_WIDTH                     3u
#define SSCM_LCSTAT_LC(x)                        (((uint32_t)(((uint32_t)(x))<<SSCM_LCSTAT_LC_SHIFT))&SSCM_LCSTAT_LC_MASK)

/*!
 * @}
 */ /* end of group SSCM_Register_Masks */


/*!
 * @}
 */ /* end of group SSCM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- STCU2 Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STCU2_Peripheral_Access_Layer STCU2 Peripheral Access Layer
 * @{
 */


/** STCU2 - Size of Registers Arrays */
#define STCU2_LB_COUNT                           3u
#define STCU2_MB_CTRL_COUNT                      76u

/** STCU2 - Register Layout Typedef */
typedef struct {
  __IO uint32_t RUN;                               /**< STCU2 Run Register, offset: 0x0 */
  __IO uint32_t RUNSW;                             /**< STCU2 Run Software Register, offset: 0x4 */
  __O  uint32_t SKC;                               /**< STCU2 SK Code Register, offset: 0x8 */
  __IO uint32_t CFG;                               /**< STCU2 Configuration Register, offset: 0xC */
       uint8_t RESERVED_0[4];
  __IO uint32_t WDG;                               /**< STCU2 Watchdog Granularity, offset: 0x14 */
       uint8_t RESERVED_1[12];
  __IO uint32_t ERR_STAT;                          /**< STCU2 Error Register, offset: 0x24 */
  __IO uint32_t ERR_FM;                            /**< STCU2 Error FM Register, offset: 0x28 */
  __I  uint32_t LBS;                               /**< STCU2 Off-Line LBIST Status Register, offset: 0x2C */
  __I  uint32_t LBE;                               /**< STCU2 Off-Line LBIST End Flag Register, offset: 0x30 */
  __I  uint32_t LBSSW;                             /**< STCU2 On-Line LBIST Status Register, offset: 0x34 */
  __I  uint32_t LBESW;                             /**< STCU2 On-Line LBIST End Flag Register, offset: 0x38 */
       uint8_t RESERVED_2[4];
  __IO uint32_t LBUFM;                             /**< STCU2 LBIST Unrecoverable FM Register, offset: 0x40 */
  __I  uint32_t MBSL;                              /**< STCU2 Off-Line MBIST Status Low Register, offset: 0x44 */
  __I  uint32_t MBSM;                              /**< STCU2 Off-Line MBIST Status Medium Register, offset: 0x48 */
  __I  uint32_t MBSH;                              /**< STCU2 Off-Line MBIST Status High Register, offset: 0x4C */
  __I  uint32_t MBEL;                              /**< STCU2 Off-Line MBIST End Flag Low Register, offset: 0x50 */
  __I  uint32_t MBEM;                              /**< STCU2 Off-Line MBIST End Flag Medium Register, offset: 0x54 */
  __I  uint32_t MBEH;                              /**< STCU2 Off-Line MBIST End Flag High Register, offset: 0x58 */
  __I  uint32_t MBSLSW;                            /**< STCU2 On-Line MBIST Status Low Register, offset: 0x5C */
  __I  uint32_t MBSMSW;                            /**< STCU2 On-Line MBIST Status Medium Register, offset: 0x60 */
  __I  uint32_t MBSHSW;                            /**< STCU2 On-Line MBIST Status High Register, offset: 0x64 */
  __I  uint32_t MBELSW;                            /**< STCU2 On-Line MBIST End Flag Low Register, offset: 0x68 */
  __I  uint32_t MBEMSW;                            /**< STCU2 On-Line MBIST End Flag Medium Register, offset: 0x6C */
  __I  uint32_t MBEHSW;                            /**< STCU2 On-Line MBIST End Flag High Register, offset: 0x70 */
  __IO uint32_t MBUFML;                            /**< STCU2 MBIST Unrecoverable FM Low Register, offset: 0x74 */
  __IO uint32_t MBUFMM;                            /**< STCU2 MBIST Unrecoverable FM Medium Register, offset: 0x78 */
  __IO uint32_t MBUFMH;                            /**< STCU2 MBIST Unrecoverable FM High Register, offset: 0x7C */
       uint8_t RESERVED_3[128];
  struct {                                         /* offset: 0x100, array step: 0x40 */
    __IO uint32_t CTRL;                              /**< STCU2 LBIST Control, array offset: 0x100, array step: 0x40 */
    __IO uint32_t PCS;                               /**< STCU2 LBIST PC Stop Register, array offset: 0x104, array step: 0x40 */
         uint8_t RESERVED_0[8];
    __IO uint32_t MISREL;                            /**< STCU2 Off-Line LBIST MISR Expected Low Register, array offset: 0x110, array step: 0x40 */
    __IO uint32_t MISREH;                            /**< STCU2 Off-Line LBIST MISR Expected High Register, array offset: 0x114, array step: 0x40 */
    __I  uint32_t MISRRL;                            /**< STCU2 Off-Line LBIST MISR Read Low Register, array offset: 0x118, array step: 0x40 */
    __I  uint32_t MISRRH;                            /**< STCU2 Off-Line LBIST MISR Read High Register, array offset: 0x11C, array step: 0x40 */
    __IO uint32_t MISRELSW;                          /**< STCU2 On-Line LBIST MISR Expected Low Register, array offset: 0x120, array step: 0x40 */
    __IO uint32_t MISREHSW;                          /**< STCU2 On-Line LBIST MISR Expected High Register, array offset: 0x124, array step: 0x40 */
    __I  uint32_t MISRRLSW;                          /**< STCU2 On-Line LBIST MISR Read Low Register, array offset: 0x128, array step: 0x40 */
    __I  uint32_t MISRRHSW;                          /**< STCU2 On-Line LBIST MISR Read High Register, array offset: 0x12C, array step: 0x40 */
         uint8_t RESERVED_1[16];
  } LB[STCU2_LB_COUNT];
       uint8_t RESERVED_4[1088];
  __IO uint32_t MB_CTRL[STCU2_MB_CTRL_COUNT];      /**< STCU2 MBIST Control Register, array offset: 0x600, array step: 0x4 */
} STCU2_Type, *STCU2_MemMapPtr;

 /** Number of instances of the STCU2 module. */
#define STCU2_INSTANCE_COUNT                     (1u)


/* STCU2 - Peripheral instance base addresses */
/** Peripheral STCU2 base address */
#define STCU2_BASE                               (0xFFF44000u)
/** Peripheral STCU2 base pointer */
#define STCU2                                    ((STCU2_Type *)STCU2_BASE)
/** Array initializer of STCU2 peripheral base addresses */
#define STCU2_BASE_ADDRS                         { STCU2_BASE }
/** Array initializer of STCU2 peripheral base pointers */
#define STCU2_BASE_PTRS                          { STCU2 }

/* ----------------------------------------------------------------------------
   -- STCU2 Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STCU2_Register_Masks STCU2 Register Masks
 * @{
 */

/* RUN Bit Fields */
#define STCU2_RUN_RUN_MASK                       0x1u
#define STCU2_RUN_RUN_SHIFT                      0u
#define STCU2_RUN_RUN_WIDTH                      1u
#define STCU2_RUN_RUN(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_RUN_RUN_SHIFT))&STCU2_RUN_RUN_MASK)
#define STCU2_RUN_LBPLLEN_MASK                   0x100u
#define STCU2_RUN_LBPLLEN_SHIFT                  8u
#define STCU2_RUN_LBPLLEN_WIDTH                  1u
#define STCU2_RUN_LBPLLEN(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_RUN_LBPLLEN_SHIFT))&STCU2_RUN_LBPLLEN_MASK)
#define STCU2_RUN_MBPLLEN_MASK                   0x200u
#define STCU2_RUN_MBPLLEN_SHIFT                  9u
#define STCU2_RUN_MBPLLEN_WIDTH                  1u
#define STCU2_RUN_MBPLLEN(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_RUN_MBPLLEN_SHIFT))&STCU2_RUN_MBPLLEN_MASK)
#define STCU2_RUN_BYP_MASK                       0x400u
#define STCU2_RUN_BYP_SHIFT                      10u
#define STCU2_RUN_BYP_WIDTH                      1u
#define STCU2_RUN_BYP(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_RUN_BYP_SHIFT))&STCU2_RUN_BYP_MASK)
/* RUNSW Bit Fields */
#define STCU2_RUNSW_RUNSW_MASK                   0x1u
#define STCU2_RUNSW_RUNSW_SHIFT                  0u
#define STCU2_RUNSW_RUNSW_WIDTH                  1u
#define STCU2_RUNSW_RUNSW(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_RUNSW_RUNSW_SHIFT))&STCU2_RUNSW_RUNSW_MASK)
#define STCU2_RUNSW_LBSWPLLEN_MASK               0x100u
#define STCU2_RUNSW_LBSWPLLEN_SHIFT              8u
#define STCU2_RUNSW_LBSWPLLEN_WIDTH              1u
#define STCU2_RUNSW_LBSWPLLEN(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_RUNSW_LBSWPLLEN_SHIFT))&STCU2_RUNSW_LBSWPLLEN_MASK)
#define STCU2_RUNSW_MBSWPLLEN_MASK               0x200u
#define STCU2_RUNSW_MBSWPLLEN_SHIFT              9u
#define STCU2_RUNSW_MBSWPLLEN_WIDTH              1u
#define STCU2_RUNSW_MBSWPLLEN(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_RUNSW_MBSWPLLEN_SHIFT))&STCU2_RUNSW_MBSWPLLEN_MASK)
/* SKC Bit Fields */
#define STCU2_SKC_SKC_MASK                       0xFFFFFFFFu
#define STCU2_SKC_SKC_SHIFT                      0u
#define STCU2_SKC_SKC_WIDTH                      32u
#define STCU2_SKC_SKC(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_SKC_SKC_SHIFT))&STCU2_SKC_SKC_MASK)
/* CFG Bit Fields */
#define STCU2_CFG_CLK_CFG_MASK                   0x7u
#define STCU2_CFG_CLK_CFG_SHIFT                  0u
#define STCU2_CFG_CLK_CFG_WIDTH                  3u
#define STCU2_CFG_CLK_CFG(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_CLK_CFG_SHIFT))&STCU2_CFG_CLK_CFG_MASK)
#define STCU2_CFG_MBU_MASK                       0x8u
#define STCU2_CFG_MBU_SHIFT                      3u
#define STCU2_CFG_MBU_WIDTH                      1u
#define STCU2_CFG_MBU(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_MBU_SHIFT))&STCU2_CFG_MBU_MASK)
#define STCU2_CFG_PMOSEN_MASK                    0x10u
#define STCU2_CFG_PMOSEN_SHIFT                   4u
#define STCU2_CFG_PMOSEN_WIDTH                   1u
#define STCU2_CFG_PMOSEN(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_PMOSEN_SHIFT))&STCU2_CFG_PMOSEN_MASK)
#define STCU2_CFG_WRP_MASK                       0x100u
#define STCU2_CFG_WRP_SHIFT                      8u
#define STCU2_CFG_WRP_WIDTH                      1u
#define STCU2_CFG_WRP(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_WRP_SHIFT))&STCU2_CFG_WRP_MASK)
#define STCU2_CFG_LB_DELAY_MASK                  0xFF0000u
#define STCU2_CFG_LB_DELAY_SHIFT                 16u
#define STCU2_CFG_LB_DELAY_WIDTH                 8u
#define STCU2_CFG_LB_DELAY(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_LB_DELAY_SHIFT))&STCU2_CFG_LB_DELAY_MASK)
#define STCU2_CFG_PTR_MASK                       0x7F000000u
#define STCU2_CFG_PTR_SHIFT                      24u
#define STCU2_CFG_PTR_WIDTH                      7u
#define STCU2_CFG_PTR(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_CFG_PTR_SHIFT))&STCU2_CFG_PTR_MASK)
/* WDG Bit Fields */
#define STCU2_WDG_WDGEOC_MASK                    0xFFFFFFFFu
#define STCU2_WDG_WDGEOC_SHIFT                   0u
#define STCU2_WDG_WDGEOC_WIDTH                   32u
#define STCU2_WDG_WDGEOC(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_WDG_WDGEOC_SHIFT))&STCU2_WDG_WDGEOC_MASK)
/* ERR_STAT Bit Fields */
#define STCU2_ERR_STAT_INVP_MASK                 0x1u
#define STCU2_ERR_STAT_INVP_SHIFT                0u
#define STCU2_ERR_STAT_INVP_WIDTH                1u
#define STCU2_ERR_STAT_INVP(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_INVP_SHIFT))&STCU2_ERR_STAT_INVP_MASK)
#define STCU2_ERR_STAT_ENGE_MASK                 0x2u
#define STCU2_ERR_STAT_ENGE_SHIFT                1u
#define STCU2_ERR_STAT_ENGE_WIDTH                1u
#define STCU2_ERR_STAT_ENGE(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_ENGE_SHIFT))&STCU2_ERR_STAT_ENGE_MASK)
#define STCU2_ERR_STAT_WDTO_MASK                 0x8u
#define STCU2_ERR_STAT_WDTO_SHIFT                3u
#define STCU2_ERR_STAT_WDTO_WIDTH                1u
#define STCU2_ERR_STAT_WDTO(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_WDTO_SHIFT))&STCU2_ERR_STAT_WDTO_MASK)
#define STCU2_ERR_STAT_LOCKE_MASK                0x10u
#define STCU2_ERR_STAT_LOCKE_SHIFT               4u
#define STCU2_ERR_STAT_LOCKE_WIDTH               1u
#define STCU2_ERR_STAT_LOCKE(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_LOCKE_SHIFT))&STCU2_ERR_STAT_LOCKE_MASK)
#define STCU2_ERR_STAT_RFSF_MASK                 0x100u
#define STCU2_ERR_STAT_RFSF_SHIFT                8u
#define STCU2_ERR_STAT_RFSF_WIDTH                1u
#define STCU2_ERR_STAT_RFSF(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_RFSF_SHIFT))&STCU2_ERR_STAT_RFSF_MASK)
#define STCU2_ERR_STAT_UFSF_MASK                 0x200u
#define STCU2_ERR_STAT_UFSF_SHIFT                9u
#define STCU2_ERR_STAT_UFSF_WIDTH                1u
#define STCU2_ERR_STAT_UFSF(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_UFSF_SHIFT))&STCU2_ERR_STAT_UFSF_MASK)
#define STCU2_ERR_STAT_INVPSW_MASK               0x10000u
#define STCU2_ERR_STAT_INVPSW_SHIFT              16u
#define STCU2_ERR_STAT_INVPSW_WIDTH              1u
#define STCU2_ERR_STAT_INVPSW(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_INVPSW_SHIFT))&STCU2_ERR_STAT_INVPSW_MASK)
#define STCU2_ERR_STAT_ENGESW_MASK               0x20000u
#define STCU2_ERR_STAT_ENGESW_SHIFT              17u
#define STCU2_ERR_STAT_ENGESW_WIDTH              1u
#define STCU2_ERR_STAT_ENGESW(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_ENGESW_SHIFT))&STCU2_ERR_STAT_ENGESW_MASK)
#define STCU2_ERR_STAT_WDTOSW_MASK               0x80000u
#define STCU2_ERR_STAT_WDTOSW_SHIFT              19u
#define STCU2_ERR_STAT_WDTOSW_WIDTH              1u
#define STCU2_ERR_STAT_WDTOSW(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_WDTOSW_SHIFT))&STCU2_ERR_STAT_WDTOSW_MASK)
#define STCU2_ERR_STAT_LOCKESW_MASK              0x100000u
#define STCU2_ERR_STAT_LOCKESW_SHIFT             20u
#define STCU2_ERR_STAT_LOCKESW_WIDTH             1u
#define STCU2_ERR_STAT_LOCKESW(x)                (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_LOCKESW_SHIFT))&STCU2_ERR_STAT_LOCKESW_MASK)
#define STCU2_ERR_STAT_ABORTHW_MASK              0x2000000u
#define STCU2_ERR_STAT_ABORTHW_SHIFT             25u
#define STCU2_ERR_STAT_ABORTHW_WIDTH             1u
#define STCU2_ERR_STAT_ABORTHW(x)                (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_STAT_ABORTHW_SHIFT))&STCU2_ERR_STAT_ABORTHW_MASK)
/* ERR_FM Bit Fields */
#define STCU2_ERR_FM_INVPUFM_MASK                0x1u
#define STCU2_ERR_FM_INVPUFM_SHIFT               0u
#define STCU2_ERR_FM_INVPUFM_WIDTH               1u
#define STCU2_ERR_FM_INVPUFM(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_FM_INVPUFM_SHIFT))&STCU2_ERR_FM_INVPUFM_MASK)
#define STCU2_ERR_FM_ENGEUFM_MASK                0x2u
#define STCU2_ERR_FM_ENGEUFM_SHIFT               1u
#define STCU2_ERR_FM_ENGEUFM_WIDTH               1u
#define STCU2_ERR_FM_ENGEUFM(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_FM_ENGEUFM_SHIFT))&STCU2_ERR_FM_ENGEUFM_MASK)
#define STCU2_ERR_FM_WDTOUFM_MASK                0x8u
#define STCU2_ERR_FM_WDTOUFM_SHIFT               3u
#define STCU2_ERR_FM_WDTOUFM_WIDTH               1u
#define STCU2_ERR_FM_WDTOUFM(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_FM_WDTOUFM_SHIFT))&STCU2_ERR_FM_WDTOUFM_MASK)
#define STCU2_ERR_FM_LOCKEUFM_MASK               0x10u
#define STCU2_ERR_FM_LOCKEUFM_SHIFT              4u
#define STCU2_ERR_FM_LOCKEUFM_WIDTH              1u
#define STCU2_ERR_FM_LOCKEUFM(x)                 (((uint32_t)(((uint32_t)(x))<<STCU2_ERR_FM_LOCKEUFM_SHIFT))&STCU2_ERR_FM_LOCKEUFM_MASK)
/* LBS Bit Fields */
#define STCU2_LBS_LBS0_MASK                      0x1u
#define STCU2_LBS_LBS0_SHIFT                     0u
#define STCU2_LBS_LBS0_WIDTH                     1u
#define STCU2_LBS_LBS0(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS0_SHIFT))&STCU2_LBS_LBS0_MASK)
#define STCU2_LBS_LBS1_MASK                      0x2u
#define STCU2_LBS_LBS1_SHIFT                     1u
#define STCU2_LBS_LBS1_WIDTH                     1u
#define STCU2_LBS_LBS1(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS1_SHIFT))&STCU2_LBS_LBS1_MASK)
#define STCU2_LBS_LBS2_MASK                      0x4u
#define STCU2_LBS_LBS2_SHIFT                     2u
#define STCU2_LBS_LBS2_WIDTH                     1u
#define STCU2_LBS_LBS2(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBS_LBS2_SHIFT))&STCU2_LBS_LBS2_MASK)
/* LBE Bit Fields */
#define STCU2_LBE_LBE0_MASK                      0x1u
#define STCU2_LBE_LBE0_SHIFT                     0u
#define STCU2_LBE_LBE0_WIDTH                     1u
#define STCU2_LBE_LBE0(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE0_SHIFT))&STCU2_LBE_LBE0_MASK)
#define STCU2_LBE_LBE1_MASK                      0x2u
#define STCU2_LBE_LBE1_SHIFT                     1u
#define STCU2_LBE_LBE1_WIDTH                     1u
#define STCU2_LBE_LBE1(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE1_SHIFT))&STCU2_LBE_LBE1_MASK)
#define STCU2_LBE_LBE2_MASK                      0x4u
#define STCU2_LBE_LBE2_SHIFT                     2u
#define STCU2_LBE_LBE2_WIDTH                     1u
#define STCU2_LBE_LBE2(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_LBE_LBE2_SHIFT))&STCU2_LBE_LBE2_MASK)
/* LBSSW Bit Fields */
#define STCU2_LBSSW_LBSSW0_MASK                  0x1u
#define STCU2_LBSSW_LBSSW0_SHIFT                 0u
#define STCU2_LBSSW_LBSSW0_WIDTH                 1u
#define STCU2_LBSSW_LBSSW0(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW0_SHIFT))&STCU2_LBSSW_LBSSW0_MASK)
#define STCU2_LBSSW_LBSSW1_MASK                  0x2u
#define STCU2_LBSSW_LBSSW1_SHIFT                 1u
#define STCU2_LBSSW_LBSSW1_WIDTH                 1u
#define STCU2_LBSSW_LBSSW1(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW1_SHIFT))&STCU2_LBSSW_LBSSW1_MASK)
#define STCU2_LBSSW_LBSSW2_MASK                  0x4u
#define STCU2_LBSSW_LBSSW2_SHIFT                 2u
#define STCU2_LBSSW_LBSSW2_WIDTH                 1u
#define STCU2_LBSSW_LBSSW2(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBSSW_LBSSW2_SHIFT))&STCU2_LBSSW_LBSSW2_MASK)
/* LBESW Bit Fields */
#define STCU2_LBESW_LBESW0_MASK                  0x1u
#define STCU2_LBESW_LBESW0_SHIFT                 0u
#define STCU2_LBESW_LBESW0_WIDTH                 1u
#define STCU2_LBESW_LBESW0(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW0_SHIFT))&STCU2_LBESW_LBESW0_MASK)
#define STCU2_LBESW_LBESW1_MASK                  0x2u
#define STCU2_LBESW_LBESW1_SHIFT                 1u
#define STCU2_LBESW_LBESW1_WIDTH                 1u
#define STCU2_LBESW_LBESW1(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW1_SHIFT))&STCU2_LBESW_LBESW1_MASK)
#define STCU2_LBESW_LBESW2_MASK                  0x4u
#define STCU2_LBESW_LBESW2_SHIFT                 2u
#define STCU2_LBESW_LBESW2_WIDTH                 1u
#define STCU2_LBESW_LBESW2(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBESW_LBESW2_SHIFT))&STCU2_LBESW_LBESW2_MASK)
/* LBUFM Bit Fields */
#define STCU2_LBUFM_LBUFM0_MASK                  0x1u
#define STCU2_LBUFM_LBUFM0_SHIFT                 0u
#define STCU2_LBUFM_LBUFM0_WIDTH                 1u
#define STCU2_LBUFM_LBUFM0(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBUFM_LBUFM0_SHIFT))&STCU2_LBUFM_LBUFM0_MASK)
#define STCU2_LBUFM_LBUFM1_MASK                  0x2u
#define STCU2_LBUFM_LBUFM1_SHIFT                 1u
#define STCU2_LBUFM_LBUFM1_WIDTH                 1u
#define STCU2_LBUFM_LBUFM1(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBUFM_LBUFM1_SHIFT))&STCU2_LBUFM_LBUFM1_MASK)
#define STCU2_LBUFM_LBUFM2_MASK                  0x4u
#define STCU2_LBUFM_LBUFM2_SHIFT                 2u
#define STCU2_LBUFM_LBUFM2_WIDTH                 1u
#define STCU2_LBUFM_LBUFM2(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_LBUFM_LBUFM2_SHIFT))&STCU2_LBUFM_LBUFM2_MASK)
/* MBSL Bit Fields */
#define STCU2_MBSL_MBS0_MASK                     0x1u
#define STCU2_MBSL_MBS0_SHIFT                    0u
#define STCU2_MBSL_MBS0_WIDTH                    1u
#define STCU2_MBSL_MBS0(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS0_SHIFT))&STCU2_MBSL_MBS0_MASK)
#define STCU2_MBSL_MBS1_MASK                     0x2u
#define STCU2_MBSL_MBS1_SHIFT                    1u
#define STCU2_MBSL_MBS1_WIDTH                    1u
#define STCU2_MBSL_MBS1(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS1_SHIFT))&STCU2_MBSL_MBS1_MASK)
#define STCU2_MBSL_MBS2_MASK                     0x4u
#define STCU2_MBSL_MBS2_SHIFT                    2u
#define STCU2_MBSL_MBS2_WIDTH                    1u
#define STCU2_MBSL_MBS2(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS2_SHIFT))&STCU2_MBSL_MBS2_MASK)
#define STCU2_MBSL_MBS3_MASK                     0x8u
#define STCU2_MBSL_MBS3_SHIFT                    3u
#define STCU2_MBSL_MBS3_WIDTH                    1u
#define STCU2_MBSL_MBS3(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS3_SHIFT))&STCU2_MBSL_MBS3_MASK)
#define STCU2_MBSL_MBS4_MASK                     0x10u
#define STCU2_MBSL_MBS4_SHIFT                    4u
#define STCU2_MBSL_MBS4_WIDTH                    1u
#define STCU2_MBSL_MBS4(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS4_SHIFT))&STCU2_MBSL_MBS4_MASK)
#define STCU2_MBSL_MBS5_MASK                     0x20u
#define STCU2_MBSL_MBS5_SHIFT                    5u
#define STCU2_MBSL_MBS5_WIDTH                    1u
#define STCU2_MBSL_MBS5(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS5_SHIFT))&STCU2_MBSL_MBS5_MASK)
#define STCU2_MBSL_MBS6_MASK                     0x40u
#define STCU2_MBSL_MBS6_SHIFT                    6u
#define STCU2_MBSL_MBS6_WIDTH                    1u
#define STCU2_MBSL_MBS6(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS6_SHIFT))&STCU2_MBSL_MBS6_MASK)
#define STCU2_MBSL_MBS7_MASK                     0x80u
#define STCU2_MBSL_MBS7_SHIFT                    7u
#define STCU2_MBSL_MBS7_WIDTH                    1u
#define STCU2_MBSL_MBS7(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS7_SHIFT))&STCU2_MBSL_MBS7_MASK)
#define STCU2_MBSL_MBS8_MASK                     0x100u
#define STCU2_MBSL_MBS8_SHIFT                    8u
#define STCU2_MBSL_MBS8_WIDTH                    1u
#define STCU2_MBSL_MBS8(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS8_SHIFT))&STCU2_MBSL_MBS8_MASK)
#define STCU2_MBSL_MBS9_MASK                     0x200u
#define STCU2_MBSL_MBS9_SHIFT                    9u
#define STCU2_MBSL_MBS9_WIDTH                    1u
#define STCU2_MBSL_MBS9(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS9_SHIFT))&STCU2_MBSL_MBS9_MASK)
#define STCU2_MBSL_MBS10_MASK                    0x400u
#define STCU2_MBSL_MBS10_SHIFT                   10u
#define STCU2_MBSL_MBS10_WIDTH                   1u
#define STCU2_MBSL_MBS10(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS10_SHIFT))&STCU2_MBSL_MBS10_MASK)
#define STCU2_MBSL_MBS11_MASK                    0x800u
#define STCU2_MBSL_MBS11_SHIFT                   11u
#define STCU2_MBSL_MBS11_WIDTH                   1u
#define STCU2_MBSL_MBS11(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS11_SHIFT))&STCU2_MBSL_MBS11_MASK)
#define STCU2_MBSL_MBS12_MASK                    0x1000u
#define STCU2_MBSL_MBS12_SHIFT                   12u
#define STCU2_MBSL_MBS12_WIDTH                   1u
#define STCU2_MBSL_MBS12(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS12_SHIFT))&STCU2_MBSL_MBS12_MASK)
#define STCU2_MBSL_MBS13_MASK                    0x2000u
#define STCU2_MBSL_MBS13_SHIFT                   13u
#define STCU2_MBSL_MBS13_WIDTH                   1u
#define STCU2_MBSL_MBS13(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS13_SHIFT))&STCU2_MBSL_MBS13_MASK)
#define STCU2_MBSL_MBS14_MASK                    0x4000u
#define STCU2_MBSL_MBS14_SHIFT                   14u
#define STCU2_MBSL_MBS14_WIDTH                   1u
#define STCU2_MBSL_MBS14(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS14_SHIFT))&STCU2_MBSL_MBS14_MASK)
#define STCU2_MBSL_MBS15_MASK                    0x8000u
#define STCU2_MBSL_MBS15_SHIFT                   15u
#define STCU2_MBSL_MBS15_WIDTH                   1u
#define STCU2_MBSL_MBS15(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS15_SHIFT))&STCU2_MBSL_MBS15_MASK)
#define STCU2_MBSL_MBS16_MASK                    0x10000u
#define STCU2_MBSL_MBS16_SHIFT                   16u
#define STCU2_MBSL_MBS16_WIDTH                   1u
#define STCU2_MBSL_MBS16(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS16_SHIFT))&STCU2_MBSL_MBS16_MASK)
#define STCU2_MBSL_MBS17_MASK                    0x20000u
#define STCU2_MBSL_MBS17_SHIFT                   17u
#define STCU2_MBSL_MBS17_WIDTH                   1u
#define STCU2_MBSL_MBS17(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS17_SHIFT))&STCU2_MBSL_MBS17_MASK)
#define STCU2_MBSL_MBS18_MASK                    0x40000u
#define STCU2_MBSL_MBS18_SHIFT                   18u
#define STCU2_MBSL_MBS18_WIDTH                   1u
#define STCU2_MBSL_MBS18(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS18_SHIFT))&STCU2_MBSL_MBS18_MASK)
#define STCU2_MBSL_MBS19_MASK                    0x80000u
#define STCU2_MBSL_MBS19_SHIFT                   19u
#define STCU2_MBSL_MBS19_WIDTH                   1u
#define STCU2_MBSL_MBS19(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS19_SHIFT))&STCU2_MBSL_MBS19_MASK)
#define STCU2_MBSL_MBS20_MASK                    0x100000u
#define STCU2_MBSL_MBS20_SHIFT                   20u
#define STCU2_MBSL_MBS20_WIDTH                   1u
#define STCU2_MBSL_MBS20(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS20_SHIFT))&STCU2_MBSL_MBS20_MASK)
#define STCU2_MBSL_MBS21_MASK                    0x200000u
#define STCU2_MBSL_MBS21_SHIFT                   21u
#define STCU2_MBSL_MBS21_WIDTH                   1u
#define STCU2_MBSL_MBS21(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS21_SHIFT))&STCU2_MBSL_MBS21_MASK)
#define STCU2_MBSL_MBS22_MASK                    0x400000u
#define STCU2_MBSL_MBS22_SHIFT                   22u
#define STCU2_MBSL_MBS22_WIDTH                   1u
#define STCU2_MBSL_MBS22(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS22_SHIFT))&STCU2_MBSL_MBS22_MASK)
#define STCU2_MBSL_MBS23_MASK                    0x800000u
#define STCU2_MBSL_MBS23_SHIFT                   23u
#define STCU2_MBSL_MBS23_WIDTH                   1u
#define STCU2_MBSL_MBS23(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS23_SHIFT))&STCU2_MBSL_MBS23_MASK)
#define STCU2_MBSL_MBS24_MASK                    0x1000000u
#define STCU2_MBSL_MBS24_SHIFT                   24u
#define STCU2_MBSL_MBS24_WIDTH                   1u
#define STCU2_MBSL_MBS24(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS24_SHIFT))&STCU2_MBSL_MBS24_MASK)
#define STCU2_MBSL_MBS25_MASK                    0x2000000u
#define STCU2_MBSL_MBS25_SHIFT                   25u
#define STCU2_MBSL_MBS25_WIDTH                   1u
#define STCU2_MBSL_MBS25(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS25_SHIFT))&STCU2_MBSL_MBS25_MASK)
#define STCU2_MBSL_MBS26_MASK                    0x4000000u
#define STCU2_MBSL_MBS26_SHIFT                   26u
#define STCU2_MBSL_MBS26_WIDTH                   1u
#define STCU2_MBSL_MBS26(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS26_SHIFT))&STCU2_MBSL_MBS26_MASK)
#define STCU2_MBSL_MBS27_MASK                    0x8000000u
#define STCU2_MBSL_MBS27_SHIFT                   27u
#define STCU2_MBSL_MBS27_WIDTH                   1u
#define STCU2_MBSL_MBS27(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS27_SHIFT))&STCU2_MBSL_MBS27_MASK)
#define STCU2_MBSL_MBS28_MASK                    0x10000000u
#define STCU2_MBSL_MBS28_SHIFT                   28u
#define STCU2_MBSL_MBS28_WIDTH                   1u
#define STCU2_MBSL_MBS28(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS28_SHIFT))&STCU2_MBSL_MBS28_MASK)
#define STCU2_MBSL_MBS29_MASK                    0x20000000u
#define STCU2_MBSL_MBS29_SHIFT                   29u
#define STCU2_MBSL_MBS29_WIDTH                   1u
#define STCU2_MBSL_MBS29(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS29_SHIFT))&STCU2_MBSL_MBS29_MASK)
#define STCU2_MBSL_MBS30_MASK                    0x40000000u
#define STCU2_MBSL_MBS30_SHIFT                   30u
#define STCU2_MBSL_MBS30_WIDTH                   1u
#define STCU2_MBSL_MBS30(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS30_SHIFT))&STCU2_MBSL_MBS30_MASK)
#define STCU2_MBSL_MBS31_MASK                    0x80000000u
#define STCU2_MBSL_MBS31_SHIFT                   31u
#define STCU2_MBSL_MBS31_WIDTH                   1u
#define STCU2_MBSL_MBS31(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSL_MBS31_SHIFT))&STCU2_MBSL_MBS31_MASK)
/* MBSM Bit Fields */
#define STCU2_MBSM_MBS32_MASK                    0x1u
#define STCU2_MBSM_MBS32_SHIFT                   0u
#define STCU2_MBSM_MBS32_WIDTH                   1u
#define STCU2_MBSM_MBS32(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS32_SHIFT))&STCU2_MBSM_MBS32_MASK)
#define STCU2_MBSM_MBS33_MASK                    0x2u
#define STCU2_MBSM_MBS33_SHIFT                   1u
#define STCU2_MBSM_MBS33_WIDTH                   1u
#define STCU2_MBSM_MBS33(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS33_SHIFT))&STCU2_MBSM_MBS33_MASK)
#define STCU2_MBSM_MBS34_MASK                    0x4u
#define STCU2_MBSM_MBS34_SHIFT                   2u
#define STCU2_MBSM_MBS34_WIDTH                   1u
#define STCU2_MBSM_MBS34(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS34_SHIFT))&STCU2_MBSM_MBS34_MASK)
#define STCU2_MBSM_MBS35_MASK                    0x8u
#define STCU2_MBSM_MBS35_SHIFT                   3u
#define STCU2_MBSM_MBS35_WIDTH                   1u
#define STCU2_MBSM_MBS35(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS35_SHIFT))&STCU2_MBSM_MBS35_MASK)
#define STCU2_MBSM_MBS36_MASK                    0x10u
#define STCU2_MBSM_MBS36_SHIFT                   4u
#define STCU2_MBSM_MBS36_WIDTH                   1u
#define STCU2_MBSM_MBS36(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS36_SHIFT))&STCU2_MBSM_MBS36_MASK)
#define STCU2_MBSM_MBS37_MASK                    0x20u
#define STCU2_MBSM_MBS37_SHIFT                   5u
#define STCU2_MBSM_MBS37_WIDTH                   1u
#define STCU2_MBSM_MBS37(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS37_SHIFT))&STCU2_MBSM_MBS37_MASK)
#define STCU2_MBSM_MBS38_MASK                    0x40u
#define STCU2_MBSM_MBS38_SHIFT                   6u
#define STCU2_MBSM_MBS38_WIDTH                   1u
#define STCU2_MBSM_MBS38(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS38_SHIFT))&STCU2_MBSM_MBS38_MASK)
#define STCU2_MBSM_MBS39_MASK                    0x80u
#define STCU2_MBSM_MBS39_SHIFT                   7u
#define STCU2_MBSM_MBS39_WIDTH                   1u
#define STCU2_MBSM_MBS39(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS39_SHIFT))&STCU2_MBSM_MBS39_MASK)
#define STCU2_MBSM_MBS40_MASK                    0x100u
#define STCU2_MBSM_MBS40_SHIFT                   8u
#define STCU2_MBSM_MBS40_WIDTH                   1u
#define STCU2_MBSM_MBS40(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS40_SHIFT))&STCU2_MBSM_MBS40_MASK)
#define STCU2_MBSM_MBS41_MASK                    0x200u
#define STCU2_MBSM_MBS41_SHIFT                   9u
#define STCU2_MBSM_MBS41_WIDTH                   1u
#define STCU2_MBSM_MBS41(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS41_SHIFT))&STCU2_MBSM_MBS41_MASK)
#define STCU2_MBSM_MBS42_MASK                    0x400u
#define STCU2_MBSM_MBS42_SHIFT                   10u
#define STCU2_MBSM_MBS42_WIDTH                   1u
#define STCU2_MBSM_MBS42(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS42_SHIFT))&STCU2_MBSM_MBS42_MASK)
#define STCU2_MBSM_MBS43_MASK                    0x800u
#define STCU2_MBSM_MBS43_SHIFT                   11u
#define STCU2_MBSM_MBS43_WIDTH                   1u
#define STCU2_MBSM_MBS43(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS43_SHIFT))&STCU2_MBSM_MBS43_MASK)
#define STCU2_MBSM_MBS44_MASK                    0x1000u
#define STCU2_MBSM_MBS44_SHIFT                   12u
#define STCU2_MBSM_MBS44_WIDTH                   1u
#define STCU2_MBSM_MBS44(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS44_SHIFT))&STCU2_MBSM_MBS44_MASK)
#define STCU2_MBSM_MBS45_MASK                    0x2000u
#define STCU2_MBSM_MBS45_SHIFT                   13u
#define STCU2_MBSM_MBS45_WIDTH                   1u
#define STCU2_MBSM_MBS45(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS45_SHIFT))&STCU2_MBSM_MBS45_MASK)
#define STCU2_MBSM_MBS46_MASK                    0x4000u
#define STCU2_MBSM_MBS46_SHIFT                   14u
#define STCU2_MBSM_MBS46_WIDTH                   1u
#define STCU2_MBSM_MBS46(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS46_SHIFT))&STCU2_MBSM_MBS46_MASK)
#define STCU2_MBSM_MBS47_MASK                    0x8000u
#define STCU2_MBSM_MBS47_SHIFT                   15u
#define STCU2_MBSM_MBS47_WIDTH                   1u
#define STCU2_MBSM_MBS47(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS47_SHIFT))&STCU2_MBSM_MBS47_MASK)
#define STCU2_MBSM_MBS48_MASK                    0x10000u
#define STCU2_MBSM_MBS48_SHIFT                   16u
#define STCU2_MBSM_MBS48_WIDTH                   1u
#define STCU2_MBSM_MBS48(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS48_SHIFT))&STCU2_MBSM_MBS48_MASK)
#define STCU2_MBSM_MBS49_MASK                    0x20000u
#define STCU2_MBSM_MBS49_SHIFT                   17u
#define STCU2_MBSM_MBS49_WIDTH                   1u
#define STCU2_MBSM_MBS49(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS49_SHIFT))&STCU2_MBSM_MBS49_MASK)
#define STCU2_MBSM_MBS50_MASK                    0x40000u
#define STCU2_MBSM_MBS50_SHIFT                   18u
#define STCU2_MBSM_MBS50_WIDTH                   1u
#define STCU2_MBSM_MBS50(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS50_SHIFT))&STCU2_MBSM_MBS50_MASK)
#define STCU2_MBSM_MBS51_MASK                    0x80000u
#define STCU2_MBSM_MBS51_SHIFT                   19u
#define STCU2_MBSM_MBS51_WIDTH                   1u
#define STCU2_MBSM_MBS51(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS51_SHIFT))&STCU2_MBSM_MBS51_MASK)
#define STCU2_MBSM_MBS52_MASK                    0x100000u
#define STCU2_MBSM_MBS52_SHIFT                   20u
#define STCU2_MBSM_MBS52_WIDTH                   1u
#define STCU2_MBSM_MBS52(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS52_SHIFT))&STCU2_MBSM_MBS52_MASK)
#define STCU2_MBSM_MBS53_MASK                    0x200000u
#define STCU2_MBSM_MBS53_SHIFT                   21u
#define STCU2_MBSM_MBS53_WIDTH                   1u
#define STCU2_MBSM_MBS53(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS53_SHIFT))&STCU2_MBSM_MBS53_MASK)
#define STCU2_MBSM_MBS54_MASK                    0x400000u
#define STCU2_MBSM_MBS54_SHIFT                   22u
#define STCU2_MBSM_MBS54_WIDTH                   1u
#define STCU2_MBSM_MBS54(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS54_SHIFT))&STCU2_MBSM_MBS54_MASK)
#define STCU2_MBSM_MBS55_MASK                    0x800000u
#define STCU2_MBSM_MBS55_SHIFT                   23u
#define STCU2_MBSM_MBS55_WIDTH                   1u
#define STCU2_MBSM_MBS55(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS55_SHIFT))&STCU2_MBSM_MBS55_MASK)
#define STCU2_MBSM_MBS56_MASK                    0x1000000u
#define STCU2_MBSM_MBS56_SHIFT                   24u
#define STCU2_MBSM_MBS56_WIDTH                   1u
#define STCU2_MBSM_MBS56(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS56_SHIFT))&STCU2_MBSM_MBS56_MASK)
#define STCU2_MBSM_MBS57_MASK                    0x2000000u
#define STCU2_MBSM_MBS57_SHIFT                   25u
#define STCU2_MBSM_MBS57_WIDTH                   1u
#define STCU2_MBSM_MBS57(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS57_SHIFT))&STCU2_MBSM_MBS57_MASK)
#define STCU2_MBSM_MBS58_MASK                    0x4000000u
#define STCU2_MBSM_MBS58_SHIFT                   26u
#define STCU2_MBSM_MBS58_WIDTH                   1u
#define STCU2_MBSM_MBS58(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS58_SHIFT))&STCU2_MBSM_MBS58_MASK)
#define STCU2_MBSM_MBS59_MASK                    0x8000000u
#define STCU2_MBSM_MBS59_SHIFT                   27u
#define STCU2_MBSM_MBS59_WIDTH                   1u
#define STCU2_MBSM_MBS59(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS59_SHIFT))&STCU2_MBSM_MBS59_MASK)
#define STCU2_MBSM_MBS60_MASK                    0x10000000u
#define STCU2_MBSM_MBS60_SHIFT                   28u
#define STCU2_MBSM_MBS60_WIDTH                   1u
#define STCU2_MBSM_MBS60(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS60_SHIFT))&STCU2_MBSM_MBS60_MASK)
#define STCU2_MBSM_MBS61_MASK                    0x20000000u
#define STCU2_MBSM_MBS61_SHIFT                   29u
#define STCU2_MBSM_MBS61_WIDTH                   1u
#define STCU2_MBSM_MBS61(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS61_SHIFT))&STCU2_MBSM_MBS61_MASK)
#define STCU2_MBSM_MBS62_MASK                    0x40000000u
#define STCU2_MBSM_MBS62_SHIFT                   30u
#define STCU2_MBSM_MBS62_WIDTH                   1u
#define STCU2_MBSM_MBS62(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS62_SHIFT))&STCU2_MBSM_MBS62_MASK)
#define STCU2_MBSM_MBS63_MASK                    0x80000000u
#define STCU2_MBSM_MBS63_SHIFT                   31u
#define STCU2_MBSM_MBS63_WIDTH                   1u
#define STCU2_MBSM_MBS63(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSM_MBS63_SHIFT))&STCU2_MBSM_MBS63_MASK)
/* MBSH Bit Fields */
#define STCU2_MBSH_MBS64_MASK                    0x1u
#define STCU2_MBSH_MBS64_SHIFT                   0u
#define STCU2_MBSH_MBS64_WIDTH                   1u
#define STCU2_MBSH_MBS64(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS64_SHIFT))&STCU2_MBSH_MBS64_MASK)
#define STCU2_MBSH_MBS65_MASK                    0x2u
#define STCU2_MBSH_MBS65_SHIFT                   1u
#define STCU2_MBSH_MBS65_WIDTH                   1u
#define STCU2_MBSH_MBS65(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS65_SHIFT))&STCU2_MBSH_MBS65_MASK)
#define STCU2_MBSH_MBS66_MASK                    0x4u
#define STCU2_MBSH_MBS66_SHIFT                   2u
#define STCU2_MBSH_MBS66_WIDTH                   1u
#define STCU2_MBSH_MBS66(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS66_SHIFT))&STCU2_MBSH_MBS66_MASK)
#define STCU2_MBSH_MBS67_MASK                    0x8u
#define STCU2_MBSH_MBS67_SHIFT                   3u
#define STCU2_MBSH_MBS67_WIDTH                   1u
#define STCU2_MBSH_MBS67(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS67_SHIFT))&STCU2_MBSH_MBS67_MASK)
#define STCU2_MBSH_MBS68_MASK                    0x10u
#define STCU2_MBSH_MBS68_SHIFT                   4u
#define STCU2_MBSH_MBS68_WIDTH                   1u
#define STCU2_MBSH_MBS68(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS68_SHIFT))&STCU2_MBSH_MBS68_MASK)
#define STCU2_MBSH_MBS69_MASK                    0x20u
#define STCU2_MBSH_MBS69_SHIFT                   5u
#define STCU2_MBSH_MBS69_WIDTH                   1u
#define STCU2_MBSH_MBS69(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS69_SHIFT))&STCU2_MBSH_MBS69_MASK)
#define STCU2_MBSH_MBS70_MASK                    0x40u
#define STCU2_MBSH_MBS70_SHIFT                   6u
#define STCU2_MBSH_MBS70_WIDTH                   1u
#define STCU2_MBSH_MBS70(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS70_SHIFT))&STCU2_MBSH_MBS70_MASK)
#define STCU2_MBSH_MBS71_MASK                    0x80u
#define STCU2_MBSH_MBS71_SHIFT                   7u
#define STCU2_MBSH_MBS71_WIDTH                   1u
#define STCU2_MBSH_MBS71(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS71_SHIFT))&STCU2_MBSH_MBS71_MASK)
#define STCU2_MBSH_MBS72_MASK                    0x100u
#define STCU2_MBSH_MBS72_SHIFT                   8u
#define STCU2_MBSH_MBS72_WIDTH                   1u
#define STCU2_MBSH_MBS72(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS72_SHIFT))&STCU2_MBSH_MBS72_MASK)
#define STCU2_MBSH_MBS73_MASK                    0x200u
#define STCU2_MBSH_MBS73_SHIFT                   9u
#define STCU2_MBSH_MBS73_WIDTH                   1u
#define STCU2_MBSH_MBS73(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS73_SHIFT))&STCU2_MBSH_MBS73_MASK)
#define STCU2_MBSH_MBS74_MASK                    0x400u
#define STCU2_MBSH_MBS74_SHIFT                   10u
#define STCU2_MBSH_MBS74_WIDTH                   1u
#define STCU2_MBSH_MBS74(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS74_SHIFT))&STCU2_MBSH_MBS74_MASK)
#define STCU2_MBSH_MBS75_MASK                    0x800u
#define STCU2_MBSH_MBS75_SHIFT                   11u
#define STCU2_MBSH_MBS75_WIDTH                   1u
#define STCU2_MBSH_MBS75(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBSH_MBS75_SHIFT))&STCU2_MBSH_MBS75_MASK)
/* MBEL Bit Fields */
#define STCU2_MBEL_MBE0_MASK                     0x1u
#define STCU2_MBEL_MBE0_SHIFT                    0u
#define STCU2_MBEL_MBE0_WIDTH                    1u
#define STCU2_MBEL_MBE0(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE0_SHIFT))&STCU2_MBEL_MBE0_MASK)
#define STCU2_MBEL_MBE1_MASK                     0x2u
#define STCU2_MBEL_MBE1_SHIFT                    1u
#define STCU2_MBEL_MBE1_WIDTH                    1u
#define STCU2_MBEL_MBE1(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE1_SHIFT))&STCU2_MBEL_MBE1_MASK)
#define STCU2_MBEL_MBE2_MASK                     0x4u
#define STCU2_MBEL_MBE2_SHIFT                    2u
#define STCU2_MBEL_MBE2_WIDTH                    1u
#define STCU2_MBEL_MBE2(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE2_SHIFT))&STCU2_MBEL_MBE2_MASK)
#define STCU2_MBEL_MBE3_MASK                     0x8u
#define STCU2_MBEL_MBE3_SHIFT                    3u
#define STCU2_MBEL_MBE3_WIDTH                    1u
#define STCU2_MBEL_MBE3(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE3_SHIFT))&STCU2_MBEL_MBE3_MASK)
#define STCU2_MBEL_MBE4_MASK                     0x10u
#define STCU2_MBEL_MBE4_SHIFT                    4u
#define STCU2_MBEL_MBE4_WIDTH                    1u
#define STCU2_MBEL_MBE4(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE4_SHIFT))&STCU2_MBEL_MBE4_MASK)
#define STCU2_MBEL_MBE5_MASK                     0x20u
#define STCU2_MBEL_MBE5_SHIFT                    5u
#define STCU2_MBEL_MBE5_WIDTH                    1u
#define STCU2_MBEL_MBE5(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE5_SHIFT))&STCU2_MBEL_MBE5_MASK)
#define STCU2_MBEL_MBE6_MASK                     0x40u
#define STCU2_MBEL_MBE6_SHIFT                    6u
#define STCU2_MBEL_MBE6_WIDTH                    1u
#define STCU2_MBEL_MBE6(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE6_SHIFT))&STCU2_MBEL_MBE6_MASK)
#define STCU2_MBEL_MBE7_MASK                     0x80u
#define STCU2_MBEL_MBE7_SHIFT                    7u
#define STCU2_MBEL_MBE7_WIDTH                    1u
#define STCU2_MBEL_MBE7(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE7_SHIFT))&STCU2_MBEL_MBE7_MASK)
#define STCU2_MBEL_MBE8_MASK                     0x100u
#define STCU2_MBEL_MBE8_SHIFT                    8u
#define STCU2_MBEL_MBE8_WIDTH                    1u
#define STCU2_MBEL_MBE8(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE8_SHIFT))&STCU2_MBEL_MBE8_MASK)
#define STCU2_MBEL_MBE9_MASK                     0x200u
#define STCU2_MBEL_MBE9_SHIFT                    9u
#define STCU2_MBEL_MBE9_WIDTH                    1u
#define STCU2_MBEL_MBE9(x)                       (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE9_SHIFT))&STCU2_MBEL_MBE9_MASK)
#define STCU2_MBEL_MBE10_MASK                    0x400u
#define STCU2_MBEL_MBE10_SHIFT                   10u
#define STCU2_MBEL_MBE10_WIDTH                   1u
#define STCU2_MBEL_MBE10(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE10_SHIFT))&STCU2_MBEL_MBE10_MASK)
#define STCU2_MBEL_MBE11_MASK                    0x800u
#define STCU2_MBEL_MBE11_SHIFT                   11u
#define STCU2_MBEL_MBE11_WIDTH                   1u
#define STCU2_MBEL_MBE11(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE11_SHIFT))&STCU2_MBEL_MBE11_MASK)
#define STCU2_MBEL_MBE12_MASK                    0x1000u
#define STCU2_MBEL_MBE12_SHIFT                   12u
#define STCU2_MBEL_MBE12_WIDTH                   1u
#define STCU2_MBEL_MBE12(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE12_SHIFT))&STCU2_MBEL_MBE12_MASK)
#define STCU2_MBEL_MBE13_MASK                    0x2000u
#define STCU2_MBEL_MBE13_SHIFT                   13u
#define STCU2_MBEL_MBE13_WIDTH                   1u
#define STCU2_MBEL_MBE13(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE13_SHIFT))&STCU2_MBEL_MBE13_MASK)
#define STCU2_MBEL_MBE14_MASK                    0x4000u
#define STCU2_MBEL_MBE14_SHIFT                   14u
#define STCU2_MBEL_MBE14_WIDTH                   1u
#define STCU2_MBEL_MBE14(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE14_SHIFT))&STCU2_MBEL_MBE14_MASK)
#define STCU2_MBEL_MBE15_MASK                    0x8000u
#define STCU2_MBEL_MBE15_SHIFT                   15u
#define STCU2_MBEL_MBE15_WIDTH                   1u
#define STCU2_MBEL_MBE15(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE15_SHIFT))&STCU2_MBEL_MBE15_MASK)
#define STCU2_MBEL_MBE16_MASK                    0x10000u
#define STCU2_MBEL_MBE16_SHIFT                   16u
#define STCU2_MBEL_MBE16_WIDTH                   1u
#define STCU2_MBEL_MBE16(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE16_SHIFT))&STCU2_MBEL_MBE16_MASK)
#define STCU2_MBEL_MBE17_MASK                    0x20000u
#define STCU2_MBEL_MBE17_SHIFT                   17u
#define STCU2_MBEL_MBE17_WIDTH                   1u
#define STCU2_MBEL_MBE17(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE17_SHIFT))&STCU2_MBEL_MBE17_MASK)
#define STCU2_MBEL_MBE18_MASK                    0x40000u
#define STCU2_MBEL_MBE18_SHIFT                   18u
#define STCU2_MBEL_MBE18_WIDTH                   1u
#define STCU2_MBEL_MBE18(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE18_SHIFT))&STCU2_MBEL_MBE18_MASK)
#define STCU2_MBEL_MBE19_MASK                    0x80000u
#define STCU2_MBEL_MBE19_SHIFT                   19u
#define STCU2_MBEL_MBE19_WIDTH                   1u
#define STCU2_MBEL_MBE19(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE19_SHIFT))&STCU2_MBEL_MBE19_MASK)
#define STCU2_MBEL_MBE20_MASK                    0x100000u
#define STCU2_MBEL_MBE20_SHIFT                   20u
#define STCU2_MBEL_MBE20_WIDTH                   1u
#define STCU2_MBEL_MBE20(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE20_SHIFT))&STCU2_MBEL_MBE20_MASK)
#define STCU2_MBEL_MBE21_MASK                    0x200000u
#define STCU2_MBEL_MBE21_SHIFT                   21u
#define STCU2_MBEL_MBE21_WIDTH                   1u
#define STCU2_MBEL_MBE21(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE21_SHIFT))&STCU2_MBEL_MBE21_MASK)
#define STCU2_MBEL_MBE22_MASK                    0x400000u
#define STCU2_MBEL_MBE22_SHIFT                   22u
#define STCU2_MBEL_MBE22_WIDTH                   1u
#define STCU2_MBEL_MBE22(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE22_SHIFT))&STCU2_MBEL_MBE22_MASK)
#define STCU2_MBEL_MBE23_MASK                    0x800000u
#define STCU2_MBEL_MBE23_SHIFT                   23u
#define STCU2_MBEL_MBE23_WIDTH                   1u
#define STCU2_MBEL_MBE23(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE23_SHIFT))&STCU2_MBEL_MBE23_MASK)
#define STCU2_MBEL_MBE24_MASK                    0x1000000u
#define STCU2_MBEL_MBE24_SHIFT                   24u
#define STCU2_MBEL_MBE24_WIDTH                   1u
#define STCU2_MBEL_MBE24(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE24_SHIFT))&STCU2_MBEL_MBE24_MASK)
#define STCU2_MBEL_MBE25_MASK                    0x2000000u
#define STCU2_MBEL_MBE25_SHIFT                   25u
#define STCU2_MBEL_MBE25_WIDTH                   1u
#define STCU2_MBEL_MBE25(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE25_SHIFT))&STCU2_MBEL_MBE25_MASK)
#define STCU2_MBEL_MBE26_MASK                    0x4000000u
#define STCU2_MBEL_MBE26_SHIFT                   26u
#define STCU2_MBEL_MBE26_WIDTH                   1u
#define STCU2_MBEL_MBE26(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE26_SHIFT))&STCU2_MBEL_MBE26_MASK)
#define STCU2_MBEL_MBE27_MASK                    0x8000000u
#define STCU2_MBEL_MBE27_SHIFT                   27u
#define STCU2_MBEL_MBE27_WIDTH                   1u
#define STCU2_MBEL_MBE27(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE27_SHIFT))&STCU2_MBEL_MBE27_MASK)
#define STCU2_MBEL_MBE28_MASK                    0x10000000u
#define STCU2_MBEL_MBE28_SHIFT                   28u
#define STCU2_MBEL_MBE28_WIDTH                   1u
#define STCU2_MBEL_MBE28(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE28_SHIFT))&STCU2_MBEL_MBE28_MASK)
#define STCU2_MBEL_MBE29_MASK                    0x20000000u
#define STCU2_MBEL_MBE29_SHIFT                   29u
#define STCU2_MBEL_MBE29_WIDTH                   1u
#define STCU2_MBEL_MBE29(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE29_SHIFT))&STCU2_MBEL_MBE29_MASK)
#define STCU2_MBEL_MBE30_MASK                    0x40000000u
#define STCU2_MBEL_MBE30_SHIFT                   30u
#define STCU2_MBEL_MBE30_WIDTH                   1u
#define STCU2_MBEL_MBE30(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE30_SHIFT))&STCU2_MBEL_MBE30_MASK)
#define STCU2_MBEL_MBE31_MASK                    0x80000000u
#define STCU2_MBEL_MBE31_SHIFT                   31u
#define STCU2_MBEL_MBE31_WIDTH                   1u
#define STCU2_MBEL_MBE31(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEL_MBE31_SHIFT))&STCU2_MBEL_MBE31_MASK)
/* MBEM Bit Fields */
#define STCU2_MBEM_MBE32_MASK                    0x1u
#define STCU2_MBEM_MBE32_SHIFT                   0u
#define STCU2_MBEM_MBE32_WIDTH                   1u
#define STCU2_MBEM_MBE32(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE32_SHIFT))&STCU2_MBEM_MBE32_MASK)
#define STCU2_MBEM_MBE33_MASK                    0x2u
#define STCU2_MBEM_MBE33_SHIFT                   1u
#define STCU2_MBEM_MBE33_WIDTH                   1u
#define STCU2_MBEM_MBE33(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE33_SHIFT))&STCU2_MBEM_MBE33_MASK)
#define STCU2_MBEM_MBE34_MASK                    0x4u
#define STCU2_MBEM_MBE34_SHIFT                   2u
#define STCU2_MBEM_MBE34_WIDTH                   1u
#define STCU2_MBEM_MBE34(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE34_SHIFT))&STCU2_MBEM_MBE34_MASK)
#define STCU2_MBEM_MBE35_MASK                    0x8u
#define STCU2_MBEM_MBE35_SHIFT                   3u
#define STCU2_MBEM_MBE35_WIDTH                   1u
#define STCU2_MBEM_MBE35(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE35_SHIFT))&STCU2_MBEM_MBE35_MASK)
#define STCU2_MBEM_MBE36_MASK                    0x10u
#define STCU2_MBEM_MBE36_SHIFT                   4u
#define STCU2_MBEM_MBE36_WIDTH                   1u
#define STCU2_MBEM_MBE36(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE36_SHIFT))&STCU2_MBEM_MBE36_MASK)
#define STCU2_MBEM_MBE37_MASK                    0x20u
#define STCU2_MBEM_MBE37_SHIFT                   5u
#define STCU2_MBEM_MBE37_WIDTH                   1u
#define STCU2_MBEM_MBE37(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE37_SHIFT))&STCU2_MBEM_MBE37_MASK)
#define STCU2_MBEM_MBE38_MASK                    0x40u
#define STCU2_MBEM_MBE38_SHIFT                   6u
#define STCU2_MBEM_MBE38_WIDTH                   1u
#define STCU2_MBEM_MBE38(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE38_SHIFT))&STCU2_MBEM_MBE38_MASK)
#define STCU2_MBEM_MBE39_MASK                    0x80u
#define STCU2_MBEM_MBE39_SHIFT                   7u
#define STCU2_MBEM_MBE39_WIDTH                   1u
#define STCU2_MBEM_MBE39(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE39_SHIFT))&STCU2_MBEM_MBE39_MASK)
#define STCU2_MBEM_MBE40_MASK                    0x100u
#define STCU2_MBEM_MBE40_SHIFT                   8u
#define STCU2_MBEM_MBE40_WIDTH                   1u
#define STCU2_MBEM_MBE40(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE40_SHIFT))&STCU2_MBEM_MBE40_MASK)
#define STCU2_MBEM_MBE41_MASK                    0x200u
#define STCU2_MBEM_MBE41_SHIFT                   9u
#define STCU2_MBEM_MBE41_WIDTH                   1u
#define STCU2_MBEM_MBE41(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE41_SHIFT))&STCU2_MBEM_MBE41_MASK)
#define STCU2_MBEM_MBE42_MASK                    0x400u
#define STCU2_MBEM_MBE42_SHIFT                   10u
#define STCU2_MBEM_MBE42_WIDTH                   1u
#define STCU2_MBEM_MBE42(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE42_SHIFT))&STCU2_MBEM_MBE42_MASK)
#define STCU2_MBEM_MBE43_MASK                    0x800u
#define STCU2_MBEM_MBE43_SHIFT                   11u
#define STCU2_MBEM_MBE43_WIDTH                   1u
#define STCU2_MBEM_MBE43(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE43_SHIFT))&STCU2_MBEM_MBE43_MASK)
#define STCU2_MBEM_MBE44_MASK                    0x1000u
#define STCU2_MBEM_MBE44_SHIFT                   12u
#define STCU2_MBEM_MBE44_WIDTH                   1u
#define STCU2_MBEM_MBE44(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE44_SHIFT))&STCU2_MBEM_MBE44_MASK)
#define STCU2_MBEM_MBE45_MASK                    0x2000u
#define STCU2_MBEM_MBE45_SHIFT                   13u
#define STCU2_MBEM_MBE45_WIDTH                   1u
#define STCU2_MBEM_MBE45(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE45_SHIFT))&STCU2_MBEM_MBE45_MASK)
#define STCU2_MBEM_MBE46_MASK                    0x4000u
#define STCU2_MBEM_MBE46_SHIFT                   14u
#define STCU2_MBEM_MBE46_WIDTH                   1u
#define STCU2_MBEM_MBE46(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE46_SHIFT))&STCU2_MBEM_MBE46_MASK)
#define STCU2_MBEM_MBE47_MASK                    0x8000u
#define STCU2_MBEM_MBE47_SHIFT                   15u
#define STCU2_MBEM_MBE47_WIDTH                   1u
#define STCU2_MBEM_MBE47(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE47_SHIFT))&STCU2_MBEM_MBE47_MASK)
#define STCU2_MBEM_MBE48_MASK                    0x10000u
#define STCU2_MBEM_MBE48_SHIFT                   16u
#define STCU2_MBEM_MBE48_WIDTH                   1u
#define STCU2_MBEM_MBE48(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE48_SHIFT))&STCU2_MBEM_MBE48_MASK)
#define STCU2_MBEM_MBE49_MASK                    0x20000u
#define STCU2_MBEM_MBE49_SHIFT                   17u
#define STCU2_MBEM_MBE49_WIDTH                   1u
#define STCU2_MBEM_MBE49(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE49_SHIFT))&STCU2_MBEM_MBE49_MASK)
#define STCU2_MBEM_MBE50_MASK                    0x40000u
#define STCU2_MBEM_MBE50_SHIFT                   18u
#define STCU2_MBEM_MBE50_WIDTH                   1u
#define STCU2_MBEM_MBE50(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE50_SHIFT))&STCU2_MBEM_MBE50_MASK)
#define STCU2_MBEM_MBE51_MASK                    0x80000u
#define STCU2_MBEM_MBE51_SHIFT                   19u
#define STCU2_MBEM_MBE51_WIDTH                   1u
#define STCU2_MBEM_MBE51(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE51_SHIFT))&STCU2_MBEM_MBE51_MASK)
#define STCU2_MBEM_MBE52_MASK                    0x100000u
#define STCU2_MBEM_MBE52_SHIFT                   20u
#define STCU2_MBEM_MBE52_WIDTH                   1u
#define STCU2_MBEM_MBE52(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE52_SHIFT))&STCU2_MBEM_MBE52_MASK)
#define STCU2_MBEM_MBE53_MASK                    0x200000u
#define STCU2_MBEM_MBE53_SHIFT                   21u
#define STCU2_MBEM_MBE53_WIDTH                   1u
#define STCU2_MBEM_MBE53(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE53_SHIFT))&STCU2_MBEM_MBE53_MASK)
#define STCU2_MBEM_MBE54_MASK                    0x400000u
#define STCU2_MBEM_MBE54_SHIFT                   22u
#define STCU2_MBEM_MBE54_WIDTH                   1u
#define STCU2_MBEM_MBE54(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE54_SHIFT))&STCU2_MBEM_MBE54_MASK)
#define STCU2_MBEM_MBE55_MASK                    0x800000u
#define STCU2_MBEM_MBE55_SHIFT                   23u
#define STCU2_MBEM_MBE55_WIDTH                   1u
#define STCU2_MBEM_MBE55(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE55_SHIFT))&STCU2_MBEM_MBE55_MASK)
#define STCU2_MBEM_MBE56_MASK                    0x1000000u
#define STCU2_MBEM_MBE56_SHIFT                   24u
#define STCU2_MBEM_MBE56_WIDTH                   1u
#define STCU2_MBEM_MBE56(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE56_SHIFT))&STCU2_MBEM_MBE56_MASK)
#define STCU2_MBEM_MBE57_MASK                    0x2000000u
#define STCU2_MBEM_MBE57_SHIFT                   25u
#define STCU2_MBEM_MBE57_WIDTH                   1u
#define STCU2_MBEM_MBE57(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE57_SHIFT))&STCU2_MBEM_MBE57_MASK)
#define STCU2_MBEM_MBE58_MASK                    0x4000000u
#define STCU2_MBEM_MBE58_SHIFT                   26u
#define STCU2_MBEM_MBE58_WIDTH                   1u
#define STCU2_MBEM_MBE58(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE58_SHIFT))&STCU2_MBEM_MBE58_MASK)
#define STCU2_MBEM_MBE59_MASK                    0x8000000u
#define STCU2_MBEM_MBE59_SHIFT                   27u
#define STCU2_MBEM_MBE59_WIDTH                   1u
#define STCU2_MBEM_MBE59(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE59_SHIFT))&STCU2_MBEM_MBE59_MASK)
#define STCU2_MBEM_MBE60_MASK                    0x10000000u
#define STCU2_MBEM_MBE60_SHIFT                   28u
#define STCU2_MBEM_MBE60_WIDTH                   1u
#define STCU2_MBEM_MBE60(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE60_SHIFT))&STCU2_MBEM_MBE60_MASK)
#define STCU2_MBEM_MBE61_MASK                    0x20000000u
#define STCU2_MBEM_MBE61_SHIFT                   29u
#define STCU2_MBEM_MBE61_WIDTH                   1u
#define STCU2_MBEM_MBE61(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE61_SHIFT))&STCU2_MBEM_MBE61_MASK)
#define STCU2_MBEM_MBE62_MASK                    0x40000000u
#define STCU2_MBEM_MBE62_SHIFT                   30u
#define STCU2_MBEM_MBE62_WIDTH                   1u
#define STCU2_MBEM_MBE62(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE62_SHIFT))&STCU2_MBEM_MBE62_MASK)
#define STCU2_MBEM_MBE63_MASK                    0x80000000u
#define STCU2_MBEM_MBE63_SHIFT                   31u
#define STCU2_MBEM_MBE63_WIDTH                   1u
#define STCU2_MBEM_MBE63(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEM_MBE63_SHIFT))&STCU2_MBEM_MBE63_MASK)
/* MBEH Bit Fields */
#define STCU2_MBEH_MBE64_MASK                    0x1u
#define STCU2_MBEH_MBE64_SHIFT                   0u
#define STCU2_MBEH_MBE64_WIDTH                   1u
#define STCU2_MBEH_MBE64(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE64_SHIFT))&STCU2_MBEH_MBE64_MASK)
#define STCU2_MBEH_MBE65_MASK                    0x2u
#define STCU2_MBEH_MBE65_SHIFT                   1u
#define STCU2_MBEH_MBE65_WIDTH                   1u
#define STCU2_MBEH_MBE65(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE65_SHIFT))&STCU2_MBEH_MBE65_MASK)
#define STCU2_MBEH_MBE66_MASK                    0x4u
#define STCU2_MBEH_MBE66_SHIFT                   2u
#define STCU2_MBEH_MBE66_WIDTH                   1u
#define STCU2_MBEH_MBE66(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE66_SHIFT))&STCU2_MBEH_MBE66_MASK)
#define STCU2_MBEH_MBE67_MASK                    0x8u
#define STCU2_MBEH_MBE67_SHIFT                   3u
#define STCU2_MBEH_MBE67_WIDTH                   1u
#define STCU2_MBEH_MBE67(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE67_SHIFT))&STCU2_MBEH_MBE67_MASK)
#define STCU2_MBEH_MBE68_MASK                    0x10u
#define STCU2_MBEH_MBE68_SHIFT                   4u
#define STCU2_MBEH_MBE68_WIDTH                   1u
#define STCU2_MBEH_MBE68(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE68_SHIFT))&STCU2_MBEH_MBE68_MASK)
#define STCU2_MBEH_MBE69_MASK                    0x20u
#define STCU2_MBEH_MBE69_SHIFT                   5u
#define STCU2_MBEH_MBE69_WIDTH                   1u
#define STCU2_MBEH_MBE69(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE69_SHIFT))&STCU2_MBEH_MBE69_MASK)
#define STCU2_MBEH_MBE70_MASK                    0x40u
#define STCU2_MBEH_MBE70_SHIFT                   6u
#define STCU2_MBEH_MBE70_WIDTH                   1u
#define STCU2_MBEH_MBE70(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE70_SHIFT))&STCU2_MBEH_MBE70_MASK)
#define STCU2_MBEH_MBE71_MASK                    0x80u
#define STCU2_MBEH_MBE71_SHIFT                   7u
#define STCU2_MBEH_MBE71_WIDTH                   1u
#define STCU2_MBEH_MBE71(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE71_SHIFT))&STCU2_MBEH_MBE71_MASK)
#define STCU2_MBEH_MBE72_MASK                    0x100u
#define STCU2_MBEH_MBE72_SHIFT                   8u
#define STCU2_MBEH_MBE72_WIDTH                   1u
#define STCU2_MBEH_MBE72(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE72_SHIFT))&STCU2_MBEH_MBE72_MASK)
#define STCU2_MBEH_MBE73_MASK                    0x200u
#define STCU2_MBEH_MBE73_SHIFT                   9u
#define STCU2_MBEH_MBE73_WIDTH                   1u
#define STCU2_MBEH_MBE73(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE73_SHIFT))&STCU2_MBEH_MBE73_MASK)
#define STCU2_MBEH_MBE74_MASK                    0x400u
#define STCU2_MBEH_MBE74_SHIFT                   10u
#define STCU2_MBEH_MBE74_WIDTH                   1u
#define STCU2_MBEH_MBE74(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE74_SHIFT))&STCU2_MBEH_MBE74_MASK)
#define STCU2_MBEH_MBE75_MASK                    0x800u
#define STCU2_MBEH_MBE75_SHIFT                   11u
#define STCU2_MBEH_MBE75_WIDTH                   1u
#define STCU2_MBEH_MBE75(x)                      (((uint32_t)(((uint32_t)(x))<<STCU2_MBEH_MBE75_SHIFT))&STCU2_MBEH_MBE75_MASK)
/* MBSLSW Bit Fields */
#define STCU2_MBSLSW_MBSSW0_MASK                 0x1u
#define STCU2_MBSLSW_MBSSW0_SHIFT                0u
#define STCU2_MBSLSW_MBSSW0_WIDTH                1u
#define STCU2_MBSLSW_MBSSW0(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW0_SHIFT))&STCU2_MBSLSW_MBSSW0_MASK)
#define STCU2_MBSLSW_MBSSW1_MASK                 0x2u
#define STCU2_MBSLSW_MBSSW1_SHIFT                1u
#define STCU2_MBSLSW_MBSSW1_WIDTH                1u
#define STCU2_MBSLSW_MBSSW1(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW1_SHIFT))&STCU2_MBSLSW_MBSSW1_MASK)
#define STCU2_MBSLSW_MBSSW2_MASK                 0x4u
#define STCU2_MBSLSW_MBSSW2_SHIFT                2u
#define STCU2_MBSLSW_MBSSW2_WIDTH                1u
#define STCU2_MBSLSW_MBSSW2(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW2_SHIFT))&STCU2_MBSLSW_MBSSW2_MASK)
#define STCU2_MBSLSW_MBSSW3_MASK                 0x8u
#define STCU2_MBSLSW_MBSSW3_SHIFT                3u
#define STCU2_MBSLSW_MBSSW3_WIDTH                1u
#define STCU2_MBSLSW_MBSSW3(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW3_SHIFT))&STCU2_MBSLSW_MBSSW3_MASK)
#define STCU2_MBSLSW_MBSSW4_MASK                 0x10u
#define STCU2_MBSLSW_MBSSW4_SHIFT                4u
#define STCU2_MBSLSW_MBSSW4_WIDTH                1u
#define STCU2_MBSLSW_MBSSW4(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW4_SHIFT))&STCU2_MBSLSW_MBSSW4_MASK)
#define STCU2_MBSLSW_MBSSW5_MASK                 0x20u
#define STCU2_MBSLSW_MBSSW5_SHIFT                5u
#define STCU2_MBSLSW_MBSSW5_WIDTH                1u
#define STCU2_MBSLSW_MBSSW5(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW5_SHIFT))&STCU2_MBSLSW_MBSSW5_MASK)
#define STCU2_MBSLSW_MBSSW6_MASK                 0x40u
#define STCU2_MBSLSW_MBSSW6_SHIFT                6u
#define STCU2_MBSLSW_MBSSW6_WIDTH                1u
#define STCU2_MBSLSW_MBSSW6(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW6_SHIFT))&STCU2_MBSLSW_MBSSW6_MASK)
#define STCU2_MBSLSW_MBSSW7_MASK                 0x80u
#define STCU2_MBSLSW_MBSSW7_SHIFT                7u
#define STCU2_MBSLSW_MBSSW7_WIDTH                1u
#define STCU2_MBSLSW_MBSSW7(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW7_SHIFT))&STCU2_MBSLSW_MBSSW7_MASK)
#define STCU2_MBSLSW_MBSSW8_MASK                 0x100u
#define STCU2_MBSLSW_MBSSW8_SHIFT                8u
#define STCU2_MBSLSW_MBSSW8_WIDTH                1u
#define STCU2_MBSLSW_MBSSW8(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW8_SHIFT))&STCU2_MBSLSW_MBSSW8_MASK)
#define STCU2_MBSLSW_MBSSW9_MASK                 0x200u
#define STCU2_MBSLSW_MBSSW9_SHIFT                9u
#define STCU2_MBSLSW_MBSSW9_WIDTH                1u
#define STCU2_MBSLSW_MBSSW9(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW9_SHIFT))&STCU2_MBSLSW_MBSSW9_MASK)
#define STCU2_MBSLSW_MBSSW10_MASK                0x400u
#define STCU2_MBSLSW_MBSSW10_SHIFT               10u
#define STCU2_MBSLSW_MBSSW10_WIDTH               1u
#define STCU2_MBSLSW_MBSSW10(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW10_SHIFT))&STCU2_MBSLSW_MBSSW10_MASK)
#define STCU2_MBSLSW_MBSSW11_MASK                0x800u
#define STCU2_MBSLSW_MBSSW11_SHIFT               11u
#define STCU2_MBSLSW_MBSSW11_WIDTH               1u
#define STCU2_MBSLSW_MBSSW11(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW11_SHIFT))&STCU2_MBSLSW_MBSSW11_MASK)
#define STCU2_MBSLSW_MBSSW12_MASK                0x1000u
#define STCU2_MBSLSW_MBSSW12_SHIFT               12u
#define STCU2_MBSLSW_MBSSW12_WIDTH               1u
#define STCU2_MBSLSW_MBSSW12(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW12_SHIFT))&STCU2_MBSLSW_MBSSW12_MASK)
#define STCU2_MBSLSW_MBSSW13_MASK                0x2000u
#define STCU2_MBSLSW_MBSSW13_SHIFT               13u
#define STCU2_MBSLSW_MBSSW13_WIDTH               1u
#define STCU2_MBSLSW_MBSSW13(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW13_SHIFT))&STCU2_MBSLSW_MBSSW13_MASK)
#define STCU2_MBSLSW_MBSSW14_MASK                0x4000u
#define STCU2_MBSLSW_MBSSW14_SHIFT               14u
#define STCU2_MBSLSW_MBSSW14_WIDTH               1u
#define STCU2_MBSLSW_MBSSW14(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW14_SHIFT))&STCU2_MBSLSW_MBSSW14_MASK)
#define STCU2_MBSLSW_MBSSW15_MASK                0x8000u
#define STCU2_MBSLSW_MBSSW15_SHIFT               15u
#define STCU2_MBSLSW_MBSSW15_WIDTH               1u
#define STCU2_MBSLSW_MBSSW15(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW15_SHIFT))&STCU2_MBSLSW_MBSSW15_MASK)
#define STCU2_MBSLSW_MBSSW16_MASK                0x10000u
#define STCU2_MBSLSW_MBSSW16_SHIFT               16u
#define STCU2_MBSLSW_MBSSW16_WIDTH               1u
#define STCU2_MBSLSW_MBSSW16(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW16_SHIFT))&STCU2_MBSLSW_MBSSW16_MASK)
#define STCU2_MBSLSW_MBSSW17_MASK                0x20000u
#define STCU2_MBSLSW_MBSSW17_SHIFT               17u
#define STCU2_MBSLSW_MBSSW17_WIDTH               1u
#define STCU2_MBSLSW_MBSSW17(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW17_SHIFT))&STCU2_MBSLSW_MBSSW17_MASK)
#define STCU2_MBSLSW_MBSSW18_MASK                0x40000u
#define STCU2_MBSLSW_MBSSW18_SHIFT               18u
#define STCU2_MBSLSW_MBSSW18_WIDTH               1u
#define STCU2_MBSLSW_MBSSW18(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW18_SHIFT))&STCU2_MBSLSW_MBSSW18_MASK)
#define STCU2_MBSLSW_MBSSW19_MASK                0x80000u
#define STCU2_MBSLSW_MBSSW19_SHIFT               19u
#define STCU2_MBSLSW_MBSSW19_WIDTH               1u
#define STCU2_MBSLSW_MBSSW19(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW19_SHIFT))&STCU2_MBSLSW_MBSSW19_MASK)
#define STCU2_MBSLSW_MBSSW20_MASK                0x100000u
#define STCU2_MBSLSW_MBSSW20_SHIFT               20u
#define STCU2_MBSLSW_MBSSW20_WIDTH               1u
#define STCU2_MBSLSW_MBSSW20(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW20_SHIFT))&STCU2_MBSLSW_MBSSW20_MASK)
#define STCU2_MBSLSW_MBSSW21_MASK                0x200000u
#define STCU2_MBSLSW_MBSSW21_SHIFT               21u
#define STCU2_MBSLSW_MBSSW21_WIDTH               1u
#define STCU2_MBSLSW_MBSSW21(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW21_SHIFT))&STCU2_MBSLSW_MBSSW21_MASK)
#define STCU2_MBSLSW_MBSSW22_MASK                0x400000u
#define STCU2_MBSLSW_MBSSW22_SHIFT               22u
#define STCU2_MBSLSW_MBSSW22_WIDTH               1u
#define STCU2_MBSLSW_MBSSW22(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW22_SHIFT))&STCU2_MBSLSW_MBSSW22_MASK)
#define STCU2_MBSLSW_MBSSW23_MASK                0x800000u
#define STCU2_MBSLSW_MBSSW23_SHIFT               23u
#define STCU2_MBSLSW_MBSSW23_WIDTH               1u
#define STCU2_MBSLSW_MBSSW23(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW23_SHIFT))&STCU2_MBSLSW_MBSSW23_MASK)
#define STCU2_MBSLSW_MBSSW24_MASK                0x1000000u
#define STCU2_MBSLSW_MBSSW24_SHIFT               24u
#define STCU2_MBSLSW_MBSSW24_WIDTH               1u
#define STCU2_MBSLSW_MBSSW24(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW24_SHIFT))&STCU2_MBSLSW_MBSSW24_MASK)
#define STCU2_MBSLSW_MBSSW25_MASK                0x2000000u
#define STCU2_MBSLSW_MBSSW25_SHIFT               25u
#define STCU2_MBSLSW_MBSSW25_WIDTH               1u
#define STCU2_MBSLSW_MBSSW25(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW25_SHIFT))&STCU2_MBSLSW_MBSSW25_MASK)
#define STCU2_MBSLSW_MBSSW26_MASK                0x4000000u
#define STCU2_MBSLSW_MBSSW26_SHIFT               26u
#define STCU2_MBSLSW_MBSSW26_WIDTH               1u
#define STCU2_MBSLSW_MBSSW26(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW26_SHIFT))&STCU2_MBSLSW_MBSSW26_MASK)
#define STCU2_MBSLSW_MBSSW27_MASK                0x8000000u
#define STCU2_MBSLSW_MBSSW27_SHIFT               27u
#define STCU2_MBSLSW_MBSSW27_WIDTH               1u
#define STCU2_MBSLSW_MBSSW27(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW27_SHIFT))&STCU2_MBSLSW_MBSSW27_MASK)
#define STCU2_MBSLSW_MBSSW28_MASK                0x10000000u
#define STCU2_MBSLSW_MBSSW28_SHIFT               28u
#define STCU2_MBSLSW_MBSSW28_WIDTH               1u
#define STCU2_MBSLSW_MBSSW28(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW28_SHIFT))&STCU2_MBSLSW_MBSSW28_MASK)
#define STCU2_MBSLSW_MBSSW29_MASK                0x20000000u
#define STCU2_MBSLSW_MBSSW29_SHIFT               29u
#define STCU2_MBSLSW_MBSSW29_WIDTH               1u
#define STCU2_MBSLSW_MBSSW29(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW29_SHIFT))&STCU2_MBSLSW_MBSSW29_MASK)
#define STCU2_MBSLSW_MBSSW30_MASK                0x40000000u
#define STCU2_MBSLSW_MBSSW30_SHIFT               30u
#define STCU2_MBSLSW_MBSSW30_WIDTH               1u
#define STCU2_MBSLSW_MBSSW30(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW30_SHIFT))&STCU2_MBSLSW_MBSSW30_MASK)
#define STCU2_MBSLSW_MBSSW31_MASK                0x80000000u
#define STCU2_MBSLSW_MBSSW31_SHIFT               31u
#define STCU2_MBSLSW_MBSSW31_WIDTH               1u
#define STCU2_MBSLSW_MBSSW31(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSLSW_MBSSW31_SHIFT))&STCU2_MBSLSW_MBSSW31_MASK)
/* MBSMSW Bit Fields */
#define STCU2_MBSMSW_MBSSW32_MASK                0x1u
#define STCU2_MBSMSW_MBSSW32_SHIFT               0u
#define STCU2_MBSMSW_MBSSW32_WIDTH               1u
#define STCU2_MBSMSW_MBSSW32(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW32_SHIFT))&STCU2_MBSMSW_MBSSW32_MASK)
#define STCU2_MBSMSW_MBSSW33_MASK                0x2u
#define STCU2_MBSMSW_MBSSW33_SHIFT               1u
#define STCU2_MBSMSW_MBSSW33_WIDTH               1u
#define STCU2_MBSMSW_MBSSW33(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW33_SHIFT))&STCU2_MBSMSW_MBSSW33_MASK)
#define STCU2_MBSMSW_MBSSW34_MASK                0x4u
#define STCU2_MBSMSW_MBSSW34_SHIFT               2u
#define STCU2_MBSMSW_MBSSW34_WIDTH               1u
#define STCU2_MBSMSW_MBSSW34(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW34_SHIFT))&STCU2_MBSMSW_MBSSW34_MASK)
#define STCU2_MBSMSW_MBSSW35_MASK                0x8u
#define STCU2_MBSMSW_MBSSW35_SHIFT               3u
#define STCU2_MBSMSW_MBSSW35_WIDTH               1u
#define STCU2_MBSMSW_MBSSW35(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW35_SHIFT))&STCU2_MBSMSW_MBSSW35_MASK)
#define STCU2_MBSMSW_MBSSW36_MASK                0x10u
#define STCU2_MBSMSW_MBSSW36_SHIFT               4u
#define STCU2_MBSMSW_MBSSW36_WIDTH               1u
#define STCU2_MBSMSW_MBSSW36(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW36_SHIFT))&STCU2_MBSMSW_MBSSW36_MASK)
#define STCU2_MBSMSW_MBSSW37_MASK                0x20u
#define STCU2_MBSMSW_MBSSW37_SHIFT               5u
#define STCU2_MBSMSW_MBSSW37_WIDTH               1u
#define STCU2_MBSMSW_MBSSW37(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW37_SHIFT))&STCU2_MBSMSW_MBSSW37_MASK)
#define STCU2_MBSMSW_MBSSW38_MASK                0x40u
#define STCU2_MBSMSW_MBSSW38_SHIFT               6u
#define STCU2_MBSMSW_MBSSW38_WIDTH               1u
#define STCU2_MBSMSW_MBSSW38(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW38_SHIFT))&STCU2_MBSMSW_MBSSW38_MASK)
#define STCU2_MBSMSW_MBSSW39_MASK                0x80u
#define STCU2_MBSMSW_MBSSW39_SHIFT               7u
#define STCU2_MBSMSW_MBSSW39_WIDTH               1u
#define STCU2_MBSMSW_MBSSW39(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW39_SHIFT))&STCU2_MBSMSW_MBSSW39_MASK)
#define STCU2_MBSMSW_MBSSW40_MASK                0x100u
#define STCU2_MBSMSW_MBSSW40_SHIFT               8u
#define STCU2_MBSMSW_MBSSW40_WIDTH               1u
#define STCU2_MBSMSW_MBSSW40(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW40_SHIFT))&STCU2_MBSMSW_MBSSW40_MASK)
#define STCU2_MBSMSW_MBSSW41_MASK                0x200u
#define STCU2_MBSMSW_MBSSW41_SHIFT               9u
#define STCU2_MBSMSW_MBSSW41_WIDTH               1u
#define STCU2_MBSMSW_MBSSW41(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW41_SHIFT))&STCU2_MBSMSW_MBSSW41_MASK)
#define STCU2_MBSMSW_MBSSW42_MASK                0x400u
#define STCU2_MBSMSW_MBSSW42_SHIFT               10u
#define STCU2_MBSMSW_MBSSW42_WIDTH               1u
#define STCU2_MBSMSW_MBSSW42(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW42_SHIFT))&STCU2_MBSMSW_MBSSW42_MASK)
#define STCU2_MBSMSW_MBSSW43_MASK                0x800u
#define STCU2_MBSMSW_MBSSW43_SHIFT               11u
#define STCU2_MBSMSW_MBSSW43_WIDTH               1u
#define STCU2_MBSMSW_MBSSW43(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW43_SHIFT))&STCU2_MBSMSW_MBSSW43_MASK)
#define STCU2_MBSMSW_MBSSW44_MASK                0x1000u
#define STCU2_MBSMSW_MBSSW44_SHIFT               12u
#define STCU2_MBSMSW_MBSSW44_WIDTH               1u
#define STCU2_MBSMSW_MBSSW44(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW44_SHIFT))&STCU2_MBSMSW_MBSSW44_MASK)
#define STCU2_MBSMSW_MBSSW45_MASK                0x2000u
#define STCU2_MBSMSW_MBSSW45_SHIFT               13u
#define STCU2_MBSMSW_MBSSW45_WIDTH               1u
#define STCU2_MBSMSW_MBSSW45(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW45_SHIFT))&STCU2_MBSMSW_MBSSW45_MASK)
#define STCU2_MBSMSW_MBSSW46_MASK                0x4000u
#define STCU2_MBSMSW_MBSSW46_SHIFT               14u
#define STCU2_MBSMSW_MBSSW46_WIDTH               1u
#define STCU2_MBSMSW_MBSSW46(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW46_SHIFT))&STCU2_MBSMSW_MBSSW46_MASK)
#define STCU2_MBSMSW_MBSSW47_MASK                0x8000u
#define STCU2_MBSMSW_MBSSW47_SHIFT               15u
#define STCU2_MBSMSW_MBSSW47_WIDTH               1u
#define STCU2_MBSMSW_MBSSW47(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW47_SHIFT))&STCU2_MBSMSW_MBSSW47_MASK)
#define STCU2_MBSMSW_MBSSW48_MASK                0x10000u
#define STCU2_MBSMSW_MBSSW48_SHIFT               16u
#define STCU2_MBSMSW_MBSSW48_WIDTH               1u
#define STCU2_MBSMSW_MBSSW48(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW48_SHIFT))&STCU2_MBSMSW_MBSSW48_MASK)
#define STCU2_MBSMSW_MBSSW49_MASK                0x20000u
#define STCU2_MBSMSW_MBSSW49_SHIFT               17u
#define STCU2_MBSMSW_MBSSW49_WIDTH               1u
#define STCU2_MBSMSW_MBSSW49(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW49_SHIFT))&STCU2_MBSMSW_MBSSW49_MASK)
#define STCU2_MBSMSW_MBSSW50_MASK                0x40000u
#define STCU2_MBSMSW_MBSSW50_SHIFT               18u
#define STCU2_MBSMSW_MBSSW50_WIDTH               1u
#define STCU2_MBSMSW_MBSSW50(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW50_SHIFT))&STCU2_MBSMSW_MBSSW50_MASK)
#define STCU2_MBSMSW_MBSSW51_MASK                0x80000u
#define STCU2_MBSMSW_MBSSW51_SHIFT               19u
#define STCU2_MBSMSW_MBSSW51_WIDTH               1u
#define STCU2_MBSMSW_MBSSW51(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW51_SHIFT))&STCU2_MBSMSW_MBSSW51_MASK)
#define STCU2_MBSMSW_MBSSW52_MASK                0x100000u
#define STCU2_MBSMSW_MBSSW52_SHIFT               20u
#define STCU2_MBSMSW_MBSSW52_WIDTH               1u
#define STCU2_MBSMSW_MBSSW52(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW52_SHIFT))&STCU2_MBSMSW_MBSSW52_MASK)
#define STCU2_MBSMSW_MBSSW53_MASK                0x200000u
#define STCU2_MBSMSW_MBSSW53_SHIFT               21u
#define STCU2_MBSMSW_MBSSW53_WIDTH               1u
#define STCU2_MBSMSW_MBSSW53(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW53_SHIFT))&STCU2_MBSMSW_MBSSW53_MASK)
#define STCU2_MBSMSW_MBSSW54_MASK                0x400000u
#define STCU2_MBSMSW_MBSSW54_SHIFT               22u
#define STCU2_MBSMSW_MBSSW54_WIDTH               1u
#define STCU2_MBSMSW_MBSSW54(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW54_SHIFT))&STCU2_MBSMSW_MBSSW54_MASK)
#define STCU2_MBSMSW_MBSSW55_MASK                0x800000u
#define STCU2_MBSMSW_MBSSW55_SHIFT               23u
#define STCU2_MBSMSW_MBSSW55_WIDTH               1u
#define STCU2_MBSMSW_MBSSW55(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW55_SHIFT))&STCU2_MBSMSW_MBSSW55_MASK)
#define STCU2_MBSMSW_MBSSW56_MASK                0x1000000u
#define STCU2_MBSMSW_MBSSW56_SHIFT               24u
#define STCU2_MBSMSW_MBSSW56_WIDTH               1u
#define STCU2_MBSMSW_MBSSW56(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW56_SHIFT))&STCU2_MBSMSW_MBSSW56_MASK)
#define STCU2_MBSMSW_MBSSW57_MASK                0x2000000u
#define STCU2_MBSMSW_MBSSW57_SHIFT               25u
#define STCU2_MBSMSW_MBSSW57_WIDTH               1u
#define STCU2_MBSMSW_MBSSW57(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW57_SHIFT))&STCU2_MBSMSW_MBSSW57_MASK)
#define STCU2_MBSMSW_MBSSW58_MASK                0x4000000u
#define STCU2_MBSMSW_MBSSW58_SHIFT               26u
#define STCU2_MBSMSW_MBSSW58_WIDTH               1u
#define STCU2_MBSMSW_MBSSW58(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW58_SHIFT))&STCU2_MBSMSW_MBSSW58_MASK)
#define STCU2_MBSMSW_MBSSW59_MASK                0x8000000u
#define STCU2_MBSMSW_MBSSW59_SHIFT               27u
#define STCU2_MBSMSW_MBSSW59_WIDTH               1u
#define STCU2_MBSMSW_MBSSW59(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW59_SHIFT))&STCU2_MBSMSW_MBSSW59_MASK)
#define STCU2_MBSMSW_MBSSW60_MASK                0x10000000u
#define STCU2_MBSMSW_MBSSW60_SHIFT               28u
#define STCU2_MBSMSW_MBSSW60_WIDTH               1u
#define STCU2_MBSMSW_MBSSW60(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW60_SHIFT))&STCU2_MBSMSW_MBSSW60_MASK)
#define STCU2_MBSMSW_MBSSW61_MASK                0x20000000u
#define STCU2_MBSMSW_MBSSW61_SHIFT               29u
#define STCU2_MBSMSW_MBSSW61_WIDTH               1u
#define STCU2_MBSMSW_MBSSW61(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW61_SHIFT))&STCU2_MBSMSW_MBSSW61_MASK)
#define STCU2_MBSMSW_MBSSW62_MASK                0x40000000u
#define STCU2_MBSMSW_MBSSW62_SHIFT               30u
#define STCU2_MBSMSW_MBSSW62_WIDTH               1u
#define STCU2_MBSMSW_MBSSW62(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW62_SHIFT))&STCU2_MBSMSW_MBSSW62_MASK)
#define STCU2_MBSMSW_MBSSW63_MASK                0x80000000u
#define STCU2_MBSMSW_MBSSW63_SHIFT               31u
#define STCU2_MBSMSW_MBSSW63_WIDTH               1u
#define STCU2_MBSMSW_MBSSW63(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSMSW_MBSSW63_SHIFT))&STCU2_MBSMSW_MBSSW63_MASK)
/* MBSHSW Bit Fields */
#define STCU2_MBSHSW_MBSSW64_MASK                0x1u
#define STCU2_MBSHSW_MBSSW64_SHIFT               0u
#define STCU2_MBSHSW_MBSSW64_WIDTH               1u
#define STCU2_MBSHSW_MBSSW64(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW64_SHIFT))&STCU2_MBSHSW_MBSSW64_MASK)
#define STCU2_MBSHSW_MBSSW65_MASK                0x2u
#define STCU2_MBSHSW_MBSSW65_SHIFT               1u
#define STCU2_MBSHSW_MBSSW65_WIDTH               1u
#define STCU2_MBSHSW_MBSSW65(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW65_SHIFT))&STCU2_MBSHSW_MBSSW65_MASK)
#define STCU2_MBSHSW_MBSSW66_MASK                0x4u
#define STCU2_MBSHSW_MBSSW66_SHIFT               2u
#define STCU2_MBSHSW_MBSSW66_WIDTH               1u
#define STCU2_MBSHSW_MBSSW66(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW66_SHIFT))&STCU2_MBSHSW_MBSSW66_MASK)
#define STCU2_MBSHSW_MBSSW67_MASK                0x8u
#define STCU2_MBSHSW_MBSSW67_SHIFT               3u
#define STCU2_MBSHSW_MBSSW67_WIDTH               1u
#define STCU2_MBSHSW_MBSSW67(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW67_SHIFT))&STCU2_MBSHSW_MBSSW67_MASK)
#define STCU2_MBSHSW_MBSSW68_MASK                0x10u
#define STCU2_MBSHSW_MBSSW68_SHIFT               4u
#define STCU2_MBSHSW_MBSSW68_WIDTH               1u
#define STCU2_MBSHSW_MBSSW68(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW68_SHIFT))&STCU2_MBSHSW_MBSSW68_MASK)
#define STCU2_MBSHSW_MBSSW69_MASK                0x20u
#define STCU2_MBSHSW_MBSSW69_SHIFT               5u
#define STCU2_MBSHSW_MBSSW69_WIDTH               1u
#define STCU2_MBSHSW_MBSSW69(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW69_SHIFT))&STCU2_MBSHSW_MBSSW69_MASK)
#define STCU2_MBSHSW_MBSSW70_MASK                0x40u
#define STCU2_MBSHSW_MBSSW70_SHIFT               6u
#define STCU2_MBSHSW_MBSSW70_WIDTH               1u
#define STCU2_MBSHSW_MBSSW70(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW70_SHIFT))&STCU2_MBSHSW_MBSSW70_MASK)
#define STCU2_MBSHSW_MBSSW71_MASK                0x80u
#define STCU2_MBSHSW_MBSSW71_SHIFT               7u
#define STCU2_MBSHSW_MBSSW71_WIDTH               1u
#define STCU2_MBSHSW_MBSSW71(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW71_SHIFT))&STCU2_MBSHSW_MBSSW71_MASK)
#define STCU2_MBSHSW_MBSSW72_MASK                0x100u
#define STCU2_MBSHSW_MBSSW72_SHIFT               8u
#define STCU2_MBSHSW_MBSSW72_WIDTH               1u
#define STCU2_MBSHSW_MBSSW72(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW72_SHIFT))&STCU2_MBSHSW_MBSSW72_MASK)
#define STCU2_MBSHSW_MBSSW73_MASK                0x200u
#define STCU2_MBSHSW_MBSSW73_SHIFT               9u
#define STCU2_MBSHSW_MBSSW73_WIDTH               1u
#define STCU2_MBSHSW_MBSSW73(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW73_SHIFT))&STCU2_MBSHSW_MBSSW73_MASK)
#define STCU2_MBSHSW_MBSSW74_MASK                0x400u
#define STCU2_MBSHSW_MBSSW74_SHIFT               10u
#define STCU2_MBSHSW_MBSSW74_WIDTH               1u
#define STCU2_MBSHSW_MBSSW74(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW74_SHIFT))&STCU2_MBSHSW_MBSSW74_MASK)
#define STCU2_MBSHSW_MBSSW75_MASK                0x800u
#define STCU2_MBSHSW_MBSSW75_SHIFT               11u
#define STCU2_MBSHSW_MBSSW75_WIDTH               1u
#define STCU2_MBSHSW_MBSSW75(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBSHSW_MBSSW75_SHIFT))&STCU2_MBSHSW_MBSSW75_MASK)
/* MBELSW Bit Fields */
#define STCU2_MBELSW_MBESW0_MASK                 0x1u
#define STCU2_MBELSW_MBESW0_SHIFT                0u
#define STCU2_MBELSW_MBESW0_WIDTH                1u
#define STCU2_MBELSW_MBESW0(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW0_SHIFT))&STCU2_MBELSW_MBESW0_MASK)
#define STCU2_MBELSW_MBESW1_MASK                 0x2u
#define STCU2_MBELSW_MBESW1_SHIFT                1u
#define STCU2_MBELSW_MBESW1_WIDTH                1u
#define STCU2_MBELSW_MBESW1(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW1_SHIFT))&STCU2_MBELSW_MBESW1_MASK)
#define STCU2_MBELSW_MBESW2_MASK                 0x4u
#define STCU2_MBELSW_MBESW2_SHIFT                2u
#define STCU2_MBELSW_MBESW2_WIDTH                1u
#define STCU2_MBELSW_MBESW2(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW2_SHIFT))&STCU2_MBELSW_MBESW2_MASK)
#define STCU2_MBELSW_MBESW3_MASK                 0x8u
#define STCU2_MBELSW_MBESW3_SHIFT                3u
#define STCU2_MBELSW_MBESW3_WIDTH                1u
#define STCU2_MBELSW_MBESW3(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW3_SHIFT))&STCU2_MBELSW_MBESW3_MASK)
#define STCU2_MBELSW_MBESW4_MASK                 0x10u
#define STCU2_MBELSW_MBESW4_SHIFT                4u
#define STCU2_MBELSW_MBESW4_WIDTH                1u
#define STCU2_MBELSW_MBESW4(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW4_SHIFT))&STCU2_MBELSW_MBESW4_MASK)
#define STCU2_MBELSW_MBESW5_MASK                 0x20u
#define STCU2_MBELSW_MBESW5_SHIFT                5u
#define STCU2_MBELSW_MBESW5_WIDTH                1u
#define STCU2_MBELSW_MBESW5(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW5_SHIFT))&STCU2_MBELSW_MBESW5_MASK)
#define STCU2_MBELSW_MBESW6_MASK                 0x40u
#define STCU2_MBELSW_MBESW6_SHIFT                6u
#define STCU2_MBELSW_MBESW6_WIDTH                1u
#define STCU2_MBELSW_MBESW6(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW6_SHIFT))&STCU2_MBELSW_MBESW6_MASK)
#define STCU2_MBELSW_MBESW7_MASK                 0x80u
#define STCU2_MBELSW_MBESW7_SHIFT                7u
#define STCU2_MBELSW_MBESW7_WIDTH                1u
#define STCU2_MBELSW_MBESW7(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW7_SHIFT))&STCU2_MBELSW_MBESW7_MASK)
#define STCU2_MBELSW_MBESW8_MASK                 0x100u
#define STCU2_MBELSW_MBESW8_SHIFT                8u
#define STCU2_MBELSW_MBESW8_WIDTH                1u
#define STCU2_MBELSW_MBESW8(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW8_SHIFT))&STCU2_MBELSW_MBESW8_MASK)
#define STCU2_MBELSW_MBESW9_MASK                 0x200u
#define STCU2_MBELSW_MBESW9_SHIFT                9u
#define STCU2_MBELSW_MBESW9_WIDTH                1u
#define STCU2_MBELSW_MBESW9(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW9_SHIFT))&STCU2_MBELSW_MBESW9_MASK)
#define STCU2_MBELSW_MBESW10_MASK                0x400u
#define STCU2_MBELSW_MBESW10_SHIFT               10u
#define STCU2_MBELSW_MBESW10_WIDTH               1u
#define STCU2_MBELSW_MBESW10(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW10_SHIFT))&STCU2_MBELSW_MBESW10_MASK)
#define STCU2_MBELSW_MBESW11_MASK                0x800u
#define STCU2_MBELSW_MBESW11_SHIFT               11u
#define STCU2_MBELSW_MBESW11_WIDTH               1u
#define STCU2_MBELSW_MBESW11(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW11_SHIFT))&STCU2_MBELSW_MBESW11_MASK)
#define STCU2_MBELSW_MBESW12_MASK                0x1000u
#define STCU2_MBELSW_MBESW12_SHIFT               12u
#define STCU2_MBELSW_MBESW12_WIDTH               1u
#define STCU2_MBELSW_MBESW12(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW12_SHIFT))&STCU2_MBELSW_MBESW12_MASK)
#define STCU2_MBELSW_MBESW13_MASK                0x2000u
#define STCU2_MBELSW_MBESW13_SHIFT               13u
#define STCU2_MBELSW_MBESW13_WIDTH               1u
#define STCU2_MBELSW_MBESW13(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW13_SHIFT))&STCU2_MBELSW_MBESW13_MASK)
#define STCU2_MBELSW_MBESW14_MASK                0x4000u
#define STCU2_MBELSW_MBESW14_SHIFT               14u
#define STCU2_MBELSW_MBESW14_WIDTH               1u
#define STCU2_MBELSW_MBESW14(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW14_SHIFT))&STCU2_MBELSW_MBESW14_MASK)
#define STCU2_MBELSW_MBESW15_MASK                0x8000u
#define STCU2_MBELSW_MBESW15_SHIFT               15u
#define STCU2_MBELSW_MBESW15_WIDTH               1u
#define STCU2_MBELSW_MBESW15(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW15_SHIFT))&STCU2_MBELSW_MBESW15_MASK)
#define STCU2_MBELSW_MBESW16_MASK                0x10000u
#define STCU2_MBELSW_MBESW16_SHIFT               16u
#define STCU2_MBELSW_MBESW16_WIDTH               1u
#define STCU2_MBELSW_MBESW16(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW16_SHIFT))&STCU2_MBELSW_MBESW16_MASK)
#define STCU2_MBELSW_MBESW17_MASK                0x20000u
#define STCU2_MBELSW_MBESW17_SHIFT               17u
#define STCU2_MBELSW_MBESW17_WIDTH               1u
#define STCU2_MBELSW_MBESW17(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW17_SHIFT))&STCU2_MBELSW_MBESW17_MASK)
#define STCU2_MBELSW_MBESW18_MASK                0x40000u
#define STCU2_MBELSW_MBESW18_SHIFT               18u
#define STCU2_MBELSW_MBESW18_WIDTH               1u
#define STCU2_MBELSW_MBESW18(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW18_SHIFT))&STCU2_MBELSW_MBESW18_MASK)
#define STCU2_MBELSW_MBESW19_MASK                0x80000u
#define STCU2_MBELSW_MBESW19_SHIFT               19u
#define STCU2_MBELSW_MBESW19_WIDTH               1u
#define STCU2_MBELSW_MBESW19(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW19_SHIFT))&STCU2_MBELSW_MBESW19_MASK)
#define STCU2_MBELSW_MBESW20_MASK                0x100000u
#define STCU2_MBELSW_MBESW20_SHIFT               20u
#define STCU2_MBELSW_MBESW20_WIDTH               1u
#define STCU2_MBELSW_MBESW20(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW20_SHIFT))&STCU2_MBELSW_MBESW20_MASK)
#define STCU2_MBELSW_MBESW21_MASK                0x200000u
#define STCU2_MBELSW_MBESW21_SHIFT               21u
#define STCU2_MBELSW_MBESW21_WIDTH               1u
#define STCU2_MBELSW_MBESW21(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW21_SHIFT))&STCU2_MBELSW_MBESW21_MASK)
#define STCU2_MBELSW_MBESW22_MASK                0x400000u
#define STCU2_MBELSW_MBESW22_SHIFT               22u
#define STCU2_MBELSW_MBESW22_WIDTH               1u
#define STCU2_MBELSW_MBESW22(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW22_SHIFT))&STCU2_MBELSW_MBESW22_MASK)
#define STCU2_MBELSW_MBESW23_MASK                0x800000u
#define STCU2_MBELSW_MBESW23_SHIFT               23u
#define STCU2_MBELSW_MBESW23_WIDTH               1u
#define STCU2_MBELSW_MBESW23(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW23_SHIFT))&STCU2_MBELSW_MBESW23_MASK)
#define STCU2_MBELSW_MBESW24_MASK                0x1000000u
#define STCU2_MBELSW_MBESW24_SHIFT               24u
#define STCU2_MBELSW_MBESW24_WIDTH               1u
#define STCU2_MBELSW_MBESW24(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW24_SHIFT))&STCU2_MBELSW_MBESW24_MASK)
#define STCU2_MBELSW_MBESW25_MASK                0x2000000u
#define STCU2_MBELSW_MBESW25_SHIFT               25u
#define STCU2_MBELSW_MBESW25_WIDTH               1u
#define STCU2_MBELSW_MBESW25(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW25_SHIFT))&STCU2_MBELSW_MBESW25_MASK)
#define STCU2_MBELSW_MBESW26_MASK                0x4000000u
#define STCU2_MBELSW_MBESW26_SHIFT               26u
#define STCU2_MBELSW_MBESW26_WIDTH               1u
#define STCU2_MBELSW_MBESW26(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW26_SHIFT))&STCU2_MBELSW_MBESW26_MASK)
#define STCU2_MBELSW_MBESW27_MASK                0x8000000u
#define STCU2_MBELSW_MBESW27_SHIFT               27u
#define STCU2_MBELSW_MBESW27_WIDTH               1u
#define STCU2_MBELSW_MBESW27(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW27_SHIFT))&STCU2_MBELSW_MBESW27_MASK)
#define STCU2_MBELSW_MBESW28_MASK                0x10000000u
#define STCU2_MBELSW_MBESW28_SHIFT               28u
#define STCU2_MBELSW_MBESW28_WIDTH               1u
#define STCU2_MBELSW_MBESW28(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW28_SHIFT))&STCU2_MBELSW_MBESW28_MASK)
#define STCU2_MBELSW_MBESW29_MASK                0x20000000u
#define STCU2_MBELSW_MBESW29_SHIFT               29u
#define STCU2_MBELSW_MBESW29_WIDTH               1u
#define STCU2_MBELSW_MBESW29(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW29_SHIFT))&STCU2_MBELSW_MBESW29_MASK)
#define STCU2_MBELSW_MBESW30_MASK                0x40000000u
#define STCU2_MBELSW_MBESW30_SHIFT               30u
#define STCU2_MBELSW_MBESW30_WIDTH               1u
#define STCU2_MBELSW_MBESW30(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW30_SHIFT))&STCU2_MBELSW_MBESW30_MASK)
#define STCU2_MBELSW_MBESW31_MASK                0x80000000u
#define STCU2_MBELSW_MBESW31_SHIFT               31u
#define STCU2_MBELSW_MBESW31_WIDTH               1u
#define STCU2_MBELSW_MBESW31(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBELSW_MBESW31_SHIFT))&STCU2_MBELSW_MBESW31_MASK)
/* MBEMSW Bit Fields */
#define STCU2_MBEMSW_MBESW32_MASK                0x1u
#define STCU2_MBEMSW_MBESW32_SHIFT               0u
#define STCU2_MBEMSW_MBESW32_WIDTH               1u
#define STCU2_MBEMSW_MBESW32(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW32_SHIFT))&STCU2_MBEMSW_MBESW32_MASK)
#define STCU2_MBEMSW_MBESW33_MASK                0x2u
#define STCU2_MBEMSW_MBESW33_SHIFT               1u
#define STCU2_MBEMSW_MBESW33_WIDTH               1u
#define STCU2_MBEMSW_MBESW33(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW33_SHIFT))&STCU2_MBEMSW_MBESW33_MASK)
#define STCU2_MBEMSW_MBESW34_MASK                0x4u
#define STCU2_MBEMSW_MBESW34_SHIFT               2u
#define STCU2_MBEMSW_MBESW34_WIDTH               1u
#define STCU2_MBEMSW_MBESW34(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW34_SHIFT))&STCU2_MBEMSW_MBESW34_MASK)
#define STCU2_MBEMSW_MBESW35_MASK                0x8u
#define STCU2_MBEMSW_MBESW35_SHIFT               3u
#define STCU2_MBEMSW_MBESW35_WIDTH               1u
#define STCU2_MBEMSW_MBESW35(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW35_SHIFT))&STCU2_MBEMSW_MBESW35_MASK)
#define STCU2_MBEMSW_MBESW36_MASK                0x10u
#define STCU2_MBEMSW_MBESW36_SHIFT               4u
#define STCU2_MBEMSW_MBESW36_WIDTH               1u
#define STCU2_MBEMSW_MBESW36(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW36_SHIFT))&STCU2_MBEMSW_MBESW36_MASK)
#define STCU2_MBEMSW_MBESW37_MASK                0x20u
#define STCU2_MBEMSW_MBESW37_SHIFT               5u
#define STCU2_MBEMSW_MBESW37_WIDTH               1u
#define STCU2_MBEMSW_MBESW37(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW37_SHIFT))&STCU2_MBEMSW_MBESW37_MASK)
#define STCU2_MBEMSW_MBESW38_MASK                0x40u
#define STCU2_MBEMSW_MBESW38_SHIFT               6u
#define STCU2_MBEMSW_MBESW38_WIDTH               1u
#define STCU2_MBEMSW_MBESW38(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW38_SHIFT))&STCU2_MBEMSW_MBESW38_MASK)
#define STCU2_MBEMSW_MBESW39_MASK                0x80u
#define STCU2_MBEMSW_MBESW39_SHIFT               7u
#define STCU2_MBEMSW_MBESW39_WIDTH               1u
#define STCU2_MBEMSW_MBESW39(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW39_SHIFT))&STCU2_MBEMSW_MBESW39_MASK)
#define STCU2_MBEMSW_MBESW40_MASK                0x100u
#define STCU2_MBEMSW_MBESW40_SHIFT               8u
#define STCU2_MBEMSW_MBESW40_WIDTH               1u
#define STCU2_MBEMSW_MBESW40(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW40_SHIFT))&STCU2_MBEMSW_MBESW40_MASK)
#define STCU2_MBEMSW_MBESW41_MASK                0x200u
#define STCU2_MBEMSW_MBESW41_SHIFT               9u
#define STCU2_MBEMSW_MBESW41_WIDTH               1u
#define STCU2_MBEMSW_MBESW41(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW41_SHIFT))&STCU2_MBEMSW_MBESW41_MASK)
#define STCU2_MBEMSW_MBESW42_MASK                0x400u
#define STCU2_MBEMSW_MBESW42_SHIFT               10u
#define STCU2_MBEMSW_MBESW42_WIDTH               1u
#define STCU2_MBEMSW_MBESW42(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW42_SHIFT))&STCU2_MBEMSW_MBESW42_MASK)
#define STCU2_MBEMSW_MBESW43_MASK                0x800u
#define STCU2_MBEMSW_MBESW43_SHIFT               11u
#define STCU2_MBEMSW_MBESW43_WIDTH               1u
#define STCU2_MBEMSW_MBESW43(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW43_SHIFT))&STCU2_MBEMSW_MBESW43_MASK)
#define STCU2_MBEMSW_MBESW44_MASK                0x1000u
#define STCU2_MBEMSW_MBESW44_SHIFT               12u
#define STCU2_MBEMSW_MBESW44_WIDTH               1u
#define STCU2_MBEMSW_MBESW44(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW44_SHIFT))&STCU2_MBEMSW_MBESW44_MASK)
#define STCU2_MBEMSW_MBESW45_MASK                0x2000u
#define STCU2_MBEMSW_MBESW45_SHIFT               13u
#define STCU2_MBEMSW_MBESW45_WIDTH               1u
#define STCU2_MBEMSW_MBESW45(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW45_SHIFT))&STCU2_MBEMSW_MBESW45_MASK)
#define STCU2_MBEMSW_MBESW46_MASK                0x4000u
#define STCU2_MBEMSW_MBESW46_SHIFT               14u
#define STCU2_MBEMSW_MBESW46_WIDTH               1u
#define STCU2_MBEMSW_MBESW46(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW46_SHIFT))&STCU2_MBEMSW_MBESW46_MASK)
#define STCU2_MBEMSW_MBESW47_MASK                0x8000u
#define STCU2_MBEMSW_MBESW47_SHIFT               15u
#define STCU2_MBEMSW_MBESW47_WIDTH               1u
#define STCU2_MBEMSW_MBESW47(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW47_SHIFT))&STCU2_MBEMSW_MBESW47_MASK)
#define STCU2_MBEMSW_MBESW48_MASK                0x10000u
#define STCU2_MBEMSW_MBESW48_SHIFT               16u
#define STCU2_MBEMSW_MBESW48_WIDTH               1u
#define STCU2_MBEMSW_MBESW48(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW48_SHIFT))&STCU2_MBEMSW_MBESW48_MASK)
#define STCU2_MBEMSW_MBESW49_MASK                0x20000u
#define STCU2_MBEMSW_MBESW49_SHIFT               17u
#define STCU2_MBEMSW_MBESW49_WIDTH               1u
#define STCU2_MBEMSW_MBESW49(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW49_SHIFT))&STCU2_MBEMSW_MBESW49_MASK)
#define STCU2_MBEMSW_MBESW50_MASK                0x40000u
#define STCU2_MBEMSW_MBESW50_SHIFT               18u
#define STCU2_MBEMSW_MBESW50_WIDTH               1u
#define STCU2_MBEMSW_MBESW50(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW50_SHIFT))&STCU2_MBEMSW_MBESW50_MASK)
#define STCU2_MBEMSW_MBESW51_MASK                0x80000u
#define STCU2_MBEMSW_MBESW51_SHIFT               19u
#define STCU2_MBEMSW_MBESW51_WIDTH               1u
#define STCU2_MBEMSW_MBESW51(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW51_SHIFT))&STCU2_MBEMSW_MBESW51_MASK)
#define STCU2_MBEMSW_MBESW52_MASK                0x100000u
#define STCU2_MBEMSW_MBESW52_SHIFT               20u
#define STCU2_MBEMSW_MBESW52_WIDTH               1u
#define STCU2_MBEMSW_MBESW52(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW52_SHIFT))&STCU2_MBEMSW_MBESW52_MASK)
#define STCU2_MBEMSW_MBESW53_MASK                0x200000u
#define STCU2_MBEMSW_MBESW53_SHIFT               21u
#define STCU2_MBEMSW_MBESW53_WIDTH               1u
#define STCU2_MBEMSW_MBESW53(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW53_SHIFT))&STCU2_MBEMSW_MBESW53_MASK)
#define STCU2_MBEMSW_MBESW54_MASK                0x400000u
#define STCU2_MBEMSW_MBESW54_SHIFT               22u
#define STCU2_MBEMSW_MBESW54_WIDTH               1u
#define STCU2_MBEMSW_MBESW54(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW54_SHIFT))&STCU2_MBEMSW_MBESW54_MASK)
#define STCU2_MBEMSW_MBESW55_MASK                0x800000u
#define STCU2_MBEMSW_MBESW55_SHIFT               23u
#define STCU2_MBEMSW_MBESW55_WIDTH               1u
#define STCU2_MBEMSW_MBESW55(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW55_SHIFT))&STCU2_MBEMSW_MBESW55_MASK)
#define STCU2_MBEMSW_MBESW56_MASK                0x1000000u
#define STCU2_MBEMSW_MBESW56_SHIFT               24u
#define STCU2_MBEMSW_MBESW56_WIDTH               1u
#define STCU2_MBEMSW_MBESW56(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW56_SHIFT))&STCU2_MBEMSW_MBESW56_MASK)
#define STCU2_MBEMSW_MBESW57_MASK                0x2000000u
#define STCU2_MBEMSW_MBESW57_SHIFT               25u
#define STCU2_MBEMSW_MBESW57_WIDTH               1u
#define STCU2_MBEMSW_MBESW57(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW57_SHIFT))&STCU2_MBEMSW_MBESW57_MASK)
#define STCU2_MBEMSW_MBESW58_MASK                0x4000000u
#define STCU2_MBEMSW_MBESW58_SHIFT               26u
#define STCU2_MBEMSW_MBESW58_WIDTH               1u
#define STCU2_MBEMSW_MBESW58(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW58_SHIFT))&STCU2_MBEMSW_MBESW58_MASK)
#define STCU2_MBEMSW_MBESW59_MASK                0x8000000u
#define STCU2_MBEMSW_MBESW59_SHIFT               27u
#define STCU2_MBEMSW_MBESW59_WIDTH               1u
#define STCU2_MBEMSW_MBESW59(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW59_SHIFT))&STCU2_MBEMSW_MBESW59_MASK)
#define STCU2_MBEMSW_MBESW60_MASK                0x10000000u
#define STCU2_MBEMSW_MBESW60_SHIFT               28u
#define STCU2_MBEMSW_MBESW60_WIDTH               1u
#define STCU2_MBEMSW_MBESW60(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW60_SHIFT))&STCU2_MBEMSW_MBESW60_MASK)
#define STCU2_MBEMSW_MBESW61_MASK                0x20000000u
#define STCU2_MBEMSW_MBESW61_SHIFT               29u
#define STCU2_MBEMSW_MBESW61_WIDTH               1u
#define STCU2_MBEMSW_MBESW61(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW61_SHIFT))&STCU2_MBEMSW_MBESW61_MASK)
#define STCU2_MBEMSW_MBESW62_MASK                0x40000000u
#define STCU2_MBEMSW_MBESW62_SHIFT               30u
#define STCU2_MBEMSW_MBESW62_WIDTH               1u
#define STCU2_MBEMSW_MBESW62(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW62_SHIFT))&STCU2_MBEMSW_MBESW62_MASK)
#define STCU2_MBEMSW_MBESW63_MASK                0x80000000u
#define STCU2_MBEMSW_MBESW63_SHIFT               31u
#define STCU2_MBEMSW_MBESW63_WIDTH               1u
#define STCU2_MBEMSW_MBESW63(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEMSW_MBESW63_SHIFT))&STCU2_MBEMSW_MBESW63_MASK)
/* MBEHSW Bit Fields */
#define STCU2_MBEHSW_MBESW64_MASK                0x1u
#define STCU2_MBEHSW_MBESW64_SHIFT               0u
#define STCU2_MBEHSW_MBESW64_WIDTH               1u
#define STCU2_MBEHSW_MBESW64(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW64_SHIFT))&STCU2_MBEHSW_MBESW64_MASK)
#define STCU2_MBEHSW_MBESW65_MASK                0x2u
#define STCU2_MBEHSW_MBESW65_SHIFT               1u
#define STCU2_MBEHSW_MBESW65_WIDTH               1u
#define STCU2_MBEHSW_MBESW65(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW65_SHIFT))&STCU2_MBEHSW_MBESW65_MASK)
#define STCU2_MBEHSW_MBESW66_MASK                0x4u
#define STCU2_MBEHSW_MBESW66_SHIFT               2u
#define STCU2_MBEHSW_MBESW66_WIDTH               1u
#define STCU2_MBEHSW_MBESW66(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW66_SHIFT))&STCU2_MBEHSW_MBESW66_MASK)
#define STCU2_MBEHSW_MBESW67_MASK                0x8u
#define STCU2_MBEHSW_MBESW67_SHIFT               3u
#define STCU2_MBEHSW_MBESW67_WIDTH               1u
#define STCU2_MBEHSW_MBESW67(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW67_SHIFT))&STCU2_MBEHSW_MBESW67_MASK)
#define STCU2_MBEHSW_MBESW68_MASK                0x10u
#define STCU2_MBEHSW_MBESW68_SHIFT               4u
#define STCU2_MBEHSW_MBESW68_WIDTH               1u
#define STCU2_MBEHSW_MBESW68(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW68_SHIFT))&STCU2_MBEHSW_MBESW68_MASK)
#define STCU2_MBEHSW_MBESW69_MASK                0x20u
#define STCU2_MBEHSW_MBESW69_SHIFT               5u
#define STCU2_MBEHSW_MBESW69_WIDTH               1u
#define STCU2_MBEHSW_MBESW69(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW69_SHIFT))&STCU2_MBEHSW_MBESW69_MASK)
#define STCU2_MBEHSW_MBESW70_MASK                0x40u
#define STCU2_MBEHSW_MBESW70_SHIFT               6u
#define STCU2_MBEHSW_MBESW70_WIDTH               1u
#define STCU2_MBEHSW_MBESW70(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW70_SHIFT))&STCU2_MBEHSW_MBESW70_MASK)
#define STCU2_MBEHSW_MBESW71_MASK                0x80u
#define STCU2_MBEHSW_MBESW71_SHIFT               7u
#define STCU2_MBEHSW_MBESW71_WIDTH               1u
#define STCU2_MBEHSW_MBESW71(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW71_SHIFT))&STCU2_MBEHSW_MBESW71_MASK)
#define STCU2_MBEHSW_MBESW72_MASK                0x100u
#define STCU2_MBEHSW_MBESW72_SHIFT               8u
#define STCU2_MBEHSW_MBESW72_WIDTH               1u
#define STCU2_MBEHSW_MBESW72(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW72_SHIFT))&STCU2_MBEHSW_MBESW72_MASK)
#define STCU2_MBEHSW_MBESW73_MASK                0x200u
#define STCU2_MBEHSW_MBESW73_SHIFT               9u
#define STCU2_MBEHSW_MBESW73_WIDTH               1u
#define STCU2_MBEHSW_MBESW73(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW73_SHIFT))&STCU2_MBEHSW_MBESW73_MASK)
#define STCU2_MBEHSW_MBESW74_MASK                0x400u
#define STCU2_MBEHSW_MBESW74_SHIFT               10u
#define STCU2_MBEHSW_MBESW74_WIDTH               1u
#define STCU2_MBEHSW_MBESW74(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW74_SHIFT))&STCU2_MBEHSW_MBESW74_MASK)
#define STCU2_MBEHSW_MBESW75_MASK                0x800u
#define STCU2_MBEHSW_MBESW75_SHIFT               11u
#define STCU2_MBEHSW_MBESW75_WIDTH               1u
#define STCU2_MBEHSW_MBESW75(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBEHSW_MBESW75_SHIFT))&STCU2_MBEHSW_MBESW75_MASK)
/* MBUFML Bit Fields */
#define STCU2_MBUFML_MBUFM0_MASK                 0x1u
#define STCU2_MBUFML_MBUFM0_SHIFT                0u
#define STCU2_MBUFML_MBUFM0_WIDTH                1u
#define STCU2_MBUFML_MBUFM0(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM0_SHIFT))&STCU2_MBUFML_MBUFM0_MASK)
#define STCU2_MBUFML_MBUFM1_MASK                 0x2u
#define STCU2_MBUFML_MBUFM1_SHIFT                1u
#define STCU2_MBUFML_MBUFM1_WIDTH                1u
#define STCU2_MBUFML_MBUFM1(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM1_SHIFT))&STCU2_MBUFML_MBUFM1_MASK)
#define STCU2_MBUFML_MBUFM2_MASK                 0x4u
#define STCU2_MBUFML_MBUFM2_SHIFT                2u
#define STCU2_MBUFML_MBUFM2_WIDTH                1u
#define STCU2_MBUFML_MBUFM2(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM2_SHIFT))&STCU2_MBUFML_MBUFM2_MASK)
#define STCU2_MBUFML_MBUFM3_MASK                 0x8u
#define STCU2_MBUFML_MBUFM3_SHIFT                3u
#define STCU2_MBUFML_MBUFM3_WIDTH                1u
#define STCU2_MBUFML_MBUFM3(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM3_SHIFT))&STCU2_MBUFML_MBUFM3_MASK)
#define STCU2_MBUFML_MBUFM4_MASK                 0x10u
#define STCU2_MBUFML_MBUFM4_SHIFT                4u
#define STCU2_MBUFML_MBUFM4_WIDTH                1u
#define STCU2_MBUFML_MBUFM4(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM4_SHIFT))&STCU2_MBUFML_MBUFM4_MASK)
#define STCU2_MBUFML_MBUFM5_MASK                 0x20u
#define STCU2_MBUFML_MBUFM5_SHIFT                5u
#define STCU2_MBUFML_MBUFM5_WIDTH                1u
#define STCU2_MBUFML_MBUFM5(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM5_SHIFT))&STCU2_MBUFML_MBUFM5_MASK)
#define STCU2_MBUFML_MBUFM6_MASK                 0x40u
#define STCU2_MBUFML_MBUFM6_SHIFT                6u
#define STCU2_MBUFML_MBUFM6_WIDTH                1u
#define STCU2_MBUFML_MBUFM6(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM6_SHIFT))&STCU2_MBUFML_MBUFM6_MASK)
#define STCU2_MBUFML_MBUFM7_MASK                 0x80u
#define STCU2_MBUFML_MBUFM7_SHIFT                7u
#define STCU2_MBUFML_MBUFM7_WIDTH                1u
#define STCU2_MBUFML_MBUFM7(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM7_SHIFT))&STCU2_MBUFML_MBUFM7_MASK)
#define STCU2_MBUFML_MBUFM8_MASK                 0x100u
#define STCU2_MBUFML_MBUFM8_SHIFT                8u
#define STCU2_MBUFML_MBUFM8_WIDTH                1u
#define STCU2_MBUFML_MBUFM8(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM8_SHIFT))&STCU2_MBUFML_MBUFM8_MASK)
#define STCU2_MBUFML_MBUFM9_MASK                 0x200u
#define STCU2_MBUFML_MBUFM9_SHIFT                9u
#define STCU2_MBUFML_MBUFM9_WIDTH                1u
#define STCU2_MBUFML_MBUFM9(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM9_SHIFT))&STCU2_MBUFML_MBUFM9_MASK)
#define STCU2_MBUFML_MBUFM10_MASK                0x400u
#define STCU2_MBUFML_MBUFM10_SHIFT               10u
#define STCU2_MBUFML_MBUFM10_WIDTH               1u
#define STCU2_MBUFML_MBUFM10(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM10_SHIFT))&STCU2_MBUFML_MBUFM10_MASK)
#define STCU2_MBUFML_MBUFM11_MASK                0x800u
#define STCU2_MBUFML_MBUFM11_SHIFT               11u
#define STCU2_MBUFML_MBUFM11_WIDTH               1u
#define STCU2_MBUFML_MBUFM11(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM11_SHIFT))&STCU2_MBUFML_MBUFM11_MASK)
#define STCU2_MBUFML_MBUFM12_MASK                0x1000u
#define STCU2_MBUFML_MBUFM12_SHIFT               12u
#define STCU2_MBUFML_MBUFM12_WIDTH               1u
#define STCU2_MBUFML_MBUFM12(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM12_SHIFT))&STCU2_MBUFML_MBUFM12_MASK)
#define STCU2_MBUFML_MBUFM13_MASK                0x2000u
#define STCU2_MBUFML_MBUFM13_SHIFT               13u
#define STCU2_MBUFML_MBUFM13_WIDTH               1u
#define STCU2_MBUFML_MBUFM13(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM13_SHIFT))&STCU2_MBUFML_MBUFM13_MASK)
#define STCU2_MBUFML_MBUFM14_MASK                0x4000u
#define STCU2_MBUFML_MBUFM14_SHIFT               14u
#define STCU2_MBUFML_MBUFM14_WIDTH               1u
#define STCU2_MBUFML_MBUFM14(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM14_SHIFT))&STCU2_MBUFML_MBUFM14_MASK)
#define STCU2_MBUFML_MBUFM15_MASK                0x8000u
#define STCU2_MBUFML_MBUFM15_SHIFT               15u
#define STCU2_MBUFML_MBUFM15_WIDTH               1u
#define STCU2_MBUFML_MBUFM15(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM15_SHIFT))&STCU2_MBUFML_MBUFM15_MASK)
#define STCU2_MBUFML_MBUFM16_MASK                0x10000u
#define STCU2_MBUFML_MBUFM16_SHIFT               16u
#define STCU2_MBUFML_MBUFM16_WIDTH               1u
#define STCU2_MBUFML_MBUFM16(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM16_SHIFT))&STCU2_MBUFML_MBUFM16_MASK)
#define STCU2_MBUFML_MBUFM17_MASK                0x20000u
#define STCU2_MBUFML_MBUFM17_SHIFT               17u
#define STCU2_MBUFML_MBUFM17_WIDTH               1u
#define STCU2_MBUFML_MBUFM17(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM17_SHIFT))&STCU2_MBUFML_MBUFM17_MASK)
#define STCU2_MBUFML_MBUFM18_MASK                0x40000u
#define STCU2_MBUFML_MBUFM18_SHIFT               18u
#define STCU2_MBUFML_MBUFM18_WIDTH               1u
#define STCU2_MBUFML_MBUFM18(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM18_SHIFT))&STCU2_MBUFML_MBUFM18_MASK)
#define STCU2_MBUFML_MBUFM19_MASK                0x80000u
#define STCU2_MBUFML_MBUFM19_SHIFT               19u
#define STCU2_MBUFML_MBUFM19_WIDTH               1u
#define STCU2_MBUFML_MBUFM19(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM19_SHIFT))&STCU2_MBUFML_MBUFM19_MASK)
#define STCU2_MBUFML_MBUFM20_MASK                0x100000u
#define STCU2_MBUFML_MBUFM20_SHIFT               20u
#define STCU2_MBUFML_MBUFM20_WIDTH               1u
#define STCU2_MBUFML_MBUFM20(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM20_SHIFT))&STCU2_MBUFML_MBUFM20_MASK)
#define STCU2_MBUFML_MBUFM21_MASK                0x200000u
#define STCU2_MBUFML_MBUFM21_SHIFT               21u
#define STCU2_MBUFML_MBUFM21_WIDTH               1u
#define STCU2_MBUFML_MBUFM21(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM21_SHIFT))&STCU2_MBUFML_MBUFM21_MASK)
#define STCU2_MBUFML_MBUFM22_MASK                0x400000u
#define STCU2_MBUFML_MBUFM22_SHIFT               22u
#define STCU2_MBUFML_MBUFM22_WIDTH               1u
#define STCU2_MBUFML_MBUFM22(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM22_SHIFT))&STCU2_MBUFML_MBUFM22_MASK)
#define STCU2_MBUFML_MBUFM23_MASK                0x800000u
#define STCU2_MBUFML_MBUFM23_SHIFT               23u
#define STCU2_MBUFML_MBUFM23_WIDTH               1u
#define STCU2_MBUFML_MBUFM23(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM23_SHIFT))&STCU2_MBUFML_MBUFM23_MASK)
#define STCU2_MBUFML_MBUFM24_MASK                0x1000000u
#define STCU2_MBUFML_MBUFM24_SHIFT               24u
#define STCU2_MBUFML_MBUFM24_WIDTH               1u
#define STCU2_MBUFML_MBUFM24(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM24_SHIFT))&STCU2_MBUFML_MBUFM24_MASK)
#define STCU2_MBUFML_MBUFM25_MASK                0x2000000u
#define STCU2_MBUFML_MBUFM25_SHIFT               25u
#define STCU2_MBUFML_MBUFM25_WIDTH               1u
#define STCU2_MBUFML_MBUFM25(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM25_SHIFT))&STCU2_MBUFML_MBUFM25_MASK)
#define STCU2_MBUFML_MBUFM26_MASK                0x4000000u
#define STCU2_MBUFML_MBUFM26_SHIFT               26u
#define STCU2_MBUFML_MBUFM26_WIDTH               1u
#define STCU2_MBUFML_MBUFM26(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM26_SHIFT))&STCU2_MBUFML_MBUFM26_MASK)
#define STCU2_MBUFML_MBUFM27_MASK                0x8000000u
#define STCU2_MBUFML_MBUFM27_SHIFT               27u
#define STCU2_MBUFML_MBUFM27_WIDTH               1u
#define STCU2_MBUFML_MBUFM27(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM27_SHIFT))&STCU2_MBUFML_MBUFM27_MASK)
#define STCU2_MBUFML_MBUFM28_MASK                0x10000000u
#define STCU2_MBUFML_MBUFM28_SHIFT               28u
#define STCU2_MBUFML_MBUFM28_WIDTH               1u
#define STCU2_MBUFML_MBUFM28(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM28_SHIFT))&STCU2_MBUFML_MBUFM28_MASK)
#define STCU2_MBUFML_MBUFM29_MASK                0x20000000u
#define STCU2_MBUFML_MBUFM29_SHIFT               29u
#define STCU2_MBUFML_MBUFM29_WIDTH               1u
#define STCU2_MBUFML_MBUFM29(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM29_SHIFT))&STCU2_MBUFML_MBUFM29_MASK)
#define STCU2_MBUFML_MBUFM30_MASK                0x40000000u
#define STCU2_MBUFML_MBUFM30_SHIFT               30u
#define STCU2_MBUFML_MBUFM30_WIDTH               1u
#define STCU2_MBUFML_MBUFM30(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM30_SHIFT))&STCU2_MBUFML_MBUFM30_MASK)
#define STCU2_MBUFML_MBUFM31_MASK                0x80000000u
#define STCU2_MBUFML_MBUFM31_SHIFT               31u
#define STCU2_MBUFML_MBUFM31_WIDTH               1u
#define STCU2_MBUFML_MBUFM31(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFML_MBUFM31_SHIFT))&STCU2_MBUFML_MBUFM31_MASK)
/* MBUFMM Bit Fields */
#define STCU2_MBUFMM_MBUFM32_MASK                0x1u
#define STCU2_MBUFMM_MBUFM32_SHIFT               0u
#define STCU2_MBUFMM_MBUFM32_WIDTH               1u
#define STCU2_MBUFMM_MBUFM32(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM32_SHIFT))&STCU2_MBUFMM_MBUFM32_MASK)
#define STCU2_MBUFMM_MBUFM33_MASK                0x2u
#define STCU2_MBUFMM_MBUFM33_SHIFT               1u
#define STCU2_MBUFMM_MBUFM33_WIDTH               1u
#define STCU2_MBUFMM_MBUFM33(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM33_SHIFT))&STCU2_MBUFMM_MBUFM33_MASK)
#define STCU2_MBUFMM_MBUFM34_MASK                0x4u
#define STCU2_MBUFMM_MBUFM34_SHIFT               2u
#define STCU2_MBUFMM_MBUFM34_WIDTH               1u
#define STCU2_MBUFMM_MBUFM34(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM34_SHIFT))&STCU2_MBUFMM_MBUFM34_MASK)
#define STCU2_MBUFMM_MBUFM35_MASK                0x8u
#define STCU2_MBUFMM_MBUFM35_SHIFT               3u
#define STCU2_MBUFMM_MBUFM35_WIDTH               1u
#define STCU2_MBUFMM_MBUFM35(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM35_SHIFT))&STCU2_MBUFMM_MBUFM35_MASK)
#define STCU2_MBUFMM_MBUFM36_MASK                0x10u
#define STCU2_MBUFMM_MBUFM36_SHIFT               4u
#define STCU2_MBUFMM_MBUFM36_WIDTH               1u
#define STCU2_MBUFMM_MBUFM36(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM36_SHIFT))&STCU2_MBUFMM_MBUFM36_MASK)
#define STCU2_MBUFMM_MBUFM37_MASK                0x20u
#define STCU2_MBUFMM_MBUFM37_SHIFT               5u
#define STCU2_MBUFMM_MBUFM37_WIDTH               1u
#define STCU2_MBUFMM_MBUFM37(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM37_SHIFT))&STCU2_MBUFMM_MBUFM37_MASK)
#define STCU2_MBUFMM_MBUFM38_MASK                0x40u
#define STCU2_MBUFMM_MBUFM38_SHIFT               6u
#define STCU2_MBUFMM_MBUFM38_WIDTH               1u
#define STCU2_MBUFMM_MBUFM38(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM38_SHIFT))&STCU2_MBUFMM_MBUFM38_MASK)
#define STCU2_MBUFMM_MBUFM39_MASK                0x80u
#define STCU2_MBUFMM_MBUFM39_SHIFT               7u
#define STCU2_MBUFMM_MBUFM39_WIDTH               1u
#define STCU2_MBUFMM_MBUFM39(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM39_SHIFT))&STCU2_MBUFMM_MBUFM39_MASK)
#define STCU2_MBUFMM_MBUFM40_MASK                0x100u
#define STCU2_MBUFMM_MBUFM40_SHIFT               8u
#define STCU2_MBUFMM_MBUFM40_WIDTH               1u
#define STCU2_MBUFMM_MBUFM40(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM40_SHIFT))&STCU2_MBUFMM_MBUFM40_MASK)
#define STCU2_MBUFMM_MBUFM41_MASK                0x200u
#define STCU2_MBUFMM_MBUFM41_SHIFT               9u
#define STCU2_MBUFMM_MBUFM41_WIDTH               1u
#define STCU2_MBUFMM_MBUFM41(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM41_SHIFT))&STCU2_MBUFMM_MBUFM41_MASK)
#define STCU2_MBUFMM_MBUFM42_MASK                0x400u
#define STCU2_MBUFMM_MBUFM42_SHIFT               10u
#define STCU2_MBUFMM_MBUFM42_WIDTH               1u
#define STCU2_MBUFMM_MBUFM42(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM42_SHIFT))&STCU2_MBUFMM_MBUFM42_MASK)
#define STCU2_MBUFMM_MBUFM43_MASK                0x800u
#define STCU2_MBUFMM_MBUFM43_SHIFT               11u
#define STCU2_MBUFMM_MBUFM43_WIDTH               1u
#define STCU2_MBUFMM_MBUFM43(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM43_SHIFT))&STCU2_MBUFMM_MBUFM43_MASK)
#define STCU2_MBUFMM_MBUFM44_MASK                0x1000u
#define STCU2_MBUFMM_MBUFM44_SHIFT               12u
#define STCU2_MBUFMM_MBUFM44_WIDTH               1u
#define STCU2_MBUFMM_MBUFM44(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM44_SHIFT))&STCU2_MBUFMM_MBUFM44_MASK)
#define STCU2_MBUFMM_MBUFM45_MASK                0x2000u
#define STCU2_MBUFMM_MBUFM45_SHIFT               13u
#define STCU2_MBUFMM_MBUFM45_WIDTH               1u
#define STCU2_MBUFMM_MBUFM45(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM45_SHIFT))&STCU2_MBUFMM_MBUFM45_MASK)
#define STCU2_MBUFMM_MBUFM46_MASK                0x4000u
#define STCU2_MBUFMM_MBUFM46_SHIFT               14u
#define STCU2_MBUFMM_MBUFM46_WIDTH               1u
#define STCU2_MBUFMM_MBUFM46(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM46_SHIFT))&STCU2_MBUFMM_MBUFM46_MASK)
#define STCU2_MBUFMM_MBUFM47_MASK                0x8000u
#define STCU2_MBUFMM_MBUFM47_SHIFT               15u
#define STCU2_MBUFMM_MBUFM47_WIDTH               1u
#define STCU2_MBUFMM_MBUFM47(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM47_SHIFT))&STCU2_MBUFMM_MBUFM47_MASK)
#define STCU2_MBUFMM_MBUFM48_MASK                0x10000u
#define STCU2_MBUFMM_MBUFM48_SHIFT               16u
#define STCU2_MBUFMM_MBUFM48_WIDTH               1u
#define STCU2_MBUFMM_MBUFM48(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM48_SHIFT))&STCU2_MBUFMM_MBUFM48_MASK)
#define STCU2_MBUFMM_MBUFM49_MASK                0x20000u
#define STCU2_MBUFMM_MBUFM49_SHIFT               17u
#define STCU2_MBUFMM_MBUFM49_WIDTH               1u
#define STCU2_MBUFMM_MBUFM49(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM49_SHIFT))&STCU2_MBUFMM_MBUFM49_MASK)
#define STCU2_MBUFMM_MBUFM50_MASK                0x40000u
#define STCU2_MBUFMM_MBUFM50_SHIFT               18u
#define STCU2_MBUFMM_MBUFM50_WIDTH               1u
#define STCU2_MBUFMM_MBUFM50(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM50_SHIFT))&STCU2_MBUFMM_MBUFM50_MASK)
#define STCU2_MBUFMM_MBUFM51_MASK                0x80000u
#define STCU2_MBUFMM_MBUFM51_SHIFT               19u
#define STCU2_MBUFMM_MBUFM51_WIDTH               1u
#define STCU2_MBUFMM_MBUFM51(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM51_SHIFT))&STCU2_MBUFMM_MBUFM51_MASK)
#define STCU2_MBUFMM_MBUFM52_MASK                0x100000u
#define STCU2_MBUFMM_MBUFM52_SHIFT               20u
#define STCU2_MBUFMM_MBUFM52_WIDTH               1u
#define STCU2_MBUFMM_MBUFM52(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM52_SHIFT))&STCU2_MBUFMM_MBUFM52_MASK)
#define STCU2_MBUFMM_MBUFM53_MASK                0x200000u
#define STCU2_MBUFMM_MBUFM53_SHIFT               21u
#define STCU2_MBUFMM_MBUFM53_WIDTH               1u
#define STCU2_MBUFMM_MBUFM53(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM53_SHIFT))&STCU2_MBUFMM_MBUFM53_MASK)
#define STCU2_MBUFMM_MBUFM54_MASK                0x400000u
#define STCU2_MBUFMM_MBUFM54_SHIFT               22u
#define STCU2_MBUFMM_MBUFM54_WIDTH               1u
#define STCU2_MBUFMM_MBUFM54(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM54_SHIFT))&STCU2_MBUFMM_MBUFM54_MASK)
#define STCU2_MBUFMM_MBUFM55_MASK                0x800000u
#define STCU2_MBUFMM_MBUFM55_SHIFT               23u
#define STCU2_MBUFMM_MBUFM55_WIDTH               1u
#define STCU2_MBUFMM_MBUFM55(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM55_SHIFT))&STCU2_MBUFMM_MBUFM55_MASK)
#define STCU2_MBUFMM_MBUFM56_MASK                0x1000000u
#define STCU2_MBUFMM_MBUFM56_SHIFT               24u
#define STCU2_MBUFMM_MBUFM56_WIDTH               1u
#define STCU2_MBUFMM_MBUFM56(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM56_SHIFT))&STCU2_MBUFMM_MBUFM56_MASK)
#define STCU2_MBUFMM_MBUFM57_MASK                0x2000000u
#define STCU2_MBUFMM_MBUFM57_SHIFT               25u
#define STCU2_MBUFMM_MBUFM57_WIDTH               1u
#define STCU2_MBUFMM_MBUFM57(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM57_SHIFT))&STCU2_MBUFMM_MBUFM57_MASK)
#define STCU2_MBUFMM_MBUFM58_MASK                0x4000000u
#define STCU2_MBUFMM_MBUFM58_SHIFT               26u
#define STCU2_MBUFMM_MBUFM58_WIDTH               1u
#define STCU2_MBUFMM_MBUFM58(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM58_SHIFT))&STCU2_MBUFMM_MBUFM58_MASK)
#define STCU2_MBUFMM_MBUFM59_MASK                0x8000000u
#define STCU2_MBUFMM_MBUFM59_SHIFT               27u
#define STCU2_MBUFMM_MBUFM59_WIDTH               1u
#define STCU2_MBUFMM_MBUFM59(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM59_SHIFT))&STCU2_MBUFMM_MBUFM59_MASK)
#define STCU2_MBUFMM_MBUFM60_MASK                0x10000000u
#define STCU2_MBUFMM_MBUFM60_SHIFT               28u
#define STCU2_MBUFMM_MBUFM60_WIDTH               1u
#define STCU2_MBUFMM_MBUFM60(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM60_SHIFT))&STCU2_MBUFMM_MBUFM60_MASK)
#define STCU2_MBUFMM_MBUFM61_MASK                0x20000000u
#define STCU2_MBUFMM_MBUFM61_SHIFT               29u
#define STCU2_MBUFMM_MBUFM61_WIDTH               1u
#define STCU2_MBUFMM_MBUFM61(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM61_SHIFT))&STCU2_MBUFMM_MBUFM61_MASK)
#define STCU2_MBUFMM_MBUFM62_MASK                0x40000000u
#define STCU2_MBUFMM_MBUFM62_SHIFT               30u
#define STCU2_MBUFMM_MBUFM62_WIDTH               1u
#define STCU2_MBUFMM_MBUFM62(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM62_SHIFT))&STCU2_MBUFMM_MBUFM62_MASK)
#define STCU2_MBUFMM_MBUFM63_MASK                0x80000000u
#define STCU2_MBUFMM_MBUFM63_SHIFT               31u
#define STCU2_MBUFMM_MBUFM63_WIDTH               1u
#define STCU2_MBUFMM_MBUFM63(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMM_MBUFM63_SHIFT))&STCU2_MBUFMM_MBUFM63_MASK)
/* MBUFMH Bit Fields */
#define STCU2_MBUFMH_MBUFM64_MASK                0x1u
#define STCU2_MBUFMH_MBUFM64_SHIFT               0u
#define STCU2_MBUFMH_MBUFM64_WIDTH               1u
#define STCU2_MBUFMH_MBUFM64(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM64_SHIFT))&STCU2_MBUFMH_MBUFM64_MASK)
#define STCU2_MBUFMH_MBUFM65_MASK                0x2u
#define STCU2_MBUFMH_MBUFM65_SHIFT               1u
#define STCU2_MBUFMH_MBUFM65_WIDTH               1u
#define STCU2_MBUFMH_MBUFM65(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM65_SHIFT))&STCU2_MBUFMH_MBUFM65_MASK)
#define STCU2_MBUFMH_MBUFM66_MASK                0x4u
#define STCU2_MBUFMH_MBUFM66_SHIFT               2u
#define STCU2_MBUFMH_MBUFM66_WIDTH               1u
#define STCU2_MBUFMH_MBUFM66(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM66_SHIFT))&STCU2_MBUFMH_MBUFM66_MASK)
#define STCU2_MBUFMH_MBUFM67_MASK                0x8u
#define STCU2_MBUFMH_MBUFM67_SHIFT               3u
#define STCU2_MBUFMH_MBUFM67_WIDTH               1u
#define STCU2_MBUFMH_MBUFM67(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM67_SHIFT))&STCU2_MBUFMH_MBUFM67_MASK)
#define STCU2_MBUFMH_MBUFM68_MASK                0x10u
#define STCU2_MBUFMH_MBUFM68_SHIFT               4u
#define STCU2_MBUFMH_MBUFM68_WIDTH               1u
#define STCU2_MBUFMH_MBUFM68(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM68_SHIFT))&STCU2_MBUFMH_MBUFM68_MASK)
#define STCU2_MBUFMH_MBUFM69_MASK                0x20u
#define STCU2_MBUFMH_MBUFM69_SHIFT               5u
#define STCU2_MBUFMH_MBUFM69_WIDTH               1u
#define STCU2_MBUFMH_MBUFM69(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM69_SHIFT))&STCU2_MBUFMH_MBUFM69_MASK)
#define STCU2_MBUFMH_MBUFM70_MASK                0x40u
#define STCU2_MBUFMH_MBUFM70_SHIFT               6u
#define STCU2_MBUFMH_MBUFM70_WIDTH               1u
#define STCU2_MBUFMH_MBUFM70(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM70_SHIFT))&STCU2_MBUFMH_MBUFM70_MASK)
#define STCU2_MBUFMH_MBUFM71_MASK                0x80u
#define STCU2_MBUFMH_MBUFM71_SHIFT               7u
#define STCU2_MBUFMH_MBUFM71_WIDTH               1u
#define STCU2_MBUFMH_MBUFM71(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM71_SHIFT))&STCU2_MBUFMH_MBUFM71_MASK)
#define STCU2_MBUFMH_MBUFM72_MASK                0x100u
#define STCU2_MBUFMH_MBUFM72_SHIFT               8u
#define STCU2_MBUFMH_MBUFM72_WIDTH               1u
#define STCU2_MBUFMH_MBUFM72(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM72_SHIFT))&STCU2_MBUFMH_MBUFM72_MASK)
#define STCU2_MBUFMH_MBUFM73_MASK                0x200u
#define STCU2_MBUFMH_MBUFM73_SHIFT               9u
#define STCU2_MBUFMH_MBUFM73_WIDTH               1u
#define STCU2_MBUFMH_MBUFM73(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM73_SHIFT))&STCU2_MBUFMH_MBUFM73_MASK)
#define STCU2_MBUFMH_MBUFM74_MASK                0x400u
#define STCU2_MBUFMH_MBUFM74_SHIFT               10u
#define STCU2_MBUFMH_MBUFM74_WIDTH               1u
#define STCU2_MBUFMH_MBUFM74(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM74_SHIFT))&STCU2_MBUFMH_MBUFM74_MASK)
#define STCU2_MBUFMH_MBUFM75_MASK                0x800u
#define STCU2_MBUFMH_MBUFM75_SHIFT               11u
#define STCU2_MBUFMH_MBUFM75_WIDTH               1u
#define STCU2_MBUFMH_MBUFM75(x)                  (((uint32_t)(((uint32_t)(x))<<STCU2_MBUFMH_MBUFM75_SHIFT))&STCU2_MBUFMH_MBUFM75_MASK)
/* CTRL Bit Fields */
#define STCU2_CTRL_CWS_MASK                      0x3Fu
#define STCU2_CTRL_CWS_SHIFT                     0u
#define STCU2_CTRL_CWS_WIDTH                     6u
#define STCU2_CTRL_CWS(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_CWS_SHIFT))&STCU2_CTRL_CWS_MASK)
#define STCU2_CTRL_PFT_MASK                      0x40u
#define STCU2_CTRL_PFT_SHIFT                     6u
#define STCU2_CTRL_PFT_WIDTH                     1u
#define STCU2_CTRL_PFT(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_PFT_SHIFT))&STCU2_CTRL_PFT_MASK)
#define STCU2_CTRL_SCEN_ON_MASK                  0xF00u
#define STCU2_CTRL_SCEN_ON_SHIFT                 8u
#define STCU2_CTRL_SCEN_ON_WIDTH                 4u
#define STCU2_CTRL_SCEN_ON(x)                    (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_SCEN_ON_SHIFT))&STCU2_CTRL_SCEN_ON_MASK)
#define STCU2_CTRL_SCEN_OFF_MASK                 0xF000u
#define STCU2_CTRL_SCEN_OFF_SHIFT                12u
#define STCU2_CTRL_SCEN_OFF_WIDTH                4u
#define STCU2_CTRL_SCEN_OFF(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_SCEN_OFF_SHIFT))&STCU2_CTRL_SCEN_OFF_MASK)
#define STCU2_CTRL_SHS_MASK                      0x70000u
#define STCU2_CTRL_SHS_SHIFT                     16u
#define STCU2_CTRL_SHS_WIDTH                     3u
#define STCU2_CTRL_SHS(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_SHS_SHIFT))&STCU2_CTRL_SHS_MASK)
#define STCU2_CTRL_PTR_MASK                      0x7F000000u
#define STCU2_CTRL_PTR_SHIFT                     24u
#define STCU2_CTRL_PTR_WIDTH                     7u
#define STCU2_CTRL_PTR(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_PTR_SHIFT))&STCU2_CTRL_PTR_MASK)
#define STCU2_CTRL_CSM_MASK                      0x80000000u
#define STCU2_CTRL_CSM_SHIFT                     31u
#define STCU2_CTRL_CSM_WIDTH                     1u
#define STCU2_CTRL_CSM(x)                        (((uint32_t)(((uint32_t)(x))<<STCU2_CTRL_CSM_SHIFT))&STCU2_CTRL_CSM_MASK)
/* PCS Bit Fields */
#define STCU2_PCS_PCS_MASK                       0x3FFFFFFu
#define STCU2_PCS_PCS_SHIFT                      0u
#define STCU2_PCS_PCS_WIDTH                      26u
#define STCU2_PCS_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<STCU2_PCS_PCS_SHIFT))&STCU2_PCS_PCS_MASK)
/* MISREL Bit Fields */
#define STCU2_MISREL_MISREx_MASK                 0xFFFFFFFFu
#define STCU2_MISREL_MISREx_SHIFT                0u
#define STCU2_MISREL_MISREx_WIDTH                32u
#define STCU2_MISREL_MISREx(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MISREL_MISREx_SHIFT))&STCU2_MISREL_MISREx_MASK)
/* MISREH Bit Fields */
#define STCU2_MISREH_MISREx_MASK                 0xFFFFFFFFu
#define STCU2_MISREH_MISREx_SHIFT                0u
#define STCU2_MISREH_MISREx_WIDTH                32u
#define STCU2_MISREH_MISREx(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MISREH_MISREx_SHIFT))&STCU2_MISREH_MISREx_MASK)
/* MISRRL Bit Fields */
#define STCU2_MISRRL_MISRRx_MASK                 0xFFFFFFFFu
#define STCU2_MISRRL_MISRRx_SHIFT                0u
#define STCU2_MISRRL_MISRRx_WIDTH                32u
#define STCU2_MISRRL_MISRRx(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MISRRL_MISRRx_SHIFT))&STCU2_MISRRL_MISRRx_MASK)
/* MISRRH Bit Fields */
#define STCU2_MISRRH_MISRRx_MASK                 0xFFFFFFFFu
#define STCU2_MISRRH_MISRRx_SHIFT                0u
#define STCU2_MISRRH_MISRRx_WIDTH                32u
#define STCU2_MISRRH_MISRRx(x)                   (((uint32_t)(((uint32_t)(x))<<STCU2_MISRRH_MISRRx_SHIFT))&STCU2_MISRRH_MISRRx_MASK)
/* MISRELSW Bit Fields */
#define STCU2_MISRELSW_MISRESWx_MASK             0xFFFFFFFFu
#define STCU2_MISRELSW_MISRESWx_SHIFT            0u
#define STCU2_MISRELSW_MISRESWx_WIDTH            32u
#define STCU2_MISRELSW_MISRESWx(x)               (((uint32_t)(((uint32_t)(x))<<STCU2_MISRELSW_MISRESWx_SHIFT))&STCU2_MISRELSW_MISRESWx_MASK)
/* MISREHSW Bit Fields */
#define STCU2_MISREHSW_MISRESWx_MASK             0xFFFFFFFFu
#define STCU2_MISREHSW_MISRESWx_SHIFT            0u
#define STCU2_MISREHSW_MISRESWx_WIDTH            32u
#define STCU2_MISREHSW_MISRESWx(x)               (((uint32_t)(((uint32_t)(x))<<STCU2_MISREHSW_MISRESWx_SHIFT))&STCU2_MISREHSW_MISRESWx_MASK)
/* MISRRLSW Bit Fields */
#define STCU2_MISRRLSW_MISRRSWx_MASK             0xFFFFFFFFu
#define STCU2_MISRRLSW_MISRRSWx_SHIFT            0u
#define STCU2_MISRRLSW_MISRRSWx_WIDTH            32u
#define STCU2_MISRRLSW_MISRRSWx(x)               (((uint32_t)(((uint32_t)(x))<<STCU2_MISRRLSW_MISRRSWx_SHIFT))&STCU2_MISRRLSW_MISRRSWx_MASK)
/* MISRRHSW Bit Fields */
#define STCU2_MISRRHSW_MISRRSWx_MASK             0xFFFFFFFFu
#define STCU2_MISRRHSW_MISRRSWx_SHIFT            0u
#define STCU2_MISRRHSW_MISRRSWx_WIDTH            32u
#define STCU2_MISRRHSW_MISRRSWx(x)               (((uint32_t)(((uint32_t)(x))<<STCU2_MISRRHSW_MISRRSWx_SHIFT))&STCU2_MISRRHSW_MISRRSWx_MASK)
/* MB_CTRL Bit Fields */
#define STCU2_MB_CTRL_PTR_MASK                   0x7F000000u
#define STCU2_MB_CTRL_PTR_SHIFT                  24u
#define STCU2_MB_CTRL_PTR_WIDTH                  7u
#define STCU2_MB_CTRL_PTR(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_MB_CTRL_PTR_SHIFT))&STCU2_MB_CTRL_PTR_MASK)
#define STCU2_MB_CTRL_CSM_MASK                   0x80000000u
#define STCU2_MB_CTRL_CSM_SHIFT                  31u
#define STCU2_MB_CTRL_CSM_WIDTH                  1u
#define STCU2_MB_CTRL_CSM(x)                     (((uint32_t)(((uint32_t)(x))<<STCU2_MB_CTRL_CSM_SHIFT))&STCU2_MB_CTRL_CSM_MASK)

/*!
 * @}
 */ /* end of group STCU2_Register_Masks */


/*!
 * @}
 */ /* end of group STCU2_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- STM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STM_Peripheral_Access_Layer STM Peripheral Access Layer
 * @{
 */


/** STM - Size of Registers Arrays */
#define STM_CHANNEL_COUNT                        4u

/** STM - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< STM Control Register, offset: 0x0 */
  __IO uint32_t CNT;                               /**< STM Count Register, offset: 0x4 */
       uint8_t RESERVED_0[8];
  struct {                                         /* offset: 0x10, array step: 0x10 */
    __IO uint32_t CCR;                               /**< STM Channel Control Register, array offset: 0x10, array step: 0x10 */
    __IO uint32_t CIR;                               /**< STM Channel Interrupt Register, array offset: 0x14, array step: 0x10 */
    __IO uint32_t CMP;                               /**< STM Channel Compare Register, array offset: 0x18, array step: 0x10 */
         uint8_t RESERVED_0[4];
  } CHANNEL[STM_CHANNEL_COUNT];
} STM_Type, *STM_MemMapPtr;

 /** Number of instances of the STM module. */
#define STM_INSTANCE_COUNT                       (3u)


/* STM - Peripheral instance base addresses */
/** Peripheral STM_0 base address */
#define STM_0_BASE                               (0xFC068000u)
/** Peripheral STM_0 base pointer */
#define STM_0                                    ((STM_Type *)STM_0_BASE)
/** Peripheral STM_1 base address */
#define STM_1_BASE                               (0xFC06C000u)
/** Peripheral STM_1 base pointer */
#define STM_1                                    ((STM_Type *)STM_1_BASE)
/** Peripheral STM_2 base address */
#define STM_2_BASE                               (0xFC070000u)
/** Peripheral STM_2 base pointer */
#define STM_2                                    ((STM_Type *)STM_2_BASE)
/** Array initializer of STM peripheral base addresses */
#define STM_BASE_ADDRS                           { STM_0_BASE, STM_1_BASE, STM_2_BASE }
/** Array initializer of STM peripheral base pointers */
#define STM_BASE_PTRS                            { STM_0, STM_1, STM_2 }
/** Interrupt vectors for the STM peripheral type */
#define STM_IRQS                                 { STM0_Ch0_IRQn, STM0_Ch1_IRQn, STM0_Ch2_IRQn, STM0_Ch3_IRQn, STM1_Ch0_IRQn, STM1_Ch1_IRQn, STM1_Ch2_IRQn, STM1_Ch3_IRQn, STM2_Ch0_IRQn, STM2_Ch1_IRQn, STM2_Ch2_IRQn, STM2_Ch3_IRQn }

/* ----------------------------------------------------------------------------
   -- STM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup STM_Register_Masks STM Register Masks
 * @{
 */

/* CR Bit Fields */
#define STM_CR_TEN_MASK                          0x1u
#define STM_CR_TEN_SHIFT                         0u
#define STM_CR_TEN_WIDTH                         1u
#define STM_CR_TEN(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_TEN_SHIFT))&STM_CR_TEN_MASK)
#define STM_CR_FRZ_MASK                          0x2u
#define STM_CR_FRZ_SHIFT                         1u
#define STM_CR_FRZ_WIDTH                         1u
#define STM_CR_FRZ(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_FRZ_SHIFT))&STM_CR_FRZ_MASK)
#define STM_CR_CSL_MASK                          0x10u
#define STM_CR_CSL_SHIFT                         4u
#define STM_CR_CSL_WIDTH                         1u
#define STM_CR_CSL(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_CSL_SHIFT))&STM_CR_CSL_MASK)
#define STM_CR_CPS_MASK                          0xFF00u
#define STM_CR_CPS_SHIFT                         8u
#define STM_CR_CPS_WIDTH                         8u
#define STM_CR_CPS(x)                            (((uint32_t)(((uint32_t)(x))<<STM_CR_CPS_SHIFT))&STM_CR_CPS_MASK)
/* CNT Bit Fields */
#define STM_CNT_CNT_MASK                         0xFFFFFFFFu
#define STM_CNT_CNT_SHIFT                        0u
#define STM_CNT_CNT_WIDTH                        32u
#define STM_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CNT_CNT_SHIFT))&STM_CNT_CNT_MASK)
/* CCR Bit Fields */
#define STM_CCR_CEN_MASK                         0x1u
#define STM_CCR_CEN_SHIFT                        0u
#define STM_CCR_CEN_WIDTH                        1u
#define STM_CCR_CEN(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CCR_CEN_SHIFT))&STM_CCR_CEN_MASK)
/* CIR Bit Fields */
#define STM_CIR_CIF_MASK                         0x1u
#define STM_CIR_CIF_SHIFT                        0u
#define STM_CIR_CIF_WIDTH                        1u
#define STM_CIR_CIF(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CIR_CIF_SHIFT))&STM_CIR_CIF_MASK)
/* CMP Bit Fields */
#define STM_CMP_CMP_MASK                         0xFFFFFFFFu
#define STM_CMP_CMP_SHIFT                        0u
#define STM_CMP_CMP_WIDTH                        32u
#define STM_CMP_CMP(x)                           (((uint32_t)(((uint32_t)(x))<<STM_CMP_CMP_SHIFT))&STM_CMP_CMP_MASK)

/*!
 * @}
 */ /* end of group STM_Register_Masks */


/*!
 * @}
 */ /* end of group STM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SWT Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SWT_Peripheral_Access_Layer SWT Peripheral Access Layer
 * @{
 */


/** SWT - Size of Registers Arrays */

/** SWT - Register Layout Typedef */
typedef struct {
  __IO uint32_t CR;                                /**< SWT Control Register, offset: 0x0 */
  __IO uint32_t IR;                                /**< SWT Interrupt Register, offset: 0x4 */
  __IO uint32_t TO;                                /**< SWT Time-out Register, offset: 0x8 */
  __IO uint32_t WN;                                /**< SWT Window Register, offset: 0xC */
  __IO uint32_t SR;                                /**< SWT Service Register, offset: 0x10 */
  __I  uint32_t CO;                                /**< SWT Counter Output Register, offset: 0x14 */
  __IO uint32_t SK;                                /**< SWT Service Key Register, offset: 0x18 */
} SWT_Type, *SWT_MemMapPtr;

 /** Number of instances of the SWT module. */
#define SWT_INSTANCE_COUNT                       (3u)


/* SWT - Peripheral instance base addresses */
/** Peripheral SWT_0 base address */
#define SWT_0_BASE                               (0xFC050000u)
/** Peripheral SWT_0 base pointer */
#define SWT_0                                    ((SWT_Type *)SWT_0_BASE)
/** Peripheral SWT_1 base address */
#define SWT_1_BASE                               (0xFC054000u)
/** Peripheral SWT_1 base pointer */
#define SWT_1                                    ((SWT_Type *)SWT_1_BASE)
/** Peripheral SWT_2 base address */
#define SWT_2_BASE                               (0xFC058000u)
/** Peripheral SWT_2 base pointer */
#define SWT_2                                    ((SWT_Type *)SWT_2_BASE)
/** Array initializer of SWT peripheral base addresses */
#define SWT_BASE_ADDRS                           { SWT_0_BASE, SWT_1_BASE, SWT_2_BASE }
/** Array initializer of SWT peripheral base pointers */
#define SWT_BASE_PTRS                            { SWT_0, SWT_1, SWT_2 }
/** Interrupt vectors for the SWT peripheral type */
#define SWT_IRQS                                 { SWT0_IRQn, SWT1_IRQn, SWT2_IRQn }

/* ----------------------------------------------------------------------------
   -- SWT Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SWT_Register_Masks SWT Register Masks
 * @{
 */

/* CR Bit Fields */
#define SWT_CR_WEN_MASK                          0x1u
#define SWT_CR_WEN_SHIFT                         0u
#define SWT_CR_WEN_WIDTH                         1u
#define SWT_CR_WEN(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_WEN_SHIFT))&SWT_CR_WEN_MASK)
#define SWT_CR_FRZ_MASK                          0x2u
#define SWT_CR_FRZ_SHIFT                         1u
#define SWT_CR_FRZ_WIDTH                         1u
#define SWT_CR_FRZ(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_FRZ_SHIFT))&SWT_CR_FRZ_MASK)
#define SWT_CR_STP_MASK                          0x4u
#define SWT_CR_STP_SHIFT                         2u
#define SWT_CR_STP_WIDTH                         1u
#define SWT_CR_STP(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_STP_SHIFT))&SWT_CR_STP_MASK)
#define SWT_CR_SLK_MASK                          0x10u
#define SWT_CR_SLK_SHIFT                         4u
#define SWT_CR_SLK_WIDTH                         1u
#define SWT_CR_SLK(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_SLK_SHIFT))&SWT_CR_SLK_MASK)
#define SWT_CR_HLK_MASK                          0x20u
#define SWT_CR_HLK_SHIFT                         5u
#define SWT_CR_HLK_WIDTH                         1u
#define SWT_CR_HLK(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_HLK_SHIFT))&SWT_CR_HLK_MASK)
#define SWT_CR_ITR_MASK                          0x40u
#define SWT_CR_ITR_SHIFT                         6u
#define SWT_CR_ITR_WIDTH                         1u
#define SWT_CR_ITR(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_ITR_SHIFT))&SWT_CR_ITR_MASK)
#define SWT_CR_WND_MASK                          0x80u
#define SWT_CR_WND_SHIFT                         7u
#define SWT_CR_WND_WIDTH                         1u
#define SWT_CR_WND(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_WND_SHIFT))&SWT_CR_WND_MASK)
#define SWT_CR_RIA_MASK                          0x100u
#define SWT_CR_RIA_SHIFT                         8u
#define SWT_CR_RIA_WIDTH                         1u
#define SWT_CR_RIA(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_RIA_SHIFT))&SWT_CR_RIA_MASK)
#define SWT_CR_SMD_MASK                          0x600u
#define SWT_CR_SMD_SHIFT                         9u
#define SWT_CR_SMD_WIDTH                         2u
#define SWT_CR_SMD(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CR_SMD_SHIFT))&SWT_CR_SMD_MASK)
#define SWT_CR_MAP7_MASK                         0x1000000u
#define SWT_CR_MAP7_SHIFT                        24u
#define SWT_CR_MAP7_WIDTH                        1u
#define SWT_CR_MAP7(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP7_SHIFT))&SWT_CR_MAP7_MASK)
#define SWT_CR_MAP6_MASK                         0x2000000u
#define SWT_CR_MAP6_SHIFT                        25u
#define SWT_CR_MAP6_WIDTH                        1u
#define SWT_CR_MAP6(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP6_SHIFT))&SWT_CR_MAP6_MASK)
#define SWT_CR_MAP5_MASK                         0x4000000u
#define SWT_CR_MAP5_SHIFT                        26u
#define SWT_CR_MAP5_WIDTH                        1u
#define SWT_CR_MAP5(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP5_SHIFT))&SWT_CR_MAP5_MASK)
#define SWT_CR_MAP4_MASK                         0x8000000u
#define SWT_CR_MAP4_SHIFT                        27u
#define SWT_CR_MAP4_WIDTH                        1u
#define SWT_CR_MAP4(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP4_SHIFT))&SWT_CR_MAP4_MASK)
#define SWT_CR_MAP3_MASK                         0x10000000u
#define SWT_CR_MAP3_SHIFT                        28u
#define SWT_CR_MAP3_WIDTH                        1u
#define SWT_CR_MAP3(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP3_SHIFT))&SWT_CR_MAP3_MASK)
#define SWT_CR_MAP2_MASK                         0x20000000u
#define SWT_CR_MAP2_SHIFT                        29u
#define SWT_CR_MAP2_WIDTH                        1u
#define SWT_CR_MAP2(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP2_SHIFT))&SWT_CR_MAP2_MASK)
#define SWT_CR_MAP1_MASK                         0x40000000u
#define SWT_CR_MAP1_SHIFT                        30u
#define SWT_CR_MAP1_WIDTH                        1u
#define SWT_CR_MAP1(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP1_SHIFT))&SWT_CR_MAP1_MASK)
#define SWT_CR_MAP0_MASK                         0x80000000u
#define SWT_CR_MAP0_SHIFT                        31u
#define SWT_CR_MAP0_WIDTH                        1u
#define SWT_CR_MAP0(x)                           (((uint32_t)(((uint32_t)(x))<<SWT_CR_MAP0_SHIFT))&SWT_CR_MAP0_MASK)
/* IR Bit Fields */
#define SWT_IR_TIF_MASK                          0x1u
#define SWT_IR_TIF_SHIFT                         0u
#define SWT_IR_TIF_WIDTH                         1u
#define SWT_IR_TIF(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_IR_TIF_SHIFT))&SWT_IR_TIF_MASK)
/* TO Bit Fields */
#define SWT_TO_WTO_MASK                          0xFFFFFFFFu
#define SWT_TO_WTO_SHIFT                         0u
#define SWT_TO_WTO_WIDTH                         32u
#define SWT_TO_WTO(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_TO_WTO_SHIFT))&SWT_TO_WTO_MASK)
/* WN Bit Fields */
#define SWT_WN_WST_MASK                          0xFFFFFFFFu
#define SWT_WN_WST_SHIFT                         0u
#define SWT_WN_WST_WIDTH                         32u
#define SWT_WN_WST(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_WN_WST_SHIFT))&SWT_WN_WST_MASK)
/* SR Bit Fields */
#define SWT_SR_WSC_MASK                          0xFFFFu
#define SWT_SR_WSC_SHIFT                         0u
#define SWT_SR_WSC_WIDTH                         16u
#define SWT_SR_WSC(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_SR_WSC_SHIFT))&SWT_SR_WSC_MASK)
/* CO Bit Fields */
#define SWT_CO_CNT_MASK                          0xFFFFFFFFu
#define SWT_CO_CNT_SHIFT                         0u
#define SWT_CO_CNT_WIDTH                         32u
#define SWT_CO_CNT(x)                            (((uint32_t)(((uint32_t)(x))<<SWT_CO_CNT_SHIFT))&SWT_CO_CNT_MASK)
/* SK Bit Fields */
#define SWT_SK_SK_MASK                           0xFFFFu
#define SWT_SK_SK_SHIFT                          0u
#define SWT_SK_SK_WIDTH                          16u
#define SWT_SK_SK(x)                             (((uint32_t)(((uint32_t)(x))<<SWT_SK_SK_SHIFT))&SWT_SK_SK_MASK)

/*!
 * @}
 */ /* end of group SWT_Register_Masks */


/*!
 * @}
 */ /* end of group SWT_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- SXOSC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SXOSC_Peripheral_Access_Layer SXOSC Peripheral Access Layer
 * @{
 */


/** SXOSC - Size of Registers Arrays */

/** SXOSC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< , offset: 0x0 */
} SXOSC_Type, *SXOSC_MemMapPtr;

 /** Number of instances of the SXOSC module. */
#define SXOSC_INSTANCE_COUNT                     (1u)


/* SXOSC - Peripheral instance base addresses */
/** Peripheral SXOSC base address */
#define SXOSC_BASE                               (0xFFFB0100u)
/** Peripheral SXOSC base pointer */
#define SXOSC                                    ((SXOSC_Type *)SXOSC_BASE)
/** Array initializer of SXOSC peripheral base addresses */
#define SXOSC_BASE_ADDRS                         { SXOSC_BASE }
/** Array initializer of SXOSC peripheral base pointers */
#define SXOSC_BASE_PTRS                          { SXOSC }

/* ----------------------------------------------------------------------------
   -- SXOSC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup SXOSC_Register_Masks SXOSC Register Masks
 * @{
 */

/* CTL Bit Fields */
#define SXOSC_CTL_I_OSC_MASK                     0x80u
#define SXOSC_CTL_I_OSC_SHIFT                    7u
#define SXOSC_CTL_I_OSC_WIDTH                    1u
#define SXOSC_CTL_I_OSC(x)                       (((uint32_t)(((uint32_t)(x))<<SXOSC_CTL_I_OSC_SHIFT))&SXOSC_CTL_I_OSC_MASK)
#define SXOSC_CTL_OSCDIV_MASK                    0x1F00u
#define SXOSC_CTL_OSCDIV_SHIFT                   8u
#define SXOSC_CTL_OSCDIV_WIDTH                   5u
#define SXOSC_CTL_OSCDIV(x)                      (((uint32_t)(((uint32_t)(x))<<SXOSC_CTL_OSCDIV_SHIFT))&SXOSC_CTL_OSCDIV_MASK)
#define SXOSC_CTL_M_OSC_MASK                     0x8000u
#define SXOSC_CTL_M_OSC_SHIFT                    15u
#define SXOSC_CTL_M_OSC_WIDTH                    1u
#define SXOSC_CTL_M_OSC(x)                       (((uint32_t)(((uint32_t)(x))<<SXOSC_CTL_M_OSC_SHIFT))&SXOSC_CTL_M_OSC_MASK)
#define SXOSC_CTL_EOCV_MASK                      0xFF0000u
#define SXOSC_CTL_EOCV_SHIFT                     16u
#define SXOSC_CTL_EOCV_WIDTH                     8u
#define SXOSC_CTL_EOCV(x)                        (((uint32_t)(((uint32_t)(x))<<SXOSC_CTL_EOCV_SHIFT))&SXOSC_CTL_EOCV_MASK)
#define SXOSC_CTL_ALC_MASK                       0x40000000u
#define SXOSC_CTL_ALC_SHIFT                      30u
#define SXOSC_CTL_ALC_WIDTH                      1u
#define SXOSC_CTL_ALC(x)                         (((uint32_t)(((uint32_t)(x))<<SXOSC_CTL_ALC_SHIFT))&SXOSC_CTL_ALC_MASK)
#define SXOSC_CTL_OSCBYP_MASK                    0x80000000u
#define SXOSC_CTL_OSCBYP_SHIFT                   31u
#define SXOSC_CTL_OSCBYP_WIDTH                   1u
#define SXOSC_CTL_OSCBYP(x)                      (((uint32_t)(((uint32_t)(x))<<SXOSC_CTL_OSCBYP_SHIFT))&SXOSC_CTL_OSCBYP_MASK)

/*!
 * @}
 */ /* end of group SXOSC_Register_Masks */


/*!
 * @}
 */ /* end of group SXOSC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- TDM Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TDM_Peripheral_Access_Layer TDM Peripheral Access Layer
 * @{
 */


/** TDM - Size of Registers Arrays */
#define TDM_STO_KEY_COUNT                        6u

/** TDM - Register Layout Typedef */
typedef struct {
  __I  uint32_t TDRSR;                             /**< TDR Status Register, offset: 0x0 */
  __I  uint32_t LFPAR;                             /**< Last Flash Programmed Address Register, offset: 0x4 */
  __I  uint32_t DBA;                               /**< Diary Base Address, offset: 0x8 */
       uint8_t RESERVED_0[4];
  __IO uint32_t STO_KEY[TDM_STO_KEY_COUNT];        /**< Software Tamper Override Key Region, array offset: 0x10, array step: 0x4 */
} TDM_Type, *TDM_MemMapPtr;

 /** Number of instances of the TDM module. */
#define TDM_INSTANCE_COUNT                       (1u)


/* TDM - Peripheral instance base addresses */
/** Peripheral TDM base address */
#define TDM_BASE                                 (0xFFF34000u)
/** Peripheral TDM base pointer */
#define TDM                                      ((TDM_Type *)TDM_BASE)
/** Array initializer of TDM peripheral base addresses */
#define TDM_BASE_ADDRS                           { TDM_BASE }
/** Array initializer of TDM peripheral base pointers */
#define TDM_BASE_PTRS                            { TDM }

/* ----------------------------------------------------------------------------
   -- TDM Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup TDM_Register_Masks TDM Register Masks
 * @{
 */

/* TDRSR Bit Fields */
#define TDM_TDRSR_TDRSR0_MASK                    0x1u
#define TDM_TDRSR_TDRSR0_SHIFT                   0u
#define TDM_TDRSR_TDRSR0_WIDTH                   1u
#define TDM_TDRSR_TDRSR0(x)                      (((uint32_t)(((uint32_t)(x))<<TDM_TDRSR_TDRSR0_SHIFT))&TDM_TDRSR_TDRSR0_MASK)
#define TDM_TDRSR_TDRSR1_MASK                    0x2u
#define TDM_TDRSR_TDRSR1_SHIFT                   1u
#define TDM_TDRSR_TDRSR1_WIDTH                   1u
#define TDM_TDRSR_TDRSR1(x)                      (((uint32_t)(((uint32_t)(x))<<TDM_TDRSR_TDRSR1_SHIFT))&TDM_TDRSR_TDRSR1_MASK)
#define TDM_TDRSR_TDRSR2_MASK                    0x4u
#define TDM_TDRSR_TDRSR2_SHIFT                   2u
#define TDM_TDRSR_TDRSR2_WIDTH                   1u
#define TDM_TDRSR_TDRSR2(x)                      (((uint32_t)(((uint32_t)(x))<<TDM_TDRSR_TDRSR2_SHIFT))&TDM_TDRSR_TDRSR2_MASK)
#define TDM_TDRSR_TDRSR3_MASK                    0x8u
#define TDM_TDRSR_TDRSR3_SHIFT                   3u
#define TDM_TDRSR_TDRSR3_WIDTH                   1u
#define TDM_TDRSR_TDRSR3(x)                      (((uint32_t)(((uint32_t)(x))<<TDM_TDRSR_TDRSR3_SHIFT))&TDM_TDRSR_TDRSR3_MASK)
#define TDM_TDRSR_TDRSR4_MASK                    0x10u
#define TDM_TDRSR_TDRSR4_SHIFT                   4u
#define TDM_TDRSR_TDRSR4_WIDTH                   1u
#define TDM_TDRSR_TDRSR4(x)                      (((uint32_t)(((uint32_t)(x))<<TDM_TDRSR_TDRSR4_SHIFT))&TDM_TDRSR_TDRSR4_MASK)
#define TDM_TDRSR_TDRSR5_MASK                    0x20u
#define TDM_TDRSR_TDRSR5_SHIFT                   5u
#define TDM_TDRSR_TDRSR5_WIDTH                   1u
#define TDM_TDRSR_TDRSR5(x)                      (((uint32_t)(((uint32_t)(x))<<TDM_TDRSR_TDRSR5_SHIFT))&TDM_TDRSR_TDRSR5_MASK)
/* LFPAR Bit Fields */
#define TDM_LFPAR_LFPAR_MASK                     0xFFFFFFu
#define TDM_LFPAR_LFPAR_SHIFT                    0u
#define TDM_LFPAR_LFPAR_WIDTH                    24u
#define TDM_LFPAR_LFPAR(x)                       (((uint32_t)(((uint32_t)(x))<<TDM_LFPAR_LFPAR_SHIFT))&TDM_LFPAR_LFPAR_MASK)
/* DBA Bit Fields */
#define TDM_DBA_DBA_MASK                         0xFFFFFFFFu
#define TDM_DBA_DBA_SHIFT                        0u
#define TDM_DBA_DBA_WIDTH                        32u
#define TDM_DBA_DBA(x)                           (((uint32_t)(((uint32_t)(x))<<TDM_DBA_DBA_SHIFT))&TDM_DBA_DBA_MASK)
/* STO_KEY Bit Fields */
#define TDM_STO_KEY_STO_KEY_MASK                 0xFFFFFFFFu
#define TDM_STO_KEY_STO_KEY_SHIFT                0u
#define TDM_STO_KEY_STO_KEY_WIDTH                32u
#define TDM_STO_KEY_STO_KEY(x)                   (((uint32_t)(((uint32_t)(x))<<TDM_STO_KEY_STO_KEY_SHIFT))&TDM_STO_KEY_STO_KEY_MASK)

/*!
 * @}
 */ /* end of group TDM_Register_Masks */


/*!
 * @}
 */ /* end of group TDM_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UHST Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UHST_Peripheral_Access_Layer UHST Peripheral Access Layer
 * @{
 */


/** UHST - Size of Registers Arrays */
#define UHST_GPT_COUNT                           2u

/** UHST - Register Layout Typedef */
typedef struct {
  __I  uint32_t ID;                                /**< Identification Register, offset: 0x0 */
  __I  uint32_t GNLHW;                             /**< General Hardware Parameters Register, offset: 0x4 */
  __I  uint32_t HSTHWP;                            /**< Host Hardware Parameters Register, offset: 0x8 */
       uint8_t RESERVED_0[4];
  __I  uint32_t TXBFP;                             /**< Transmit Buffer Hardware Parameters Register, offset: 0x10 */
  __I  uint32_t RXBFP;                             /**< Receive Buffer Hardware Parameters Register, offset: 0x14 */
       uint8_t RESERVED_1[104];
  struct {                                         /* offset: 0x80, array step: 0x8 */
    __IO uint32_t LD;                                /**< General Purpose Timer n Load Register, array offset: 0x80, array step: 0x8 */
    __IO uint32_t CTL;                               /**< General Purpose Timer n Control Register, array offset: 0x84, array step: 0x8 */
  } GPT[UHST_GPT_COUNT];
  __IO uint32_t SBUSCFG;                           /**< System Bus Interface Configuration Register, offset: 0x90 */
       uint8_t RESERVED_2[108];
  __IO uint8_t CAPLENGTH;                          /**< Capability Register Length, offset: 0x100 */
       uint8_t RESERVED_3[1];
  __I  uint16_t HCIVERSION;                        /**< Host Controller Interface Version and Capability Registers Length Register, offset: 0x102 */
  __I  uint32_t HCSPARAMS;                         /**< Host Controller Structural Parameters Register, offset: 0x104 */
  __I  uint32_t HCCPARAMS;                         /**< Host Controller Capability Parameters Register, offset: 0x108 */
       uint8_t RESERVED_4[52];
  __IO uint32_t USBCMD;                            /**< USB Command Register, offset: 0x140 */
  __IO uint32_t USBSTS;                            /**< USB Status Register, offset: 0x144 */
  __IO uint32_t USBINTR;                           /**< USB Interrupt Enable Register, offset: 0x148 */
  __IO uint32_t FRINDEX;                           /**< Frame Index Register, offset: 0x14C */
       uint8_t RESERVED_5[4];
  __IO uint32_t PERIODICLISTBASE;                  /**< Periodic Frame List Base Address Register, offset: 0x154 */
  __IO uint32_t ASYNCLISTADDR;                     /**< Current Asynchronous List Address Register, offset: 0x158 */
       uint8_t RESERVED_6[4];
  __IO uint32_t BRSTSIZE;                          /**< Master Interface Data Burst Size Register, offset: 0x160 */
  __IO uint32_t TXTFLTNG;                          /**< Transmit FIFO Tuning Control Register, offset: 0x164 */
       uint8_t RESERVED_7[8];
  __IO uint32_t ULPIVWPT;                          /**< ULPI Register Access, offset: 0x170 */
       uint8_t RESERVED_8[12];
  __I  uint32_t CONFIGFLAG;                        /**< Configure Flag Register, offset: 0x180 */
  __IO uint32_t PORTSC1;                           /**< Port Status and Control Registers, offset: 0x184 */
       uint8_t RESERVED_9[32];
  __IO uint32_t USBMODE;                           /**< USB Mode Register, offset: 0x1A8 */
} UHST_Type, *UHST_MemMapPtr;

 /** Number of instances of the UHST module. */
#define UHST_INSTANCE_COUNT                      (1u)


/* UHST - Peripheral instance base addresses */
/** Peripheral UHST base address */
#define UHST_BASE                                (0xFFC94000u)
/** Peripheral UHST base pointer */
#define UHST                                     ((UHST_Type *)UHST_BASE)
/** Array initializer of UHST peripheral base addresses */
#define UHST_BASE_ADDRS                          { UHST_BASE }
/** Array initializer of UHST peripheral base pointers */
#define UHST_BASE_PTRS                           { UHST }

/* ----------------------------------------------------------------------------
   -- UHST Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UHST_Register_Masks UHST Register Masks
 * @{
 */

/* ID Bit Fields */
#define UHST_ID_ID_MASK                          0x3Fu
#define UHST_ID_ID_SHIFT                         0u
#define UHST_ID_ID_WIDTH                         6u
#define UHST_ID_ID(x)                            (((uint32_t)(((uint32_t)(x))<<UHST_ID_ID_SHIFT))&UHST_ID_ID_MASK)
#define UHST_ID_NID_MASK                         0x3F00u
#define UHST_ID_NID_SHIFT                        8u
#define UHST_ID_NID_WIDTH                        6u
#define UHST_ID_NID(x)                           (((uint32_t)(((uint32_t)(x))<<UHST_ID_NID_SHIFT))&UHST_ID_NID_MASK)
#define UHST_ID_TAG_MASK                         0x1F0000u
#define UHST_ID_TAG_SHIFT                        16u
#define UHST_ID_TAG_WIDTH                        5u
#define UHST_ID_TAG(x)                           (((uint32_t)(((uint32_t)(x))<<UHST_ID_TAG_SHIFT))&UHST_ID_TAG_MASK)
#define UHST_ID_REVISION_MASK                    0x1E00000u
#define UHST_ID_REVISION_SHIFT                   21u
#define UHST_ID_REVISION_WIDTH                   4u
#define UHST_ID_REVISION(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_ID_REVISION_SHIFT))&UHST_ID_REVISION_MASK)
#define UHST_ID_VERSION_MASK                     0x1E000000u
#define UHST_ID_VERSION_SHIFT                    25u
#define UHST_ID_VERSION_WIDTH                    4u
#define UHST_ID_VERSION(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_ID_VERSION_SHIFT))&UHST_ID_VERSION_MASK)
#define UHST_ID_VERSIONID_MASK                   0xE0000000u
#define UHST_ID_VERSIONID_SHIFT                  29u
#define UHST_ID_VERSIONID_WIDTH                  3u
#define UHST_ID_VERSIONID(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_ID_VERSIONID_SHIFT))&UHST_ID_VERSIONID_MASK)
/* GNLHW Bit Fields */
#define UHST_GNLHW_RT_MASK                       0x1u
#define UHST_GNLHW_RT_SHIFT                      0u
#define UHST_GNLHW_RT_WIDTH                      1u
#define UHST_GNLHW_RT(x)                         (((uint32_t)(((uint32_t)(x))<<UHST_GNLHW_RT_SHIFT))&UHST_GNLHW_RT_MASK)
#define UHST_GNLHW_CLKC_MASK                     0x6u
#define UHST_GNLHW_CLKC_SHIFT                    1u
#define UHST_GNLHW_CLKC_WIDTH                    2u
#define UHST_GNLHW_CLKC(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_GNLHW_CLKC_SHIFT))&UHST_GNLHW_CLKC_MASK)
#define UHST_GNLHW_PHYW_MASK                     0x30u
#define UHST_GNLHW_PHYW_SHIFT                    4u
#define UHST_GNLHW_PHYW_WIDTH                    2u
#define UHST_GNLHW_PHYW(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_GNLHW_PHYW_SHIFT))&UHST_GNLHW_PHYW_MASK)
#define UHST_GNLHW_PHYM_MASK                     0x3C0u
#define UHST_GNLHW_PHYM_SHIFT                    6u
#define UHST_GNLHW_PHYM_WIDTH                    4u
#define UHST_GNLHW_PHYM(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_GNLHW_PHYM_SHIFT))&UHST_GNLHW_PHYM_MASK)
#define UHST_GNLHW_SM_MASK                       0xC00u
#define UHST_GNLHW_SM_SHIFT                      10u
#define UHST_GNLHW_SM_WIDTH                      2u
#define UHST_GNLHW_SM(x)                         (((uint32_t)(((uint32_t)(x))<<UHST_GNLHW_SM_SHIFT))&UHST_GNLHW_SM_MASK)
/* HSTHWP Bit Fields */
#define UHST_HSTHWP_HC_MASK                      0x1u
#define UHST_HSTHWP_HC_SHIFT                     0u
#define UHST_HSTHWP_HC_WIDTH                     1u
#define UHST_HSTHWP_HC(x)                        (((uint32_t)(((uint32_t)(x))<<UHST_HSTHWP_HC_SHIFT))&UHST_HSTHWP_HC_MASK)
#define UHST_HSTHWP_NPORT_MASK                   0xEu
#define UHST_HSTHWP_NPORT_SHIFT                  1u
#define UHST_HSTHWP_NPORT_WIDTH                  3u
#define UHST_HSTHWP_NPORT(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_HSTHWP_NPORT_SHIFT))&UHST_HSTHWP_NPORT_MASK)
#define UHST_HSTHWP_TTASY_MASK                   0xFF0000u
#define UHST_HSTHWP_TTASY_SHIFT                  16u
#define UHST_HSTHWP_TTASY_WIDTH                  8u
#define UHST_HSTHWP_TTASY(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_HSTHWP_TTASY_SHIFT))&UHST_HSTHWP_TTASY_MASK)
#define UHST_HSTHWP_TTPER_MASK                   0xFF000000u
#define UHST_HSTHWP_TTPER_SHIFT                  24u
#define UHST_HSTHWP_TTPER_WIDTH                  8u
#define UHST_HSTHWP_TTPER(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_HSTHWP_TTPER_SHIFT))&UHST_HSTHWP_TTPER_MASK)
/* TXBFP Bit Fields */
#define UHST_TXBFP_TXBURST_MASK                  0xFFu
#define UHST_TXBFP_TXBURST_SHIFT                 0u
#define UHST_TXBFP_TXBURST_WIDTH                 8u
#define UHST_TXBFP_TXBURST(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_TXBFP_TXBURST_SHIFT))&UHST_TXBFP_TXBURST_MASK)
#define UHST_TXBFP_TXADD_MASK                    0xFF00u
#define UHST_TXBFP_TXADD_SHIFT                   8u
#define UHST_TXBFP_TXADD_WIDTH                   8u
#define UHST_TXBFP_TXADD(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_TXBFP_TXADD_SHIFT))&UHST_TXBFP_TXADD_MASK)
#define UHST_TXBFP_TXCHANADD_MASK                0xFF0000u
#define UHST_TXBFP_TXCHANADD_SHIFT               16u
#define UHST_TXBFP_TXCHANADD_WIDTH               8u
#define UHST_TXBFP_TXCHANADD(x)                  (((uint32_t)(((uint32_t)(x))<<UHST_TXBFP_TXCHANADD_SHIFT))&UHST_TXBFP_TXCHANADD_MASK)
#define UHST_TXBFP_TXLC_MASK                     0x80000000u
#define UHST_TXBFP_TXLC_SHIFT                    31u
#define UHST_TXBFP_TXLC_WIDTH                    1u
#define UHST_TXBFP_TXLC(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_TXBFP_TXLC_SHIFT))&UHST_TXBFP_TXLC_MASK)
/* RXBFP Bit Fields */
#define UHST_RXBFP_RXBURST_MASK                  0xFFu
#define UHST_RXBFP_RXBURST_SHIFT                 0u
#define UHST_RXBFP_RXBURST_WIDTH                 8u
#define UHST_RXBFP_RXBURST(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_RXBFP_RXBURST_SHIFT))&UHST_RXBFP_RXBURST_MASK)
#define UHST_RXBFP_RXADD_MASK                    0xFF00u
#define UHST_RXBFP_RXADD_SHIFT                   8u
#define UHST_RXBFP_RXADD_WIDTH                   8u
#define UHST_RXBFP_RXADD(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_RXBFP_RXADD_SHIFT))&UHST_RXBFP_RXADD_MASK)
/* LD Bit Fields */
#define UHST_LD_GPTLD_MASK                       0xFFFFFFu
#define UHST_LD_GPTLD_SHIFT                      0u
#define UHST_LD_GPTLD_WIDTH                      24u
#define UHST_LD_GPTLD(x)                         (((uint32_t)(((uint32_t)(x))<<UHST_LD_GPTLD_SHIFT))&UHST_LD_GPTLD_MASK)
/* CTL Bit Fields */
#define UHST_CTL_GPTCNT_MASK                     0xFFFFFFu
#define UHST_CTL_GPTCNT_SHIFT                    0u
#define UHST_CTL_GPTCNT_WIDTH                    24u
#define UHST_CTL_GPTCNT(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_CTL_GPTCNT_SHIFT))&UHST_CTL_GPTCNT_MASK)
#define UHST_CTL_GPTMODE_MASK                    0x1000000u
#define UHST_CTL_GPTMODE_SHIFT                   24u
#define UHST_CTL_GPTMODE_WIDTH                   1u
#define UHST_CTL_GPTMODE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_CTL_GPTMODE_SHIFT))&UHST_CTL_GPTMODE_MASK)
#define UHST_CTL_GPTRST_MASK                     0x40000000u
#define UHST_CTL_GPTRST_SHIFT                    30u
#define UHST_CTL_GPTRST_WIDTH                    1u
#define UHST_CTL_GPTRST(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_CTL_GPTRST_SHIFT))&UHST_CTL_GPTRST_MASK)
#define UHST_CTL_GPTRUN_MASK                     0x80000000u
#define UHST_CTL_GPTRUN_SHIFT                    31u
#define UHST_CTL_GPTRUN_WIDTH                    1u
#define UHST_CTL_GPTRUN(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_CTL_GPTRUN_SHIFT))&UHST_CTL_GPTRUN_MASK)
/* SBUSCFG Bit Fields */
#define UHST_SBUSCFG_AHBBRST_MASK                0x7u
#define UHST_SBUSCFG_AHBBRST_SHIFT               0u
#define UHST_SBUSCFG_AHBBRST_WIDTH               3u
#define UHST_SBUSCFG_AHBBRST(x)                  (((uint32_t)(((uint32_t)(x))<<UHST_SBUSCFG_AHBBRST_SHIFT))&UHST_SBUSCFG_AHBBRST_MASK)
#define UHST_SBUSCFG_BARD_MASK                   0x38u
#define UHST_SBUSCFG_BARD_SHIFT                  3u
#define UHST_SBUSCFG_BARD_WIDTH                  3u
#define UHST_SBUSCFG_BARD(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_SBUSCFG_BARD_SHIFT))&UHST_SBUSCFG_BARD_MASK)
#define UHST_SBUSCFG_BAWR_MASK                   0x1C0u
#define UHST_SBUSCFG_BAWR_SHIFT                  6u
#define UHST_SBUSCFG_BAWR_WIDTH                  3u
#define UHST_SBUSCFG_BAWR(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_SBUSCFG_BAWR_SHIFT))&UHST_SBUSCFG_BAWR_MASK)
/* CAPLENGTH Bit Fields */
#define UHST_CAPLENGTH_CAPLENGTH_MASK            0xFFu
#define UHST_CAPLENGTH_CAPLENGTH_SHIFT           0u
#define UHST_CAPLENGTH_CAPLENGTH_WIDTH           8u
#define UHST_CAPLENGTH_CAPLENGTH(x)              (((uint8_t)(((uint8_t)(x))<<UHST_CAPLENGTH_CAPLENGTH_SHIFT))&UHST_CAPLENGTH_CAPLENGTH_MASK)
/* HCIVERSION Bit Fields */
#define UHST_HCIVERSION_HCIVERSION_MASK          0xFFFFu
#define UHST_HCIVERSION_HCIVERSION_SHIFT         0u
#define UHST_HCIVERSION_HCIVERSION_WIDTH         16u
#define UHST_HCIVERSION_HCIVERSION(x)            (((uint16_t)(((uint16_t)(x))<<UHST_HCIVERSION_HCIVERSION_SHIFT))&UHST_HCIVERSION_HCIVERSION_MASK)
/* HCSPARAMS Bit Fields */
#define UHST_HCSPARAMS_N_PORTS_MASK              0xFu
#define UHST_HCSPARAMS_N_PORTS_SHIFT             0u
#define UHST_HCSPARAMS_N_PORTS_WIDTH             4u
#define UHST_HCSPARAMS_N_PORTS(x)                (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_N_PORTS_SHIFT))&UHST_HCSPARAMS_N_PORTS_MASK)
#define UHST_HCSPARAMS_PPC_MASK                  0x10u
#define UHST_HCSPARAMS_PPC_SHIFT                 4u
#define UHST_HCSPARAMS_PPC_WIDTH                 1u
#define UHST_HCSPARAMS_PPC(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_PPC_SHIFT))&UHST_HCSPARAMS_PPC_MASK)
#define UHST_HCSPARAMS_N_PCC_MASK                0xF00u
#define UHST_HCSPARAMS_N_PCC_SHIFT               8u
#define UHST_HCSPARAMS_N_PCC_WIDTH               4u
#define UHST_HCSPARAMS_N_PCC(x)                  (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_N_PCC_SHIFT))&UHST_HCSPARAMS_N_PCC_MASK)
#define UHST_HCSPARAMS_N_CC_MASK                 0xF000u
#define UHST_HCSPARAMS_N_CC_SHIFT                12u
#define UHST_HCSPARAMS_N_CC_WIDTH                4u
#define UHST_HCSPARAMS_N_CC(x)                   (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_N_CC_SHIFT))&UHST_HCSPARAMS_N_CC_MASK)
#define UHST_HCSPARAMS_PI_MASK                   0x10000u
#define UHST_HCSPARAMS_PI_SHIFT                  16u
#define UHST_HCSPARAMS_PI_WIDTH                  1u
#define UHST_HCSPARAMS_PI(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_PI_SHIFT))&UHST_HCSPARAMS_PI_MASK)
#define UHST_HCSPARAMS_N_PTT_MASK                0xF00000u
#define UHST_HCSPARAMS_N_PTT_SHIFT               20u
#define UHST_HCSPARAMS_N_PTT_WIDTH               4u
#define UHST_HCSPARAMS_N_PTT(x)                  (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_N_PTT_SHIFT))&UHST_HCSPARAMS_N_PTT_MASK)
#define UHST_HCSPARAMS_N_TT_MASK                 0xF000000u
#define UHST_HCSPARAMS_N_TT_SHIFT                24u
#define UHST_HCSPARAMS_N_TT_WIDTH                4u
#define UHST_HCSPARAMS_N_TT(x)                   (((uint32_t)(((uint32_t)(x))<<UHST_HCSPARAMS_N_TT_SHIFT))&UHST_HCSPARAMS_N_TT_MASK)
/* HCCPARAMS Bit Fields */
#define UHST_HCCPARAMS_ADC_MASK                  0x1u
#define UHST_HCCPARAMS_ADC_SHIFT                 0u
#define UHST_HCCPARAMS_ADC_WIDTH                 1u
#define UHST_HCCPARAMS_ADC(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_HCCPARAMS_ADC_SHIFT))&UHST_HCCPARAMS_ADC_MASK)
#define UHST_HCCPARAMS_PFL_MASK                  0x2u
#define UHST_HCCPARAMS_PFL_SHIFT                 1u
#define UHST_HCCPARAMS_PFL_WIDTH                 1u
#define UHST_HCCPARAMS_PFL(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_HCCPARAMS_PFL_SHIFT))&UHST_HCCPARAMS_PFL_MASK)
#define UHST_HCCPARAMS_ASP_MASK                  0x4u
#define UHST_HCCPARAMS_ASP_SHIFT                 2u
#define UHST_HCCPARAMS_ASP_WIDTH                 1u
#define UHST_HCCPARAMS_ASP(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_HCCPARAMS_ASP_SHIFT))&UHST_HCCPARAMS_ASP_MASK)
#define UHST_HCCPARAMS_IST_MASK                  0xF0u
#define UHST_HCCPARAMS_IST_SHIFT                 4u
#define UHST_HCCPARAMS_IST_WIDTH                 4u
#define UHST_HCCPARAMS_IST(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_HCCPARAMS_IST_SHIFT))&UHST_HCCPARAMS_IST_MASK)
#define UHST_HCCPARAMS_EECP_MASK                 0xFF00u
#define UHST_HCCPARAMS_EECP_SHIFT                8u
#define UHST_HCCPARAMS_EECP_WIDTH                8u
#define UHST_HCCPARAMS_EECP(x)                   (((uint32_t)(((uint32_t)(x))<<UHST_HCCPARAMS_EECP_SHIFT))&UHST_HCCPARAMS_EECP_MASK)
/* USBCMD Bit Fields */
#define UHST_USBCMD_RS_MASK                      0x1u
#define UHST_USBCMD_RS_SHIFT                     0u
#define UHST_USBCMD_RS_WIDTH                     1u
#define UHST_USBCMD_RS(x)                        (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_RS_SHIFT))&UHST_USBCMD_RS_MASK)
#define UHST_USBCMD_RST_MASK                     0x2u
#define UHST_USBCMD_RST_SHIFT                    1u
#define UHST_USBCMD_RST_WIDTH                    1u
#define UHST_USBCMD_RST(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_RST_SHIFT))&UHST_USBCMD_RST_MASK)
#define UHST_USBCMD_FS0_MASK                     0xCu
#define UHST_USBCMD_FS0_SHIFT                    2u
#define UHST_USBCMD_FS0_WIDTH                    2u
#define UHST_USBCMD_FS0(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_FS0_SHIFT))&UHST_USBCMD_FS0_MASK)
#define UHST_USBCMD_PSE_MASK                     0x10u
#define UHST_USBCMD_PSE_SHIFT                    4u
#define UHST_USBCMD_PSE_WIDTH                    1u
#define UHST_USBCMD_PSE(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_PSE_SHIFT))&UHST_USBCMD_PSE_MASK)
#define UHST_USBCMD_ASE_MASK                     0x20u
#define UHST_USBCMD_ASE_SHIFT                    5u
#define UHST_USBCMD_ASE_WIDTH                    1u
#define UHST_USBCMD_ASE(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_ASE_SHIFT))&UHST_USBCMD_ASE_MASK)
#define UHST_USBCMD_IAA_MASK                     0x40u
#define UHST_USBCMD_IAA_SHIFT                    6u
#define UHST_USBCMD_IAA_WIDTH                    1u
#define UHST_USBCMD_IAA(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_IAA_SHIFT))&UHST_USBCMD_IAA_MASK)
#define UHST_USBCMD_ASP_MASK                     0x300u
#define UHST_USBCMD_ASP_SHIFT                    8u
#define UHST_USBCMD_ASP_WIDTH                    2u
#define UHST_USBCMD_ASP(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_ASP_SHIFT))&UHST_USBCMD_ASP_MASK)
#define UHST_USBCMD_ASPE_MASK                    0x800u
#define UHST_USBCMD_ASPE_SHIFT                   11u
#define UHST_USBCMD_ASPE_WIDTH                   1u
#define UHST_USBCMD_ASPE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_ASPE_SHIFT))&UHST_USBCMD_ASPE_MASK)
#define UHST_USBCMD_SUTW_MASK                    0x2000u
#define UHST_USBCMD_SUTW_SHIFT                   13u
#define UHST_USBCMD_SUTW_WIDTH                   1u
#define UHST_USBCMD_SUTW(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_SUTW_SHIFT))&UHST_USBCMD_SUTW_MASK)
#define UHST_USBCMD_ATDTW_MASK                   0x4000u
#define UHST_USBCMD_ATDTW_SHIFT                  14u
#define UHST_USBCMD_ATDTW_WIDTH                  1u
#define UHST_USBCMD_ATDTW(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_ATDTW_SHIFT))&UHST_USBCMD_ATDTW_MASK)
#define UHST_USBCMD_FS1_MASK                     0x8000u
#define UHST_USBCMD_FS1_SHIFT                    15u
#define UHST_USBCMD_FS1_WIDTH                    1u
#define UHST_USBCMD_FS1(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_FS1_SHIFT))&UHST_USBCMD_FS1_MASK)
#define UHST_USBCMD_ITC_MASK                     0xFF0000u
#define UHST_USBCMD_ITC_SHIFT                    16u
#define UHST_USBCMD_ITC_WIDTH                    8u
#define UHST_USBCMD_ITC(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBCMD_ITC_SHIFT))&UHST_USBCMD_ITC_MASK)
/* USBSTS Bit Fields */
#define UHST_USBSTS_UI_MASK                      0x1u
#define UHST_USBSTS_UI_SHIFT                     0u
#define UHST_USBSTS_UI_WIDTH                     1u
#define UHST_USBSTS_UI(x)                        (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_UI_SHIFT))&UHST_USBSTS_UI_MASK)
#define UHST_USBSTS_UEI_MASK                     0x2u
#define UHST_USBSTS_UEI_SHIFT                    1u
#define UHST_USBSTS_UEI_WIDTH                    1u
#define UHST_USBSTS_UEI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_UEI_SHIFT))&UHST_USBSTS_UEI_MASK)
#define UHST_USBSTS_PCI_MASK                     0x4u
#define UHST_USBSTS_PCI_SHIFT                    2u
#define UHST_USBSTS_PCI_WIDTH                    1u
#define UHST_USBSTS_PCI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_PCI_SHIFT))&UHST_USBSTS_PCI_MASK)
#define UHST_USBSTS_FRI_MASK                     0x8u
#define UHST_USBSTS_FRI_SHIFT                    3u
#define UHST_USBSTS_FRI_WIDTH                    1u
#define UHST_USBSTS_FRI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_FRI_SHIFT))&UHST_USBSTS_FRI_MASK)
#define UHST_USBSTS_SEI_MASK                     0x10u
#define UHST_USBSTS_SEI_SHIFT                    4u
#define UHST_USBSTS_SEI_WIDTH                    1u
#define UHST_USBSTS_SEI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_SEI_SHIFT))&UHST_USBSTS_SEI_MASK)
#define UHST_USBSTS_AAI_MASK                     0x20u
#define UHST_USBSTS_AAI_SHIFT                    5u
#define UHST_USBSTS_AAI_WIDTH                    1u
#define UHST_USBSTS_AAI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_AAI_SHIFT))&UHST_USBSTS_AAI_MASK)
#define UHST_USBSTS_SRI_MASK                     0x80u
#define UHST_USBSTS_SRI_SHIFT                    7u
#define UHST_USBSTS_SRI_WIDTH                    1u
#define UHST_USBSTS_SRI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_SRI_SHIFT))&UHST_USBSTS_SRI_MASK)
#define UHST_USBSTS_SLI_MASK                     0x100u
#define UHST_USBSTS_SLI_SHIFT                    8u
#define UHST_USBSTS_SLI_WIDTH                    1u
#define UHST_USBSTS_SLI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_SLI_SHIFT))&UHST_USBSTS_SLI_MASK)
#define UHST_USBSTS_ULPII_MASK                   0x400u
#define UHST_USBSTS_ULPII_SHIFT                  10u
#define UHST_USBSTS_ULPII_WIDTH                  1u
#define UHST_USBSTS_ULPII(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_ULPII_SHIFT))&UHST_USBSTS_ULPII_MASK)
#define UHST_USBSTS_HCH_MASK                     0x1000u
#define UHST_USBSTS_HCH_SHIFT                    12u
#define UHST_USBSTS_HCH_WIDTH                    1u
#define UHST_USBSTS_HCH(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_HCH_SHIFT))&UHST_USBSTS_HCH_MASK)
#define UHST_USBSTS_RCL_MASK                     0x2000u
#define UHST_USBSTS_RCL_SHIFT                    13u
#define UHST_USBSTS_RCL_WIDTH                    1u
#define UHST_USBSTS_RCL(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_RCL_SHIFT))&UHST_USBSTS_RCL_MASK)
#define UHST_USBSTS_PS_MASK                      0x4000u
#define UHST_USBSTS_PS_SHIFT                     14u
#define UHST_USBSTS_PS_WIDTH                     1u
#define UHST_USBSTS_PS(x)                        (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_PS_SHIFT))&UHST_USBSTS_PS_MASK)
#define UHST_USBSTS_AS_MASK                      0x8000u
#define UHST_USBSTS_AS_SHIFT                     15u
#define UHST_USBSTS_AS_WIDTH                     1u
#define UHST_USBSTS_AS(x)                        (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_AS_SHIFT))&UHST_USBSTS_AS_MASK)
#define UHST_USBSTS_NAKI_MASK                    0x10000u
#define UHST_USBSTS_NAKI_SHIFT                   16u
#define UHST_USBSTS_NAKI_WIDTH                   1u
#define UHST_USBSTS_NAKI(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_NAKI_SHIFT))&UHST_USBSTS_NAKI_MASK)
#define UHST_USBSTS_UAI_MASK                     0x40000u
#define UHST_USBSTS_UAI_SHIFT                    18u
#define UHST_USBSTS_UAI_WIDTH                    1u
#define UHST_USBSTS_UAI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_UAI_SHIFT))&UHST_USBSTS_UAI_MASK)
#define UHST_USBSTS_UPI_MASK                     0x80000u
#define UHST_USBSTS_UPI_SHIFT                    19u
#define UHST_USBSTS_UPI_WIDTH                    1u
#define UHST_USBSTS_UPI(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_UPI_SHIFT))&UHST_USBSTS_UPI_MASK)
#define UHST_USBSTS_TI0_MASK                     0x1000000u
#define UHST_USBSTS_TI0_SHIFT                    24u
#define UHST_USBSTS_TI0_WIDTH                    1u
#define UHST_USBSTS_TI0(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_TI0_SHIFT))&UHST_USBSTS_TI0_MASK)
#define UHST_USBSTS_TI1_MASK                     0x2000000u
#define UHST_USBSTS_TI1_SHIFT                    25u
#define UHST_USBSTS_TI1_WIDTH                    1u
#define UHST_USBSTS_TI1(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBSTS_TI1_SHIFT))&UHST_USBSTS_TI1_MASK)
/* USBINTR Bit Fields */
#define UHST_USBINTR_UE_MASK                     0x1u
#define UHST_USBINTR_UE_SHIFT                    0u
#define UHST_USBINTR_UE_WIDTH                    1u
#define UHST_USBINTR_UE(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_UE_SHIFT))&UHST_USBINTR_UE_MASK)
#define UHST_USBINTR_UEE_MASK                    0x2u
#define UHST_USBINTR_UEE_SHIFT                   1u
#define UHST_USBINTR_UEE_WIDTH                   1u
#define UHST_USBINTR_UEE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_UEE_SHIFT))&UHST_USBINTR_UEE_MASK)
#define UHST_USBINTR_PCE_MASK                    0x4u
#define UHST_USBINTR_PCE_SHIFT                   2u
#define UHST_USBINTR_PCE_WIDTH                   1u
#define UHST_USBINTR_PCE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_PCE_SHIFT))&UHST_USBINTR_PCE_MASK)
#define UHST_USBINTR_FRE_MASK                    0x8u
#define UHST_USBINTR_FRE_SHIFT                   3u
#define UHST_USBINTR_FRE_WIDTH                   1u
#define UHST_USBINTR_FRE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_FRE_SHIFT))&UHST_USBINTR_FRE_MASK)
#define UHST_USBINTR_SEE_MASK                    0x10u
#define UHST_USBINTR_SEE_SHIFT                   4u
#define UHST_USBINTR_SEE_WIDTH                   1u
#define UHST_USBINTR_SEE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_SEE_SHIFT))&UHST_USBINTR_SEE_MASK)
#define UHST_USBINTR_AAE_MASK                    0x20u
#define UHST_USBINTR_AAE_SHIFT                   5u
#define UHST_USBINTR_AAE_WIDTH                   1u
#define UHST_USBINTR_AAE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_AAE_SHIFT))&UHST_USBINTR_AAE_MASK)
#define UHST_USBINTR_SRE_MASK                    0x80u
#define UHST_USBINTR_SRE_SHIFT                   7u
#define UHST_USBINTR_SRE_WIDTH                   1u
#define UHST_USBINTR_SRE(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_SRE_SHIFT))&UHST_USBINTR_SRE_MASK)
#define UHST_USBINTR_ULPIE_MASK                  0x400u
#define UHST_USBINTR_ULPIE_SHIFT                 10u
#define UHST_USBINTR_ULPIE_WIDTH                 1u
#define UHST_USBINTR_ULPIE(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_ULPIE_SHIFT))&UHST_USBINTR_ULPIE_MASK)
#define UHST_USBINTR_UALTIE_MASK                 0x800u
#define UHST_USBINTR_UALTIE_SHIFT                11u
#define UHST_USBINTR_UALTIE_WIDTH                1u
#define UHST_USBINTR_UALTIE(x)                   (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_UALTIE_SHIFT))&UHST_USBINTR_UALTIE_MASK)
#define UHST_USBINTR_NAKE_MASK                   0x10000u
#define UHST_USBINTR_NAKE_SHIFT                  16u
#define UHST_USBINTR_NAKE_WIDTH                  1u
#define UHST_USBINTR_NAKE(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_NAKE_SHIFT))&UHST_USBINTR_NAKE_MASK)
#define UHST_USBINTR_UAIE_MASK                   0x40000u
#define UHST_USBINTR_UAIE_SHIFT                  18u
#define UHST_USBINTR_UAIE_WIDTH                  1u
#define UHST_USBINTR_UAIE(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_UAIE_SHIFT))&UHST_USBINTR_UAIE_MASK)
#define UHST_USBINTR_UPIE_MASK                   0x80000u
#define UHST_USBINTR_UPIE_SHIFT                  19u
#define UHST_USBINTR_UPIE_WIDTH                  1u
#define UHST_USBINTR_UPIE(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_UPIE_SHIFT))&UHST_USBINTR_UPIE_MASK)
#define UHST_USBINTR_TIE0_MASK                   0x1000000u
#define UHST_USBINTR_TIE0_SHIFT                  24u
#define UHST_USBINTR_TIE0_WIDTH                  1u
#define UHST_USBINTR_TIE0(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_TIE0_SHIFT))&UHST_USBINTR_TIE0_MASK)
#define UHST_USBINTR_TIE1_MASK                   0x2000000u
#define UHST_USBINTR_TIE1_SHIFT                  25u
#define UHST_USBINTR_TIE1_WIDTH                  1u
#define UHST_USBINTR_TIE1(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBINTR_TIE1_SHIFT))&UHST_USBINTR_TIE1_MASK)
/* FRINDEX Bit Fields */
#define UHST_FRINDEX_FRINDEX_MASK                0x3FFFu
#define UHST_FRINDEX_FRINDEX_SHIFT               0u
#define UHST_FRINDEX_FRINDEX_WIDTH               14u
#define UHST_FRINDEX_FRINDEX(x)                  (((uint32_t)(((uint32_t)(x))<<UHST_FRINDEX_FRINDEX_SHIFT))&UHST_FRINDEX_FRINDEX_MASK)
/* PERIODICLISTBASE Bit Fields */
#define UHST_PERIODICLISTBASE_BASEADR_MASK       0xFFFFF000u
#define UHST_PERIODICLISTBASE_BASEADR_SHIFT      12u
#define UHST_PERIODICLISTBASE_BASEADR_WIDTH      20u
#define UHST_PERIODICLISTBASE_BASEADR(x)         (((uint32_t)(((uint32_t)(x))<<UHST_PERIODICLISTBASE_BASEADR_SHIFT))&UHST_PERIODICLISTBASE_BASEADR_MASK)
/* ASYNCLISTADDR Bit Fields */
#define UHST_ASYNCLISTADDR_ASYBASE_MASK          0xFFFFFFE0u
#define UHST_ASYNCLISTADDR_ASYBASE_SHIFT         5u
#define UHST_ASYNCLISTADDR_ASYBASE_WIDTH         27u
#define UHST_ASYNCLISTADDR_ASYBASE(x)            (((uint32_t)(((uint32_t)(x))<<UHST_ASYNCLISTADDR_ASYBASE_SHIFT))&UHST_ASYNCLISTADDR_ASYBASE_MASK)
/* BRSTSIZE Bit Fields */
#define UHST_BRSTSIZE_RXPBURST_MASK              0xFFu
#define UHST_BRSTSIZE_RXPBURST_SHIFT             0u
#define UHST_BRSTSIZE_RXPBURST_WIDTH             8u
#define UHST_BRSTSIZE_RXPBURST(x)                (((uint32_t)(((uint32_t)(x))<<UHST_BRSTSIZE_RXPBURST_SHIFT))&UHST_BRSTSIZE_RXPBURST_MASK)
#define UHST_BRSTSIZE_TXPBURST_MASK              0xFF00u
#define UHST_BRSTSIZE_TXPBURST_SHIFT             8u
#define UHST_BRSTSIZE_TXPBURST_WIDTH             8u
#define UHST_BRSTSIZE_TXPBURST(x)                (((uint32_t)(((uint32_t)(x))<<UHST_BRSTSIZE_TXPBURST_SHIFT))&UHST_BRSTSIZE_TXPBURST_MASK)
/* TXTFLTNG Bit Fields */
#define UHST_TXTFLTNG_TXSCHOH_MASK               0x7Fu
#define UHST_TXTFLTNG_TXSCHOH_SHIFT              0u
#define UHST_TXTFLTNG_TXSCHOH_WIDTH              7u
#define UHST_TXTFLTNG_TXSCHOH(x)                 (((uint32_t)(((uint32_t)(x))<<UHST_TXTFLTNG_TXSCHOH_SHIFT))&UHST_TXTFLTNG_TXSCHOH_MASK)
#define UHST_TXTFLTNG_TXSCHHEALTH_MASK           0x1F00u
#define UHST_TXTFLTNG_TXSCHHEALTH_SHIFT          8u
#define UHST_TXTFLTNG_TXSCHHEALTH_WIDTH          5u
#define UHST_TXTFLTNG_TXSCHHEALTH(x)             (((uint32_t)(((uint32_t)(x))<<UHST_TXTFLTNG_TXSCHHEALTH_SHIFT))&UHST_TXTFLTNG_TXSCHHEALTH_MASK)
#define UHST_TXTFLTNG_TXFIFOTHRES_MASK           0x3F0000u
#define UHST_TXTFLTNG_TXFIFOTHRES_SHIFT          16u
#define UHST_TXTFLTNG_TXFIFOTHRES_WIDTH          6u
#define UHST_TXTFLTNG_TXFIFOTHRES(x)             (((uint32_t)(((uint32_t)(x))<<UHST_TXTFLTNG_TXFIFOTHRES_SHIFT))&UHST_TXTFLTNG_TXFIFOTHRES_MASK)
/* ULPIVWPT Bit Fields */
#define UHST_ULPIVWPT_ULPI_DATWR_MASK            0xFFu
#define UHST_ULPIVWPT_ULPI_DATWR_SHIFT           0u
#define UHST_ULPIVWPT_ULPI_DATWR_WIDTH           8u
#define UHST_ULPIVWPT_ULPI_DATWR(x)              (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_DATWR_SHIFT))&UHST_ULPIVWPT_ULPI_DATWR_MASK)
#define UHST_ULPIVWPT_ULPI_DATRD_MASK            0xFF00u
#define UHST_ULPIVWPT_ULPI_DATRD_SHIFT           8u
#define UHST_ULPIVWPT_ULPI_DATRD_WIDTH           8u
#define UHST_ULPIVWPT_ULPI_DATRD(x)              (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_DATRD_SHIFT))&UHST_ULPIVWPT_ULPI_DATRD_MASK)
#define UHST_ULPIVWPT_ULPI_ADDR_MASK             0xFF0000u
#define UHST_ULPIVWPT_ULPI_ADDR_SHIFT            16u
#define UHST_ULPIVWPT_ULPI_ADDR_WIDTH            8u
#define UHST_ULPIVWPT_ULPI_ADDR(x)               (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_ADDR_SHIFT))&UHST_ULPIVWPT_ULPI_ADDR_MASK)
#define UHST_ULPIVWPT_ULPI_PORT_MASK             0x7000000u
#define UHST_ULPIVWPT_ULPI_PORT_SHIFT            24u
#define UHST_ULPIVWPT_ULPI_PORT_WIDTH            3u
#define UHST_ULPIVWPT_ULPI_PORT(x)               (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_PORT_SHIFT))&UHST_ULPIVWPT_ULPI_PORT_MASK)
#define UHST_ULPIVWPT_ULPI_SS_MASK               0x8000000u
#define UHST_ULPIVWPT_ULPI_SS_SHIFT              27u
#define UHST_ULPIVWPT_ULPI_SS_WIDTH              1u
#define UHST_ULPIVWPT_ULPI_SS(x)                 (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_SS_SHIFT))&UHST_ULPIVWPT_ULPI_SS_MASK)
#define UHST_ULPIVWPT_ULPI_RW_MASK               0x20000000u
#define UHST_ULPIVWPT_ULPI_RW_SHIFT              29u
#define UHST_ULPIVWPT_ULPI_RW_WIDTH              1u
#define UHST_ULPIVWPT_ULPI_RW(x)                 (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_RW_SHIFT))&UHST_ULPIVWPT_ULPI_RW_MASK)
#define UHST_ULPIVWPT_ULPI_RUN_MASK              0x40000000u
#define UHST_ULPIVWPT_ULPI_RUN_SHIFT             30u
#define UHST_ULPIVWPT_ULPI_RUN_WIDTH             1u
#define UHST_ULPIVWPT_ULPI_RUN(x)                (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_RUN_SHIFT))&UHST_ULPIVWPT_ULPI_RUN_MASK)
#define UHST_ULPIVWPT_ULPI_WU_MASK               0x80000000u
#define UHST_ULPIVWPT_ULPI_WU_SHIFT              31u
#define UHST_ULPIVWPT_ULPI_WU_WIDTH              1u
#define UHST_ULPIVWPT_ULPI_WU(x)                 (((uint32_t)(((uint32_t)(x))<<UHST_ULPIVWPT_ULPI_WU_SHIFT))&UHST_ULPIVWPT_ULPI_WU_MASK)
/* PORTSC1 Bit Fields */
#define UHST_PORTSC1_CCS_MASK                    0x1u
#define UHST_PORTSC1_CCS_SHIFT                   0u
#define UHST_PORTSC1_CCS_WIDTH                   1u
#define UHST_PORTSC1_CCS(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_CCS_SHIFT))&UHST_PORTSC1_CCS_MASK)
#define UHST_PORTSC1_CSC_MASK                    0x2u
#define UHST_PORTSC1_CSC_SHIFT                   1u
#define UHST_PORTSC1_CSC_WIDTH                   1u
#define UHST_PORTSC1_CSC(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_CSC_SHIFT))&UHST_PORTSC1_CSC_MASK)
#define UHST_PORTSC1_PE_MASK                     0x4u
#define UHST_PORTSC1_PE_SHIFT                    2u
#define UHST_PORTSC1_PE_WIDTH                    1u
#define UHST_PORTSC1_PE(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PE_SHIFT))&UHST_PORTSC1_PE_MASK)
#define UHST_PORTSC1_PEC_MASK                    0x8u
#define UHST_PORTSC1_PEC_SHIFT                   3u
#define UHST_PORTSC1_PEC_WIDTH                   1u
#define UHST_PORTSC1_PEC(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PEC_SHIFT))&UHST_PORTSC1_PEC_MASK)
#define UHST_PORTSC1_OCA_MASK                    0x10u
#define UHST_PORTSC1_OCA_SHIFT                   4u
#define UHST_PORTSC1_OCA_WIDTH                   1u
#define UHST_PORTSC1_OCA(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_OCA_SHIFT))&UHST_PORTSC1_OCA_MASK)
#define UHST_PORTSC1_OCC_MASK                    0x20u
#define UHST_PORTSC1_OCC_SHIFT                   5u
#define UHST_PORTSC1_OCC_WIDTH                   1u
#define UHST_PORTSC1_OCC(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_OCC_SHIFT))&UHST_PORTSC1_OCC_MASK)
#define UHST_PORTSC1_FPR_MASK                    0x40u
#define UHST_PORTSC1_FPR_SHIFT                   6u
#define UHST_PORTSC1_FPR_WIDTH                   1u
#define UHST_PORTSC1_FPR(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_FPR_SHIFT))&UHST_PORTSC1_FPR_MASK)
#define UHST_PORTSC1_SUSP_MASK                   0x80u
#define UHST_PORTSC1_SUSP_SHIFT                  7u
#define UHST_PORTSC1_SUSP_WIDTH                  1u
#define UHST_PORTSC1_SUSP(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_SUSP_SHIFT))&UHST_PORTSC1_SUSP_MASK)
#define UHST_PORTSC1_PR_MASK                     0x100u
#define UHST_PORTSC1_PR_SHIFT                    8u
#define UHST_PORTSC1_PR_WIDTH                    1u
#define UHST_PORTSC1_PR(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PR_SHIFT))&UHST_PORTSC1_PR_MASK)
#define UHST_PORTSC1_HSP_MASK                    0x200u
#define UHST_PORTSC1_HSP_SHIFT                   9u
#define UHST_PORTSC1_HSP_WIDTH                   1u
#define UHST_PORTSC1_HSP(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_HSP_SHIFT))&UHST_PORTSC1_HSP_MASK)
#define UHST_PORTSC1_LS_MASK                     0xC00u
#define UHST_PORTSC1_LS_SHIFT                    10u
#define UHST_PORTSC1_LS_WIDTH                    2u
#define UHST_PORTSC1_LS(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_LS_SHIFT))&UHST_PORTSC1_LS_MASK)
#define UHST_PORTSC1_PP_MASK                     0x1000u
#define UHST_PORTSC1_PP_SHIFT                    12u
#define UHST_PORTSC1_PP_WIDTH                    1u
#define UHST_PORTSC1_PP(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PP_SHIFT))&UHST_PORTSC1_PP_MASK)
#define UHST_PORTSC1_PO_MASK                     0x2000u
#define UHST_PORTSC1_PO_SHIFT                    13u
#define UHST_PORTSC1_PO_WIDTH                    1u
#define UHST_PORTSC1_PO(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PO_SHIFT))&UHST_PORTSC1_PO_MASK)
#define UHST_PORTSC1_PIC_MASK                    0xC000u
#define UHST_PORTSC1_PIC_SHIFT                   14u
#define UHST_PORTSC1_PIC_WIDTH                   2u
#define UHST_PORTSC1_PIC(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PIC_SHIFT))&UHST_PORTSC1_PIC_MASK)
#define UHST_PORTSC1_PTC_MASK                    0xF0000u
#define UHST_PORTSC1_PTC_SHIFT                   16u
#define UHST_PORTSC1_PTC_WIDTH                   4u
#define UHST_PORTSC1_PTC(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PTC_SHIFT))&UHST_PORTSC1_PTC_MASK)
#define UHST_PORTSC1_WKCN_MASK                   0x100000u
#define UHST_PORTSC1_WKCN_SHIFT                  20u
#define UHST_PORTSC1_WKCN_WIDTH                  1u
#define UHST_PORTSC1_WKCN(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_WKCN_SHIFT))&UHST_PORTSC1_WKCN_MASK)
#define UHST_PORTSC1_WKDS_MASK                   0x200000u
#define UHST_PORTSC1_WKDS_SHIFT                  21u
#define UHST_PORTSC1_WKDS_WIDTH                  1u
#define UHST_PORTSC1_WKDS(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_WKDS_SHIFT))&UHST_PORTSC1_WKDS_MASK)
#define UHST_PORTSC1_WKOC_MASK                   0x400000u
#define UHST_PORTSC1_WKOC_SHIFT                  22u
#define UHST_PORTSC1_WKOC_WIDTH                  1u
#define UHST_PORTSC1_WKOC(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_WKOC_SHIFT))&UHST_PORTSC1_WKOC_MASK)
#define UHST_PORTSC1_PHCD_MASK                   0x800000u
#define UHST_PORTSC1_PHCD_SHIFT                  23u
#define UHST_PORTSC1_PHCD_WIDTH                  1u
#define UHST_PORTSC1_PHCD(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PHCD_SHIFT))&UHST_PORTSC1_PHCD_MASK)
#define UHST_PORTSC1_PFSC_MASK                   0x1000000u
#define UHST_PORTSC1_PFSC_SHIFT                  24u
#define UHST_PORTSC1_PFSC_WIDTH                  1u
#define UHST_PORTSC1_PFSC(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PFSC_SHIFT))&UHST_PORTSC1_PFSC_MASK)
#define UHST_PORTSC1_PSPD_MASK                   0xC000000u
#define UHST_PORTSC1_PSPD_SHIFT                  26u
#define UHST_PORTSC1_PSPD_WIDTH                  2u
#define UHST_PORTSC1_PSPD(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PSPD_SHIFT))&UHST_PORTSC1_PSPD_MASK)
#define UHST_PORTSC1_PTS_MASK                    0xC0000000u
#define UHST_PORTSC1_PTS_SHIFT                   30u
#define UHST_PORTSC1_PTS_WIDTH                   2u
#define UHST_PORTSC1_PTS(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_PORTSC1_PTS_SHIFT))&UHST_PORTSC1_PTS_MASK)
/* USBMODE Bit Fields */
#define UHST_USBMODE_CM_MASK                     0x3u
#define UHST_USBMODE_CM_SHIFT                    0u
#define UHST_USBMODE_CM_WIDTH                    2u
#define UHST_USBMODE_CM(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBMODE_CM_SHIFT))&UHST_USBMODE_CM_MASK)
#define UHST_USBMODE_ES_MASK                     0x4u
#define UHST_USBMODE_ES_SHIFT                    2u
#define UHST_USBMODE_ES_WIDTH                    1u
#define UHST_USBMODE_ES(x)                       (((uint32_t)(((uint32_t)(x))<<UHST_USBMODE_ES_SHIFT))&UHST_USBMODE_ES_MASK)
#define UHST_USBMODE_SDIS_MASK                   0x10u
#define UHST_USBMODE_SDIS_SHIFT                  4u
#define UHST_USBMODE_SDIS_WIDTH                  1u
#define UHST_USBMODE_SDIS(x)                     (((uint32_t)(((uint32_t)(x))<<UHST_USBMODE_SDIS_SHIFT))&UHST_USBMODE_SDIS_MASK)
#define UHST_USBMODE_TXHSD_MASK                  0x7000u
#define UHST_USBMODE_TXHSD_SHIFT                 12u
#define UHST_USBMODE_TXHSD_WIDTH                 3u
#define UHST_USBMODE_TXHSD(x)                    (((uint32_t)(((uint32_t)(x))<<UHST_USBMODE_TXHSD_SHIFT))&UHST_USBMODE_TXHSD_MASK)
#define UHST_USBMODE_SRT_MASK                    0x8000u
#define UHST_USBMODE_SRT_SHIFT                   15u
#define UHST_USBMODE_SRT_WIDTH                   1u
#define UHST_USBMODE_SRT(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBMODE_SRT_SHIFT))&UHST_USBMODE_SRT_MASK)
#define UHST_USBMODE_ALP_MASK                    0xFF0000u
#define UHST_USBMODE_ALP_SHIFT                   16u
#define UHST_USBMODE_ALP_WIDTH                   8u
#define UHST_USBMODE_ALP(x)                      (((uint32_t)(((uint32_t)(x))<<UHST_USBMODE_ALP_SHIFT))&UHST_USBMODE_ALP_MASK)

/*!
 * @}
 */ /* end of group UHST_Register_Masks */


/*!
 * @}
 */ /* end of group UHST_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UHSTNC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UHSTNC_Peripheral_Access_Layer UHSTNC Peripheral Access Layer
 * @{
 */


/** UHSTNC - Size of Registers Arrays */

/** UHSTNC - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[512];
  __IO uint32_t CR;                                /**< Control register, offset: 0x200 */
       uint8_t RESERVED_1[12];
  __IO uint32_t ENDNMODE;                          /**< USB Endian Mode Select, offset: 0x210 */
       uint8_t RESERVED_2[8];
  __IO uint32_t ENDNMSEL;                          /**< USB Endian Select, offset: 0x21C */
} UHSTNC_Type, *UHSTNC_MemMapPtr;

 /** Number of instances of the UHSTNC module. */
#define UHSTNC_INSTANCE_COUNT                    (1u)


/* UHSTNC - Peripheral instance base addresses */
/** Peripheral UHSTNC base address */
#define UHSTNC_BASE                              (0xFFC94000u)
/** Peripheral UHSTNC base pointer */
#define UHSTNC                                   ((UHSTNC_Type *)UHSTNC_BASE)
/** Array initializer of UHSTNC peripheral base addresses */
#define UHSTNC_BASE_ADDRS                        { UHSTNC_BASE }
/** Array initializer of UHSTNC peripheral base pointers */
#define UHSTNC_BASE_PTRS                         { UHSTNC }

/* ----------------------------------------------------------------------------
   -- UHSTNC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UHSTNC_Register_Masks UHSTNC Register Masks
 * @{
 */

/* CR Bit Fields */
#define UHSTNC_CR_WAKEUP_IE_MASK                 0x1u
#define UHSTNC_CR_WAKEUP_IE_SHIFT                0u
#define UHSTNC_CR_WAKEUP_IE_WIDTH                1u
#define UHSTNC_CR_WAKEUP_IE(x)                   (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_WAKEUP_IE_SHIFT))&UHSTNC_CR_WAKEUP_IE_MASK)
#define UHSTNC_CR_CORE_IE_MASK                   0x2u
#define UHSTNC_CR_CORE_IE_SHIFT                  1u
#define UHSTNC_CR_CORE_IE_WIDTH                  1u
#define UHSTNC_CR_CORE_IE(x)                     (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_CORE_IE_SHIFT))&UHSTNC_CR_CORE_IE_MASK)
#define UHSTNC_CR_PWRFLT_MASK                    0x4u
#define UHSTNC_CR_PWRFLT_SHIFT                   2u
#define UHSTNC_CR_PWRFLT_WIDTH                   1u
#define UHSTNC_CR_PWRFLT(x)                      (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_PWRFLT_SHIFT))&UHSTNC_CR_PWRFLT_MASK)
#define UHSTNC_CR_WAKEUPIC_MASK                  0x20u
#define UHSTNC_CR_WAKEUPIC_SHIFT                 5u
#define UHSTNC_CR_WAKEUPIC_WIDTH                 1u
#define UHSTNC_CR_WAKEUPIC(x)                    (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_WAKEUPIC_SHIFT))&UHSTNC_CR_WAKEUPIC_MASK)
#define UHSTNC_CR_ENDNSEL_MASK                   0x40u
#define UHSTNC_CR_ENDNSEL_SHIFT                  6u
#define UHSTNC_CR_ENDNSEL_WIDTH                  1u
#define UHSTNC_CR_ENDNSEL(x)                     (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_ENDNSEL_SHIFT))&UHSTNC_CR_ENDNSEL_MASK)
#define UHSTNC_CR_PWRFLTEN_MASK                  0x80u
#define UHSTNC_CR_PWRFLTEN_SHIFT                 7u
#define UHSTNC_CR_PWRFLTEN_WIDTH                 1u
#define UHSTNC_CR_PWRFLTEN(x)                    (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_PWRFLTEN_SHIFT))&UHSTNC_CR_PWRFLTEN_MASK)
#define UHSTNC_CR_PWRFLTDF_MASK                  0x100u
#define UHSTNC_CR_PWRFLTDF_SHIFT                 8u
#define UHSTNC_CR_PWRFLTDF_WIDTH                 1u
#define UHSTNC_CR_PWRFLTDF(x)                    (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_PWRFLTDF_SHIFT))&UHSTNC_CR_PWRFLTDF_MASK)
#define UHSTNC_CR_WAKEUPIS_MASK                  0x200u
#define UHSTNC_CR_WAKEUPIS_SHIFT                 9u
#define UHSTNC_CR_WAKEUPIS_WIDTH                 1u
#define UHSTNC_CR_WAKEUPIS(x)                    (((uint32_t)(((uint32_t)(x))<<UHSTNC_CR_WAKEUPIS_SHIFT))&UHSTNC_CR_WAKEUPIS_MASK)
/* ENDNMODE Bit Fields */
#define UHSTNC_ENDNMODE_ENDNMODE_MASK            0xFFFFFFFFu
#define UHSTNC_ENDNMODE_ENDNMODE_SHIFT           0u
#define UHSTNC_ENDNMODE_ENDNMODE_WIDTH           32u
#define UHSTNC_ENDNMODE_ENDNMODE(x)              (((uint32_t)(((uint32_t)(x))<<UHSTNC_ENDNMODE_ENDNMODE_SHIFT))&UHSTNC_ENDNMODE_ENDNMODE_MASK)
/* ENDNMSEL Bit Fields */
#define UHSTNC_ENDNMSEL_ENDNMSEL_MASK            0xFFFFFFFFu
#define UHSTNC_ENDNMSEL_ENDNMSEL_SHIFT           0u
#define UHSTNC_ENDNMSEL_ENDNMSEL_WIDTH           32u
#define UHSTNC_ENDNMSEL_ENDNMSEL(x)              (((uint32_t)(((uint32_t)(x))<<UHSTNC_ENDNMSEL_ENDNMSEL_SHIFT))&UHSTNC_ENDNMSEL_ENDNMSEL_MASK)

/*!
 * @}
 */ /* end of group UHSTNC_Register_Masks */


/*!
 * @}
 */ /* end of group UHSTNC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UOTG Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTG_Peripheral_Access_Layer UOTG Peripheral Access Layer
 * @{
 */


/** UOTG - Size of Registers Arrays */
#define UOTG_GPT_COUNT                           2u
#define UOTG_ENDPTC_COUNT                        4u

/** UOTG - Register Layout Typedef */
typedef struct {
  __I  uint32_t ID;                                /**< Identification register, offset: 0x0 */
  __I  uint32_t GNLHW;                             /**< Hardware General, offset: 0x4 */
  __I  uint32_t HSTHWP;                            /**< Host Hardware Parameters, offset: 0x8 */
  __I  uint32_t DEVHWP;                            /**< Device Hardware Parameters, offset: 0xC */
  __I  uint32_t TXBFP;                             /**< TX Buffer Hardware Parameters, offset: 0x10 */
  __I  uint32_t RXBFP;                             /**< RX Buffer Hardware Parameters, offset: 0x14 */
       uint8_t RESERVED_0[104];
  struct {                                         /* offset: 0x80, array step: 0x8 */
    __IO uint32_t LD;                                /**< General Purpose Timer Load, array offset: 0x80, array step: 0x8 */
    __IO uint32_t CL;                                /**< General Purpose Timer Controller, array offset: 0x84, array step: 0x8 */
  } GPT[UOTG_GPT_COUNT];
  __IO uint32_t SBUSCFG;                           /**< System Bus Configuration, offset: 0x90 */
       uint8_t RESERVED_1[108];
  __I  uint8_t CAPLENGTH;                          /**< Capability Register Length, offset: 0x100 */
       uint8_t RESERVED_2[1];
  __I  uint16_t HCIVERSION;                        /**< Host Controller Interface Version, offset: 0x102 */
  __I  uint32_t HCSPARAMS;                         /**< Host Controller Structural Parameters, offset: 0x104 */
  __I  uint32_t HCCPARAMS;                         /**< Host Controller Capability Parameters, offset: 0x108 */
       uint8_t RESERVED_3[20];
  __I  uint16_t DCIFVER;                           /**< Device Controller Interface Version, offset: 0x120 */
       uint8_t RESERVED_4[2];
  __I  uint32_t DCCAPPAR;                          /**< Device Controller Capability Parameters, offset: 0x124 */
       uint8_t RESERVED_5[24];
  __IO uint32_t USBCMD;                            /**< USB Command Register, offset: 0x140 */
  __IO uint32_t USBSTS;                            /**< USB Status Register, offset: 0x144 */
  __IO uint32_t USBINTR;                           /**< Interrupt Enable Register, offset: 0x148 */
  __IO uint32_t FRINDEX;                           /**< USB Frame Index, offset: 0x14C */
       uint8_t RESERVED_6[4];
  union {                                          /* offset: 0x154 */
    __IO uint32_t DEVADR;                            /**< Device Address, offset: 0x154 */
    __IO uint32_t PERIODICLISTBASE;                  /**< Frame List Base Address, offset: 0x154 */
  } ADDRESS1;
  union {                                          /* offset: 0x158 */
    __IO uint32_t ASYNCLISTADDR;                     /**< Next Asynch. Address, offset: 0x158 */
    __IO uint32_t ENDPLADR;                          /**< Endpoint List Address, offset: 0x158 */
  } ADDRESS2;
       uint8_t RESERVED_7[4];
  __IO uint32_t BRSTSIZE;                          /**< Programmable Burst Size, offset: 0x160 */
  __IO uint32_t TXTFLTNG;                          /**< TX FIFO Fill Tuning, offset: 0x164 */
       uint8_t RESERVED_8[4];
  __IO uint32_t ICUSBEN;                           /**< IC_USB enable and voltage negotiation, offset: 0x16C */
  __IO uint32_t ULPIVWPT;                          /**< ULPI Register Access, offset: 0x170 */
       uint8_t RESERVED_9[4];
  __IO uint32_t ENDPNAK;                           /**< Endpoint NAK, offset: 0x178 */
  __IO uint32_t ENDPNAKE;                          /**< Endpoint NAK Enable, offset: 0x17C */
  __I  uint32_t CONFIGFLAG;                        /**< Configure Flag Register, offset: 0x180 */
  __IO uint32_t PORTSC1;                           /**< Port Status and Control, offset: 0x184 */
       uint8_t RESERVED_10[28];
  __IO uint32_t OTGSC;                             /**< On-The-Go Status Control, offset: 0x1A4 */
  __IO uint32_t USBDMODE;                          /**< USB Device Mode, offset: 0x1A8 */
  __IO uint32_t ENPSTPST;                          /**< Endpoint Setup Status, offset: 0x1AC */
  __IO uint32_t ENDPINT;                           /**< Endpoint Initialization, offset: 0x1B0 */
  __IO uint32_t ENDPDINT;                          /**< Endpoint De-Initialize, offset: 0x1B4 */
  __I  uint32_t ENDPST;                            /**< Endpoint Status, offset: 0x1B8 */
  __IO uint32_t ENPCPLT;                           /**< Endpoint Complete, offset: 0x1BC */
  __IO uint32_t ENDPTC0;                           /**< Endpoint Control 0, offset: 0x1C0 */
  __IO uint32_t ENDPTC[UOTG_ENDPTC_COUNT];         /**< Endpoint Control, array offset: 0x1C4, array step: 0x4 */
} UOTG_Type, *UOTG_MemMapPtr;

 /** Number of instances of the UOTG module. */
#define UOTG_INSTANCE_COUNT                      (1u)


/* UOTG - Peripheral instance base addresses */
/** Peripheral UOTG base address */
#define UOTG_BASE                                (0xFFC90000u)
/** Peripheral UOTG base pointer */
#define UOTG                                     ((UOTG_Type *)UOTG_BASE)
/** Array initializer of UOTG peripheral base addresses */
#define UOTG_BASE_ADDRS                          { UOTG_BASE }
/** Array initializer of UOTG peripheral base pointers */
#define UOTG_BASE_PTRS                           { UOTG }

/* ----------------------------------------------------------------------------
   -- UOTG Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTG_Register_Masks UOTG Register Masks
 * @{
 */

/* ID Bit Fields */
#define UOTG_ID_ID_MASK                          0x3Fu
#define UOTG_ID_ID_SHIFT                         0u
#define UOTG_ID_ID_WIDTH                         6u
#define UOTG_ID_ID(x)                            (((uint32_t)(((uint32_t)(x))<<UOTG_ID_ID_SHIFT))&UOTG_ID_ID_MASK)
#define UOTG_ID_NID_MASK                         0x3F00u
#define UOTG_ID_NID_SHIFT                        8u
#define UOTG_ID_NID_WIDTH                        6u
#define UOTG_ID_NID(x)                           (((uint32_t)(((uint32_t)(x))<<UOTG_ID_NID_SHIFT))&UOTG_ID_NID_MASK)
#define UOTG_ID_REVISION_MASK                    0xFF0000u
#define UOTG_ID_REVISION_SHIFT                   16u
#define UOTG_ID_REVISION_WIDTH                   8u
#define UOTG_ID_REVISION(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ID_REVISION_SHIFT))&UOTG_ID_REVISION_MASK)
/* GNLHW Bit Fields */
#define UOTG_GNLHW_PHYW_MASK                     0x30u
#define UOTG_GNLHW_PHYW_SHIFT                    4u
#define UOTG_GNLHW_PHYW_WIDTH                    2u
#define UOTG_GNLHW_PHYW(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_GNLHW_PHYW_SHIFT))&UOTG_GNLHW_PHYW_MASK)
#define UOTG_GNLHW_PHYM_MASK                     0x1C0u
#define UOTG_GNLHW_PHYM_SHIFT                    6u
#define UOTG_GNLHW_PHYM_WIDTH                    3u
#define UOTG_GNLHW_PHYM(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_GNLHW_PHYM_SHIFT))&UOTG_GNLHW_PHYM_MASK)
#define UOTG_GNLHW_SM_MASK                       0x600u
#define UOTG_GNLHW_SM_SHIFT                      9u
#define UOTG_GNLHW_SM_WIDTH                      2u
#define UOTG_GNLHW_SM(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_GNLHW_SM_SHIFT))&UOTG_GNLHW_SM_MASK)
/* HSTHWP Bit Fields */
#define UOTG_HSTHWP_HC_MASK                      0x1u
#define UOTG_HSTHWP_HC_SHIFT                     0u
#define UOTG_HSTHWP_HC_WIDTH                     1u
#define UOTG_HSTHWP_HC(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_HSTHWP_HC_SHIFT))&UOTG_HSTHWP_HC_MASK)
#define UOTG_HSTHWP_NPORT_MASK                   0xEu
#define UOTG_HSTHWP_NPORT_SHIFT                  1u
#define UOTG_HSTHWP_NPORT_WIDTH                  3u
#define UOTG_HSTHWP_NPORT(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_HSTHWP_NPORT_SHIFT))&UOTG_HSTHWP_NPORT_MASK)
/* DEVHWP Bit Fields */
#define UOTG_DEVHWP_DC_MASK                      0x1u
#define UOTG_DEVHWP_DC_SHIFT                     0u
#define UOTG_DEVHWP_DC_WIDTH                     1u
#define UOTG_DEVHWP_DC(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_DEVHWP_DC_SHIFT))&UOTG_DEVHWP_DC_MASK)
#define UOTG_DEVHWP_DEVEP_MASK                   0x3Eu
#define UOTG_DEVHWP_DEVEP_SHIFT                  1u
#define UOTG_DEVHWP_DEVEP_WIDTH                  5u
#define UOTG_DEVHWP_DEVEP(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_DEVHWP_DEVEP_SHIFT))&UOTG_DEVHWP_DEVEP_MASK)
/* TXBFP Bit Fields */
#define UOTG_TXBFP_TXBURST_MASK                  0xFFu
#define UOTG_TXBFP_TXBURST_SHIFT                 0u
#define UOTG_TXBFP_TXBURST_WIDTH                 8u
#define UOTG_TXBFP_TXBURST(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_TXBFP_TXBURST_SHIFT))&UOTG_TXBFP_TXBURST_MASK)
#define UOTG_TXBFP_TXADD_MASK                    0xFF00u
#define UOTG_TXBFP_TXADD_SHIFT                   8u
#define UOTG_TXBFP_TXADD_WIDTH                   8u
#define UOTG_TXBFP_TXADD(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_TXBFP_TXADD_SHIFT))&UOTG_TXBFP_TXADD_MASK)
#define UOTG_TXBFP_TXCHANADD_MASK                0xFF0000u
#define UOTG_TXBFP_TXCHANADD_SHIFT               16u
#define UOTG_TXBFP_TXCHANADD_WIDTH               8u
#define UOTG_TXBFP_TXCHANADD(x)                  (((uint32_t)(((uint32_t)(x))<<UOTG_TXBFP_TXCHANADD_SHIFT))&UOTG_TXBFP_TXCHANADD_MASK)
/* RXBFP Bit Fields */
#define UOTG_RXBFP_RXBURST_MASK                  0xFFu
#define UOTG_RXBFP_RXBURST_SHIFT                 0u
#define UOTG_RXBFP_RXBURST_WIDTH                 8u
#define UOTG_RXBFP_RXBURST(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_RXBFP_RXBURST_SHIFT))&UOTG_RXBFP_RXBURST_MASK)
#define UOTG_RXBFP_RXADD_MASK                    0xFF00u
#define UOTG_RXBFP_RXADD_SHIFT                   8u
#define UOTG_RXBFP_RXADD_WIDTH                   8u
#define UOTG_RXBFP_RXADD(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_RXBFP_RXADD_SHIFT))&UOTG_RXBFP_RXADD_MASK)
/* LD Bit Fields */
#define UOTG_LD_GPTLD_MASK                       0xFFFFFFu
#define UOTG_LD_GPTLD_SHIFT                      0u
#define UOTG_LD_GPTLD_WIDTH                      24u
#define UOTG_LD_GPTLD(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_LD_GPTLD_SHIFT))&UOTG_LD_GPTLD_MASK)
/* CL Bit Fields */
#define UOTG_CL_GPTCNT_MASK                      0xFFFFFFu
#define UOTG_CL_GPTCNT_SHIFT                     0u
#define UOTG_CL_GPTCNT_WIDTH                     24u
#define UOTG_CL_GPTCNT(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_CL_GPTCNT_SHIFT))&UOTG_CL_GPTCNT_MASK)
#define UOTG_CL_GPTMODE_MASK                     0x1000000u
#define UOTG_CL_GPTMODE_SHIFT                    24u
#define UOTG_CL_GPTMODE_WIDTH                    1u
#define UOTG_CL_GPTMODE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_CL_GPTMODE_SHIFT))&UOTG_CL_GPTMODE_MASK)
#define UOTG_CL_GPTRST_MASK                      0x40000000u
#define UOTG_CL_GPTRST_SHIFT                     30u
#define UOTG_CL_GPTRST_WIDTH                     1u
#define UOTG_CL_GPTRST(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_CL_GPTRST_SHIFT))&UOTG_CL_GPTRST_MASK)
#define UOTG_CL_GPTRUN_MASK                      0x80000000u
#define UOTG_CL_GPTRUN_SHIFT                     31u
#define UOTG_CL_GPTRUN_WIDTH                     1u
#define UOTG_CL_GPTRUN(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_CL_GPTRUN_SHIFT))&UOTG_CL_GPTRUN_MASK)
/* SBUSCFG Bit Fields */
#define UOTG_SBUSCFG_AHBBRST_MASK                0x7u
#define UOTG_SBUSCFG_AHBBRST_SHIFT               0u
#define UOTG_SBUSCFG_AHBBRST_WIDTH               3u
#define UOTG_SBUSCFG_AHBBRST(x)                  (((uint32_t)(((uint32_t)(x))<<UOTG_SBUSCFG_AHBBRST_SHIFT))&UOTG_SBUSCFG_AHBBRST_MASK)
#define UOTG_SBUSCFG_BARD_MASK                   0x38u
#define UOTG_SBUSCFG_BARD_SHIFT                  3u
#define UOTG_SBUSCFG_BARD_WIDTH                  3u
#define UOTG_SBUSCFG_BARD(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_SBUSCFG_BARD_SHIFT))&UOTG_SBUSCFG_BARD_MASK)
#define UOTG_SBUSCFG_BAWR_MASK                   0x1C0u
#define UOTG_SBUSCFG_BAWR_SHIFT                  6u
#define UOTG_SBUSCFG_BAWR_WIDTH                  3u
#define UOTG_SBUSCFG_BAWR(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_SBUSCFG_BAWR_SHIFT))&UOTG_SBUSCFG_BAWR_MASK)
/* CAPLENGTH Bit Fields */
#define UOTG_CAPLENGTH_CAPLENGTH_MASK            0xFFu
#define UOTG_CAPLENGTH_CAPLENGTH_SHIFT           0u
#define UOTG_CAPLENGTH_CAPLENGTH_WIDTH           8u
#define UOTG_CAPLENGTH_CAPLENGTH(x)              (((uint8_t)(((uint8_t)(x))<<UOTG_CAPLENGTH_CAPLENGTH_SHIFT))&UOTG_CAPLENGTH_CAPLENGTH_MASK)
/* HCIVERSION Bit Fields */
#define UOTG_HCIVERSION_HCIVERSION_MASK          0xFFFFu
#define UOTG_HCIVERSION_HCIVERSION_SHIFT         0u
#define UOTG_HCIVERSION_HCIVERSION_WIDTH         16u
#define UOTG_HCIVERSION_HCIVERSION(x)            (((uint16_t)(((uint16_t)(x))<<UOTG_HCIVERSION_HCIVERSION_SHIFT))&UOTG_HCIVERSION_HCIVERSION_MASK)
/* HCSPARAMS Bit Fields */
#define UOTG_HCSPARAMS_N_PORTS_MASK              0xFu
#define UOTG_HCSPARAMS_N_PORTS_SHIFT             0u
#define UOTG_HCSPARAMS_N_PORTS_WIDTH             4u
#define UOTG_HCSPARAMS_N_PORTS(x)                (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_N_PORTS_SHIFT))&UOTG_HCSPARAMS_N_PORTS_MASK)
#define UOTG_HCSPARAMS_PPC_MASK                  0x10u
#define UOTG_HCSPARAMS_PPC_SHIFT                 4u
#define UOTG_HCSPARAMS_PPC_WIDTH                 1u
#define UOTG_HCSPARAMS_PPC(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_PPC_SHIFT))&UOTG_HCSPARAMS_PPC_MASK)
#define UOTG_HCSPARAMS_N_PCC_MASK                0xF00u
#define UOTG_HCSPARAMS_N_PCC_SHIFT               8u
#define UOTG_HCSPARAMS_N_PCC_WIDTH               4u
#define UOTG_HCSPARAMS_N_PCC(x)                  (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_N_PCC_SHIFT))&UOTG_HCSPARAMS_N_PCC_MASK)
#define UOTG_HCSPARAMS_N_CC_MASK                 0xF000u
#define UOTG_HCSPARAMS_N_CC_SHIFT                12u
#define UOTG_HCSPARAMS_N_CC_WIDTH                4u
#define UOTG_HCSPARAMS_N_CC(x)                   (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_N_CC_SHIFT))&UOTG_HCSPARAMS_N_CC_MASK)
#define UOTG_HCSPARAMS_PI_MASK                   0x10000u
#define UOTG_HCSPARAMS_PI_SHIFT                  16u
#define UOTG_HCSPARAMS_PI_WIDTH                  1u
#define UOTG_HCSPARAMS_PI(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_PI_SHIFT))&UOTG_HCSPARAMS_PI_MASK)
#define UOTG_HCSPARAMS_N_PTT_MASK                0xF00000u
#define UOTG_HCSPARAMS_N_PTT_SHIFT               20u
#define UOTG_HCSPARAMS_N_PTT_WIDTH               4u
#define UOTG_HCSPARAMS_N_PTT(x)                  (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_N_PTT_SHIFT))&UOTG_HCSPARAMS_N_PTT_MASK)
#define UOTG_HCSPARAMS_N_TT_MASK                 0xF000000u
#define UOTG_HCSPARAMS_N_TT_SHIFT                24u
#define UOTG_HCSPARAMS_N_TT_WIDTH                4u
#define UOTG_HCSPARAMS_N_TT(x)                   (((uint32_t)(((uint32_t)(x))<<UOTG_HCSPARAMS_N_TT_SHIFT))&UOTG_HCSPARAMS_N_TT_MASK)
/* HCCPARAMS Bit Fields */
#define UOTG_HCCPARAMS_ADC_MASK                  0x1u
#define UOTG_HCCPARAMS_ADC_SHIFT                 0u
#define UOTG_HCCPARAMS_ADC_WIDTH                 1u
#define UOTG_HCCPARAMS_ADC(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_HCCPARAMS_ADC_SHIFT))&UOTG_HCCPARAMS_ADC_MASK)
#define UOTG_HCCPARAMS_PFL_MASK                  0x2u
#define UOTG_HCCPARAMS_PFL_SHIFT                 1u
#define UOTG_HCCPARAMS_PFL_WIDTH                 1u
#define UOTG_HCCPARAMS_PFL(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_HCCPARAMS_PFL_SHIFT))&UOTG_HCCPARAMS_PFL_MASK)
#define UOTG_HCCPARAMS_ASP_MASK                  0x4u
#define UOTG_HCCPARAMS_ASP_SHIFT                 2u
#define UOTG_HCCPARAMS_ASP_WIDTH                 1u
#define UOTG_HCCPARAMS_ASP(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_HCCPARAMS_ASP_SHIFT))&UOTG_HCCPARAMS_ASP_MASK)
#define UOTG_HCCPARAMS_IST_MASK                  0xF0u
#define UOTG_HCCPARAMS_IST_SHIFT                 4u
#define UOTG_HCCPARAMS_IST_WIDTH                 4u
#define UOTG_HCCPARAMS_IST(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_HCCPARAMS_IST_SHIFT))&UOTG_HCCPARAMS_IST_MASK)
#define UOTG_HCCPARAMS_EECP_MASK                 0xFF00u
#define UOTG_HCCPARAMS_EECP_SHIFT                8u
#define UOTG_HCCPARAMS_EECP_WIDTH                8u
#define UOTG_HCCPARAMS_EECP(x)                   (((uint32_t)(((uint32_t)(x))<<UOTG_HCCPARAMS_EECP_SHIFT))&UOTG_HCCPARAMS_EECP_MASK)
/* DCIFVER Bit Fields */
#define UOTG_DCIFVER_DCIFVER_MASK                0xFFFFu
#define UOTG_DCIFVER_DCIFVER_SHIFT               0u
#define UOTG_DCIFVER_DCIFVER_WIDTH               16u
#define UOTG_DCIFVER_DCIFVER(x)                  (((uint16_t)(((uint16_t)(x))<<UOTG_DCIFVER_DCIFVER_SHIFT))&UOTG_DCIFVER_DCIFVER_MASK)
/* DCCAPPAR Bit Fields */
#define UOTG_DCCAPPAR_DEN_MASK                   0x1Fu
#define UOTG_DCCAPPAR_DEN_SHIFT                  0u
#define UOTG_DCCAPPAR_DEN_WIDTH                  5u
#define UOTG_DCCAPPAR_DEN(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_DCCAPPAR_DEN_SHIFT))&UOTG_DCCAPPAR_DEN_MASK)
#define UOTG_DCCAPPAR_DC_MASK                    0x80u
#define UOTG_DCCAPPAR_DC_SHIFT                   7u
#define UOTG_DCCAPPAR_DC_WIDTH                   1u
#define UOTG_DCCAPPAR_DC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_DCCAPPAR_DC_SHIFT))&UOTG_DCCAPPAR_DC_MASK)
#define UOTG_DCCAPPAR_HC_MASK                    0x100u
#define UOTG_DCCAPPAR_HC_SHIFT                   8u
#define UOTG_DCCAPPAR_HC_WIDTH                   1u
#define UOTG_DCCAPPAR_HC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_DCCAPPAR_HC_SHIFT))&UOTG_DCCAPPAR_HC_MASK)
/* USBCMD Bit Fields */
#define UOTG_USBCMD_RS_MASK                      0x1u
#define UOTG_USBCMD_RS_SHIFT                     0u
#define UOTG_USBCMD_RS_WIDTH                     1u
#define UOTG_USBCMD_RS(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_RS_SHIFT))&UOTG_USBCMD_RS_MASK)
#define UOTG_USBCMD_RST_MASK                     0x2u
#define UOTG_USBCMD_RST_SHIFT                    1u
#define UOTG_USBCMD_RST_WIDTH                    1u
#define UOTG_USBCMD_RST(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_RST_SHIFT))&UOTG_USBCMD_RST_MASK)
#define UOTG_USBCMD_FS0_MASK                     0xCu
#define UOTG_USBCMD_FS0_SHIFT                    2u
#define UOTG_USBCMD_FS0_WIDTH                    2u
#define UOTG_USBCMD_FS0(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_FS0_SHIFT))&UOTG_USBCMD_FS0_MASK)
#define UOTG_USBCMD_PSE_MASK                     0x10u
#define UOTG_USBCMD_PSE_SHIFT                    4u
#define UOTG_USBCMD_PSE_WIDTH                    1u
#define UOTG_USBCMD_PSE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_PSE_SHIFT))&UOTG_USBCMD_PSE_MASK)
#define UOTG_USBCMD_ASE_MASK                     0x20u
#define UOTG_USBCMD_ASE_SHIFT                    5u
#define UOTG_USBCMD_ASE_WIDTH                    1u
#define UOTG_USBCMD_ASE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_ASE_SHIFT))&UOTG_USBCMD_ASE_MASK)
#define UOTG_USBCMD_IAA_MASK                     0x40u
#define UOTG_USBCMD_IAA_SHIFT                    6u
#define UOTG_USBCMD_IAA_WIDTH                    1u
#define UOTG_USBCMD_IAA(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_IAA_SHIFT))&UOTG_USBCMD_IAA_MASK)
#define UOTG_USBCMD_ASP_MASK                     0x300u
#define UOTG_USBCMD_ASP_SHIFT                    8u
#define UOTG_USBCMD_ASP_WIDTH                    2u
#define UOTG_USBCMD_ASP(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_ASP_SHIFT))&UOTG_USBCMD_ASP_MASK)
#define UOTG_USBCMD_ASPE_MASK                    0x800u
#define UOTG_USBCMD_ASPE_SHIFT                   11u
#define UOTG_USBCMD_ASPE_WIDTH                   1u
#define UOTG_USBCMD_ASPE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_ASPE_SHIFT))&UOTG_USBCMD_ASPE_MASK)
#define UOTG_USBCMD_SUTW_MASK                    0x2000u
#define UOTG_USBCMD_SUTW_SHIFT                   13u
#define UOTG_USBCMD_SUTW_WIDTH                   1u
#define UOTG_USBCMD_SUTW(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_SUTW_SHIFT))&UOTG_USBCMD_SUTW_MASK)
#define UOTG_USBCMD_ATDTW_MASK                   0x4000u
#define UOTG_USBCMD_ATDTW_SHIFT                  14u
#define UOTG_USBCMD_ATDTW_WIDTH                  1u
#define UOTG_USBCMD_ATDTW(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_ATDTW_SHIFT))&UOTG_USBCMD_ATDTW_MASK)
#define UOTG_USBCMD_FS1_MASK                     0x8000u
#define UOTG_USBCMD_FS1_SHIFT                    15u
#define UOTG_USBCMD_FS1_WIDTH                    1u
#define UOTG_USBCMD_FS1(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_FS1_SHIFT))&UOTG_USBCMD_FS1_MASK)
#define UOTG_USBCMD_ITC_MASK                     0xFF0000u
#define UOTG_USBCMD_ITC_SHIFT                    16u
#define UOTG_USBCMD_ITC_WIDTH                    8u
#define UOTG_USBCMD_ITC(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBCMD_ITC_SHIFT))&UOTG_USBCMD_ITC_MASK)
/* USBSTS Bit Fields */
#define UOTG_USBSTS_UI_MASK                      0x1u
#define UOTG_USBSTS_UI_SHIFT                     0u
#define UOTG_USBSTS_UI_WIDTH                     1u
#define UOTG_USBSTS_UI(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_UI_SHIFT))&UOTG_USBSTS_UI_MASK)
#define UOTG_USBSTS_UEI_MASK                     0x2u
#define UOTG_USBSTS_UEI_SHIFT                    1u
#define UOTG_USBSTS_UEI_WIDTH                    1u
#define UOTG_USBSTS_UEI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_UEI_SHIFT))&UOTG_USBSTS_UEI_MASK)
#define UOTG_USBSTS_PCI_MASK                     0x4u
#define UOTG_USBSTS_PCI_SHIFT                    2u
#define UOTG_USBSTS_PCI_WIDTH                    1u
#define UOTG_USBSTS_PCI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_PCI_SHIFT))&UOTG_USBSTS_PCI_MASK)
#define UOTG_USBSTS_FRI_MASK                     0x8u
#define UOTG_USBSTS_FRI_SHIFT                    3u
#define UOTG_USBSTS_FRI_WIDTH                    1u
#define UOTG_USBSTS_FRI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_FRI_SHIFT))&UOTG_USBSTS_FRI_MASK)
#define UOTG_USBSTS_SEI_MASK                     0x10u
#define UOTG_USBSTS_SEI_SHIFT                    4u
#define UOTG_USBSTS_SEI_WIDTH                    1u
#define UOTG_USBSTS_SEI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_SEI_SHIFT))&UOTG_USBSTS_SEI_MASK)
#define UOTG_USBSTS_AAI_MASK                     0x20u
#define UOTG_USBSTS_AAI_SHIFT                    5u
#define UOTG_USBSTS_AAI_WIDTH                    1u
#define UOTG_USBSTS_AAI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_AAI_SHIFT))&UOTG_USBSTS_AAI_MASK)
#define UOTG_USBSTS_URI_MASK                     0x40u
#define UOTG_USBSTS_URI_SHIFT                    6u
#define UOTG_USBSTS_URI_WIDTH                    1u
#define UOTG_USBSTS_URI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_URI_SHIFT))&UOTG_USBSTS_URI_MASK)
#define UOTG_USBSTS_SRI_MASK                     0x80u
#define UOTG_USBSTS_SRI_SHIFT                    7u
#define UOTG_USBSTS_SRI_WIDTH                    1u
#define UOTG_USBSTS_SRI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_SRI_SHIFT))&UOTG_USBSTS_SRI_MASK)
#define UOTG_USBSTS_SLI_MASK                     0x100u
#define UOTG_USBSTS_SLI_SHIFT                    8u
#define UOTG_USBSTS_SLI_WIDTH                    1u
#define UOTG_USBSTS_SLI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_SLI_SHIFT))&UOTG_USBSTS_SLI_MASK)
#define UOTG_USBSTS_ULPII_MASK                   0x400u
#define UOTG_USBSTS_ULPII_SHIFT                  10u
#define UOTG_USBSTS_ULPII_WIDTH                  1u
#define UOTG_USBSTS_ULPII(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_ULPII_SHIFT))&UOTG_USBSTS_ULPII_MASK)
#define UOTG_USBSTS_UALTI_MASK                   0x800u
#define UOTG_USBSTS_UALTI_SHIFT                  11u
#define UOTG_USBSTS_UALTI_WIDTH                  1u
#define UOTG_USBSTS_UALTI(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_UALTI_SHIFT))&UOTG_USBSTS_UALTI_MASK)
#define UOTG_USBSTS_HCH_MASK                     0x1000u
#define UOTG_USBSTS_HCH_SHIFT                    12u
#define UOTG_USBSTS_HCH_WIDTH                    1u
#define UOTG_USBSTS_HCH(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_HCH_SHIFT))&UOTG_USBSTS_HCH_MASK)
#define UOTG_USBSTS_RCL_MASK                     0x2000u
#define UOTG_USBSTS_RCL_SHIFT                    13u
#define UOTG_USBSTS_RCL_WIDTH                    1u
#define UOTG_USBSTS_RCL(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_RCL_SHIFT))&UOTG_USBSTS_RCL_MASK)
#define UOTG_USBSTS_PS_MASK                      0x4000u
#define UOTG_USBSTS_PS_SHIFT                     14u
#define UOTG_USBSTS_PS_WIDTH                     1u
#define UOTG_USBSTS_PS(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_PS_SHIFT))&UOTG_USBSTS_PS_MASK)
#define UOTG_USBSTS_AS_MASK                      0x8000u
#define UOTG_USBSTS_AS_SHIFT                     15u
#define UOTG_USBSTS_AS_WIDTH                     1u
#define UOTG_USBSTS_AS(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_AS_SHIFT))&UOTG_USBSTS_AS_MASK)
#define UOTG_USBSTS_NAKI_MASK                    0x10000u
#define UOTG_USBSTS_NAKI_SHIFT                   16u
#define UOTG_USBSTS_NAKI_WIDTH                   1u
#define UOTG_USBSTS_NAKI(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_NAKI_SHIFT))&UOTG_USBSTS_NAKI_MASK)
#define UOTG_USBSTS_UAI_MASK                     0x40000u
#define UOTG_USBSTS_UAI_SHIFT                    18u
#define UOTG_USBSTS_UAI_WIDTH                    1u
#define UOTG_USBSTS_UAI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_UAI_SHIFT))&UOTG_USBSTS_UAI_MASK)
#define UOTG_USBSTS_UPI_MASK                     0x80000u
#define UOTG_USBSTS_UPI_SHIFT                    19u
#define UOTG_USBSTS_UPI_WIDTH                    1u
#define UOTG_USBSTS_UPI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_UPI_SHIFT))&UOTG_USBSTS_UPI_MASK)
#define UOTG_USBSTS_TI0_MASK                     0x1000000u
#define UOTG_USBSTS_TI0_SHIFT                    24u
#define UOTG_USBSTS_TI0_WIDTH                    1u
#define UOTG_USBSTS_TI0(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_TI0_SHIFT))&UOTG_USBSTS_TI0_MASK)
#define UOTG_USBSTS_TI1_MASK                     0x2000000u
#define UOTG_USBSTS_TI1_SHIFT                    25u
#define UOTG_USBSTS_TI1_WIDTH                    1u
#define UOTG_USBSTS_TI1(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBSTS_TI1_SHIFT))&UOTG_USBSTS_TI1_MASK)
/* USBINTR Bit Fields */
#define UOTG_USBINTR_UE_MASK                     0x1u
#define UOTG_USBINTR_UE_SHIFT                    0u
#define UOTG_USBINTR_UE_WIDTH                    1u
#define UOTG_USBINTR_UE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_UE_SHIFT))&UOTG_USBINTR_UE_MASK)
#define UOTG_USBINTR_UEE_MASK                    0x2u
#define UOTG_USBINTR_UEE_SHIFT                   1u
#define UOTG_USBINTR_UEE_WIDTH                   1u
#define UOTG_USBINTR_UEE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_UEE_SHIFT))&UOTG_USBINTR_UEE_MASK)
#define UOTG_USBINTR_PCE_MASK                    0x4u
#define UOTG_USBINTR_PCE_SHIFT                   2u
#define UOTG_USBINTR_PCE_WIDTH                   1u
#define UOTG_USBINTR_PCE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_PCE_SHIFT))&UOTG_USBINTR_PCE_MASK)
#define UOTG_USBINTR_FRE_MASK                    0x8u
#define UOTG_USBINTR_FRE_SHIFT                   3u
#define UOTG_USBINTR_FRE_WIDTH                   1u
#define UOTG_USBINTR_FRE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_FRE_SHIFT))&UOTG_USBINTR_FRE_MASK)
#define UOTG_USBINTR_SEE_MASK                    0x10u
#define UOTG_USBINTR_SEE_SHIFT                   4u
#define UOTG_USBINTR_SEE_WIDTH                   1u
#define UOTG_USBINTR_SEE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_SEE_SHIFT))&UOTG_USBINTR_SEE_MASK)
#define UOTG_USBINTR_AAE_MASK                    0x20u
#define UOTG_USBINTR_AAE_SHIFT                   5u
#define UOTG_USBINTR_AAE_WIDTH                   1u
#define UOTG_USBINTR_AAE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_AAE_SHIFT))&UOTG_USBINTR_AAE_MASK)
#define UOTG_USBINTR_URE_MASK                    0x40u
#define UOTG_USBINTR_URE_SHIFT                   6u
#define UOTG_USBINTR_URE_WIDTH                   1u
#define UOTG_USBINTR_URE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_URE_SHIFT))&UOTG_USBINTR_URE_MASK)
#define UOTG_USBINTR_SRE_MASK                    0x80u
#define UOTG_USBINTR_SRE_SHIFT                   7u
#define UOTG_USBINTR_SRE_WIDTH                   1u
#define UOTG_USBINTR_SRE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_SRE_SHIFT))&UOTG_USBINTR_SRE_MASK)
#define UOTG_USBINTR_SLE_MASK                    0x100u
#define UOTG_USBINTR_SLE_SHIFT                   8u
#define UOTG_USBINTR_SLE_WIDTH                   1u
#define UOTG_USBINTR_SLE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_SLE_SHIFT))&UOTG_USBINTR_SLE_MASK)
#define UOTG_USBINTR_ULPIE_MASK                  0x400u
#define UOTG_USBINTR_ULPIE_SHIFT                 10u
#define UOTG_USBINTR_ULPIE_WIDTH                 1u
#define UOTG_USBINTR_ULPIE(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_ULPIE_SHIFT))&UOTG_USBINTR_ULPIE_MASK)
#define UOTG_USBINTR_NAKE_MASK                   0x10000u
#define UOTG_USBINTR_NAKE_SHIFT                  16u
#define UOTG_USBINTR_NAKE_WIDTH                  1u
#define UOTG_USBINTR_NAKE(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_NAKE_SHIFT))&UOTG_USBINTR_NAKE_MASK)
#define UOTG_USBINTR_UAIE_MASK                   0x40000u
#define UOTG_USBINTR_UAIE_SHIFT                  18u
#define UOTG_USBINTR_UAIE_WIDTH                  1u
#define UOTG_USBINTR_UAIE(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_UAIE_SHIFT))&UOTG_USBINTR_UAIE_MASK)
#define UOTG_USBINTR_UPIE_MASK                   0x80000u
#define UOTG_USBINTR_UPIE_SHIFT                  19u
#define UOTG_USBINTR_UPIE_WIDTH                  1u
#define UOTG_USBINTR_UPIE(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_UPIE_SHIFT))&UOTG_USBINTR_UPIE_MASK)
#define UOTG_USBINTR_TIE0_MASK                   0x1000000u
#define UOTG_USBINTR_TIE0_SHIFT                  24u
#define UOTG_USBINTR_TIE0_WIDTH                  1u
#define UOTG_USBINTR_TIE0(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_TIE0_SHIFT))&UOTG_USBINTR_TIE0_MASK)
#define UOTG_USBINTR_TIE1_MASK                   0x2000000u
#define UOTG_USBINTR_TIE1_SHIFT                  25u
#define UOTG_USBINTR_TIE1_WIDTH                  1u
#define UOTG_USBINTR_TIE1(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBINTR_TIE1_SHIFT))&UOTG_USBINTR_TIE1_MASK)
/* FRINDEX Bit Fields */
#define UOTG_FRINDEX_FRINDEX_MASK                0x3FFFu
#define UOTG_FRINDEX_FRINDEX_SHIFT               0u
#define UOTG_FRINDEX_FRINDEX_WIDTH               14u
#define UOTG_FRINDEX_FRINDEX(x)                  (((uint32_t)(((uint32_t)(x))<<UOTG_FRINDEX_FRINDEX_SHIFT))&UOTG_FRINDEX_FRINDEX_MASK)
/* ADDRESS1_DEVADR Bit Fields */
#define UOTG_ADDRESS1_DEVADR_USBADRA_MASK        0x1000000u
#define UOTG_ADDRESS1_DEVADR_USBADRA_SHIFT       24u
#define UOTG_ADDRESS1_DEVADR_USBADRA_WIDTH       1u
#define UOTG_ADDRESS1_DEVADR_USBADRA(x)          (((uint32_t)(((uint32_t)(x))<<UOTG_ADDRESS1_DEVADR_USBADRA_SHIFT))&UOTG_ADDRESS1_DEVADR_USBADRA_MASK)
#define UOTG_ADDRESS1_DEVADR_USBADR_MASK         0xFE000000u
#define UOTG_ADDRESS1_DEVADR_USBADR_SHIFT        25u
#define UOTG_ADDRESS1_DEVADR_USBADR_WIDTH        7u
#define UOTG_ADDRESS1_DEVADR_USBADR(x)           (((uint32_t)(((uint32_t)(x))<<UOTG_ADDRESS1_DEVADR_USBADR_SHIFT))&UOTG_ADDRESS1_DEVADR_USBADR_MASK)
/* ADDRESS1_PERIODICLISTBASE Bit Fields */
#define UOTG_ADDRESS1_PERIODICLISTBASE_BASEADR_MASK 0xFFFFF000u
#define UOTG_ADDRESS1_PERIODICLISTBASE_BASEADR_SHIFT 12u
#define UOTG_ADDRESS1_PERIODICLISTBASE_BASEADR_WIDTH 20u
#define UOTG_ADDRESS1_PERIODICLISTBASE_BASEADR(x) (((uint32_t)(((uint32_t)(x))<<UOTG_ADDRESS1_PERIODICLISTBASE_BASEADR_SHIFT))&UOTG_ADDRESS1_PERIODICLISTBASE_BASEADR_MASK)
/* ADDRESS2_ASYNCLISTADDR Bit Fields */
#define UOTG_ADDRESS2_ASYNCLISTADDR_ASYBASE_MASK 0xFFFFFFE0u
#define UOTG_ADDRESS2_ASYNCLISTADDR_ASYBASE_SHIFT 5u
#define UOTG_ADDRESS2_ASYNCLISTADDR_ASYBASE_WIDTH 27u
#define UOTG_ADDRESS2_ASYNCLISTADDR_ASYBASE(x)   (((uint32_t)(((uint32_t)(x))<<UOTG_ADDRESS2_ASYNCLISTADDR_ASYBASE_SHIFT))&UOTG_ADDRESS2_ASYNCLISTADDR_ASYBASE_MASK)
/* ADDRESS2_ENDPLADR Bit Fields */
#define UOTG_ADDRESS2_ENDPLADR_EPBASE_MASK       0xFFFFF800u
#define UOTG_ADDRESS2_ENDPLADR_EPBASE_SHIFT      11u
#define UOTG_ADDRESS2_ENDPLADR_EPBASE_WIDTH      21u
#define UOTG_ADDRESS2_ENDPLADR_EPBASE(x)         (((uint32_t)(((uint32_t)(x))<<UOTG_ADDRESS2_ENDPLADR_EPBASE_SHIFT))&UOTG_ADDRESS2_ENDPLADR_EPBASE_MASK)
/* BRSTSIZE Bit Fields */
#define UOTG_BRSTSIZE_RXPBURST_MASK              0xFFu
#define UOTG_BRSTSIZE_RXPBURST_SHIFT             0u
#define UOTG_BRSTSIZE_RXPBURST_WIDTH             8u
#define UOTG_BRSTSIZE_RXPBURST(x)                (((uint32_t)(((uint32_t)(x))<<UOTG_BRSTSIZE_RXPBURST_SHIFT))&UOTG_BRSTSIZE_RXPBURST_MASK)
#define UOTG_BRSTSIZE_TXPBURST_MASK              0xFF00u
#define UOTG_BRSTSIZE_TXPBURST_SHIFT             8u
#define UOTG_BRSTSIZE_TXPBURST_WIDTH             8u
#define UOTG_BRSTSIZE_TXPBURST(x)                (((uint32_t)(((uint32_t)(x))<<UOTG_BRSTSIZE_TXPBURST_SHIFT))&UOTG_BRSTSIZE_TXPBURST_MASK)
/* TXTFLTNG Bit Fields */
#define UOTG_TXTFLTNG_TXSCHOH_MASK               0xFFu
#define UOTG_TXTFLTNG_TXSCHOH_SHIFT              0u
#define UOTG_TXTFLTNG_TXSCHOH_WIDTH              8u
#define UOTG_TXTFLTNG_TXSCHOH(x)                 (((uint32_t)(((uint32_t)(x))<<UOTG_TXTFLTNG_TXSCHOH_SHIFT))&UOTG_TXTFLTNG_TXSCHOH_MASK)
#define UOTG_TXTFLTNG_TXSCHHEALTH_MASK           0x1F00u
#define UOTG_TXTFLTNG_TXSCHHEALTH_SHIFT          8u
#define UOTG_TXTFLTNG_TXSCHHEALTH_WIDTH          5u
#define UOTG_TXTFLTNG_TXSCHHEALTH(x)             (((uint32_t)(((uint32_t)(x))<<UOTG_TXTFLTNG_TXSCHHEALTH_SHIFT))&UOTG_TXTFLTNG_TXSCHHEALTH_MASK)
#define UOTG_TXTFLTNG_TXFIFOTHRES_MASK           0x3F0000u
#define UOTG_TXTFLTNG_TXFIFOTHRES_SHIFT          16u
#define UOTG_TXTFLTNG_TXFIFOTHRES_WIDTH          6u
#define UOTG_TXTFLTNG_TXFIFOTHRES(x)             (((uint32_t)(((uint32_t)(x))<<UOTG_TXTFLTNG_TXFIFOTHRES_SHIFT))&UOTG_TXTFLTNG_TXFIFOTHRES_MASK)
/* ICUSBEN Bit Fields */
#define UOTG_ICUSBEN_IC_VDD1_MASK                0x7u
#define UOTG_ICUSBEN_IC_VDD1_SHIFT               0u
#define UOTG_ICUSBEN_IC_VDD1_WIDTH               3u
#define UOTG_ICUSBEN_IC_VDD1(x)                  (((uint32_t)(((uint32_t)(x))<<UOTG_ICUSBEN_IC_VDD1_SHIFT))&UOTG_ICUSBEN_IC_VDD1_MASK)
#define UOTG_ICUSBEN_IC1_MASK                    0x8u
#define UOTG_ICUSBEN_IC1_SHIFT                   3u
#define UOTG_ICUSBEN_IC1_WIDTH                   1u
#define UOTG_ICUSBEN_IC1(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ICUSBEN_IC1_SHIFT))&UOTG_ICUSBEN_IC1_MASK)
/* ULPIVWPT Bit Fields */
#define UOTG_ULPIVWPT_ULPI_DATWR_MASK            0xFFu
#define UOTG_ULPIVWPT_ULPI_DATWR_SHIFT           0u
#define UOTG_ULPIVWPT_ULPI_DATWR_WIDTH           8u
#define UOTG_ULPIVWPT_ULPI_DATWR(x)              (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_DATWR_SHIFT))&UOTG_ULPIVWPT_ULPI_DATWR_MASK)
#define UOTG_ULPIVWPT_ULPI_DATRD_MASK            0xFF00u
#define UOTG_ULPIVWPT_ULPI_DATRD_SHIFT           8u
#define UOTG_ULPIVWPT_ULPI_DATRD_WIDTH           8u
#define UOTG_ULPIVWPT_ULPI_DATRD(x)              (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_DATRD_SHIFT))&UOTG_ULPIVWPT_ULPI_DATRD_MASK)
#define UOTG_ULPIVWPT_ULPI_ADDR_MASK             0xFF0000u
#define UOTG_ULPIVWPT_ULPI_ADDR_SHIFT            16u
#define UOTG_ULPIVWPT_ULPI_ADDR_WIDTH            8u
#define UOTG_ULPIVWPT_ULPI_ADDR(x)               (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_ADDR_SHIFT))&UOTG_ULPIVWPT_ULPI_ADDR_MASK)
#define UOTG_ULPIVWPT_ULPI_PORT_MASK             0x7000000u
#define UOTG_ULPIVWPT_ULPI_PORT_SHIFT            24u
#define UOTG_ULPIVWPT_ULPI_PORT_WIDTH            3u
#define UOTG_ULPIVWPT_ULPI_PORT(x)               (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_PORT_SHIFT))&UOTG_ULPIVWPT_ULPI_PORT_MASK)
#define UOTG_ULPIVWPT_ULPI_SS_MASK               0x8000000u
#define UOTG_ULPIVWPT_ULPI_SS_SHIFT              27u
#define UOTG_ULPIVWPT_ULPI_SS_WIDTH              1u
#define UOTG_ULPIVWPT_ULPI_SS(x)                 (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_SS_SHIFT))&UOTG_ULPIVWPT_ULPI_SS_MASK)
#define UOTG_ULPIVWPT_ULPI_RW_MASK               0x20000000u
#define UOTG_ULPIVWPT_ULPI_RW_SHIFT              29u
#define UOTG_ULPIVWPT_ULPI_RW_WIDTH              1u
#define UOTG_ULPIVWPT_ULPI_RW(x)                 (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_RW_SHIFT))&UOTG_ULPIVWPT_ULPI_RW_MASK)
#define UOTG_ULPIVWPT_ULPI_RUN_MASK              0x40000000u
#define UOTG_ULPIVWPT_ULPI_RUN_SHIFT             30u
#define UOTG_ULPIVWPT_ULPI_RUN_WIDTH             1u
#define UOTG_ULPIVWPT_ULPI_RUN(x)                (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_RUN_SHIFT))&UOTG_ULPIVWPT_ULPI_RUN_MASK)
#define UOTG_ULPIVWPT_ULPI_WU_MASK               0x80000000u
#define UOTG_ULPIVWPT_ULPI_WU_SHIFT              31u
#define UOTG_ULPIVWPT_ULPI_WU_WIDTH              1u
#define UOTG_ULPIVWPT_ULPI_WU(x)                 (((uint32_t)(((uint32_t)(x))<<UOTG_ULPIVWPT_ULPI_WU_SHIFT))&UOTG_ULPIVWPT_ULPI_WU_MASK)
/* ENDPNAK Bit Fields */
#define UOTG_ENDPNAK_EPRN_MASK                   0xFu
#define UOTG_ENDPNAK_EPRN_SHIFT                  0u
#define UOTG_ENDPNAK_EPRN_WIDTH                  4u
#define UOTG_ENDPNAK_EPRN(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPNAK_EPRN_SHIFT))&UOTG_ENDPNAK_EPRN_MASK)
#define UOTG_ENDPNAK_EPTN_MASK                   0xF0000u
#define UOTG_ENDPNAK_EPTN_SHIFT                  16u
#define UOTG_ENDPNAK_EPTN_WIDTH                  4u
#define UOTG_ENDPNAK_EPTN(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPNAK_EPTN_SHIFT))&UOTG_ENDPNAK_EPTN_MASK)
/* ENDPNAKE Bit Fields */
#define UOTG_ENDPNAKE_EPRNE_MASK                 0xFu
#define UOTG_ENDPNAKE_EPRNE_SHIFT                0u
#define UOTG_ENDPNAKE_EPRNE_WIDTH                4u
#define UOTG_ENDPNAKE_EPRNE(x)                   (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPNAKE_EPRNE_SHIFT))&UOTG_ENDPNAKE_EPRNE_MASK)
#define UOTG_ENDPNAKE_EPTNE_MASK                 0xF0000u
#define UOTG_ENDPNAKE_EPTNE_SHIFT                16u
#define UOTG_ENDPNAKE_EPTNE_WIDTH                4u
#define UOTG_ENDPNAKE_EPTNE(x)                   (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPNAKE_EPTNE_SHIFT))&UOTG_ENDPNAKE_EPTNE_MASK)
/* PORTSC1 Bit Fields */
#define UOTG_PORTSC1_CCS_MASK                    0x1u
#define UOTG_PORTSC1_CCS_SHIFT                   0u
#define UOTG_PORTSC1_CCS_WIDTH                   1u
#define UOTG_PORTSC1_CCS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_CCS_SHIFT))&UOTG_PORTSC1_CCS_MASK)
#define UOTG_PORTSC1_CSC_MASK                    0x2u
#define UOTG_PORTSC1_CSC_SHIFT                   1u
#define UOTG_PORTSC1_CSC_WIDTH                   1u
#define UOTG_PORTSC1_CSC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_CSC_SHIFT))&UOTG_PORTSC1_CSC_MASK)
#define UOTG_PORTSC1_PE_MASK                     0x4u
#define UOTG_PORTSC1_PE_SHIFT                    2u
#define UOTG_PORTSC1_PE_WIDTH                    1u
#define UOTG_PORTSC1_PE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PE_SHIFT))&UOTG_PORTSC1_PE_MASK)
#define UOTG_PORTSC1_PEC_MASK                    0x8u
#define UOTG_PORTSC1_PEC_SHIFT                   3u
#define UOTG_PORTSC1_PEC_WIDTH                   1u
#define UOTG_PORTSC1_PEC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PEC_SHIFT))&UOTG_PORTSC1_PEC_MASK)
#define UOTG_PORTSC1_OCA_MASK                    0x10u
#define UOTG_PORTSC1_OCA_SHIFT                   4u
#define UOTG_PORTSC1_OCA_WIDTH                   1u
#define UOTG_PORTSC1_OCA(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_OCA_SHIFT))&UOTG_PORTSC1_OCA_MASK)
#define UOTG_PORTSC1_OCC_MASK                    0x20u
#define UOTG_PORTSC1_OCC_SHIFT                   5u
#define UOTG_PORTSC1_OCC_WIDTH                   1u
#define UOTG_PORTSC1_OCC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_OCC_SHIFT))&UOTG_PORTSC1_OCC_MASK)
#define UOTG_PORTSC1_FPR_MASK                    0x40u
#define UOTG_PORTSC1_FPR_SHIFT                   6u
#define UOTG_PORTSC1_FPR_WIDTH                   1u
#define UOTG_PORTSC1_FPR(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_FPR_SHIFT))&UOTG_PORTSC1_FPR_MASK)
#define UOTG_PORTSC1_SUSP_MASK                   0x80u
#define UOTG_PORTSC1_SUSP_SHIFT                  7u
#define UOTG_PORTSC1_SUSP_WIDTH                  1u
#define UOTG_PORTSC1_SUSP(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_SUSP_SHIFT))&UOTG_PORTSC1_SUSP_MASK)
#define UOTG_PORTSC1_PR_MASK                     0x100u
#define UOTG_PORTSC1_PR_SHIFT                    8u
#define UOTG_PORTSC1_PR_WIDTH                    1u
#define UOTG_PORTSC1_PR(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PR_SHIFT))&UOTG_PORTSC1_PR_MASK)
#define UOTG_PORTSC1_HSP_MASK                    0x200u
#define UOTG_PORTSC1_HSP_SHIFT                   9u
#define UOTG_PORTSC1_HSP_WIDTH                   1u
#define UOTG_PORTSC1_HSP(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_HSP_SHIFT))&UOTG_PORTSC1_HSP_MASK)
#define UOTG_PORTSC1_LS_MASK                     0xC00u
#define UOTG_PORTSC1_LS_SHIFT                    10u
#define UOTG_PORTSC1_LS_WIDTH                    2u
#define UOTG_PORTSC1_LS(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_LS_SHIFT))&UOTG_PORTSC1_LS_MASK)
#define UOTG_PORTSC1_PP_MASK                     0x1000u
#define UOTG_PORTSC1_PP_SHIFT                    12u
#define UOTG_PORTSC1_PP_WIDTH                    1u
#define UOTG_PORTSC1_PP(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PP_SHIFT))&UOTG_PORTSC1_PP_MASK)
#define UOTG_PORTSC1_PO_MASK                     0x2000u
#define UOTG_PORTSC1_PO_SHIFT                    13u
#define UOTG_PORTSC1_PO_WIDTH                    1u
#define UOTG_PORTSC1_PO(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PO_SHIFT))&UOTG_PORTSC1_PO_MASK)
#define UOTG_PORTSC1_PIC_MASK                    0xC000u
#define UOTG_PORTSC1_PIC_SHIFT                   14u
#define UOTG_PORTSC1_PIC_WIDTH                   2u
#define UOTG_PORTSC1_PIC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PIC_SHIFT))&UOTG_PORTSC1_PIC_MASK)
#define UOTG_PORTSC1_PTC_MASK                    0xF0000u
#define UOTG_PORTSC1_PTC_SHIFT                   16u
#define UOTG_PORTSC1_PTC_WIDTH                   4u
#define UOTG_PORTSC1_PTC(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PTC_SHIFT))&UOTG_PORTSC1_PTC_MASK)
#define UOTG_PORTSC1_WKCN_MASK                   0x100000u
#define UOTG_PORTSC1_WKCN_SHIFT                  20u
#define UOTG_PORTSC1_WKCN_WIDTH                  1u
#define UOTG_PORTSC1_WKCN(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_WKCN_SHIFT))&UOTG_PORTSC1_WKCN_MASK)
#define UOTG_PORTSC1_WKDS_MASK                   0x200000u
#define UOTG_PORTSC1_WKDS_SHIFT                  21u
#define UOTG_PORTSC1_WKDS_WIDTH                  1u
#define UOTG_PORTSC1_WKDS(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_WKDS_SHIFT))&UOTG_PORTSC1_WKDS_MASK)
#define UOTG_PORTSC1_WKOC_MASK                   0x400000u
#define UOTG_PORTSC1_WKOC_SHIFT                  22u
#define UOTG_PORTSC1_WKOC_WIDTH                  1u
#define UOTG_PORTSC1_WKOC(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_WKOC_SHIFT))&UOTG_PORTSC1_WKOC_MASK)
#define UOTG_PORTSC1_PHCD_MASK                   0x800000u
#define UOTG_PORTSC1_PHCD_SHIFT                  23u
#define UOTG_PORTSC1_PHCD_WIDTH                  1u
#define UOTG_PORTSC1_PHCD(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PHCD_SHIFT))&UOTG_PORTSC1_PHCD_MASK)
#define UOTG_PORTSC1_PFSC_MASK                   0x1000000u
#define UOTG_PORTSC1_PFSC_SHIFT                  24u
#define UOTG_PORTSC1_PFSC_WIDTH                  1u
#define UOTG_PORTSC1_PFSC(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PFSC_SHIFT))&UOTG_PORTSC1_PFSC_MASK)
#define UOTG_PORTSC1_PTS0_MASK                   0x2000000u
#define UOTG_PORTSC1_PTS0_SHIFT                  25u
#define UOTG_PORTSC1_PTS0_WIDTH                  1u
#define UOTG_PORTSC1_PTS0(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PTS0_SHIFT))&UOTG_PORTSC1_PTS0_MASK)
#define UOTG_PORTSC1_PSPD_MASK                   0xC000000u
#define UOTG_PORTSC1_PSPD_SHIFT                  26u
#define UOTG_PORTSC1_PSPD_WIDTH                  2u
#define UOTG_PORTSC1_PSPD(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PSPD_SHIFT))&UOTG_PORTSC1_PSPD_MASK)
#define UOTG_PORTSC1_PTW_MASK                    0x10000000u
#define UOTG_PORTSC1_PTW_SHIFT                   28u
#define UOTG_PORTSC1_PTW_WIDTH                   1u
#define UOTG_PORTSC1_PTW(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PTW_SHIFT))&UOTG_PORTSC1_PTW_MASK)
#define UOTG_PORTSC1_STS_MASK                    0x20000000u
#define UOTG_PORTSC1_STS_SHIFT                   29u
#define UOTG_PORTSC1_STS_WIDTH                   1u
#define UOTG_PORTSC1_STS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_STS_SHIFT))&UOTG_PORTSC1_STS_MASK)
#define UOTG_PORTSC1_PTS1_MASK                   0xC0000000u
#define UOTG_PORTSC1_PTS1_SHIFT                  30u
#define UOTG_PORTSC1_PTS1_WIDTH                  2u
#define UOTG_PORTSC1_PTS1(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_PORTSC1_PTS1_SHIFT))&UOTG_PORTSC1_PTS1_MASK)
/* OTGSC Bit Fields */
#define UOTG_OTGSC_VD_MASK                       0x1u
#define UOTG_OTGSC_VD_SHIFT                      0u
#define UOTG_OTGSC_VD_WIDTH                      1u
#define UOTG_OTGSC_VD(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_VD_SHIFT))&UOTG_OTGSC_VD_MASK)
#define UOTG_OTGSC_VC_MASK                       0x2u
#define UOTG_OTGSC_VC_SHIFT                      1u
#define UOTG_OTGSC_VC_WIDTH                      1u
#define UOTG_OTGSC_VC(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_VC_SHIFT))&UOTG_OTGSC_VC_MASK)
#define UOTG_OTGSC_HAAR_MASK                     0x4u
#define UOTG_OTGSC_HAAR_SHIFT                    2u
#define UOTG_OTGSC_HAAR_WIDTH                    1u
#define UOTG_OTGSC_HAAR(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_HAAR_SHIFT))&UOTG_OTGSC_HAAR_MASK)
#define UOTG_OTGSC_OT_MASK                       0x8u
#define UOTG_OTGSC_OT_SHIFT                      3u
#define UOTG_OTGSC_OT_WIDTH                      1u
#define UOTG_OTGSC_OT(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_OT_SHIFT))&UOTG_OTGSC_OT_MASK)
#define UOTG_OTGSC_DP_MASK                       0x10u
#define UOTG_OTGSC_DP_SHIFT                      4u
#define UOTG_OTGSC_DP_WIDTH                      1u
#define UOTG_OTGSC_DP(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_DP_SHIFT))&UOTG_OTGSC_DP_MASK)
#define UOTG_OTGSC_IDPU_MASK                     0x20u
#define UOTG_OTGSC_IDPU_SHIFT                    5u
#define UOTG_OTGSC_IDPU_WIDTH                    1u
#define UOTG_OTGSC_IDPU(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_IDPU_SHIFT))&UOTG_OTGSC_IDPU_MASK)
#define UOTG_OTGSC_HADP_MASK                     0x40u
#define UOTG_OTGSC_HADP_SHIFT                    6u
#define UOTG_OTGSC_HADP_WIDTH                    1u
#define UOTG_OTGSC_HADP(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_HADP_SHIFT))&UOTG_OTGSC_HADP_MASK)
#define UOTG_OTGSC_HABA_MASK                     0x80u
#define UOTG_OTGSC_HABA_SHIFT                    7u
#define UOTG_OTGSC_HABA_WIDTH                    1u
#define UOTG_OTGSC_HABA(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_HABA_SHIFT))&UOTG_OTGSC_HABA_MASK)
#define UOTG_OTGSC_ID_MASK                       0x100u
#define UOTG_OTGSC_ID_SHIFT                      8u
#define UOTG_OTGSC_ID_WIDTH                      1u
#define UOTG_OTGSC_ID(x)                         (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_ID_SHIFT))&UOTG_OTGSC_ID_MASK)
#define UOTG_OTGSC_AVV_MASK                      0x200u
#define UOTG_OTGSC_AVV_SHIFT                     9u
#define UOTG_OTGSC_AVV_WIDTH                     1u
#define UOTG_OTGSC_AVV(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_AVV_SHIFT))&UOTG_OTGSC_AVV_MASK)
#define UOTG_OTGSC_ASV_MASK                      0x400u
#define UOTG_OTGSC_ASV_SHIFT                     10u
#define UOTG_OTGSC_ASV_WIDTH                     1u
#define UOTG_OTGSC_ASV(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_ASV_SHIFT))&UOTG_OTGSC_ASV_MASK)
#define UOTG_OTGSC_BSV_MASK                      0x800u
#define UOTG_OTGSC_BSV_SHIFT                     11u
#define UOTG_OTGSC_BSV_WIDTH                     1u
#define UOTG_OTGSC_BSV(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_BSV_SHIFT))&UOTG_OTGSC_BSV_MASK)
#define UOTG_OTGSC_BSE_MASK                      0x1000u
#define UOTG_OTGSC_BSE_SHIFT                     12u
#define UOTG_OTGSC_BSE_WIDTH                     1u
#define UOTG_OTGSC_BSE(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_BSE_SHIFT))&UOTG_OTGSC_BSE_MASK)
#define UOTG_OTGSC_TIM_TOG_MASK                  0x2000u
#define UOTG_OTGSC_TIM_TOG_SHIFT                 13u
#define UOTG_OTGSC_TIM_TOG_WIDTH                 1u
#define UOTG_OTGSC_TIM_TOG(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_TIM_TOG_SHIFT))&UOTG_OTGSC_TIM_TOG_MASK)
#define UOTG_OTGSC_DPS_MASK                      0x4000u
#define UOTG_OTGSC_DPS_SHIFT                     14u
#define UOTG_OTGSC_DPS_WIDTH                     1u
#define UOTG_OTGSC_DPS(x)                        (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_DPS_SHIFT))&UOTG_OTGSC_DPS_MASK)
#define UOTG_OTGSC_IDIS_MASK                     0x10000u
#define UOTG_OTGSC_IDIS_SHIFT                    16u
#define UOTG_OTGSC_IDIS_WIDTH                    1u
#define UOTG_OTGSC_IDIS(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_IDIS_SHIFT))&UOTG_OTGSC_IDIS_MASK)
#define UOTG_OTGSC_AVVIS_MASK                    0x20000u
#define UOTG_OTGSC_AVVIS_SHIFT                   17u
#define UOTG_OTGSC_AVVIS_WIDTH                   1u
#define UOTG_OTGSC_AVVIS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_AVVIS_SHIFT))&UOTG_OTGSC_AVVIS_MASK)
#define UOTG_OTGSC_ASVIS_MASK                    0x40000u
#define UOTG_OTGSC_ASVIS_SHIFT                   18u
#define UOTG_OTGSC_ASVIS_WIDTH                   1u
#define UOTG_OTGSC_ASVIS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_ASVIS_SHIFT))&UOTG_OTGSC_ASVIS_MASK)
#define UOTG_OTGSC_BSVIS_MASK                    0x80000u
#define UOTG_OTGSC_BSVIS_SHIFT                   19u
#define UOTG_OTGSC_BSVIS_WIDTH                   1u
#define UOTG_OTGSC_BSVIS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_BSVIS_SHIFT))&UOTG_OTGSC_BSVIS_MASK)
#define UOTG_OTGSC_BSEIS_MASK                    0x100000u
#define UOTG_OTGSC_BSEIS_SHIFT                   20u
#define UOTG_OTGSC_BSEIS_WIDTH                   1u
#define UOTG_OTGSC_BSEIS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_BSEIS_SHIFT))&UOTG_OTGSC_BSEIS_MASK)
#define UOTG_OTGSC_TIMIS_MASK                    0x200000u
#define UOTG_OTGSC_TIMIS_SHIFT                   21u
#define UOTG_OTGSC_TIMIS_WIDTH                   1u
#define UOTG_OTGSC_TIMIS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_TIMIS_SHIFT))&UOTG_OTGSC_TIMIS_MASK)
#define UOTG_OTGSC_DPIS_MASK                     0x400000u
#define UOTG_OTGSC_DPIS_SHIFT                    22u
#define UOTG_OTGSC_DPIS_WIDTH                    1u
#define UOTG_OTGSC_DPIS(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_DPIS_SHIFT))&UOTG_OTGSC_DPIS_MASK)
#define UOTG_OTGSC_IDIE_MASK                     0x1000000u
#define UOTG_OTGSC_IDIE_SHIFT                    24u
#define UOTG_OTGSC_IDIE_WIDTH                    1u
#define UOTG_OTGSC_IDIE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_IDIE_SHIFT))&UOTG_OTGSC_IDIE_MASK)
#define UOTG_OTGSC_AVVIE_MASK                    0x2000000u
#define UOTG_OTGSC_AVVIE_SHIFT                   25u
#define UOTG_OTGSC_AVVIE_WIDTH                   1u
#define UOTG_OTGSC_AVVIE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_AVVIE_SHIFT))&UOTG_OTGSC_AVVIE_MASK)
#define UOTG_OTGSC_ASVIE_MASK                    0x4000000u
#define UOTG_OTGSC_ASVIE_SHIFT                   26u
#define UOTG_OTGSC_ASVIE_WIDTH                   1u
#define UOTG_OTGSC_ASVIE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_ASVIE_SHIFT))&UOTG_OTGSC_ASVIE_MASK)
#define UOTG_OTGSC_BSVIE_MASK                    0x8000000u
#define UOTG_OTGSC_BSVIE_SHIFT                   27u
#define UOTG_OTGSC_BSVIE_WIDTH                   1u
#define UOTG_OTGSC_BSVIE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_BSVIE_SHIFT))&UOTG_OTGSC_BSVIE_MASK)
#define UOTG_OTGSC_BSEIE_MASK                    0x10000000u
#define UOTG_OTGSC_BSEIE_SHIFT                   28u
#define UOTG_OTGSC_BSEIE_WIDTH                   1u
#define UOTG_OTGSC_BSEIE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_BSEIE_SHIFT))&UOTG_OTGSC_BSEIE_MASK)
#define UOTG_OTGSC_TIMIE_MASK                    0x20000000u
#define UOTG_OTGSC_TIMIE_SHIFT                   29u
#define UOTG_OTGSC_TIMIE_WIDTH                   1u
#define UOTG_OTGSC_TIMIE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_TIMIE_SHIFT))&UOTG_OTGSC_TIMIE_MASK)
#define UOTG_OTGSC_DPIE_MASK                     0x40000000u
#define UOTG_OTGSC_DPIE_SHIFT                    30u
#define UOTG_OTGSC_DPIE_WIDTH                    1u
#define UOTG_OTGSC_DPIE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_OTGSC_DPIE_SHIFT))&UOTG_OTGSC_DPIE_MASK)
/* USBDMODE Bit Fields */
#define UOTG_USBDMODE_CM_MASK                    0x3u
#define UOTG_USBDMODE_CM_SHIFT                   0u
#define UOTG_USBDMODE_CM_WIDTH                   2u
#define UOTG_USBDMODE_CM(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_CM_SHIFT))&UOTG_USBDMODE_CM_MASK)
#define UOTG_USBDMODE_ES_MASK                    0x4u
#define UOTG_USBDMODE_ES_SHIFT                   2u
#define UOTG_USBDMODE_ES_WIDTH                   1u
#define UOTG_USBDMODE_ES(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_ES_SHIFT))&UOTG_USBDMODE_ES_MASK)
#define UOTG_USBDMODE_SLOM_MASK                  0x8u
#define UOTG_USBDMODE_SLOM_SHIFT                 3u
#define UOTG_USBDMODE_SLOM_WIDTH                 1u
#define UOTG_USBDMODE_SLOM(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_SLOM_SHIFT))&UOTG_USBDMODE_SLOM_MASK)
#define UOTG_USBDMODE_SDIS_MASK                  0x10u
#define UOTG_USBDMODE_SDIS_SHIFT                 4u
#define UOTG_USBDMODE_SDIS_WIDTH                 1u
#define UOTG_USBDMODE_SDIS(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_SDIS_SHIFT))&UOTG_USBDMODE_SDIS_MASK)
#define UOTG_USBDMODE_TXHSD_MASK                 0x7800u
#define UOTG_USBDMODE_TXHSD_SHIFT                11u
#define UOTG_USBDMODE_TXHSD_WIDTH                4u
#define UOTG_USBDMODE_TXHSD(x)                   (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_TXHSD_SHIFT))&UOTG_USBDMODE_TXHSD_MASK)
#define UOTG_USBDMODE_SRT_MASK                   0x8000u
#define UOTG_USBDMODE_SRT_SHIFT                  15u
#define UOTG_USBDMODE_SRT_WIDTH                  1u
#define UOTG_USBDMODE_SRT(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_SRT_SHIFT))&UOTG_USBDMODE_SRT_MASK)
#define UOTG_USBDMODE_ALP_MASK                   0xFF0000u
#define UOTG_USBDMODE_ALP_SHIFT                  16u
#define UOTG_USBDMODE_ALP_WIDTH                  8u
#define UOTG_USBDMODE_ALP(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_USBDMODE_ALP_SHIFT))&UOTG_USBDMODE_ALP_MASK)
/* ENPSTPST Bit Fields */
#define UOTG_ENPSTPST_ENPSTPST_MASK              0xFFFFu
#define UOTG_ENPSTPST_ENPSTPST_SHIFT             0u
#define UOTG_ENPSTPST_ENPSTPST_WIDTH             16u
#define UOTG_ENPSTPST_ENPSTPST(x)                (((uint32_t)(((uint32_t)(x))<<UOTG_ENPSTPST_ENPSTPST_SHIFT))&UOTG_ENPSTPST_ENPSTPST_MASK)
/* ENDPINT Bit Fields */
#define UOTG_ENDPINT_PERB_MASK                   0xFu
#define UOTG_ENDPINT_PERB_SHIFT                  0u
#define UOTG_ENDPINT_PERB_WIDTH                  4u
#define UOTG_ENDPINT_PERB(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPINT_PERB_SHIFT))&UOTG_ENDPINT_PERB_MASK)
#define UOTG_ENDPINT_PETB_MASK                   0xF0000u
#define UOTG_ENDPINT_PETB_SHIFT                  16u
#define UOTG_ENDPINT_PETB_WIDTH                  4u
#define UOTG_ENDPINT_PETB(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPINT_PETB_SHIFT))&UOTG_ENDPINT_PETB_MASK)
/* ENDPDINT Bit Fields */
#define UOTG_ENDPDINT_FERB_MASK                  0xFu
#define UOTG_ENDPDINT_FERB_SHIFT                 0u
#define UOTG_ENDPDINT_FERB_WIDTH                 4u
#define UOTG_ENDPDINT_FERB(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPDINT_FERB_SHIFT))&UOTG_ENDPDINT_FERB_MASK)
#define UOTG_ENDPDINT_FETB_MASK                  0xF0000u
#define UOTG_ENDPDINT_FETB_SHIFT                 16u
#define UOTG_ENDPDINT_FETB_WIDTH                 4u
#define UOTG_ENDPDINT_FETB(x)                    (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPDINT_FETB_SHIFT))&UOTG_ENDPDINT_FETB_MASK)
/* ENDPST Bit Fields */
#define UOTG_ENDPST_ERBR_MASK                    0xFu
#define UOTG_ENDPST_ERBR_SHIFT                   0u
#define UOTG_ENDPST_ERBR_WIDTH                   4u
#define UOTG_ENDPST_ERBR(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPST_ERBR_SHIFT))&UOTG_ENDPST_ERBR_MASK)
#define UOTG_ENDPST_ETBR_MASK                    0xF0000u
#define UOTG_ENDPST_ETBR_SHIFT                   16u
#define UOTG_ENDPST_ETBR_WIDTH                   4u
#define UOTG_ENDPST_ETBR(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPST_ETBR_SHIFT))&UOTG_ENDPST_ETBR_MASK)
/* ENPCPLT Bit Fields */
#define UOTG_ENPCPLT_ERCE_MASK                   0xFu
#define UOTG_ENPCPLT_ERCE_SHIFT                  0u
#define UOTG_ENPCPLT_ERCE_WIDTH                  4u
#define UOTG_ENPCPLT_ERCE(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_ENPCPLT_ERCE_SHIFT))&UOTG_ENPCPLT_ERCE_MASK)
#define UOTG_ENPCPLT_ETCE_MASK                   0xF0000u
#define UOTG_ENPCPLT_ETCE_SHIFT                  16u
#define UOTG_ENPCPLT_ETCE_WIDTH                  4u
#define UOTG_ENPCPLT_ETCE(x)                     (((uint32_t)(((uint32_t)(x))<<UOTG_ENPCPLT_ETCE_SHIFT))&UOTG_ENPCPLT_ETCE_MASK)
/* ENDPTC0 Bit Fields */
#define UOTG_ENDPTC0_RXS_MASK                    0x1u
#define UOTG_ENDPTC0_RXS_SHIFT                   0u
#define UOTG_ENDPTC0_RXS_WIDTH                   1u
#define UOTG_ENDPTC0_RXS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC0_RXS_SHIFT))&UOTG_ENDPTC0_RXS_MASK)
#define UOTG_ENDPTC0_RXT_MASK                    0xCu
#define UOTG_ENDPTC0_RXT_SHIFT                   2u
#define UOTG_ENDPTC0_RXT_WIDTH                   2u
#define UOTG_ENDPTC0_RXT(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC0_RXT_SHIFT))&UOTG_ENDPTC0_RXT_MASK)
#define UOTG_ENDPTC0_RXE_MASK                    0x80u
#define UOTG_ENDPTC0_RXE_SHIFT                   7u
#define UOTG_ENDPTC0_RXE_WIDTH                   1u
#define UOTG_ENDPTC0_RXE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC0_RXE_SHIFT))&UOTG_ENDPTC0_RXE_MASK)
#define UOTG_ENDPTC0_TXS_MASK                    0x10000u
#define UOTG_ENDPTC0_TXS_SHIFT                   16u
#define UOTG_ENDPTC0_TXS_WIDTH                   1u
#define UOTG_ENDPTC0_TXS(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC0_TXS_SHIFT))&UOTG_ENDPTC0_TXS_MASK)
#define UOTG_ENDPTC0_TXT_MASK                    0xC0000u
#define UOTG_ENDPTC0_TXT_SHIFT                   18u
#define UOTG_ENDPTC0_TXT_WIDTH                   2u
#define UOTG_ENDPTC0_TXT(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC0_TXT_SHIFT))&UOTG_ENDPTC0_TXT_MASK)
#define UOTG_ENDPTC0_TXE_MASK                    0x800000u
#define UOTG_ENDPTC0_TXE_SHIFT                   23u
#define UOTG_ENDPTC0_TXE_WIDTH                   1u
#define UOTG_ENDPTC0_TXE(x)                      (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC0_TXE_SHIFT))&UOTG_ENDPTC0_TXE_MASK)
/* ENDPTC Bit Fields */
#define UOTG_ENDPTC_RXS_MASK                     0x1u
#define UOTG_ENDPTC_RXS_SHIFT                    0u
#define UOTG_ENDPTC_RXS_WIDTH                    1u
#define UOTG_ENDPTC_RXS(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_RXS_SHIFT))&UOTG_ENDPTC_RXS_MASK)
#define UOTG_ENDPTC_RXD_MASK                     0x2u
#define UOTG_ENDPTC_RXD_SHIFT                    1u
#define UOTG_ENDPTC_RXD_WIDTH                    1u
#define UOTG_ENDPTC_RXD(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_RXD_SHIFT))&UOTG_ENDPTC_RXD_MASK)
#define UOTG_ENDPTC_RXT_MASK                     0xCu
#define UOTG_ENDPTC_RXT_SHIFT                    2u
#define UOTG_ENDPTC_RXT_WIDTH                    2u
#define UOTG_ENDPTC_RXT(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_RXT_SHIFT))&UOTG_ENDPTC_RXT_MASK)
#define UOTG_ENDPTC_RXI_MASK                     0x20u
#define UOTG_ENDPTC_RXI_SHIFT                    5u
#define UOTG_ENDPTC_RXI_WIDTH                    1u
#define UOTG_ENDPTC_RXI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_RXI_SHIFT))&UOTG_ENDPTC_RXI_MASK)
#define UOTG_ENDPTC_RXR_MASK                     0x40u
#define UOTG_ENDPTC_RXR_SHIFT                    6u
#define UOTG_ENDPTC_RXR_WIDTH                    1u
#define UOTG_ENDPTC_RXR(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_RXR_SHIFT))&UOTG_ENDPTC_RXR_MASK)
#define UOTG_ENDPTC_RXE_MASK                     0x80u
#define UOTG_ENDPTC_RXE_SHIFT                    7u
#define UOTG_ENDPTC_RXE_WIDTH                    1u
#define UOTG_ENDPTC_RXE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_RXE_SHIFT))&UOTG_ENDPTC_RXE_MASK)
#define UOTG_ENDPTC_TXS_MASK                     0x10000u
#define UOTG_ENDPTC_TXS_SHIFT                    16u
#define UOTG_ENDPTC_TXS_WIDTH                    1u
#define UOTG_ENDPTC_TXS(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_TXS_SHIFT))&UOTG_ENDPTC_TXS_MASK)
#define UOTG_ENDPTC_TXD_MASK                     0x20000u
#define UOTG_ENDPTC_TXD_SHIFT                    17u
#define UOTG_ENDPTC_TXD_WIDTH                    1u
#define UOTG_ENDPTC_TXD(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_TXD_SHIFT))&UOTG_ENDPTC_TXD_MASK)
#define UOTG_ENDPTC_TXT_MASK                     0xC0000u
#define UOTG_ENDPTC_TXT_SHIFT                    18u
#define UOTG_ENDPTC_TXT_WIDTH                    2u
#define UOTG_ENDPTC_TXT(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_TXT_SHIFT))&UOTG_ENDPTC_TXT_MASK)
#define UOTG_ENDPTC_TXI_MASK                     0x200000u
#define UOTG_ENDPTC_TXI_SHIFT                    21u
#define UOTG_ENDPTC_TXI_WIDTH                    1u
#define UOTG_ENDPTC_TXI(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_TXI_SHIFT))&UOTG_ENDPTC_TXI_MASK)
#define UOTG_ENDPTC_TXR_MASK                     0x400000u
#define UOTG_ENDPTC_TXR_SHIFT                    22u
#define UOTG_ENDPTC_TXR_WIDTH                    1u
#define UOTG_ENDPTC_TXR(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_TXR_SHIFT))&UOTG_ENDPTC_TXR_MASK)
#define UOTG_ENDPTC_TXE_MASK                     0x800000u
#define UOTG_ENDPTC_TXE_SHIFT                    23u
#define UOTG_ENDPTC_TXE_WIDTH                    1u
#define UOTG_ENDPTC_TXE(x)                       (((uint32_t)(((uint32_t)(x))<<UOTG_ENDPTC_TXE_SHIFT))&UOTG_ENDPTC_TXE_MASK)

/*!
 * @}
 */ /* end of group UOTG_Register_Masks */


/*!
 * @}
 */ /* end of group UOTG_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- UOTGNC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTGNC_Peripheral_Access_Layer UOTGNC Peripheral Access Layer
 * @{
 */


/** UOTGNC - Size of Registers Arrays */

/** UOTGNC - Register Layout Typedef */
typedef struct {
       uint8_t RESERVED_0[512];
  __IO uint32_t CR;                                /**< Control register, offset: 0x200 */
       uint8_t RESERVED_1[12];
  __IO uint32_t ENDNMODE;                          /**< Reserved Register, offset: 0x210 */
       uint8_t RESERVED_2[8];
  __IO uint32_t ENDNMSEL;                          /**< USB endian select, offset: 0x21C */
} UOTGNC_Type, *UOTGNC_MemMapPtr;

 /** Number of instances of the UOTGNC module. */
#define UOTGNC_INSTANCE_COUNT                    (1u)


/* UOTGNC - Peripheral instance base addresses */
/** Peripheral UOTGNC base address */
#define UOTGNC_BASE                              (0xFFC90000u)
/** Peripheral UOTGNC base pointer */
#define UOTGNC                                   ((UOTGNC_Type *)UOTGNC_BASE)
/** Array initializer of UOTGNC peripheral base addresses */
#define UOTGNC_BASE_ADDRS                        { UOTGNC_BASE }
/** Array initializer of UOTGNC peripheral base pointers */
#define UOTGNC_BASE_PTRS                         { UOTGNC }

/* ----------------------------------------------------------------------------
   -- UOTGNC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup UOTGNC_Register_Masks UOTGNC Register Masks
 * @{
 */

/* CR Bit Fields */
#define UOTGNC_CR_WAKEUP_IE_MASK                 0x1u
#define UOTGNC_CR_WAKEUP_IE_SHIFT                0u
#define UOTGNC_CR_WAKEUP_IE_WIDTH                1u
#define UOTGNC_CR_WAKEUP_IE(x)                   (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_WAKEUP_IE_SHIFT))&UOTGNC_CR_WAKEUP_IE_MASK)
#define UOTGNC_CR_CORE_IE_MASK                   0x2u
#define UOTGNC_CR_CORE_IE_SHIFT                  1u
#define UOTGNC_CR_CORE_IE_WIDTH                  1u
#define UOTGNC_CR_CORE_IE(x)                     (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_CORE_IE_SHIFT))&UOTGNC_CR_CORE_IE_MASK)
#define UOTGNC_CR_PWRFLT_MASK                    0x4u
#define UOTGNC_CR_PWRFLT_SHIFT                   2u
#define UOTGNC_CR_PWRFLT_WIDTH                   1u
#define UOTGNC_CR_PWRFLT(x)                      (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_PWRFLT_SHIFT))&UOTGNC_CR_PWRFLT_MASK)
#define UOTGNC_CR_WAKEUPIC_MASK                  0x20u
#define UOTGNC_CR_WAKEUPIC_SHIFT                 5u
#define UOTGNC_CR_WAKEUPIC_WIDTH                 1u
#define UOTGNC_CR_WAKEUPIC(x)                    (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_WAKEUPIC_SHIFT))&UOTGNC_CR_WAKEUPIC_MASK)
#define UOTGNC_CR_ENDIANSWAP_MASK                0x40u
#define UOTGNC_CR_ENDIANSWAP_SHIFT               6u
#define UOTGNC_CR_ENDIANSWAP_WIDTH               1u
#define UOTGNC_CR_ENDIANSWAP(x)                  (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_ENDIANSWAP_SHIFT))&UOTGNC_CR_ENDIANSWAP_MASK)
#define UOTGNC_CR_PWRFLTEN_MASK                  0x80u
#define UOTGNC_CR_PWRFLTEN_SHIFT                 7u
#define UOTGNC_CR_PWRFLTEN_WIDTH                 1u
#define UOTGNC_CR_PWRFLTEN(x)                    (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_PWRFLTEN_SHIFT))&UOTGNC_CR_PWRFLTEN_MASK)
#define UOTGNC_CR_PWRFLTDF_MASK                  0x100u
#define UOTGNC_CR_PWRFLTDF_SHIFT                 8u
#define UOTGNC_CR_PWRFLTDF_WIDTH                 1u
#define UOTGNC_CR_PWRFLTDF(x)                    (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_PWRFLTDF_SHIFT))&UOTGNC_CR_PWRFLTDF_MASK)
#define UOTGNC_CR_WAKEUPIS_MASK                  0x200u
#define UOTGNC_CR_WAKEUPIS_SHIFT                 9u
#define UOTGNC_CR_WAKEUPIS_WIDTH                 1u
#define UOTGNC_CR_WAKEUPIS(x)                    (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_WAKEUPIS_SHIFT))&UOTGNC_CR_WAKEUPIS_MASK)
#define UOTGNC_CR_UCMEMOD_MASK                   0x4000u
#define UOTGNC_CR_UCMEMOD_SHIFT                  14u
#define UOTGNC_CR_UCMEMOD_WIDTH                  1u
#define UOTGNC_CR_UCMEMOD(x)                     (((uint32_t)(((uint32_t)(x))<<UOTGNC_CR_UCMEMOD_SHIFT))&UOTGNC_CR_UCMEMOD_MASK)
/* ENDNMSEL Bit Fields */
#define UOTGNC_ENDNMSEL_ENDNMSEL_MASK            0xFFFFFFFFu
#define UOTGNC_ENDNMSEL_ENDNMSEL_SHIFT           0u
#define UOTGNC_ENDNMSEL_ENDNMSEL_WIDTH           32u
#define UOTGNC_ENDNMSEL_ENDNMSEL(x)              (((uint32_t)(((uint32_t)(x))<<UOTGNC_ENDNMSEL_ENDNMSEL_SHIFT))&UOTGNC_ENDNMSEL_ENDNMSEL_MASK)

/*!
 * @}
 */ /* end of group UOTGNC_Register_Masks */


/*!
 * @}
 */ /* end of group UOTGNC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- WKPU Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WKPU_Peripheral_Access_Layer WKPU Peripheral Access Layer
 * @{
 */


/** WKPU - Size of Registers Arrays */

/** WKPU - Register Layout Typedef */
typedef struct {
  __IO uint32_t NSR;                               /**< NMI Status Flag Register, offset: 0x0 */
       uint8_t RESERVED_0[4];
  __IO uint32_t NCR;                               /**< NMI Configuration Register, offset: 0x8 */
       uint8_t RESERVED_1[8];
  __IO uint32_t WISR;                              /**< Wakeup/Interrupt Status Flag Register, offset: 0x14 */
  __IO uint32_t IRER;                              /**< Interrupt Request Enable Register, offset: 0x18 */
  __IO uint32_t WRER;                              /**< Wakeup Request Enable Register, offset: 0x1C */
       uint8_t RESERVED_2[8];
  __IO uint32_t WIREER;                            /**< Wakeup/Interrupt Rising-Edge Event Enable Register, offset: 0x28 */
  __IO uint32_t WIFEER;                            /**< Wakeup/Interrupt Falling-Edge Event Enable Register, offset: 0x2C */
  __IO uint32_t WIFER;                             /**< Wakeup/Interrupt Filter Enable Register, offset: 0x30 */
  __IO uint32_t WIPER;                             /**< Wakeup/Interrupt Pull Enable Register, offset: 0x34 */
} WKPU_Type, *WKPU_MemMapPtr;

 /** Number of instances of the WKPU module. */
#define WKPU_INSTANCE_COUNT                      (1u)


/* WKPU - Peripheral instance base addresses */
/** Peripheral WKPU base address */
#define WKPU_BASE                                (0xFFF98000u)
/** Peripheral WKPU base pointer */
#define WKPU                                     ((WKPU_Type *)WKPU_BASE)
/** Array initializer of WKPU peripheral base addresses */
#define WKPU_BASE_ADDRS                          { WKPU_BASE }
/** Array initializer of WKPU peripheral base pointers */
#define WKPU_BASE_PTRS                           { WKPU }
/** Interrupt vectors for the WKPU peripheral type */
#define WKPU_IRQS                                { WKPU_07_00_IRQn, WKPU_15_08_IRQn, WKPU_23_16_IRQn, WKPU_31_24_IRQn }

/* ----------------------------------------------------------------------------
   -- WKPU Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup WKPU_Register_Masks WKPU Register Masks
 * @{
 */

/* NSR Bit Fields */
#define WKPU_NSR_ROVF_MASK                       0x40u
#define WKPU_NSR_ROVF_SHIFT                      6u
#define WKPU_NSR_ROVF_WIDTH                      1u
#define WKPU_NSR_ROVF(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_ROVF_SHIFT))&WKPU_NSR_ROVF_MASK)
#define WKPU_NSR_RIF_MASK                        0x80u
#define WKPU_NSR_RIF_SHIFT                       7u
#define WKPU_NSR_RIF_WIDTH                       1u
#define WKPU_NSR_RIF(x)                          (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_RIF_SHIFT))&WKPU_NSR_RIF_MASK)
#define WKPU_NSR_NOVF2_MASK                      0x4000u
#define WKPU_NSR_NOVF2_SHIFT                     14u
#define WKPU_NSR_NOVF2_WIDTH                     1u
#define WKPU_NSR_NOVF2(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NOVF2_SHIFT))&WKPU_NSR_NOVF2_MASK)
#define WKPU_NSR_NIF2_MASK                       0x8000u
#define WKPU_NSR_NIF2_SHIFT                      15u
#define WKPU_NSR_NIF2_WIDTH                      1u
#define WKPU_NSR_NIF2(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NIF2_SHIFT))&WKPU_NSR_NIF2_MASK)
#define WKPU_NSR_NOVF1_MASK                      0x400000u
#define WKPU_NSR_NOVF1_SHIFT                     22u
#define WKPU_NSR_NOVF1_WIDTH                     1u
#define WKPU_NSR_NOVF1(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NOVF1_SHIFT))&WKPU_NSR_NOVF1_MASK)
#define WKPU_NSR_NIF1_MASK                       0x800000u
#define WKPU_NSR_NIF1_SHIFT                      23u
#define WKPU_NSR_NIF1_WIDTH                      1u
#define WKPU_NSR_NIF1(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NIF1_SHIFT))&WKPU_NSR_NIF1_MASK)
#define WKPU_NSR_NOVF0_MASK                      0x40000000u
#define WKPU_NSR_NOVF0_SHIFT                     30u
#define WKPU_NSR_NOVF0_WIDTH                     1u
#define WKPU_NSR_NOVF0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NOVF0_SHIFT))&WKPU_NSR_NOVF0_MASK)
#define WKPU_NSR_NIF0_MASK                       0x80000000u
#define WKPU_NSR_NIF0_SHIFT                      31u
#define WKPU_NSR_NIF0_WIDTH                      1u
#define WKPU_NSR_NIF0(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NSR_NIF0_SHIFT))&WKPU_NSR_NIF0_MASK)
/* NCR Bit Fields */
#define WKPU_NCR_RFEE_MASK                       0x2u
#define WKPU_NCR_RFEE_SHIFT                      1u
#define WKPU_NCR_RFEE_WIDTH                      1u
#define WKPU_NCR_RFEE(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_RFEE_SHIFT))&WKPU_NCR_RFEE_MASK)
#define WKPU_NCR_RREE_MASK                       0x4u
#define WKPU_NCR_RREE_SHIFT                      2u
#define WKPU_NCR_RREE_WIDTH                      1u
#define WKPU_NCR_RREE(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_RREE_SHIFT))&WKPU_NCR_RREE_MASK)
#define WKPU_NCR_RWRE_MASK                       0x10u
#define WKPU_NCR_RWRE_SHIFT                      4u
#define WKPU_NCR_RWRE_WIDTH                      1u
#define WKPU_NCR_RWRE(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_RWRE_SHIFT))&WKPU_NCR_RWRE_MASK)
#define WKPU_NCR_RDSS_MASK                       0x60u
#define WKPU_NCR_RDSS_SHIFT                      5u
#define WKPU_NCR_RDSS_WIDTH                      2u
#define WKPU_NCR_RDSS(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_RDSS_SHIFT))&WKPU_NCR_RDSS_MASK)
#define WKPU_NCR_RLOCK_MASK                      0x80u
#define WKPU_NCR_RLOCK_SHIFT                     7u
#define WKPU_NCR_RLOCK_WIDTH                     1u
#define WKPU_NCR_RLOCK(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_RLOCK_SHIFT))&WKPU_NCR_RLOCK_MASK)
#define WKPU_NCR_NFEE2_MASK                      0x200u
#define WKPU_NCR_NFEE2_SHIFT                     9u
#define WKPU_NCR_NFEE2_WIDTH                     1u
#define WKPU_NCR_NFEE2(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NFEE2_SHIFT))&WKPU_NCR_NFEE2_MASK)
#define WKPU_NCR_NREE2_MASK                      0x400u
#define WKPU_NCR_NREE2_SHIFT                     10u
#define WKPU_NCR_NREE2_WIDTH                     1u
#define WKPU_NCR_NREE2(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NREE2_SHIFT))&WKPU_NCR_NREE2_MASK)
#define WKPU_NCR_NWRE2_MASK                      0x1000u
#define WKPU_NCR_NWRE2_SHIFT                     12u
#define WKPU_NCR_NWRE2_WIDTH                     1u
#define WKPU_NCR_NWRE2(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NWRE2_SHIFT))&WKPU_NCR_NWRE2_MASK)
#define WKPU_NCR_NDSS2_MASK                      0x6000u
#define WKPU_NCR_NDSS2_SHIFT                     13u
#define WKPU_NCR_NDSS2_WIDTH                     2u
#define WKPU_NCR_NDSS2(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NDSS2_SHIFT))&WKPU_NCR_NDSS2_MASK)
#define WKPU_NCR_NLOCK2_MASK                     0x8000u
#define WKPU_NCR_NLOCK2_SHIFT                    15u
#define WKPU_NCR_NLOCK2_WIDTH                    1u
#define WKPU_NCR_NLOCK2(x)                       (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NLOCK2_SHIFT))&WKPU_NCR_NLOCK2_MASK)
#define WKPU_NCR_NFEE1_MASK                      0x20000u
#define WKPU_NCR_NFEE1_SHIFT                     17u
#define WKPU_NCR_NFEE1_WIDTH                     1u
#define WKPU_NCR_NFEE1(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NFEE1_SHIFT))&WKPU_NCR_NFEE1_MASK)
#define WKPU_NCR_NREE1_MASK                      0x40000u
#define WKPU_NCR_NREE1_SHIFT                     18u
#define WKPU_NCR_NREE1_WIDTH                     1u
#define WKPU_NCR_NREE1(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NREE1_SHIFT))&WKPU_NCR_NREE1_MASK)
#define WKPU_NCR_NWRE1_MASK                      0x100000u
#define WKPU_NCR_NWRE1_SHIFT                     20u
#define WKPU_NCR_NWRE1_WIDTH                     1u
#define WKPU_NCR_NWRE1(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NWRE1_SHIFT))&WKPU_NCR_NWRE1_MASK)
#define WKPU_NCR_NDSS1_MASK                      0x600000u
#define WKPU_NCR_NDSS1_SHIFT                     21u
#define WKPU_NCR_NDSS1_WIDTH                     2u
#define WKPU_NCR_NDSS1(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NDSS1_SHIFT))&WKPU_NCR_NDSS1_MASK)
#define WKPU_NCR_NLOCK1_MASK                     0x800000u
#define WKPU_NCR_NLOCK1_SHIFT                    23u
#define WKPU_NCR_NLOCK1_WIDTH                    1u
#define WKPU_NCR_NLOCK1(x)                       (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NLOCK1_SHIFT))&WKPU_NCR_NLOCK1_MASK)
#define WKPU_NCR_NFE0_MASK                       0x1000000u
#define WKPU_NCR_NFE0_SHIFT                      24u
#define WKPU_NCR_NFE0_WIDTH                      1u
#define WKPU_NCR_NFE0(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NFE0_SHIFT))&WKPU_NCR_NFE0_MASK)
#define WKPU_NCR_NFEE0_MASK                      0x2000000u
#define WKPU_NCR_NFEE0_SHIFT                     25u
#define WKPU_NCR_NFEE0_WIDTH                     1u
#define WKPU_NCR_NFEE0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NFEE0_SHIFT))&WKPU_NCR_NFEE0_MASK)
#define WKPU_NCR_NREE0_MASK                      0x4000000u
#define WKPU_NCR_NREE0_SHIFT                     26u
#define WKPU_NCR_NREE0_WIDTH                     1u
#define WKPU_NCR_NREE0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NREE0_SHIFT))&WKPU_NCR_NREE0_MASK)
#define WKPU_NCR_NWRE0_MASK                      0x10000000u
#define WKPU_NCR_NWRE0_SHIFT                     28u
#define WKPU_NCR_NWRE0_WIDTH                     1u
#define WKPU_NCR_NWRE0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NWRE0_SHIFT))&WKPU_NCR_NWRE0_MASK)
#define WKPU_NCR_NDSS0_MASK                      0x60000000u
#define WKPU_NCR_NDSS0_SHIFT                     29u
#define WKPU_NCR_NDSS0_WIDTH                     2u
#define WKPU_NCR_NDSS0(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NDSS0_SHIFT))&WKPU_NCR_NDSS0_MASK)
#define WKPU_NCR_NLOCK0_MASK                     0x80000000u
#define WKPU_NCR_NLOCK0_SHIFT                    31u
#define WKPU_NCR_NLOCK0_WIDTH                    1u
#define WKPU_NCR_NLOCK0(x)                       (((uint32_t)(((uint32_t)(x))<<WKPU_NCR_NLOCK0_SHIFT))&WKPU_NCR_NLOCK0_MASK)
/* WISR Bit Fields */
#define WKPU_WISR_EIF_MASK                       0xFFFFFFFFu
#define WKPU_WISR_EIF_SHIFT                      0u
#define WKPU_WISR_EIF_WIDTH                      32u
#define WKPU_WISR_EIF(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_WISR_EIF_SHIFT))&WKPU_WISR_EIF_MASK)
/* IRER Bit Fields */
#define WKPU_IRER_EIRE_MASK                      0xFFFFFFFFu
#define WKPU_IRER_EIRE_SHIFT                     0u
#define WKPU_IRER_EIRE_WIDTH                     32u
#define WKPU_IRER_EIRE(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_IRER_EIRE_SHIFT))&WKPU_IRER_EIRE_MASK)
/* WRER Bit Fields */
#define WKPU_WRER_WRE_MASK                       0xFFFFFFFFu
#define WKPU_WRER_WRE_SHIFT                      0u
#define WKPU_WRER_WRE_WIDTH                      32u
#define WKPU_WRER_WRE(x)                         (((uint32_t)(((uint32_t)(x))<<WKPU_WRER_WRE_SHIFT))&WKPU_WRER_WRE_MASK)
/* WIREER Bit Fields */
#define WKPU_WIREER_IREE_MASK                    0xFFFFFFFFu
#define WKPU_WIREER_IREE_SHIFT                   0u
#define WKPU_WIREER_IREE_WIDTH                   32u
#define WKPU_WIREER_IREE(x)                      (((uint32_t)(((uint32_t)(x))<<WKPU_WIREER_IREE_SHIFT))&WKPU_WIREER_IREE_MASK)
/* WIFEER Bit Fields */
#define WKPU_WIFEER_IFEEx_MASK                   0xFFFFFFFFu
#define WKPU_WIFEER_IFEEx_SHIFT                  0u
#define WKPU_WIFEER_IFEEx_WIDTH                  32u
#define WKPU_WIFEER_IFEEx(x)                     (((uint32_t)(((uint32_t)(x))<<WKPU_WIFEER_IFEEx_SHIFT))&WKPU_WIFEER_IFEEx_MASK)
/* WIFER Bit Fields */
#define WKPU_WIFER_IFE_MASK                      0xFFFFFFFFu
#define WKPU_WIFER_IFE_SHIFT                     0u
#define WKPU_WIFER_IFE_WIDTH                     32u
#define WKPU_WIFER_IFE(x)                        (((uint32_t)(((uint32_t)(x))<<WKPU_WIFER_IFE_SHIFT))&WKPU_WIFER_IFE_MASK)
/* WIPER Bit Fields */
#define WKPU_WIPER_IPUE_MASK                     0xFFFFFFFFu
#define WKPU_WIPER_IPUE_SHIFT                    0u
#define WKPU_WIPER_IPUE_WIDTH                    32u
#define WKPU_WIPER_IPUE(x)                       (((uint32_t)(((uint32_t)(x))<<WKPU_WIPER_IPUE_SHIFT))&WKPU_WIPER_IPUE_MASK)

/*!
 * @}
 */ /* end of group WKPU_Register_Masks */


/*!
 * @}
 */ /* end of group WKPU_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- XOSC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XOSC_Peripheral_Access_Layer XOSC Peripheral Access Layer
 * @{
 */


/** XOSC - Size of Registers Arrays */

/** XOSC - Register Layout Typedef */
typedef struct {
  __IO uint32_t CTL;                               /**< XOSC Control Register, offset: 0x0 */
} XOSC_Type, *XOSC_MemMapPtr;

 /** Number of instances of the XOSC module. */
#define XOSC_INSTANCE_COUNT                      (1u)


/* XOSC - Peripheral instance base addresses */
/** Peripheral XOSC base address */
#define XOSC_BASE                                (0xFFFB0040u)
/** Peripheral XOSC base pointer */
#define XOSC                                     ((XOSC_Type *)XOSC_BASE)
/** Array initializer of XOSC peripheral base addresses */
#define XOSC_BASE_ADDRS                          { XOSC_BASE }
/** Array initializer of XOSC peripheral base pointers */
#define XOSC_BASE_PTRS                           { XOSC }

/* ----------------------------------------------------------------------------
   -- XOSC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup XOSC_Register_Masks XOSC Register Masks
 * @{
 */

/* CTL Bit Fields */
#define XOSC_CTL_I_OSC_MASK                      0x80u
#define XOSC_CTL_I_OSC_SHIFT                     7u
#define XOSC_CTL_I_OSC_WIDTH                     1u
#define XOSC_CTL_I_OSC(x)                        (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_I_OSC_SHIFT))&XOSC_CTL_I_OSC_MASK)
#define XOSC_CTL_M_OSC_MASK                      0x8000u
#define XOSC_CTL_M_OSC_SHIFT                     15u
#define XOSC_CTL_M_OSC_WIDTH                     1u
#define XOSC_CTL_M_OSC(x)                        (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_M_OSC_SHIFT))&XOSC_CTL_M_OSC_MASK)
#define XOSC_CTL_EOCV_MASK                       0xFF0000u
#define XOSC_CTL_EOCV_SHIFT                      16u
#define XOSC_CTL_EOCV_WIDTH                      8u
#define XOSC_CTL_EOCV(x)                         (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_EOCV_SHIFT))&XOSC_CTL_EOCV_MASK)
#define XOSC_CTL_MON_MASK                        0x20000000u
#define XOSC_CTL_MON_SHIFT                       29u
#define XOSC_CTL_MON_WIDTH                       1u
#define XOSC_CTL_MON(x)                          (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_MON_SHIFT))&XOSC_CTL_MON_MASK)
#define XOSC_CTL_OSCM_MASK                       0x40000000u
#define XOSC_CTL_OSCM_SHIFT                      30u
#define XOSC_CTL_OSCM_WIDTH                      1u
#define XOSC_CTL_OSCM(x)                         (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_OSCM_SHIFT))&XOSC_CTL_OSCM_MASK)
#define XOSC_CTL_OSCBYP_MASK                     0x80000000u
#define XOSC_CTL_OSCBYP_SHIFT                    31u
#define XOSC_CTL_OSCBYP_WIDTH                    1u
#define XOSC_CTL_OSCBYP(x)                       (((uint32_t)(((uint32_t)(x))<<XOSC_CTL_OSCBYP_SHIFT))&XOSC_CTL_OSCBYP_MASK)

/*!
 * @}
 */ /* end of group XOSC_Register_Masks */


/*!
 * @}
 */ /* end of group XOSC_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- eMIOS Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup eMIOS_Peripheral_Access_Layer eMIOS Peripheral Access Layer
 * @{
 */


/** eMIOS - Size of Registers Arrays */
#define eMIOS_UC_COUNT                           32u

/** eMIOS - Register Layout Typedef */
typedef struct {
  __IO uint32_t MCR;                               /**< eMIOS Module Configuration Register, offset: 0x0 */
  __IO uint32_t GFLAG;                             /**< eMIOS Global FLAG Register, offset: 0x4 */
  __IO uint32_t OUDIS;                             /**< eMIOS Output Update Disable register, offset: 0x8 */
  __IO uint32_t UCDIS;                             /**< eMIOS Disable Channel register, offset: 0xC */
       uint8_t RESERVED_0[16];
  struct {                                         /* offset: 0x20, array step: 0x20 */
    __IO uint32_t A;                                 /**< eMIOS UC A register n, array offset: 0x20, array step: 0x20 */
    __IO uint32_t B;                                 /**< eMIOS UC B register n, array offset: 0x24, array step: 0x20 */
    __IO uint32_t CNT;                               /**< eMIOS CNT register n, array offset: 0x28, array step: 0x20 */
    __IO uint32_t C;                                 /**< eMIOS UC Control register n, array offset: 0x2C, array step: 0x20 */
    __IO uint32_t S;                                 /**< eMIOS UC Status register n, array offset: 0x30, array step: 0x20 */
    __IO uint32_t ALTA;                              /**< eMIOS Alternate Address register n, array offset: 0x34, array step: 0x20 */
    __IO uint32_t C2;                                /**< eMIOS UC Control 2 register n, array offset: 0x38, array step: 0x20 */
         uint8_t RESERVED_0[4];
  } UC[eMIOS_UC_COUNT];
} eMIOS_Type, *eMIOS_MemMapPtr;

 /** Number of instances of the eMIOS module. */
#define eMIOS_INSTANCE_COUNT                     (3u)


/* eMIOS - Peripheral instance base addresses */
/** Peripheral eMIOS_0 base address */
#define eMIOS_0_BASE                             (0xFFC38000u)
/** Peripheral eMIOS_0 base pointer */
#define eMIOS_0                                  ((eMIOS_Type *)eMIOS_0_BASE)
/** Peripheral eMIOS_1 base address */
#define eMIOS_1_BASE                             (0xFBC38000u)
/** Peripheral eMIOS_1 base pointer */
#define eMIOS_1                                  ((eMIOS_Type *)eMIOS_1_BASE)
/** Peripheral eMIOS_2 base address */
#define eMIOS_2_BASE                             (0xFFC3C000u)
/** Peripheral eMIOS_2 base pointer */
#define eMIOS_2                                  ((eMIOS_Type *)eMIOS_2_BASE)
/** Array initializer of eMIOS peripheral base addresses */
#define eMIOS_BASE_ADDRS                         { eMIOS_0_BASE, eMIOS_1_BASE, eMIOS_2_BASE }
/** Array initializer of eMIOS peripheral base pointers */
#define eMIOS_BASE_PTRS                          { eMIOS_0, eMIOS_1, eMIOS_2 }

/* ----------------------------------------------------------------------------
   -- eMIOS Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup eMIOS_Register_Masks eMIOS Register Masks
 * @{
 */

/* MCR Bit Fields */
#define eMIOS_MCR_GPRE_MASK                      0xFF00u
#define eMIOS_MCR_GPRE_SHIFT                     8u
#define eMIOS_MCR_GPRE_WIDTH                     8u
#define eMIOS_MCR_GPRE(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_MCR_GPRE_SHIFT))&eMIOS_MCR_GPRE_MASK)
#define eMIOS_MCR_GPREN_MASK                     0x4000000u
#define eMIOS_MCR_GPREN_SHIFT                    26u
#define eMIOS_MCR_GPREN_WIDTH                    1u
#define eMIOS_MCR_GPREN(x)                       (((uint32_t)(((uint32_t)(x))<<eMIOS_MCR_GPREN_SHIFT))&eMIOS_MCR_GPREN_MASK)
#define eMIOS_MCR_ETB_MASK                       0x8000000u
#define eMIOS_MCR_ETB_SHIFT                      27u
#define eMIOS_MCR_ETB_WIDTH                      1u
#define eMIOS_MCR_ETB(x)                         (((uint32_t)(((uint32_t)(x))<<eMIOS_MCR_ETB_SHIFT))&eMIOS_MCR_ETB_MASK)
#define eMIOS_MCR_GTBE_MASK                      0x10000000u
#define eMIOS_MCR_GTBE_SHIFT                     28u
#define eMIOS_MCR_GTBE_WIDTH                     1u
#define eMIOS_MCR_GTBE(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_MCR_GTBE_SHIFT))&eMIOS_MCR_GTBE_MASK)
#define eMIOS_MCR_FRZ_MASK                       0x20000000u
#define eMIOS_MCR_FRZ_SHIFT                      29u
#define eMIOS_MCR_FRZ_WIDTH                      1u
#define eMIOS_MCR_FRZ(x)                         (((uint32_t)(((uint32_t)(x))<<eMIOS_MCR_FRZ_SHIFT))&eMIOS_MCR_FRZ_MASK)
#define eMIOS_MCR_MDIS_MASK                      0x40000000u
#define eMIOS_MCR_MDIS_SHIFT                     30u
#define eMIOS_MCR_MDIS_WIDTH                     1u
#define eMIOS_MCR_MDIS(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_MCR_MDIS_SHIFT))&eMIOS_MCR_MDIS_MASK)
/* GFLAG Bit Fields */
#define eMIOS_GFLAG_F31_F0_MASK                  0xFFFFFFFFu
#define eMIOS_GFLAG_F31_F0_SHIFT                 0u
#define eMIOS_GFLAG_F31_F0_WIDTH                 32u
#define eMIOS_GFLAG_F31_F0(x)                    (((uint32_t)(((uint32_t)(x))<<eMIOS_GFLAG_F31_F0_SHIFT))&eMIOS_GFLAG_F31_F0_MASK)
/* OUDIS Bit Fields */
#define eMIOS_OUDIS_OU31_OU0_MASK                0xFFFFFFFFu
#define eMIOS_OUDIS_OU31_OU0_SHIFT               0u
#define eMIOS_OUDIS_OU31_OU0_WIDTH               32u
#define eMIOS_OUDIS_OU31_OU0(x)                  (((uint32_t)(((uint32_t)(x))<<eMIOS_OUDIS_OU31_OU0_SHIFT))&eMIOS_OUDIS_OU31_OU0_MASK)
/* UCDIS Bit Fields */
#define eMIOS_UCDIS_CHDIS31_CHDIS0_MASK          0xFFFFFFFFu
#define eMIOS_UCDIS_CHDIS31_CHDIS0_SHIFT         0u
#define eMIOS_UCDIS_CHDIS31_CHDIS0_WIDTH         32u
#define eMIOS_UCDIS_CHDIS31_CHDIS0(x)            (((uint32_t)(((uint32_t)(x))<<eMIOS_UCDIS_CHDIS31_CHDIS0_SHIFT))&eMIOS_UCDIS_CHDIS31_CHDIS0_MASK)
/* A Bit Fields */
#define eMIOS_A_A_MASK                           0xFFFFFFu
#define eMIOS_A_A_SHIFT                          0u
#define eMIOS_A_A_WIDTH                          24u
#define eMIOS_A_A(x)                             (((uint32_t)(((uint32_t)(x))<<eMIOS_A_A_SHIFT))&eMIOS_A_A_MASK)
/* B Bit Fields */
#define eMIOS_B_B_MASK                           0xFFFFFFu
#define eMIOS_B_B_SHIFT                          0u
#define eMIOS_B_B_WIDTH                          24u
#define eMIOS_B_B(x)                             (((uint32_t)(((uint32_t)(x))<<eMIOS_B_B_SHIFT))&eMIOS_B_B_MASK)
/* CNT Bit Fields */
#define eMIOS_CNT_C_MASK                         0xFFFFu
#define eMIOS_CNT_C_SHIFT                        0u
#define eMIOS_CNT_C_WIDTH                        16u
#define eMIOS_CNT_C(x)                           (((uint32_t)(((uint32_t)(x))<<eMIOS_CNT_C_SHIFT))&eMIOS_CNT_C_MASK)
/* C Bit Fields */
#define eMIOS_C_MODE_MASK                        0x7Fu
#define eMIOS_C_MODE_SHIFT                       0u
#define eMIOS_C_MODE_WIDTH                       7u
#define eMIOS_C_MODE(x)                          (((uint32_t)(((uint32_t)(x))<<eMIOS_C_MODE_SHIFT))&eMIOS_C_MODE_MASK)
#define eMIOS_C_EDPOL_MASK                       0x80u
#define eMIOS_C_EDPOL_SHIFT                      7u
#define eMIOS_C_EDPOL_WIDTH                      1u
#define eMIOS_C_EDPOL(x)                         (((uint32_t)(((uint32_t)(x))<<eMIOS_C_EDPOL_SHIFT))&eMIOS_C_EDPOL_MASK)
#define eMIOS_C_EDSEL_MASK                       0x100u
#define eMIOS_C_EDSEL_SHIFT                      8u
#define eMIOS_C_EDSEL_WIDTH                      1u
#define eMIOS_C_EDSEL(x)                         (((uint32_t)(((uint32_t)(x))<<eMIOS_C_EDSEL_SHIFT))&eMIOS_C_EDSEL_MASK)
#define eMIOS_C_BSL_MASK                         0x600u
#define eMIOS_C_BSL_SHIFT                        9u
#define eMIOS_C_BSL_WIDTH                        2u
#define eMIOS_C_BSL(x)                           (((uint32_t)(((uint32_t)(x))<<eMIOS_C_BSL_SHIFT))&eMIOS_C_BSL_MASK)
#define eMIOS_C_FORCMB_MASK                      0x1000u
#define eMIOS_C_FORCMB_SHIFT                     12u
#define eMIOS_C_FORCMB_WIDTH                     1u
#define eMIOS_C_FORCMB(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_C_FORCMB_SHIFT))&eMIOS_C_FORCMB_MASK)
#define eMIOS_C_FORCMA_MASK                      0x2000u
#define eMIOS_C_FORCMA_SHIFT                     13u
#define eMIOS_C_FORCMA_WIDTH                     1u
#define eMIOS_C_FORCMA(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_C_FORCMA_SHIFT))&eMIOS_C_FORCMA_MASK)
#define eMIOS_C_FEN_MASK                         0x20000u
#define eMIOS_C_FEN_SHIFT                        17u
#define eMIOS_C_FEN_WIDTH                        1u
#define eMIOS_C_FEN(x)                           (((uint32_t)(((uint32_t)(x))<<eMIOS_C_FEN_SHIFT))&eMIOS_C_FEN_MASK)
#define eMIOS_C_FCK_MASK                         0x40000u
#define eMIOS_C_FCK_SHIFT                        18u
#define eMIOS_C_FCK_WIDTH                        1u
#define eMIOS_C_FCK(x)                           (((uint32_t)(((uint32_t)(x))<<eMIOS_C_FCK_SHIFT))&eMIOS_C_FCK_MASK)
#define eMIOS_C_IF_MASK                          0x780000u
#define eMIOS_C_IF_SHIFT                         19u
#define eMIOS_C_IF_WIDTH                         4u
#define eMIOS_C_IF(x)                            (((uint32_t)(((uint32_t)(x))<<eMIOS_C_IF_SHIFT))&eMIOS_C_IF_MASK)
#define eMIOS_C_DMA_MASK                         0x1000000u
#define eMIOS_C_DMA_SHIFT                        24u
#define eMIOS_C_DMA_WIDTH                        1u
#define eMIOS_C_DMA(x)                           (((uint32_t)(((uint32_t)(x))<<eMIOS_C_DMA_SHIFT))&eMIOS_C_DMA_MASK)
#define eMIOS_C_UCPREN_MASK                      0x2000000u
#define eMIOS_C_UCPREN_SHIFT                     25u
#define eMIOS_C_UCPREN_WIDTH                     1u
#define eMIOS_C_UCPREN(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_C_UCPREN_SHIFT))&eMIOS_C_UCPREN_MASK)
#define eMIOS_C_UCPRE_MASK                       0xC000000u
#define eMIOS_C_UCPRE_SHIFT                      26u
#define eMIOS_C_UCPRE_WIDTH                      2u
#define eMIOS_C_UCPRE(x)                         (((uint32_t)(((uint32_t)(x))<<eMIOS_C_UCPRE_SHIFT))&eMIOS_C_UCPRE_MASK)
#define eMIOS_C_ODISSL_MASK                      0x30000000u
#define eMIOS_C_ODISSL_SHIFT                     28u
#define eMIOS_C_ODISSL_WIDTH                     2u
#define eMIOS_C_ODISSL(x)                        (((uint32_t)(((uint32_t)(x))<<eMIOS_C_ODISSL_SHIFT))&eMIOS_C_ODISSL_MASK)
#define eMIOS_C_ODIS_MASK                        0x40000000u
#define eMIOS_C_ODIS_SHIFT                       30u
#define eMIOS_C_ODIS_WIDTH                       1u
#define eMIOS_C_ODIS(x)                          (((uint32_t)(((uint32_t)(x))<<eMIOS_C_ODIS_SHIFT))&eMIOS_C_ODIS_MASK)
#define eMIOS_C_FREN_MASK                        0x80000000u
#define eMIOS_C_FREN_SHIFT                       31u
#define eMIOS_C_FREN_WIDTH                       1u
#define eMIOS_C_FREN(x)                          (((uint32_t)(((uint32_t)(x))<<eMIOS_C_FREN_SHIFT))&eMIOS_C_FREN_MASK)
/* S Bit Fields */
#define eMIOS_S_FLAG_MASK                        0x1u
#define eMIOS_S_FLAG_SHIFT                       0u
#define eMIOS_S_FLAG_WIDTH                       1u
#define eMIOS_S_FLAG(x)                          (((uint32_t)(((uint32_t)(x))<<eMIOS_S_FLAG_SHIFT))&eMIOS_S_FLAG_MASK)
#define eMIOS_S_UCOUT_MASK                       0x2u
#define eMIOS_S_UCOUT_SHIFT                      1u
#define eMIOS_S_UCOUT_WIDTH                      1u
#define eMIOS_S_UCOUT(x)                         (((uint32_t)(((uint32_t)(x))<<eMIOS_S_UCOUT_SHIFT))&eMIOS_S_UCOUT_MASK)
#define eMIOS_S_UCIN_MASK                        0x4u
#define eMIOS_S_UCIN_SHIFT                       2u
#define eMIOS_S_UCIN_WIDTH                       1u
#define eMIOS_S_UCIN(x)                          (((uint32_t)(((uint32_t)(x))<<eMIOS_S_UCIN_SHIFT))&eMIOS_S_UCIN_MASK)
#define eMIOS_S_OVFL_MASK                        0x8000u
#define eMIOS_S_OVFL_SHIFT                       15u
#define eMIOS_S_OVFL_WIDTH                       1u
#define eMIOS_S_OVFL(x)                          (((uint32_t)(((uint32_t)(x))<<eMIOS_S_OVFL_SHIFT))&eMIOS_S_OVFL_MASK)
#define eMIOS_S_OVR_MASK                         0x80000000u
#define eMIOS_S_OVR_SHIFT                        31u
#define eMIOS_S_OVR_WIDTH                        1u
#define eMIOS_S_OVR(x)                           (((uint32_t)(((uint32_t)(x))<<eMIOS_S_OVR_SHIFT))&eMIOS_S_OVR_MASK)
/* ALTA Bit Fields */
#define eMIOS_ALTA_ALTA_MASK                     0xFFFFFFu
#define eMIOS_ALTA_ALTA_SHIFT                    0u
#define eMIOS_ALTA_ALTA_WIDTH                    24u
#define eMIOS_ALTA_ALTA(x)                       (((uint32_t)(((uint32_t)(x))<<eMIOS_ALTA_ALTA_SHIFT))&eMIOS_ALTA_ALTA_MASK)
/* C2 Bit Fields */
#define eMIOS_C2_UCPRECLK_MASK                   0x4000u
#define eMIOS_C2_UCPRECLK_SHIFT                  14u
#define eMIOS_C2_UCPRECLK_WIDTH                  1u
#define eMIOS_C2_UCPRECLK(x)                     (((uint32_t)(((uint32_t)(x))<<eMIOS_C2_UCPRECLK_SHIFT))&eMIOS_C2_UCPRECLK_MASK)
#define eMIOS_C2_UCEXTPRE_MASK                   0xF0000u
#define eMIOS_C2_UCEXTPRE_SHIFT                  16u
#define eMIOS_C2_UCEXTPRE_WIDTH                  4u
#define eMIOS_C2_UCEXTPRE(x)                     (((uint32_t)(((uint32_t)(x))<<eMIOS_C2_UCEXTPRE_SHIFT))&eMIOS_C2_UCEXTPRE_MASK)

/*!
 * @}
 */ /* end of group eMIOS_Register_Masks */


/*!
 * @}
 */ /* end of group eMIOS_Peripheral_Access_Layer */


/* ----------------------------------------------------------------------------
   -- uSDHC Peripheral Access Layer
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup uSDHC_Peripheral_Access_Layer uSDHC Peripheral Access Layer
 * @{
 */


/** uSDHC - Size of Registers Arrays */

/** uSDHC - Register Layout Typedef */
typedef struct {
  __IO uint32_t S_ADDR;                            /**< DMA System Address, offset: 0x0 */
  __IO uint32_t BLK_ATT;                           /**< Block Attributes, offset: 0x4 */
  __IO uint32_t CMD_ARG;                           /**< Command Argument, offset: 0x8 */
  __IO uint32_t CMD_XFR_TYP;                       /**< Command Transfer Type, offset: 0xC */
  __I  uint32_t CMD_RSP0;                          /**< Command Response0, offset: 0x10 */
  __I  uint32_t CMD_RSP1;                          /**< Command Response1, offset: 0x14 */
  __I  uint32_t CMD_RSP2;                          /**< Command Response2, offset: 0x18 */
  __I  uint32_t CMD_RSP3;                          /**< Command Response3, offset: 0x1C */
  __IO uint32_t DATA_BUFF_ACC_PORT;                /**< Data Buffer Access Port, offset: 0x20 */
  __I  uint32_t PRES_STATE;                        /**< Present State, offset: 0x24 */
  __IO uint32_t PROT_CTRL;                         /**< Protocol Control, offset: 0x28 */
  __IO uint32_t SYS_CTRL;                          /**< System Control, offset: 0x2C */
  __IO uint32_t INT_STATUS;                        /**< Interrupt Status, offset: 0x30 */
  __IO uint32_t INT_STATUS_EN;                     /**< Interrupt Status Enable, offset: 0x34 */
  __IO uint32_t INT_SIGNAL_EN;                     /**< Interrupt Signal Enable, offset: 0x38 */
  __IO uint32_t AUTOCMD12_ERR_STATUS;              /**< Auto CMD12 Error Status, offset: 0x3C */
  __I  uint32_t HOST_CTRL_CAP;                     /**< Host Controller Capabilities, offset: 0x40 */
  __IO uint32_t WTMK_LVL;                          /**< Watermark Level, offset: 0x44 */
  __IO uint32_t MIX_CTRL;                          /**< Mixer Control, offset: 0x48 */
       uint8_t RESERVED_0[4];
  __IO uint32_t FORCE_EVENT;                       /**< Force Event, offset: 0x50 */
  __I  uint32_t ADMA_ERR_STATUS;                   /**< ADMA Error Status Register, offset: 0x54 */
  __IO uint32_t ADMA_SYS_ADDR;                     /**< ADMA System Address, offset: 0x58 */
       uint8_t RESERVED_1[100];
  __IO uint32_t VEND_SPEC;                         /**< Vendor Specific Register, offset: 0xC0 */
       uint8_t RESERVED_2[4];
  __IO uint32_t VEND_SPEC2;                        /**< Vendor Specific 2 Register, offset: 0xC8 */
       uint8_t RESERVED_3[48];
  __I  uint32_t HOST_CTRL_VER;                     /**< Host Controller Version, offset: 0xFC */
} uSDHC_Type, *uSDHC_MemMapPtr;

 /** Number of instances of the uSDHC module. */
#define uSDHC_INSTANCE_COUNT                     (1u)


/* uSDHC - Peripheral instance base addresses */
/** Peripheral uSDHC base address */
#define uSDHC_BASE                               (0xFFCA4000u)
/** Peripheral uSDHC base pointer */
#define uSDHC                                    ((uSDHC_Type *)uSDHC_BASE)
/** Array initializer of uSDHC peripheral base addresses */
#define uSDHC_BASE_ADDRS                         { uSDHC_BASE }
/** Array initializer of uSDHC peripheral base pointers */
#define uSDHC_BASE_PTRS                          { uSDHC }

/* ----------------------------------------------------------------------------
   -- uSDHC Register Masks
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup uSDHC_Register_Masks uSDHC Register Masks
 * @{
 */

/* S_ADDR Bit Fields */
#define uSDHC_S_ADDR_DS_ADDR_MASK                0xFFFFFFFCu
#define uSDHC_S_ADDR_DS_ADDR_SHIFT               2u
#define uSDHC_S_ADDR_DS_ADDR_WIDTH               30u
#define uSDHC_S_ADDR_DS_ADDR(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_S_ADDR_DS_ADDR_SHIFT))&uSDHC_S_ADDR_DS_ADDR_MASK)
/* BLK_ATT Bit Fields */
#define uSDHC_BLK_ATT_BLKSIZE_MASK               0x1FFFu
#define uSDHC_BLK_ATT_BLKSIZE_SHIFT              0u
#define uSDHC_BLK_ATT_BLKSIZE_WIDTH              13u
#define uSDHC_BLK_ATT_BLKSIZE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_BLK_ATT_BLKSIZE_SHIFT))&uSDHC_BLK_ATT_BLKSIZE_MASK)
#define uSDHC_BLK_ATT_BLKCNT_MASK                0xFFFF0000u
#define uSDHC_BLK_ATT_BLKCNT_SHIFT               16u
#define uSDHC_BLK_ATT_BLKCNT_WIDTH               16u
#define uSDHC_BLK_ATT_BLKCNT(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_BLK_ATT_BLKCNT_SHIFT))&uSDHC_BLK_ATT_BLKCNT_MASK)
/* CMD_ARG Bit Fields */
#define uSDHC_CMD_ARG_CMDARG_MASK                0xFFFFFFFFu
#define uSDHC_CMD_ARG_CMDARG_SHIFT               0u
#define uSDHC_CMD_ARG_CMDARG_WIDTH               32u
#define uSDHC_CMD_ARG_CMDARG(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_ARG_CMDARG_SHIFT))&uSDHC_CMD_ARG_CMDARG_MASK)
/* CMD_XFR_TYP Bit Fields */
#define uSDHC_CMD_XFR_TYP_RSPTYP_MASK            0x30000u
#define uSDHC_CMD_XFR_TYP_RSPTYP_SHIFT           16u
#define uSDHC_CMD_XFR_TYP_RSPTYP_WIDTH           2u
#define uSDHC_CMD_XFR_TYP_RSPTYP(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_XFR_TYP_RSPTYP_SHIFT))&uSDHC_CMD_XFR_TYP_RSPTYP_MASK)
#define uSDHC_CMD_XFR_TYP_CCCEN_MASK             0x80000u
#define uSDHC_CMD_XFR_TYP_CCCEN_SHIFT            19u
#define uSDHC_CMD_XFR_TYP_CCCEN_WIDTH            1u
#define uSDHC_CMD_XFR_TYP_CCCEN(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_XFR_TYP_CCCEN_SHIFT))&uSDHC_CMD_XFR_TYP_CCCEN_MASK)
#define uSDHC_CMD_XFR_TYP_CICEN_MASK             0x100000u
#define uSDHC_CMD_XFR_TYP_CICEN_SHIFT            20u
#define uSDHC_CMD_XFR_TYP_CICEN_WIDTH            1u
#define uSDHC_CMD_XFR_TYP_CICEN(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_XFR_TYP_CICEN_SHIFT))&uSDHC_CMD_XFR_TYP_CICEN_MASK)
#define uSDHC_CMD_XFR_TYP_DPSEL_MASK             0x200000u
#define uSDHC_CMD_XFR_TYP_DPSEL_SHIFT            21u
#define uSDHC_CMD_XFR_TYP_DPSEL_WIDTH            1u
#define uSDHC_CMD_XFR_TYP_DPSEL(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_XFR_TYP_DPSEL_SHIFT))&uSDHC_CMD_XFR_TYP_DPSEL_MASK)
#define uSDHC_CMD_XFR_TYP_CMDTYP_MASK            0xC00000u
#define uSDHC_CMD_XFR_TYP_CMDTYP_SHIFT           22u
#define uSDHC_CMD_XFR_TYP_CMDTYP_WIDTH           2u
#define uSDHC_CMD_XFR_TYP_CMDTYP(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_XFR_TYP_CMDTYP_SHIFT))&uSDHC_CMD_XFR_TYP_CMDTYP_MASK)
#define uSDHC_CMD_XFR_TYP_CMDINX_MASK            0x3F000000u
#define uSDHC_CMD_XFR_TYP_CMDINX_SHIFT           24u
#define uSDHC_CMD_XFR_TYP_CMDINX_WIDTH           6u
#define uSDHC_CMD_XFR_TYP_CMDINX(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_XFR_TYP_CMDINX_SHIFT))&uSDHC_CMD_XFR_TYP_CMDINX_MASK)
/* CMD_RSP0 Bit Fields */
#define uSDHC_CMD_RSP0_CMDRSP0_MASK              0xFFFFFFFFu
#define uSDHC_CMD_RSP0_CMDRSP0_SHIFT             0u
#define uSDHC_CMD_RSP0_CMDRSP0_WIDTH             32u
#define uSDHC_CMD_RSP0_CMDRSP0(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_RSP0_CMDRSP0_SHIFT))&uSDHC_CMD_RSP0_CMDRSP0_MASK)
/* CMD_RSP1 Bit Fields */
#define uSDHC_CMD_RSP1_CMDRSP1_MASK              0xFFFFFFFFu
#define uSDHC_CMD_RSP1_CMDRSP1_SHIFT             0u
#define uSDHC_CMD_RSP1_CMDRSP1_WIDTH             32u
#define uSDHC_CMD_RSP1_CMDRSP1(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_RSP1_CMDRSP1_SHIFT))&uSDHC_CMD_RSP1_CMDRSP1_MASK)
/* CMD_RSP2 Bit Fields */
#define uSDHC_CMD_RSP2_CMDRSP2_MASK              0xFFFFFFFFu
#define uSDHC_CMD_RSP2_CMDRSP2_SHIFT             0u
#define uSDHC_CMD_RSP2_CMDRSP2_WIDTH             32u
#define uSDHC_CMD_RSP2_CMDRSP2(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_RSP2_CMDRSP2_SHIFT))&uSDHC_CMD_RSP2_CMDRSP2_MASK)
/* CMD_RSP3 Bit Fields */
#define uSDHC_CMD_RSP3_CMDRSP3_MASK              0xFFFFFFFFu
#define uSDHC_CMD_RSP3_CMDRSP3_SHIFT             0u
#define uSDHC_CMD_RSP3_CMDRSP3_WIDTH             32u
#define uSDHC_CMD_RSP3_CMDRSP3(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_CMD_RSP3_CMDRSP3_SHIFT))&uSDHC_CMD_RSP3_CMDRSP3_MASK)
/* DATA_BUFF_ACC_PORT Bit Fields */
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT_MASK    0xFFFFFFFFu
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT_SHIFT   0u
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT_WIDTH   32u
#define uSDHC_DATA_BUFF_ACC_PORT_DATCONT(x)      (((uint32_t)(((uint32_t)(x))<<uSDHC_DATA_BUFF_ACC_PORT_DATCONT_SHIFT))&uSDHC_DATA_BUFF_ACC_PORT_DATCONT_MASK)
/* PRES_STATE Bit Fields */
#define uSDHC_PRES_STATE_CIHB_MASK               0x1u
#define uSDHC_PRES_STATE_CIHB_SHIFT              0u
#define uSDHC_PRES_STATE_CIHB_WIDTH              1u
#define uSDHC_PRES_STATE_CIHB(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_CIHB_SHIFT))&uSDHC_PRES_STATE_CIHB_MASK)
#define uSDHC_PRES_STATE_CDIHB_MASK              0x2u
#define uSDHC_PRES_STATE_CDIHB_SHIFT             1u
#define uSDHC_PRES_STATE_CDIHB_WIDTH             1u
#define uSDHC_PRES_STATE_CDIHB(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_CDIHB_SHIFT))&uSDHC_PRES_STATE_CDIHB_MASK)
#define uSDHC_PRES_STATE_DLA_MASK                0x4u
#define uSDHC_PRES_STATE_DLA_SHIFT               2u
#define uSDHC_PRES_STATE_DLA_WIDTH               1u
#define uSDHC_PRES_STATE_DLA(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_DLA_SHIFT))&uSDHC_PRES_STATE_DLA_MASK)
#define uSDHC_PRES_STATE_SDSTB_MASK              0x8u
#define uSDHC_PRES_STATE_SDSTB_SHIFT             3u
#define uSDHC_PRES_STATE_SDSTB_WIDTH             1u
#define uSDHC_PRES_STATE_SDSTB(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_SDSTB_SHIFT))&uSDHC_PRES_STATE_SDSTB_MASK)
#define uSDHC_PRES_STATE_BUSOFF_MASK             0x10u
#define uSDHC_PRES_STATE_BUSOFF_SHIFT            4u
#define uSDHC_PRES_STATE_BUSOFF_WIDTH            1u
#define uSDHC_PRES_STATE_BUSOFF(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_BUSOFF_SHIFT))&uSDHC_PRES_STATE_BUSOFF_MASK)
#define uSDHC_PRES_STATE_HCKOFF_MASK             0x20u
#define uSDHC_PRES_STATE_HCKOFF_SHIFT            5u
#define uSDHC_PRES_STATE_HCKOFF_WIDTH            1u
#define uSDHC_PRES_STATE_HCKOFF(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_HCKOFF_SHIFT))&uSDHC_PRES_STATE_HCKOFF_MASK)
#define uSDHC_PRES_STATE_PEROFF_MASK             0x40u
#define uSDHC_PRES_STATE_PEROFF_SHIFT            6u
#define uSDHC_PRES_STATE_PEROFF_WIDTH            1u
#define uSDHC_PRES_STATE_PEROFF(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_PEROFF_SHIFT))&uSDHC_PRES_STATE_PEROFF_MASK)
#define uSDHC_PRES_STATE_SDOFF_MASK              0x80u
#define uSDHC_PRES_STATE_SDOFF_SHIFT             7u
#define uSDHC_PRES_STATE_SDOFF_WIDTH             1u
#define uSDHC_PRES_STATE_SDOFF(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_SDOFF_SHIFT))&uSDHC_PRES_STATE_SDOFF_MASK)
#define uSDHC_PRES_STATE_WTA_MASK                0x100u
#define uSDHC_PRES_STATE_WTA_SHIFT               8u
#define uSDHC_PRES_STATE_WTA_WIDTH               1u
#define uSDHC_PRES_STATE_WTA(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_WTA_SHIFT))&uSDHC_PRES_STATE_WTA_MASK)
#define uSDHC_PRES_STATE_RTA_MASK                0x200u
#define uSDHC_PRES_STATE_RTA_SHIFT               9u
#define uSDHC_PRES_STATE_RTA_WIDTH               1u
#define uSDHC_PRES_STATE_RTA(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_RTA_SHIFT))&uSDHC_PRES_STATE_RTA_MASK)
#define uSDHC_PRES_STATE_BWEN_MASK               0x400u
#define uSDHC_PRES_STATE_BWEN_SHIFT              10u
#define uSDHC_PRES_STATE_BWEN_WIDTH              1u
#define uSDHC_PRES_STATE_BWEN(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_BWEN_SHIFT))&uSDHC_PRES_STATE_BWEN_MASK)
#define uSDHC_PRES_STATE_BREN_MASK               0x800u
#define uSDHC_PRES_STATE_BREN_SHIFT              11u
#define uSDHC_PRES_STATE_BREN_WIDTH              1u
#define uSDHC_PRES_STATE_BREN(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_BREN_SHIFT))&uSDHC_PRES_STATE_BREN_MASK)
#define uSDHC_PRES_STATE_CINST_MASK              0x10000u
#define uSDHC_PRES_STATE_CINST_SHIFT             16u
#define uSDHC_PRES_STATE_CINST_WIDTH             1u
#define uSDHC_PRES_STATE_CINST(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_CINST_SHIFT))&uSDHC_PRES_STATE_CINST_MASK)
#define uSDHC_PRES_STATE_WPSPL_MASK              0x80000u
#define uSDHC_PRES_STATE_WPSPL_SHIFT             19u
#define uSDHC_PRES_STATE_WPSPL_WIDTH             1u
#define uSDHC_PRES_STATE_WPSPL(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_WPSPL_SHIFT))&uSDHC_PRES_STATE_WPSPL_MASK)
#define uSDHC_PRES_STATE_CLSL_MASK               0x800000u
#define uSDHC_PRES_STATE_CLSL_SHIFT              23u
#define uSDHC_PRES_STATE_CLSL_WIDTH              1u
#define uSDHC_PRES_STATE_CLSL(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_CLSL_SHIFT))&uSDHC_PRES_STATE_CLSL_MASK)
#define uSDHC_PRES_STATE_DLSL_MASK               0xFF000000u
#define uSDHC_PRES_STATE_DLSL_SHIFT              24u
#define uSDHC_PRES_STATE_DLSL_WIDTH              8u
#define uSDHC_PRES_STATE_DLSL(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PRES_STATE_DLSL_SHIFT))&uSDHC_PRES_STATE_DLSL_MASK)
/* PROT_CTRL Bit Fields */
#define uSDHC_PROT_CTRL_LCTL_MASK                0x1u
#define uSDHC_PROT_CTRL_LCTL_SHIFT               0u
#define uSDHC_PROT_CTRL_LCTL_WIDTH               1u
#define uSDHC_PROT_CTRL_LCTL(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_LCTL_SHIFT))&uSDHC_PROT_CTRL_LCTL_MASK)
#define uSDHC_PROT_CTRL_DTW_MASK                 0x6u
#define uSDHC_PROT_CTRL_DTW_SHIFT                1u
#define uSDHC_PROT_CTRL_DTW_WIDTH                2u
#define uSDHC_PROT_CTRL_DTW(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_DTW_SHIFT))&uSDHC_PROT_CTRL_DTW_MASK)
#define uSDHC_PROT_CTRL_D3CD_MASK                0x8u
#define uSDHC_PROT_CTRL_D3CD_SHIFT               3u
#define uSDHC_PROT_CTRL_D3CD_WIDTH               1u
#define uSDHC_PROT_CTRL_D3CD(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_D3CD_SHIFT))&uSDHC_PROT_CTRL_D3CD_MASK)
#define uSDHC_PROT_CTRL_EMODE_MASK               0x30u
#define uSDHC_PROT_CTRL_EMODE_SHIFT              4u
#define uSDHC_PROT_CTRL_EMODE_WIDTH              2u
#define uSDHC_PROT_CTRL_EMODE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_EMODE_SHIFT))&uSDHC_PROT_CTRL_EMODE_MASK)
#define uSDHC_PROT_CTRL_CDTL_MASK                0x40u
#define uSDHC_PROT_CTRL_CDTL_SHIFT               6u
#define uSDHC_PROT_CTRL_CDTL_WIDTH               1u
#define uSDHC_PROT_CTRL_CDTL(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_CDTL_SHIFT))&uSDHC_PROT_CTRL_CDTL_MASK)
#define uSDHC_PROT_CTRL_CDSS_MASK                0x80u
#define uSDHC_PROT_CTRL_CDSS_SHIFT               7u
#define uSDHC_PROT_CTRL_CDSS_WIDTH               1u
#define uSDHC_PROT_CTRL_CDSS(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_CDSS_SHIFT))&uSDHC_PROT_CTRL_CDSS_MASK)
#define uSDHC_PROT_CTRL_DMASEL_MASK              0x300u
#define uSDHC_PROT_CTRL_DMASEL_SHIFT             8u
#define uSDHC_PROT_CTRL_DMASEL_WIDTH             2u
#define uSDHC_PROT_CTRL_DMASEL(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_DMASEL_SHIFT))&uSDHC_PROT_CTRL_DMASEL_MASK)
#define uSDHC_PROT_CTRL_SABGREQ_MASK             0x10000u
#define uSDHC_PROT_CTRL_SABGREQ_SHIFT            16u
#define uSDHC_PROT_CTRL_SABGREQ_WIDTH            1u
#define uSDHC_PROT_CTRL_SABGREQ(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_SABGREQ_SHIFT))&uSDHC_PROT_CTRL_SABGREQ_MASK)
#define uSDHC_PROT_CTRL_CREQ_MASK                0x20000u
#define uSDHC_PROT_CTRL_CREQ_SHIFT               17u
#define uSDHC_PROT_CTRL_CREQ_WIDTH               1u
#define uSDHC_PROT_CTRL_CREQ(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_CREQ_SHIFT))&uSDHC_PROT_CTRL_CREQ_MASK)
#define uSDHC_PROT_CTRL_RWCTL_MASK               0x40000u
#define uSDHC_PROT_CTRL_RWCTL_SHIFT              18u
#define uSDHC_PROT_CTRL_RWCTL_WIDTH              1u
#define uSDHC_PROT_CTRL_RWCTL(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_RWCTL_SHIFT))&uSDHC_PROT_CTRL_RWCTL_MASK)
#define uSDHC_PROT_CTRL_IABG_MASK                0x80000u
#define uSDHC_PROT_CTRL_IABG_SHIFT               19u
#define uSDHC_PROT_CTRL_IABG_WIDTH               1u
#define uSDHC_PROT_CTRL_IABG(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_IABG_SHIFT))&uSDHC_PROT_CTRL_IABG_MASK)
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_MASK     0x100000u
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_SHIFT    20u
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_WIDTH    1u
#define uSDHC_PROT_CTRL_RD_DONE_NO_8CLK(x)       (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_SHIFT))&uSDHC_PROT_CTRL_RD_DONE_NO_8CLK_MASK)
#define uSDHC_PROT_CTRL_RD_WAIT_POINT_MASK       0xE00000u
#define uSDHC_PROT_CTRL_RD_WAIT_POINT_SHIFT      21u
#define uSDHC_PROT_CTRL_RD_WAIT_POINT_WIDTH      3u
#define uSDHC_PROT_CTRL_RD_WAIT_POINT(x)         (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_RD_WAIT_POINT_SHIFT))&uSDHC_PROT_CTRL_RD_WAIT_POINT_MASK)
#define uSDHC_PROT_CTRL_WECINT_MASK              0x1000000u
#define uSDHC_PROT_CTRL_WECINT_SHIFT             24u
#define uSDHC_PROT_CTRL_WECINT_WIDTH             1u
#define uSDHC_PROT_CTRL_WECINT(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_WECINT_SHIFT))&uSDHC_PROT_CTRL_WECINT_MASK)
#define uSDHC_PROT_CTRL_WECINS_MASK              0x2000000u
#define uSDHC_PROT_CTRL_WECINS_SHIFT             25u
#define uSDHC_PROT_CTRL_WECINS_WIDTH             1u
#define uSDHC_PROT_CTRL_WECINS(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_WECINS_SHIFT))&uSDHC_PROT_CTRL_WECINS_MASK)
#define uSDHC_PROT_CTRL_WECRM_MASK               0x4000000u
#define uSDHC_PROT_CTRL_WECRM_SHIFT              26u
#define uSDHC_PROT_CTRL_WECRM_WIDTH              1u
#define uSDHC_PROT_CTRL_WECRM(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_WECRM_SHIFT))&uSDHC_PROT_CTRL_WECRM_MASK)
#define uSDHC_PROT_CTRL_BURST_LEN_EN_MASK        0x38000000u
#define uSDHC_PROT_CTRL_BURST_LEN_EN_SHIFT       27u
#define uSDHC_PROT_CTRL_BURST_LEN_EN_WIDTH       3u
#define uSDHC_PROT_CTRL_BURST_LEN_EN(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_BURST_LEN_EN_SHIFT))&uSDHC_PROT_CTRL_BURST_LEN_EN_MASK)
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_MASK    0x40000000u
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_SHIFT   30u
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_WIDTH   1u
#define uSDHC_PROT_CTRL_NON_EXACT_BLK_RD(x)      (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_SHIFT))&uSDHC_PROT_CTRL_NON_EXACT_BLK_RD_MASK)
#define uSDHC_PROT_CTRL_RD_NO8CLK_EN_MASK        0x80000000u
#define uSDHC_PROT_CTRL_RD_NO8CLK_EN_SHIFT       31u
#define uSDHC_PROT_CTRL_RD_NO8CLK_EN_WIDTH       1u
#define uSDHC_PROT_CTRL_RD_NO8CLK_EN(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_PROT_CTRL_RD_NO8CLK_EN_SHIFT))&uSDHC_PROT_CTRL_RD_NO8CLK_EN_MASK)
/* SYS_CTRL Bit Fields */
#define uSDHC_SYS_CTRL_DVS_MASK                  0xF0u
#define uSDHC_SYS_CTRL_DVS_SHIFT                 4u
#define uSDHC_SYS_CTRL_DVS_WIDTH                 4u
#define uSDHC_SYS_CTRL_DVS(x)                    (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_DVS_SHIFT))&uSDHC_SYS_CTRL_DVS_MASK)
#define uSDHC_SYS_CTRL_SDCLKFS_MASK              0xFF00u
#define uSDHC_SYS_CTRL_SDCLKFS_SHIFT             8u
#define uSDHC_SYS_CTRL_SDCLKFS_WIDTH             8u
#define uSDHC_SYS_CTRL_SDCLKFS(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_SDCLKFS_SHIFT))&uSDHC_SYS_CTRL_SDCLKFS_MASK)
#define uSDHC_SYS_CTRL_DTOCV_MASK                0xF0000u
#define uSDHC_SYS_CTRL_DTOCV_SHIFT               16u
#define uSDHC_SYS_CTRL_DTOCV_WIDTH               4u
#define uSDHC_SYS_CTRL_DTOCV(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_DTOCV_SHIFT))&uSDHC_SYS_CTRL_DTOCV_MASK)
#define uSDHC_SYS_CTRL_IPP_RST_N_MASK            0x800000u
#define uSDHC_SYS_CTRL_IPP_RST_N_SHIFT           23u
#define uSDHC_SYS_CTRL_IPP_RST_N_WIDTH           1u
#define uSDHC_SYS_CTRL_IPP_RST_N(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_IPP_RST_N_SHIFT))&uSDHC_SYS_CTRL_IPP_RST_N_MASK)
#define uSDHC_SYS_CTRL_RSTA_MASK                 0x1000000u
#define uSDHC_SYS_CTRL_RSTA_SHIFT                24u
#define uSDHC_SYS_CTRL_RSTA_WIDTH                1u
#define uSDHC_SYS_CTRL_RSTA(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_RSTA_SHIFT))&uSDHC_SYS_CTRL_RSTA_MASK)
#define uSDHC_SYS_CTRL_RSTC_MASK                 0x2000000u
#define uSDHC_SYS_CTRL_RSTC_SHIFT                25u
#define uSDHC_SYS_CTRL_RSTC_WIDTH                1u
#define uSDHC_SYS_CTRL_RSTC(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_RSTC_SHIFT))&uSDHC_SYS_CTRL_RSTC_MASK)
#define uSDHC_SYS_CTRL_RSTD_MASK                 0x4000000u
#define uSDHC_SYS_CTRL_RSTD_SHIFT                26u
#define uSDHC_SYS_CTRL_RSTD_WIDTH                1u
#define uSDHC_SYS_CTRL_RSTD(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_RSTD_SHIFT))&uSDHC_SYS_CTRL_RSTD_MASK)
#define uSDHC_SYS_CTRL_INITA_MASK                0x8000000u
#define uSDHC_SYS_CTRL_INITA_SHIFT               27u
#define uSDHC_SYS_CTRL_INITA_WIDTH               1u
#define uSDHC_SYS_CTRL_INITA(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_SYS_CTRL_INITA_SHIFT))&uSDHC_SYS_CTRL_INITA_MASK)
/* INT_STATUS Bit Fields */
#define uSDHC_INT_STATUS_CC_MASK                 0x1u
#define uSDHC_INT_STATUS_CC_SHIFT                0u
#define uSDHC_INT_STATUS_CC_WIDTH                1u
#define uSDHC_INT_STATUS_CC(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CC_SHIFT))&uSDHC_INT_STATUS_CC_MASK)
#define uSDHC_INT_STATUS_TC_MASK                 0x2u
#define uSDHC_INT_STATUS_TC_SHIFT                1u
#define uSDHC_INT_STATUS_TC_WIDTH                1u
#define uSDHC_INT_STATUS_TC(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_TC_SHIFT))&uSDHC_INT_STATUS_TC_MASK)
#define uSDHC_INT_STATUS_BGE_MASK                0x4u
#define uSDHC_INT_STATUS_BGE_SHIFT               2u
#define uSDHC_INT_STATUS_BGE_WIDTH               1u
#define uSDHC_INT_STATUS_BGE(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_BGE_SHIFT))&uSDHC_INT_STATUS_BGE_MASK)
#define uSDHC_INT_STATUS_DINT_MASK               0x8u
#define uSDHC_INT_STATUS_DINT_SHIFT              3u
#define uSDHC_INT_STATUS_DINT_WIDTH              1u
#define uSDHC_INT_STATUS_DINT(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_DINT_SHIFT))&uSDHC_INT_STATUS_DINT_MASK)
#define uSDHC_INT_STATUS_BWR_MASK                0x10u
#define uSDHC_INT_STATUS_BWR_SHIFT               4u
#define uSDHC_INT_STATUS_BWR_WIDTH               1u
#define uSDHC_INT_STATUS_BWR(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_BWR_SHIFT))&uSDHC_INT_STATUS_BWR_MASK)
#define uSDHC_INT_STATUS_BRR_MASK                0x20u
#define uSDHC_INT_STATUS_BRR_SHIFT               5u
#define uSDHC_INT_STATUS_BRR_WIDTH               1u
#define uSDHC_INT_STATUS_BRR(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_BRR_SHIFT))&uSDHC_INT_STATUS_BRR_MASK)
#define uSDHC_INT_STATUS_CINS_MASK               0x40u
#define uSDHC_INT_STATUS_CINS_SHIFT              6u
#define uSDHC_INT_STATUS_CINS_WIDTH              1u
#define uSDHC_INT_STATUS_CINS(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CINS_SHIFT))&uSDHC_INT_STATUS_CINS_MASK)
#define uSDHC_INT_STATUS_CRM_MASK                0x80u
#define uSDHC_INT_STATUS_CRM_SHIFT               7u
#define uSDHC_INT_STATUS_CRM_WIDTH               1u
#define uSDHC_INT_STATUS_CRM(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CRM_SHIFT))&uSDHC_INT_STATUS_CRM_MASK)
#define uSDHC_INT_STATUS_CINT_MASK               0x100u
#define uSDHC_INT_STATUS_CINT_SHIFT              8u
#define uSDHC_INT_STATUS_CINT_WIDTH              1u
#define uSDHC_INT_STATUS_CINT(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CINT_SHIFT))&uSDHC_INT_STATUS_CINT_MASK)
#define uSDHC_INT_STATUS_CTOE_MASK               0x10000u
#define uSDHC_INT_STATUS_CTOE_SHIFT              16u
#define uSDHC_INT_STATUS_CTOE_WIDTH              1u
#define uSDHC_INT_STATUS_CTOE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CTOE_SHIFT))&uSDHC_INT_STATUS_CTOE_MASK)
#define uSDHC_INT_STATUS_CCE_MASK                0x20000u
#define uSDHC_INT_STATUS_CCE_SHIFT               17u
#define uSDHC_INT_STATUS_CCE_WIDTH               1u
#define uSDHC_INT_STATUS_CCE(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CCE_SHIFT))&uSDHC_INT_STATUS_CCE_MASK)
#define uSDHC_INT_STATUS_CEBE_MASK               0x40000u
#define uSDHC_INT_STATUS_CEBE_SHIFT              18u
#define uSDHC_INT_STATUS_CEBE_WIDTH              1u
#define uSDHC_INT_STATUS_CEBE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CEBE_SHIFT))&uSDHC_INT_STATUS_CEBE_MASK)
#define uSDHC_INT_STATUS_CIE_MASK                0x80000u
#define uSDHC_INT_STATUS_CIE_SHIFT               19u
#define uSDHC_INT_STATUS_CIE_WIDTH               1u
#define uSDHC_INT_STATUS_CIE(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_CIE_SHIFT))&uSDHC_INT_STATUS_CIE_MASK)
#define uSDHC_INT_STATUS_DTOE_MASK               0x100000u
#define uSDHC_INT_STATUS_DTOE_SHIFT              20u
#define uSDHC_INT_STATUS_DTOE_WIDTH              1u
#define uSDHC_INT_STATUS_DTOE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_DTOE_SHIFT))&uSDHC_INT_STATUS_DTOE_MASK)
#define uSDHC_INT_STATUS_DCE_MASK                0x200000u
#define uSDHC_INT_STATUS_DCE_SHIFT               21u
#define uSDHC_INT_STATUS_DCE_WIDTH               1u
#define uSDHC_INT_STATUS_DCE(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_DCE_SHIFT))&uSDHC_INT_STATUS_DCE_MASK)
#define uSDHC_INT_STATUS_DEBE_MASK               0x400000u
#define uSDHC_INT_STATUS_DEBE_SHIFT              22u
#define uSDHC_INT_STATUS_DEBE_WIDTH              1u
#define uSDHC_INT_STATUS_DEBE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_DEBE_SHIFT))&uSDHC_INT_STATUS_DEBE_MASK)
#define uSDHC_INT_STATUS_AC12E_MASK              0x1000000u
#define uSDHC_INT_STATUS_AC12E_SHIFT             24u
#define uSDHC_INT_STATUS_AC12E_WIDTH             1u
#define uSDHC_INT_STATUS_AC12E(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_AC12E_SHIFT))&uSDHC_INT_STATUS_AC12E_MASK)
#define uSDHC_INT_STATUS_DMAE_MASK               0x10000000u
#define uSDHC_INT_STATUS_DMAE_SHIFT              28u
#define uSDHC_INT_STATUS_DMAE_WIDTH              1u
#define uSDHC_INT_STATUS_DMAE(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_DMAE_SHIFT))&uSDHC_INT_STATUS_DMAE_MASK)
/* INT_STATUS_EN Bit Fields */
#define uSDHC_INT_STATUS_EN_CCSEN_MASK           0x1u
#define uSDHC_INT_STATUS_EN_CCSEN_SHIFT          0u
#define uSDHC_INT_STATUS_EN_CCSEN_WIDTH          1u
#define uSDHC_INT_STATUS_EN_CCSEN(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CCSEN_SHIFT))&uSDHC_INT_STATUS_EN_CCSEN_MASK)
#define uSDHC_INT_STATUS_EN_TCSEN_MASK           0x2u
#define uSDHC_INT_STATUS_EN_TCSEN_SHIFT          1u
#define uSDHC_INT_STATUS_EN_TCSEN_WIDTH          1u
#define uSDHC_INT_STATUS_EN_TCSEN(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_TCSEN_SHIFT))&uSDHC_INT_STATUS_EN_TCSEN_MASK)
#define uSDHC_INT_STATUS_EN_BGESEN_MASK          0x4u
#define uSDHC_INT_STATUS_EN_BGESEN_SHIFT         2u
#define uSDHC_INT_STATUS_EN_BGESEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_BGESEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_BGESEN_SHIFT))&uSDHC_INT_STATUS_EN_BGESEN_MASK)
#define uSDHC_INT_STATUS_EN_DINTSEN_MASK         0x8u
#define uSDHC_INT_STATUS_EN_DINTSEN_SHIFT        3u
#define uSDHC_INT_STATUS_EN_DINTSEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_DINTSEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_DINTSEN_SHIFT))&uSDHC_INT_STATUS_EN_DINTSEN_MASK)
#define uSDHC_INT_STATUS_EN_BWRSEN_MASK          0x10u
#define uSDHC_INT_STATUS_EN_BWRSEN_SHIFT         4u
#define uSDHC_INT_STATUS_EN_BWRSEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_BWRSEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_BWRSEN_SHIFT))&uSDHC_INT_STATUS_EN_BWRSEN_MASK)
#define uSDHC_INT_STATUS_EN_BRRSEN_MASK          0x20u
#define uSDHC_INT_STATUS_EN_BRRSEN_SHIFT         5u
#define uSDHC_INT_STATUS_EN_BRRSEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_BRRSEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_BRRSEN_SHIFT))&uSDHC_INT_STATUS_EN_BRRSEN_MASK)
#define uSDHC_INT_STATUS_EN_CINSSEN_MASK         0x40u
#define uSDHC_INT_STATUS_EN_CINSSEN_SHIFT        6u
#define uSDHC_INT_STATUS_EN_CINSSEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_CINSSEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CINSSEN_SHIFT))&uSDHC_INT_STATUS_EN_CINSSEN_MASK)
#define uSDHC_INT_STATUS_EN_CRMSEN_MASK          0x80u
#define uSDHC_INT_STATUS_EN_CRMSEN_SHIFT         7u
#define uSDHC_INT_STATUS_EN_CRMSEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_CRMSEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CRMSEN_SHIFT))&uSDHC_INT_STATUS_EN_CRMSEN_MASK)
#define uSDHC_INT_STATUS_EN_CINTSEN_MASK         0x100u
#define uSDHC_INT_STATUS_EN_CINTSEN_SHIFT        8u
#define uSDHC_INT_STATUS_EN_CINTSEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_CINTSEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CINTSEN_SHIFT))&uSDHC_INT_STATUS_EN_CINTSEN_MASK)
#define uSDHC_INT_STATUS_EN_CTOESEN_MASK         0x10000u
#define uSDHC_INT_STATUS_EN_CTOESEN_SHIFT        16u
#define uSDHC_INT_STATUS_EN_CTOESEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_CTOESEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CTOESEN_SHIFT))&uSDHC_INT_STATUS_EN_CTOESEN_MASK)
#define uSDHC_INT_STATUS_EN_CCESEN_MASK          0x20000u
#define uSDHC_INT_STATUS_EN_CCESEN_SHIFT         17u
#define uSDHC_INT_STATUS_EN_CCESEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_CCESEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CCESEN_SHIFT))&uSDHC_INT_STATUS_EN_CCESEN_MASK)
#define uSDHC_INT_STATUS_EN_CEBESEN_MASK         0x40000u
#define uSDHC_INT_STATUS_EN_CEBESEN_SHIFT        18u
#define uSDHC_INT_STATUS_EN_CEBESEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_CEBESEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CEBESEN_SHIFT))&uSDHC_INT_STATUS_EN_CEBESEN_MASK)
#define uSDHC_INT_STATUS_EN_CIESEN_MASK          0x80000u
#define uSDHC_INT_STATUS_EN_CIESEN_SHIFT         19u
#define uSDHC_INT_STATUS_EN_CIESEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_CIESEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_CIESEN_SHIFT))&uSDHC_INT_STATUS_EN_CIESEN_MASK)
#define uSDHC_INT_STATUS_EN_DTOESEN_MASK         0x100000u
#define uSDHC_INT_STATUS_EN_DTOESEN_SHIFT        20u
#define uSDHC_INT_STATUS_EN_DTOESEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_DTOESEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_DTOESEN_SHIFT))&uSDHC_INT_STATUS_EN_DTOESEN_MASK)
#define uSDHC_INT_STATUS_EN_DCESEN_MASK          0x200000u
#define uSDHC_INT_STATUS_EN_DCESEN_SHIFT         21u
#define uSDHC_INT_STATUS_EN_DCESEN_WIDTH         1u
#define uSDHC_INT_STATUS_EN_DCESEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_DCESEN_SHIFT))&uSDHC_INT_STATUS_EN_DCESEN_MASK)
#define uSDHC_INT_STATUS_EN_DEBESEN_MASK         0x400000u
#define uSDHC_INT_STATUS_EN_DEBESEN_SHIFT        22u
#define uSDHC_INT_STATUS_EN_DEBESEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_DEBESEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_DEBESEN_SHIFT))&uSDHC_INT_STATUS_EN_DEBESEN_MASK)
#define uSDHC_INT_STATUS_EN_AC12ESEN_MASK        0x1000000u
#define uSDHC_INT_STATUS_EN_AC12ESEN_SHIFT       24u
#define uSDHC_INT_STATUS_EN_AC12ESEN_WIDTH       1u
#define uSDHC_INT_STATUS_EN_AC12ESEN(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_AC12ESEN_SHIFT))&uSDHC_INT_STATUS_EN_AC12ESEN_MASK)
#define uSDHC_INT_STATUS_EN_DMAESEN_MASK         0x10000000u
#define uSDHC_INT_STATUS_EN_DMAESEN_SHIFT        28u
#define uSDHC_INT_STATUS_EN_DMAESEN_WIDTH        1u
#define uSDHC_INT_STATUS_EN_DMAESEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_STATUS_EN_DMAESEN_SHIFT))&uSDHC_INT_STATUS_EN_DMAESEN_MASK)
/* INT_SIGNAL_EN Bit Fields */
#define uSDHC_INT_SIGNAL_EN_CCIEN_MASK           0x1u
#define uSDHC_INT_SIGNAL_EN_CCIEN_SHIFT          0u
#define uSDHC_INT_SIGNAL_EN_CCIEN_WIDTH          1u
#define uSDHC_INT_SIGNAL_EN_CCIEN(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CCIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CCIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_TCIEN_MASK           0x2u
#define uSDHC_INT_SIGNAL_EN_TCIEN_SHIFT          1u
#define uSDHC_INT_SIGNAL_EN_TCIEN_WIDTH          1u
#define uSDHC_INT_SIGNAL_EN_TCIEN(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_TCIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_TCIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_BGEIEN_MASK          0x4u
#define uSDHC_INT_SIGNAL_EN_BGEIEN_SHIFT         2u
#define uSDHC_INT_SIGNAL_EN_BGEIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_BGEIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_BGEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_BGEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DINTIEN_MASK         0x8u
#define uSDHC_INT_SIGNAL_EN_DINTIEN_SHIFT        3u
#define uSDHC_INT_SIGNAL_EN_DINTIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_DINTIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_DINTIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_DINTIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_BWRIEN_MASK          0x10u
#define uSDHC_INT_SIGNAL_EN_BWRIEN_SHIFT         4u
#define uSDHC_INT_SIGNAL_EN_BWRIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_BWRIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_BWRIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_BWRIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_BRRIEN_MASK          0x20u
#define uSDHC_INT_SIGNAL_EN_BRRIEN_SHIFT         5u
#define uSDHC_INT_SIGNAL_EN_BRRIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_BRRIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_BRRIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_BRRIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CINSIEN_MASK         0x40u
#define uSDHC_INT_SIGNAL_EN_CINSIEN_SHIFT        6u
#define uSDHC_INT_SIGNAL_EN_CINSIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_CINSIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CINSIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CINSIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CRMIEN_MASK          0x80u
#define uSDHC_INT_SIGNAL_EN_CRMIEN_SHIFT         7u
#define uSDHC_INT_SIGNAL_EN_CRMIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_CRMIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CRMIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CRMIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CINTIEN_MASK         0x100u
#define uSDHC_INT_SIGNAL_EN_CINTIEN_SHIFT        8u
#define uSDHC_INT_SIGNAL_EN_CINTIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_CINTIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CINTIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CINTIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CTOEIEN_MASK         0x10000u
#define uSDHC_INT_SIGNAL_EN_CTOEIEN_SHIFT        16u
#define uSDHC_INT_SIGNAL_EN_CTOEIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_CTOEIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CTOEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CTOEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CCEIEN_MASK          0x20000u
#define uSDHC_INT_SIGNAL_EN_CCEIEN_SHIFT         17u
#define uSDHC_INT_SIGNAL_EN_CCEIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_CCEIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CCEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CCEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CEBEIEN_MASK         0x40000u
#define uSDHC_INT_SIGNAL_EN_CEBEIEN_SHIFT        18u
#define uSDHC_INT_SIGNAL_EN_CEBEIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_CEBEIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CEBEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CEBEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_CIEIEN_MASK          0x80000u
#define uSDHC_INT_SIGNAL_EN_CIEIEN_SHIFT         19u
#define uSDHC_INT_SIGNAL_EN_CIEIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_CIEIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_CIEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_CIEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DTOEIEN_MASK         0x100000u
#define uSDHC_INT_SIGNAL_EN_DTOEIEN_SHIFT        20u
#define uSDHC_INT_SIGNAL_EN_DTOEIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_DTOEIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_DTOEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_DTOEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DCEIEN_MASK          0x200000u
#define uSDHC_INT_SIGNAL_EN_DCEIEN_SHIFT         21u
#define uSDHC_INT_SIGNAL_EN_DCEIEN_WIDTH         1u
#define uSDHC_INT_SIGNAL_EN_DCEIEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_DCEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_DCEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DEBEIEN_MASK         0x400000u
#define uSDHC_INT_SIGNAL_EN_DEBEIEN_SHIFT        22u
#define uSDHC_INT_SIGNAL_EN_DEBEIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_DEBEIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_DEBEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_DEBEIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_AC12EIEN_MASK        0x1000000u
#define uSDHC_INT_SIGNAL_EN_AC12EIEN_SHIFT       24u
#define uSDHC_INT_SIGNAL_EN_AC12EIEN_WIDTH       1u
#define uSDHC_INT_SIGNAL_EN_AC12EIEN(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_AC12EIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_AC12EIEN_MASK)
#define uSDHC_INT_SIGNAL_EN_DMAEIEN_MASK         0x10000000u
#define uSDHC_INT_SIGNAL_EN_DMAEIEN_SHIFT        28u
#define uSDHC_INT_SIGNAL_EN_DMAEIEN_WIDTH        1u
#define uSDHC_INT_SIGNAL_EN_DMAEIEN(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_INT_SIGNAL_EN_DMAEIEN_SHIFT))&uSDHC_INT_SIGNAL_EN_DMAEIEN_MASK)
/* AUTOCMD12_ERR_STATUS Bit Fields */
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_MASK   0x1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_SHIFT  0u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_WIDTH  1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12NE(x)     (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_AC12NE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_MASK  0x2u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_SHIFT 1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_WIDTH 1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE(x)    (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_AC12TOE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_MASK  0x4u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_SHIFT 2u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_WIDTH 1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE(x)    (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_AC12EBE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_MASK   0x8u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_SHIFT  3u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_WIDTH  1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12CE(x)     (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_AC12CE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_MASK   0x10u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_SHIFT  4u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_WIDTH  1u
#define uSDHC_AUTOCMD12_ERR_STATUS_AC12IE(x)     (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_AC12IE_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_MASK 0x80u
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_SHIFT 7u
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_WIDTH 1u
#define uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E(x)  (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_CNIBAC12E_MASK)
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_MASK 0x400000u
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_SHIFT 22u
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_WIDTH 1u
#define uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING(x) (((uint32_t)(((uint32_t)(x))<<uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_SHIFT))&uSDHC_AUTOCMD12_ERR_STATUS_EXECUTE_TUNING_MASK)
/* HOST_CTRL_CAP Bit Fields */
#define uSDHC_HOST_CTRL_CAP_MBL_MASK             0x70000u
#define uSDHC_HOST_CTRL_CAP_MBL_SHIFT            16u
#define uSDHC_HOST_CTRL_CAP_MBL_WIDTH            3u
#define uSDHC_HOST_CTRL_CAP_MBL(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_MBL_SHIFT))&uSDHC_HOST_CTRL_CAP_MBL_MASK)
#define uSDHC_HOST_CTRL_CAP_ADMAS_MASK           0x100000u
#define uSDHC_HOST_CTRL_CAP_ADMAS_SHIFT          20u
#define uSDHC_HOST_CTRL_CAP_ADMAS_WIDTH          1u
#define uSDHC_HOST_CTRL_CAP_ADMAS(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_ADMAS_SHIFT))&uSDHC_HOST_CTRL_CAP_ADMAS_MASK)
#define uSDHC_HOST_CTRL_CAP_HSS_MASK             0x200000u
#define uSDHC_HOST_CTRL_CAP_HSS_SHIFT            21u
#define uSDHC_HOST_CTRL_CAP_HSS_WIDTH            1u
#define uSDHC_HOST_CTRL_CAP_HSS(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_HSS_SHIFT))&uSDHC_HOST_CTRL_CAP_HSS_MASK)
#define uSDHC_HOST_CTRL_CAP_DMAS_MASK            0x400000u
#define uSDHC_HOST_CTRL_CAP_DMAS_SHIFT           22u
#define uSDHC_HOST_CTRL_CAP_DMAS_WIDTH           1u
#define uSDHC_HOST_CTRL_CAP_DMAS(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_DMAS_SHIFT))&uSDHC_HOST_CTRL_CAP_DMAS_MASK)
#define uSDHC_HOST_CTRL_CAP_SRS_MASK             0x800000u
#define uSDHC_HOST_CTRL_CAP_SRS_SHIFT            23u
#define uSDHC_HOST_CTRL_CAP_SRS_WIDTH            1u
#define uSDHC_HOST_CTRL_CAP_SRS(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_SRS_SHIFT))&uSDHC_HOST_CTRL_CAP_SRS_MASK)
#define uSDHC_HOST_CTRL_CAP_VS33_MASK            0x1000000u
#define uSDHC_HOST_CTRL_CAP_VS33_SHIFT           24u
#define uSDHC_HOST_CTRL_CAP_VS33_WIDTH           1u
#define uSDHC_HOST_CTRL_CAP_VS33(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_VS33_SHIFT))&uSDHC_HOST_CTRL_CAP_VS33_MASK)
#define uSDHC_HOST_CTRL_CAP_VS30_MASK            0x2000000u
#define uSDHC_HOST_CTRL_CAP_VS30_SHIFT           25u
#define uSDHC_HOST_CTRL_CAP_VS30_WIDTH           1u
#define uSDHC_HOST_CTRL_CAP_VS30(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_VS30_SHIFT))&uSDHC_HOST_CTRL_CAP_VS30_MASK)
#define uSDHC_HOST_CTRL_CAP_VS18_MASK            0x4000000u
#define uSDHC_HOST_CTRL_CAP_VS18_SHIFT           26u
#define uSDHC_HOST_CTRL_CAP_VS18_WIDTH           1u
#define uSDHC_HOST_CTRL_CAP_VS18(x)              (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_CAP_VS18_SHIFT))&uSDHC_HOST_CTRL_CAP_VS18_MASK)
/* WTMK_LVL Bit Fields */
#define uSDHC_WTMK_LVL_RD_WML_MASK               0xFFu
#define uSDHC_WTMK_LVL_RD_WML_SHIFT              0u
#define uSDHC_WTMK_LVL_RD_WML_WIDTH              8u
#define uSDHC_WTMK_LVL_RD_WML(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_WTMK_LVL_RD_WML_SHIFT))&uSDHC_WTMK_LVL_RD_WML_MASK)
#define uSDHC_WTMK_LVL_RD_BRST_LEN_MASK          0x1F00u
#define uSDHC_WTMK_LVL_RD_BRST_LEN_SHIFT         8u
#define uSDHC_WTMK_LVL_RD_BRST_LEN_WIDTH         5u
#define uSDHC_WTMK_LVL_RD_BRST_LEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_WTMK_LVL_RD_BRST_LEN_SHIFT))&uSDHC_WTMK_LVL_RD_BRST_LEN_MASK)
#define uSDHC_WTMK_LVL_WR_WML_MASK               0xFF0000u
#define uSDHC_WTMK_LVL_WR_WML_SHIFT              16u
#define uSDHC_WTMK_LVL_WR_WML_WIDTH              8u
#define uSDHC_WTMK_LVL_WR_WML(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_WTMK_LVL_WR_WML_SHIFT))&uSDHC_WTMK_LVL_WR_WML_MASK)
#define uSDHC_WTMK_LVL_WR_BRST_LEN_MASK          0x1F000000u
#define uSDHC_WTMK_LVL_WR_BRST_LEN_SHIFT         24u
#define uSDHC_WTMK_LVL_WR_BRST_LEN_WIDTH         5u
#define uSDHC_WTMK_LVL_WR_BRST_LEN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_WTMK_LVL_WR_BRST_LEN_SHIFT))&uSDHC_WTMK_LVL_WR_BRST_LEN_MASK)
/* MIX_CTRL Bit Fields */
#define uSDHC_MIX_CTRL_DMAEN_MASK                0x1u
#define uSDHC_MIX_CTRL_DMAEN_SHIFT               0u
#define uSDHC_MIX_CTRL_DMAEN_WIDTH               1u
#define uSDHC_MIX_CTRL_DMAEN(x)                  (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_DMAEN_SHIFT))&uSDHC_MIX_CTRL_DMAEN_MASK)
#define uSDHC_MIX_CTRL_BCEN_MASK                 0x2u
#define uSDHC_MIX_CTRL_BCEN_SHIFT                1u
#define uSDHC_MIX_CTRL_BCEN_WIDTH                1u
#define uSDHC_MIX_CTRL_BCEN(x)                   (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_BCEN_SHIFT))&uSDHC_MIX_CTRL_BCEN_MASK)
#define uSDHC_MIX_CTRL_AC12EN_MASK               0x4u
#define uSDHC_MIX_CTRL_AC12EN_SHIFT              2u
#define uSDHC_MIX_CTRL_AC12EN_WIDTH              1u
#define uSDHC_MIX_CTRL_AC12EN(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_AC12EN_SHIFT))&uSDHC_MIX_CTRL_AC12EN_MASK)
#define uSDHC_MIX_CTRL_DTDSEL_MASK               0x10u
#define uSDHC_MIX_CTRL_DTDSEL_SHIFT              4u
#define uSDHC_MIX_CTRL_DTDSEL_WIDTH              1u
#define uSDHC_MIX_CTRL_DTDSEL(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_DTDSEL_SHIFT))&uSDHC_MIX_CTRL_DTDSEL_MASK)
#define uSDHC_MIX_CTRL_MSBSEL_MASK               0x20u
#define uSDHC_MIX_CTRL_MSBSEL_SHIFT              5u
#define uSDHC_MIX_CTRL_MSBSEL_WIDTH              1u
#define uSDHC_MIX_CTRL_MSBSEL(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_MSBSEL_SHIFT))&uSDHC_MIX_CTRL_MSBSEL_MASK)
#define uSDHC_MIX_CTRL_AC23EN_MASK               0x80u
#define uSDHC_MIX_CTRL_AC23EN_SHIFT              7u
#define uSDHC_MIX_CTRL_AC23EN_WIDTH              1u
#define uSDHC_MIX_CTRL_AC23EN(x)                 (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_AC23EN_SHIFT))&uSDHC_MIX_CTRL_AC23EN_MASK)
#define uSDHC_MIX_CTRL_AC12_RD_POINT_MASK        0x20000000u
#define uSDHC_MIX_CTRL_AC12_RD_POINT_SHIFT       29u
#define uSDHC_MIX_CTRL_AC12_RD_POINT_WIDTH       1u
#define uSDHC_MIX_CTRL_AC12_RD_POINT(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_AC12_RD_POINT_SHIFT))&uSDHC_MIX_CTRL_AC12_RD_POINT_MASK)
#define uSDHC_MIX_CTRL_CMD_DMY_WAIT_CFG_MASK     0x40000000u
#define uSDHC_MIX_CTRL_CMD_DMY_WAIT_CFG_SHIFT    30u
#define uSDHC_MIX_CTRL_CMD_DMY_WAIT_CFG_WIDTH    1u
#define uSDHC_MIX_CTRL_CMD_DMY_WAIT_CFG(x)       (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_CMD_DMY_WAIT_CFG_SHIFT))&uSDHC_MIX_CTRL_CMD_DMY_WAIT_CFG_MASK)
#define uSDHC_MIX_CTRL_CMD_DMY_EN_MASK           0x80000000u
#define uSDHC_MIX_CTRL_CMD_DMY_EN_SHIFT          31u
#define uSDHC_MIX_CTRL_CMD_DMY_EN_WIDTH          1u
#define uSDHC_MIX_CTRL_CMD_DMY_EN(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_MIX_CTRL_CMD_DMY_EN_SHIFT))&uSDHC_MIX_CTRL_CMD_DMY_EN_MASK)
/* FORCE_EVENT Bit Fields */
#define uSDHC_FORCE_EVENT_FEVTAC12NE_MASK        0x1u
#define uSDHC_FORCE_EVENT_FEVTAC12NE_SHIFT       0u
#define uSDHC_FORCE_EVENT_FEVTAC12NE_WIDTH       1u
#define uSDHC_FORCE_EVENT_FEVTAC12NE(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTAC12NE_SHIFT))&uSDHC_FORCE_EVENT_FEVTAC12NE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12TOE_MASK       0x2u
#define uSDHC_FORCE_EVENT_FEVTAC12TOE_SHIFT      1u
#define uSDHC_FORCE_EVENT_FEVTAC12TOE_WIDTH      1u
#define uSDHC_FORCE_EVENT_FEVTAC12TOE(x)         (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTAC12TOE_SHIFT))&uSDHC_FORCE_EVENT_FEVTAC12TOE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12CE_MASK        0x4u
#define uSDHC_FORCE_EVENT_FEVTAC12CE_SHIFT       2u
#define uSDHC_FORCE_EVENT_FEVTAC12CE_WIDTH       1u
#define uSDHC_FORCE_EVENT_FEVTAC12CE(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTAC12CE_SHIFT))&uSDHC_FORCE_EVENT_FEVTAC12CE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12EBE_MASK       0x8u
#define uSDHC_FORCE_EVENT_FEVTAC12EBE_SHIFT      3u
#define uSDHC_FORCE_EVENT_FEVTAC12EBE_WIDTH      1u
#define uSDHC_FORCE_EVENT_FEVTAC12EBE(x)         (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTAC12EBE_SHIFT))&uSDHC_FORCE_EVENT_FEVTAC12EBE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12IE_MASK        0x10u
#define uSDHC_FORCE_EVENT_FEVTAC12IE_SHIFT       4u
#define uSDHC_FORCE_EVENT_FEVTAC12IE_WIDTH       1u
#define uSDHC_FORCE_EVENT_FEVTAC12IE(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTAC12IE_SHIFT))&uSDHC_FORCE_EVENT_FEVTAC12IE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E_MASK     0x80u
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E_SHIFT    7u
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E_WIDTH    1u
#define uSDHC_FORCE_EVENT_FEVTCNIBAC12E(x)       (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTCNIBAC12E_SHIFT))&uSDHC_FORCE_EVENT_FEVTCNIBAC12E_MASK)
#define uSDHC_FORCE_EVENT_FEVTCTOE_MASK          0x10000u
#define uSDHC_FORCE_EVENT_FEVTCTOE_SHIFT         16u
#define uSDHC_FORCE_EVENT_FEVTCTOE_WIDTH         1u
#define uSDHC_FORCE_EVENT_FEVTCTOE(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTCTOE_SHIFT))&uSDHC_FORCE_EVENT_FEVTCTOE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCCE_MASK           0x20000u
#define uSDHC_FORCE_EVENT_FEVTCCE_SHIFT          17u
#define uSDHC_FORCE_EVENT_FEVTCCE_WIDTH          1u
#define uSDHC_FORCE_EVENT_FEVTCCE(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTCCE_SHIFT))&uSDHC_FORCE_EVENT_FEVTCCE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCEBE_MASK          0x40000u
#define uSDHC_FORCE_EVENT_FEVTCEBE_SHIFT         18u
#define uSDHC_FORCE_EVENT_FEVTCEBE_WIDTH         1u
#define uSDHC_FORCE_EVENT_FEVTCEBE(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTCEBE_SHIFT))&uSDHC_FORCE_EVENT_FEVTCEBE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCIE_MASK           0x80000u
#define uSDHC_FORCE_EVENT_FEVTCIE_SHIFT          19u
#define uSDHC_FORCE_EVENT_FEVTCIE_WIDTH          1u
#define uSDHC_FORCE_EVENT_FEVTCIE(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTCIE_SHIFT))&uSDHC_FORCE_EVENT_FEVTCIE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDTOE_MASK          0x100000u
#define uSDHC_FORCE_EVENT_FEVTDTOE_SHIFT         20u
#define uSDHC_FORCE_EVENT_FEVTDTOE_WIDTH         1u
#define uSDHC_FORCE_EVENT_FEVTDTOE(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTDTOE_SHIFT))&uSDHC_FORCE_EVENT_FEVTDTOE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDCE_MASK           0x200000u
#define uSDHC_FORCE_EVENT_FEVTDCE_SHIFT          21u
#define uSDHC_FORCE_EVENT_FEVTDCE_WIDTH          1u
#define uSDHC_FORCE_EVENT_FEVTDCE(x)             (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTDCE_SHIFT))&uSDHC_FORCE_EVENT_FEVTDCE_MASK)
#define uSDHC_FORCE_EVENT_FEVTDEBE_MASK          0x400000u
#define uSDHC_FORCE_EVENT_FEVTDEBE_SHIFT         22u
#define uSDHC_FORCE_EVENT_FEVTDEBE_WIDTH         1u
#define uSDHC_FORCE_EVENT_FEVTDEBE(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTDEBE_SHIFT))&uSDHC_FORCE_EVENT_FEVTDEBE_MASK)
#define uSDHC_FORCE_EVENT_FEVTAC12E_MASK         0x1000000u
#define uSDHC_FORCE_EVENT_FEVTAC12E_SHIFT        24u
#define uSDHC_FORCE_EVENT_FEVTAC12E_WIDTH        1u
#define uSDHC_FORCE_EVENT_FEVTAC12E(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTAC12E_SHIFT))&uSDHC_FORCE_EVENT_FEVTAC12E_MASK)
#define uSDHC_FORCE_EVENT_FEVTDMAE_MASK          0x10000000u
#define uSDHC_FORCE_EVENT_FEVTDMAE_SHIFT         28u
#define uSDHC_FORCE_EVENT_FEVTDMAE_WIDTH         1u
#define uSDHC_FORCE_EVENT_FEVTDMAE(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTDMAE_SHIFT))&uSDHC_FORCE_EVENT_FEVTDMAE_MASK)
#define uSDHC_FORCE_EVENT_FEVTCINT_MASK          0x80000000u
#define uSDHC_FORCE_EVENT_FEVTCINT_SHIFT         31u
#define uSDHC_FORCE_EVENT_FEVTCINT_WIDTH         1u
#define uSDHC_FORCE_EVENT_FEVTCINT(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_FORCE_EVENT_FEVTCINT_SHIFT))&uSDHC_FORCE_EVENT_FEVTCINT_MASK)
/* ADMA_ERR_STATUS Bit Fields */
#define uSDHC_ADMA_ERR_STATUS_ADMAES_MASK        0x3u
#define uSDHC_ADMA_ERR_STATUS_ADMAES_SHIFT       0u
#define uSDHC_ADMA_ERR_STATUS_ADMAES_WIDTH       2u
#define uSDHC_ADMA_ERR_STATUS_ADMAES(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_ADMA_ERR_STATUS_ADMAES_SHIFT))&uSDHC_ADMA_ERR_STATUS_ADMAES_MASK)
#define uSDHC_ADMA_ERR_STATUS_ADMALME_MASK       0x4u
#define uSDHC_ADMA_ERR_STATUS_ADMALME_SHIFT      2u
#define uSDHC_ADMA_ERR_STATUS_ADMALME_WIDTH      1u
#define uSDHC_ADMA_ERR_STATUS_ADMALME(x)         (((uint32_t)(((uint32_t)(x))<<uSDHC_ADMA_ERR_STATUS_ADMALME_SHIFT))&uSDHC_ADMA_ERR_STATUS_ADMALME_MASK)
#define uSDHC_ADMA_ERR_STATUS_ADMADCE_MASK       0x8u
#define uSDHC_ADMA_ERR_STATUS_ADMADCE_SHIFT      3u
#define uSDHC_ADMA_ERR_STATUS_ADMADCE_WIDTH      1u
#define uSDHC_ADMA_ERR_STATUS_ADMADCE(x)         (((uint32_t)(((uint32_t)(x))<<uSDHC_ADMA_ERR_STATUS_ADMADCE_SHIFT))&uSDHC_ADMA_ERR_STATUS_ADMADCE_MASK)
/* ADMA_SYS_ADDR Bit Fields */
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR_MASK        0xFFFFFFFCu
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR_SHIFT       2u
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR_WIDTH       30u
#define uSDHC_ADMA_SYS_ADDR_ADS_ADDR(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_ADMA_SYS_ADDR_ADS_ADDR_SHIFT))&uSDHC_ADMA_SYS_ADDR_ADS_ADDR_MASK)
/* VEND_SPEC Bit Fields */
#define uSDHC_VEND_SPEC_EXT_DMA_EN_MASK          0x1u
#define uSDHC_VEND_SPEC_EXT_DMA_EN_SHIFT         0u
#define uSDHC_VEND_SPEC_EXT_DMA_EN_WIDTH         1u
#define uSDHC_VEND_SPEC_EXT_DMA_EN(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_EXT_DMA_EN_SHIFT))&uSDHC_VEND_SPEC_EXT_DMA_EN_MASK)
#define uSDHC_VEND_SPEC_VSELECT_MASK             0x2u
#define uSDHC_VEND_SPEC_VSELECT_SHIFT            1u
#define uSDHC_VEND_SPEC_VSELECT_WIDTH            1u
#define uSDHC_VEND_SPEC_VSELECT(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_VSELECT_SHIFT))&uSDHC_VEND_SPEC_VSELECT_MASK)
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN_MASK     0x4u
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN_SHIFT    2u
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN_WIDTH    1u
#define uSDHC_VEND_SPEC_CONFLICT_CHK_EN(x)       (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_CONFLICT_CHK_EN_SHIFT))&uSDHC_VEND_SPEC_CONFLICT_CHK_EN_MASK)
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_MASK  0x8u
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_SHIFT 3u
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_WIDTH 1u
#define uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN(x)    (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_SHIFT))&uSDHC_VEND_SPEC_AC12_WR_CHKBUSY_EN_MASK)
#define uSDHC_VEND_SPEC_DAT3_CD_POL_MASK         0x10u
#define uSDHC_VEND_SPEC_DAT3_CD_POL_SHIFT        4u
#define uSDHC_VEND_SPEC_DAT3_CD_POL_WIDTH        1u
#define uSDHC_VEND_SPEC_DAT3_CD_POL(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_DAT3_CD_POL_SHIFT))&uSDHC_VEND_SPEC_DAT3_CD_POL_MASK)
#define uSDHC_VEND_SPEC_CD_POL_MASK              0x20u
#define uSDHC_VEND_SPEC_CD_POL_SHIFT             5u
#define uSDHC_VEND_SPEC_CD_POL_WIDTH             1u
#define uSDHC_VEND_SPEC_CD_POL(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_CD_POL_SHIFT))&uSDHC_VEND_SPEC_CD_POL_MASK)
#define uSDHC_VEND_SPEC_WP_POL_MASK              0x40u
#define uSDHC_VEND_SPEC_WP_POL_SHIFT             6u
#define uSDHC_VEND_SPEC_WP_POL_WIDTH             1u
#define uSDHC_VEND_SPEC_WP_POL(x)                (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_WP_POL_SHIFT))&uSDHC_VEND_SPEC_WP_POL_MASK)
#define uSDHC_VEND_SPEC_CLKONJ_IN_ABORT_MASK     0x80u
#define uSDHC_VEND_SPEC_CLKONJ_IN_ABORT_SHIFT    7u
#define uSDHC_VEND_SPEC_CLKONJ_IN_ABORT_WIDTH    1u
#define uSDHC_VEND_SPEC_CLKONJ_IN_ABORT(x)       (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_CLKONJ_IN_ABORT_SHIFT))&uSDHC_VEND_SPEC_CLKONJ_IN_ABORT_MASK)
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON_MASK        0x100u
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON_SHIFT       8u
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON_WIDTH       1u
#define uSDHC_VEND_SPEC_FRC_SDCLK_ON(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_FRC_SDCLK_ON_SHIFT))&uSDHC_VEND_SPEC_FRC_SDCLK_ON_MASK)
#define uSDHC_VEND_SPEC_AC12_ISNOT_ABORT_MASK    0x200u
#define uSDHC_VEND_SPEC_AC12_ISNOT_ABORT_SHIFT   9u
#define uSDHC_VEND_SPEC_AC12_ISNOT_ABORT_WIDTH   1u
#define uSDHC_VEND_SPEC_AC12_ISNOT_ABORT(x)      (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_AC12_ISNOT_ABORT_SHIFT))&uSDHC_VEND_SPEC_AC12_ISNOT_ABORT_MASK)
#define uSDHC_VEND_SPEC_BUS_CLK_SOFT_EN_MASK     0x800u
#define uSDHC_VEND_SPEC_BUS_CLK_SOFT_EN_SHIFT    11u
#define uSDHC_VEND_SPEC_BUS_CLK_SOFT_EN_WIDTH    1u
#define uSDHC_VEND_SPEC_BUS_CLK_SOFT_EN(x)       (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_BUS_CLK_SOFT_EN_SHIFT))&uSDHC_VEND_SPEC_BUS_CLK_SOFT_EN_MASK)
#define uSDHC_VEND_SPEC_HCLK_SOFT_EN_MASK        0x1000u
#define uSDHC_VEND_SPEC_HCLK_SOFT_EN_SHIFT       12u
#define uSDHC_VEND_SPEC_HCLK_SOFT_EN_WIDTH       1u
#define uSDHC_VEND_SPEC_HCLK_SOFT_EN(x)          (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_HCLK_SOFT_EN_SHIFT))&uSDHC_VEND_SPEC_HCLK_SOFT_EN_MASK)
#define uSDHC_VEND_SPEC_IPG_PERCLK_SOFT_EN_MASK  0x2000u
#define uSDHC_VEND_SPEC_IPG_PERCLK_SOFT_EN_SHIFT 13u
#define uSDHC_VEND_SPEC_IPG_PERCLK_SOFT_EN_WIDTH 1u
#define uSDHC_VEND_SPEC_IPG_PERCLK_SOFT_EN(x)    (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_IPG_PERCLK_SOFT_EN_SHIFT))&uSDHC_VEND_SPEC_IPG_PERCLK_SOFT_EN_MASK)
#define uSDHC_VEND_SPEC_CARD_CLK_SOFT_EN_MASK    0x4000u
#define uSDHC_VEND_SPEC_CARD_CLK_SOFT_EN_SHIFT   14u
#define uSDHC_VEND_SPEC_CARD_CLK_SOFT_EN_WIDTH   1u
#define uSDHC_VEND_SPEC_CARD_CLK_SOFT_EN(x)      (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_CARD_CLK_SOFT_EN_SHIFT))&uSDHC_VEND_SPEC_CARD_CLK_SOFT_EN_MASK)
#define uSDHC_VEND_SPEC_CRC_CHK_DIS_MASK         0x8000u
#define uSDHC_VEND_SPEC_CRC_CHK_DIS_SHIFT        15u
#define uSDHC_VEND_SPEC_CRC_CHK_DIS_WIDTH        1u
#define uSDHC_VEND_SPEC_CRC_CHK_DIS(x)           (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_CRC_CHK_DIS_SHIFT))&uSDHC_VEND_SPEC_CRC_CHK_DIS_MASK)
#define uSDHC_VEND_SPEC_INT_ST_VAL_MASK          0xFF0000u
#define uSDHC_VEND_SPEC_INT_ST_VAL_SHIFT         16u
#define uSDHC_VEND_SPEC_INT_ST_VAL_WIDTH         8u
#define uSDHC_VEND_SPEC_INT_ST_VAL(x)            (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_INT_ST_VAL_SHIFT))&uSDHC_VEND_SPEC_INT_ST_VAL_MASK)
#define uSDHC_VEND_SPEC_DBG_SEL_MASK             0xF000000u
#define uSDHC_VEND_SPEC_DBG_SEL_SHIFT            24u
#define uSDHC_VEND_SPEC_DBG_SEL_WIDTH            4u
#define uSDHC_VEND_SPEC_DBG_SEL(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_DBG_SEL_SHIFT))&uSDHC_VEND_SPEC_DBG_SEL_MASK)
#define uSDHC_VEND_SPEC_CMD_OE_PRE_EN_MASK       0x10000000u
#define uSDHC_VEND_SPEC_CMD_OE_PRE_EN_SHIFT      28u
#define uSDHC_VEND_SPEC_CMD_OE_PRE_EN_WIDTH      1u
#define uSDHC_VEND_SPEC_CMD_OE_PRE_EN(x)         (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_CMD_OE_PRE_EN_SHIFT))&uSDHC_VEND_SPEC_CMD_OE_PRE_EN_MASK)
#define uSDHC_VEND_SPEC_AC12_RD_CHKBUSY_EN_MASK  0x20000000u
#define uSDHC_VEND_SPEC_AC12_RD_CHKBUSY_EN_SHIFT 29u
#define uSDHC_VEND_SPEC_AC12_RD_CHKBUSY_EN_WIDTH 1u
#define uSDHC_VEND_SPEC_AC12_RD_CHKBUSY_EN(x)    (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC_AC12_RD_CHKBUSY_EN_SHIFT))&uSDHC_VEND_SPEC_AC12_RD_CHKBUSY_EN_MASK)
/* VEND_SPEC2 Bit Fields */
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_MASK   0x8u
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_SHIFT  3u
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_WIDTH  1u
#define uSDHC_VEND_SPEC2_CARD_INT_D3_TEST(x)     (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_SHIFT))&uSDHC_VEND_SPEC2_CARD_INT_D3_TEST_MASK)
#define uSDHC_VEND_SPEC2_CARD_INT_AUTO_CLR_DIS_MASK 0x80u
#define uSDHC_VEND_SPEC2_CARD_INT_AUTO_CLR_DIS_SHIFT 7u
#define uSDHC_VEND_SPEC2_CARD_INT_AUTO_CLR_DIS_WIDTH 1u
#define uSDHC_VEND_SPEC2_CARD_INT_AUTO_CLR_DIS(x) (((uint32_t)(((uint32_t)(x))<<uSDHC_VEND_SPEC2_CARD_INT_AUTO_CLR_DIS_SHIFT))&uSDHC_VEND_SPEC2_CARD_INT_AUTO_CLR_DIS_MASK)
/* HOST_CTRL_VER Bit Fields */
#define uSDHC_HOST_CTRL_VER_SVN_MASK             0xFFu
#define uSDHC_HOST_CTRL_VER_SVN_SHIFT            0u
#define uSDHC_HOST_CTRL_VER_SVN_WIDTH            8u
#define uSDHC_HOST_CTRL_VER_SVN(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_VER_SVN_SHIFT))&uSDHC_HOST_CTRL_VER_SVN_MASK)
#define uSDHC_HOST_CTRL_VER_VVN_MASK             0xFF00u
#define uSDHC_HOST_CTRL_VER_VVN_SHIFT            8u
#define uSDHC_HOST_CTRL_VER_VVN_WIDTH            8u
#define uSDHC_HOST_CTRL_VER_VVN(x)               (((uint32_t)(((uint32_t)(x))<<uSDHC_HOST_CTRL_VER_VVN_SHIFT))&uSDHC_HOST_CTRL_VER_VVN_MASK)

/*!
 * @}
 */ /* end of group uSDHC_Register_Masks */


/*!
 * @}
 */ /* end of group uSDHC_Peripheral_Access_Layer */


/*!
 * @}
 */ /* end of group Peripheral_access_layer_MPC5748G */


/* ----------------------------------------------------------------------------
   -- Backward Compatibility for MPC5748G
   ---------------------------------------------------------------------------- */

/*!
 * @addtogroup Backward_Compatibility_Symbols_MPC5748G Backward Compatibility for MPC5748G
 * @{
 */

/* No backward compatibility issues. */

/*!
 * @}
 */ /* end of group Backward_Compatibility_Symbols_MPC5748G */


#else /* #if !defined(MPC5748G_H_) */
  /* There is already included the same memory map. Check if it is compatible (has the same major version) */
  #if (MCU_MEM_MAP_VERSION != 0x0100u)
    #if (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING))
      #warning There are included two not compatible versions of memory maps. Please check possible differences.
    #endif /* (!defined(MCU_MEM_MAP_SUPPRESS_VERSION_WARNING)) */
  #endif /* (MCU_MEM_MAP_VERSION != 0x0100u) */
#endif  /* #if !defined(MPC5748G_H_) */

/* MPC5748G.h, eof. */
